//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.4927.
// 
#pragma warning disable 1591

namespace Nettiers.AdventureWorks.Data.WebServiceClient.WsProxy {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AdventureWorksServicesSoap", Namespace="http://localhost/AdventureWorksServices")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VVendorBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VStoreWithDemographicsBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VStateProvinceCountryRegionBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VSalesPersonSalesByFiscalYearsBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VSalesPersonBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VProductModelInstructionsBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VProductModelCatalogDescriptionBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VProductAndDescriptionBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VJobCandidateEmploymentBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VJobCandidateEducationBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VJobCandidateBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VIndividualDemographicsBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VIndividualCustomerBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VEmployeeDepartmentHistoryBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VEmployeeDepartmentBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VEmployeeBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VAdditionalContactInfoBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityBaseCore))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NullFkeyChild[]))]
    public partial class AdventureWorksServices : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback NullFkeyChildProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback NullFkeyChildProvider_GetByNullFkeyParentIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback NullFkeyChildProvider_GetByNullFkeyChildIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback NullFkeyChildProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback NullFkeyChildProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback NullFkeyChildProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductDescriptionProvider_GetByCultureIdFromProductModelProductDescriptionCultureOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductDescriptionProvider_GetByProductModelIdFromProductModelProductDescriptionCultureOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductDescriptionProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductDescriptionProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductDescriptionProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductDescriptionProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductDescriptionProvider_GetByRowguidOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductDescriptionProvider_GetByProductDescriptionIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductDescriptionProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductDescriptionProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductDescriptionProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback VAdditionalContactInfoProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback VAdditionalContactInfoProvider_GetOperationCompleted;
        
        private System.Threading.SendOrPostCallback VEmployeeProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback VEmployeeProvider_GetOperationCompleted;
        
        private System.Threading.SendOrPostCallback VEmployeeDepartmentProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback VEmployeeDepartmentProvider_GetOperationCompleted;
        
        private System.Threading.SendOrPostCallback VEmployeeDepartmentHistoryProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback VEmployeeDepartmentHistoryProvider_GetOperationCompleted;
        
        private System.Threading.SendOrPostCallback VIndividualCustomerProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback VIndividualCustomerProvider_GetOperationCompleted;
        
        private System.Threading.SendOrPostCallback VIndividualDemographicsProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback VIndividualDemographicsProvider_GetOperationCompleted;
        
        private System.Threading.SendOrPostCallback VJobCandidateProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback VJobCandidateProvider_GetOperationCompleted;
        
        private System.Threading.SendOrPostCallback VJobCandidateEducationProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback VJobCandidateEducationProvider_GetOperationCompleted;
        
        private System.Threading.SendOrPostCallback VJobCandidateEmploymentProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback VJobCandidateEmploymentProvider_GetOperationCompleted;
        
        private System.Threading.SendOrPostCallback VProductAndDescriptionProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback VProductAndDescriptionProvider_GetOperationCompleted;
        
        private System.Threading.SendOrPostCallback VProductModelCatalogDescriptionProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback VProductModelCatalogDescriptionProvider_GetOperationCompleted;
        
        private System.Threading.SendOrPostCallback VProductModelInstructionsProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback VProductModelInstructionsProvider_GetOperationCompleted;
        
        private System.Threading.SendOrPostCallback VSalesPersonProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback VSalesPersonProvider_GetOperationCompleted;
        
        private System.Threading.SendOrPostCallback VSalesPersonSalesByFiscalYearsProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback VSalesPersonSalesByFiscalYearsProvider_GetOperationCompleted;
        
        private System.Threading.SendOrPostCallback VStateProvinceCountryRegionProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback VStateProvinceCountryRegionProvider_GetOperationCompleted;
        
        private System.Threading.SendOrPostCallback VStoreWithDemographicsProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback VStoreWithDemographicsProvider_GetOperationCompleted;
        
        private System.Threading.SendOrPostCallback VVendorProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback VVendorProvider_GetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteNonQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteNonQuery1OperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteDataSet1OperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteScalarOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteScalar1OperationCompleted;
        
        private System.Threading.SendOrPostCallback StoreProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoreProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoreProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnitMeasureProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnitMeasureProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnitMeasureProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnitMeasureProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnitMeasureProvider_GetByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnitMeasureProvider_GetByUnitMeasureCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnitMeasureProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnitMeasureProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnitMeasureProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesTaxRateProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesTaxRateProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesTaxRateProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesTaxRateProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesTaxRateProvider_GetByStateProvinceIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesTaxRateProvider_GetByRowguidOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesTaxRateProvider_GetByStateProvinceIdTaxTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesTaxRateProvider_GetBySalesTaxRateIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesTaxRateProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesTaxRateProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesTaxRateProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SpecialOfferProductProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback SpecialOfferProductProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback SpecialOfferProductProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback SpecialOfferProductProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SpecialOfferProductProvider_GetBySpecialOfferIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SpecialOfferProductProvider_GetByRowguidOperationCompleted;
        
        private System.Threading.SendOrPostCallback SpecialOfferProductProvider_GetByProductIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SpecialOfferProductProvider_GetBySpecialOfferIdProductIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SpecialOfferProductProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback SpecialOfferProductProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback SpecialOfferProductProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesPersonQuotaHistoryProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesPersonQuotaHistoryProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesPersonQuotaHistoryProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesPersonQuotaHistoryProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesPersonQuotaHistoryProvider_GetBySalesPersonIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesPersonQuotaHistoryProvider_GetByRowguidOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesPersonQuotaHistoryProvider_GetBySalesPersonIdQuotaDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesPersonQuotaHistoryProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesPersonQuotaHistoryProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesPersonQuotaHistoryProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback IndividualProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback IndividualProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback IndividualProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback IndividualProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback IndividualProvider_GetByContactIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback IndividualProvider_GetByCustomerIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback IndividualProvider_GetByDemographicsOperationCompleted;
        
        private System.Threading.SendOrPostCallback IndividualProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback IndividualProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback IndividualProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkOrderProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkOrderProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkOrderProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkOrderProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkOrderProvider_GetByProductIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkOrderProvider_GetByScrapReasonIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkOrderProvider_GetByWorkOrderIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkOrderProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkOrderProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkOrderProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesTerritoryHistoryProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesTerritoryHistoryProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesTerritoryHistoryProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesTerritoryHistoryProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesTerritoryHistoryProvider_GetBySalesPersonIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesTerritoryHistoryProvider_GetByTerritoryIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesTerritoryHistoryProvider_GetByRowguidOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesTerritoryHistoryProvider_GetBySalesPersonIdStartDateTerritoryIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesTerritoryHistoryProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesTerritoryHistoryProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesTerritoryHistoryProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderDetailProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderDetailProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderDetailProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderDetailProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderDetailProvider_GetBySalesOrderIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderDetailProvider_GetBySpecialOfferIdProductIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderDetailProvider_GetByRowguidOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderDetailProvider_GetByProductIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderDetailProvider_GetBySalesOrderIdSalesOrderDetailIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderDetailProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderDetailProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderDetailProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestVariantProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestVariantProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestVariantProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestVariantProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestVariantProvider_GetByTestVariantIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestVariantProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestVariantProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestVariantProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoreContactProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoreContactProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoreContactProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoreContactProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoreContactProvider_GetByCustomerIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoreContactProvider_GetByRowguidOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoreContactProvider_GetByContactIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoreContactProvider_GetByContactTypeIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoreContactProvider_GetByCustomerIdContactIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoreContactProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoreContactProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoreContactProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback NullFkeyParentProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback NullFkeyParentProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback NullFkeyParentProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback NullFkeyParentProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback NullFkeyParentProvider_GetByNullFkeyParentIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback NullFkeyParentProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback NullFkeyParentProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback NullFkeyParentProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShoppingCartItemProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShoppingCartItemProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShoppingCartItemProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShoppingCartItemProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShoppingCartItemProvider_GetByProductIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShoppingCartItemProvider_GetByShoppingCartIdProductIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShoppingCartItemProvider_GetByShoppingCartItemIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShoppingCartItemProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShoppingCartItemProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShoppingCartItemProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback NullFkeyChildProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback NullFkeyChildProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback NullFkeyChildProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerAddressProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerAddressProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerAddressProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerAddressProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerAddressProvider_GetByAddressIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerAddressProvider_GetByAddressTypeIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerAddressProvider_GetByCustomerIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerAddressProvider_GetByRowguidOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerAddressProvider_GetByCustomerIdAddressIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerAddressProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerAddressProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerAddressProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductSubcategoryProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductSubcategoryProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductSubcategoryProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductSubcategoryProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductSubcategoryProvider_GetByProductCategoryIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductSubcategoryProvider_GetByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductSubcategoryProvider_GetByRowguidOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductSubcategoryProvider_GetByProductSubcategoryIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductSubcategoryProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductSubcategoryProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductSubcategoryProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorContactProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorContactProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorContactProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorContactProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorContactProvider_GetByVendorIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorContactProvider_GetByContactIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorContactProvider_GetByContactTypeIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorContactProvider_GetByVendorIdContactIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorContactProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorContactProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorContactProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactCreditCardProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactCreditCardProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactCreditCardProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactCreditCardProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactCreditCardProvider_GetByContactIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactCreditCardProvider_GetByCreditCardIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactCreditCardProvider_GetByContactIdCreditCardIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactCreditCardProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactCreditCardProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactCreditCardProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductCategoryProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductCategoryProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductCategoryProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductCategoryProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductCategoryProvider_GetByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductCategoryProvider_GetByRowguidOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductCategoryProvider_GetByProductCategoryIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductCategoryProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductCategoryProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductCategoryProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountryRegionCurrencyProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountryRegionCurrencyProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountryRegionCurrencyProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountryRegionCurrencyProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountryRegionCurrencyProvider_GetByCountryRegionCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountryRegionCurrencyProvider_GetByCurrencyCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountryRegionCurrencyProvider_GetByCountryRegionCodeCurrencyCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountryRegionCurrencyProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountryRegionCurrencyProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountryRegionCurrencyProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelProvider_GetByIllustrationIdFromProductModelIllustrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelProvider_GetByCultureIdFromProductModelProductDescriptionCultureOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelProvider_GetByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelProvider_GetByRowguidOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelProvider_GetByProductModelIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelProvider_GetByCatalogDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelProvider_GetByInstructionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductProvider_GetByDocumentIdFromProductDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductProvider_GetByLocationIdFromProductInventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductProvider_GetByProductPhotoIdFromProductProductPhotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductProvider_GetByVendorIdFromProductVendorOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductProvider_GetBySpecialOfferIdFromSpecialOfferProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductProvider_GetByProductModelIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductProvider_GetByProductSubcategoryIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductProvider_GetBySizeUnitMeasureCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductProvider_GetByWeightUnitMeasureCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductProvider_GetByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductProvider_GetByProductNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductProvider_GetByRowguidOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductProvider_GetByProductIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SpecialOfferProvider_GetByProductIdFromSpecialOfferProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback SpecialOfferProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback SpecialOfferProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback SpecialOfferProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback SpecialOfferProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SpecialOfferProvider_GetByRowguidOperationCompleted;
        
        private System.Threading.SendOrPostCallback SpecialOfferProvider_GetBySpecialOfferIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SpecialOfferProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback SpecialOfferProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback SpecialOfferProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderHeaderSalesReasonProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderHeaderSalesReasonProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderHeaderSalesReasonProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderHeaderSalesReasonProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderHeaderSalesReasonProvider_GetBySalesReasonIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdSalesReasonIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderHeaderSalesReasonProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderHeaderSalesReasonProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderHeaderSalesReasonProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoreProvider_GetByContactIdFromStoreContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoreProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoreProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoreProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoreProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoreProvider_GetByRowguidOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoreProvider_GetBySalesPersonIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoreProvider_GetByCustomerIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoreProvider_GetByDemographicsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductListPriceHistoryProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductListPriceHistoryProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductListPriceHistoryProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductListPriceHistoryProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductListPriceHistoryProvider_GetByProductIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductListPriceHistoryProvider_GetByProductIdStartDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductListPriceHistoryProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductListPriceHistoryProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductListPriceHistoryProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelIllustrationProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelIllustrationProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelIllustrationProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelIllustrationProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelIllustrationProvider_GetByIllustrationIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelIllustrationProvider_GetByProductModelIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelIllustrationProvider_GetByProductModelIdIllustrationIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelIllustrationProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelIllustrationProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelIllustrationProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactProvider_GetByCreditCardIdFromContactCreditCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactProvider_GetByCustomerIdFromStoreContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactProvider_GetByVendorIdFromVendorContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactProvider_GetByRowguidOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactProvider_GetByEmailAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactProvider_GetByContactIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactProvider_GetByAdditionalContactInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ScrapReasonProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ScrapReasonProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback ScrapReasonProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback ScrapReasonProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ScrapReasonProvider_GetByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback ScrapReasonProvider_GetByScrapReasonIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ScrapReasonProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ScrapReasonProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ScrapReasonProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransactionHistoryArchiveProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransactionHistoryArchiveProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransactionHistoryArchiveProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransactionHistoryArchiveProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransactionHistoryArchiveProvider_GetByProductIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransactionHistoryArchiveProvider_GetByReferenceOrderIdReferenceOrderLineIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransactionHistoryArchiveProvider_GetByTransactionIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransactionHistoryArchiveProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransactionHistoryArchiveProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransactionHistoryArchiveProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductVendorProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductVendorProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductVendorProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductVendorProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductVendorProvider_GetByProductIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductVendorProvider_GetByUnitMeasureCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductVendorProvider_GetByVendorIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductVendorProvider_GetByProductIdVendorIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductVendorProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductVendorProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductVendorProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurchaseOrderHeaderProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurchaseOrderHeaderProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurchaseOrderHeaderProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurchaseOrderHeaderProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurchaseOrderHeaderProvider_GetByShipMethodIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurchaseOrderHeaderProvider_GetByEmployeeIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurchaseOrderHeaderProvider_GetByVendorIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurchaseOrderHeaderProvider_GetByPurchaseOrderIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurchaseOrderHeaderProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurchaseOrderHeaderProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurchaseOrderHeaderProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddressTypeProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddressTypeProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddressTypeProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddressTypeProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddressTypeProvider_GetByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddressTypeProvider_GetByRowguidOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddressTypeProvider_GetByAddressTypeIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddressTypeProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddressTypeProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddressTypeProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkOrderRoutingProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkOrderRoutingProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkOrderRoutingProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkOrderRoutingProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkOrderRoutingProvider_GetByLocationIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkOrderRoutingProvider_GetByWorkOrderIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkOrderRoutingProvider_GetByProductIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkOrderRoutingProvider_GetByWorkOrderIdProductIdOperationSequenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkOrderRoutingProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkOrderRoutingProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkOrderRoutingProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorProvider_GetByProductIdFromProductVendorOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorProvider_GetByAddressIdFromVendorAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorProvider_GetByContactIdFromVendorContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorProvider_GetByAccountNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorProvider_GetByVendorIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorAddressProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorAddressProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorAddressProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorAddressProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorAddressProvider_GetByAddressTypeIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorAddressProvider_GetByVendorIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorAddressProvider_GetByAddressIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorAddressProvider_GetByVendorIdAddressIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorAddressProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorAddressProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback VendorAddressProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurchaseOrderDetailProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurchaseOrderDetailProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurchaseOrderDetailProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurchaseOrderDetailProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurchaseOrderDetailProvider_GetByPurchaseOrderIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurchaseOrderDetailProvider_GetByProductIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurchaseOrderDetailProvider_GetByPurchaseOrderIdPurchaseOrderDetailIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurchaseOrderDetailProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurchaseOrderDetailProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurchaseOrderDetailProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback LocationProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback LocationProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback LocationProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback LocationProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback LocationProvider_GetByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback LocationProvider_GetByLocationIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback LocationProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback LocationProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback LocationProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrencyProvider_GetByCountryRegionCodeFromCountryRegionCurrencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrencyProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrencyProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrencyProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrencyProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrencyProvider_GetByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrencyProvider_GetByCurrencyCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrencyProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrencyProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrencyProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreditCardProvider_GetByContactIdFromContactCreditCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreditCardProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreditCardProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreditCardProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreditCardProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreditCardProvider_GetByCardNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreditCardProvider_GetByCreditCardIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreditCardProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreditCardProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreditCardProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductCostHistoryProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductCostHistoryProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductCostHistoryProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductCostHistoryProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductCostHistoryProvider_GetByProductIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductCostHistoryProvider_GetByProductIdStartDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductCostHistoryProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductCostHistoryProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductCostHistoryProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback TimestampPkProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback TimestampPkProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback TimestampPkProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback TimestampPkProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback TimestampPkProvider_GetByTimestampPkOperationCompleted;
        
        private System.Threading.SendOrPostCallback TimestampPkProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback TimestampPkProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback TimestampPkProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductInventoryProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductInventoryProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductInventoryProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductInventoryProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductInventoryProvider_GetByLocationIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductInventoryProvider_GetByProductIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductInventoryProvider_GetByProductIdLocationIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductInventoryProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductInventoryProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductInventoryProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrencyRateProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrencyRateProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrencyRateProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrencyRateProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrencyRateProvider_GetByFromCurrencyCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrencyRateProvider_GetByToCurrencyCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrencyRateProvider_GetByCurrencyRateDateFromCurrencyCodeToCurrencyCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrencyRateProvider_GetByCurrencyRateIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrencyRateProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrencyRateProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrencyRateProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesTerritoryProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesTerritoryProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesTerritoryProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesTerritoryProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesTerritoryProvider_GetByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesTerritoryProvider_GetByRowguidOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesTerritoryProvider_GetByTerritoryIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesTerritoryProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesTerritoryProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesTerritoryProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransactionHistoryProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransactionHistoryProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransactionHistoryProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransactionHistoryProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransactionHistoryProvider_GetByProductIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransactionHistoryProvider_GetByReferenceOrderIdReferenceOrderLineIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransactionHistoryProvider_GetByTransactionIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransactionHistoryProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransactionHistoryProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransactionHistoryProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback IllustrationProvider_GetByProductModelIdFromProductModelIllustrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback IllustrationProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback IllustrationProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback IllustrationProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback IllustrationProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback IllustrationProvider_GetByIllustrationIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback IllustrationProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback IllustrationProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback IllustrationProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShipMethodProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShipMethodProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShipMethodProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShipMethodProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShipMethodProvider_GetByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShipMethodProvider_GetByRowguidOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShipMethodProvider_GetByShipMethodIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShipMethodProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShipMethodProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShipMethodProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerProvider_GetByAddressIdFromCustomerAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerProvider_GetByAccountNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerProvider_GetByRowguidOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerProvider_GetByTerritoryIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerProvider_GetByCustomerIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductReviewProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductReviewProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductReviewProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductReviewProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductReviewProvider_GetByProductIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductReviewProvider_GetByProductIdReviewerNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductReviewProvider_GetByProductReviewIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductReviewProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductReviewProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductReviewProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountryRegionProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountryRegionProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountryRegionProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountryRegionProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountryRegionProvider_GetByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountryRegionProvider_GetByCountryRegionCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountryRegionProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountryRegionProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountryRegionProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddressProvider_GetByCustomerIdFromCustomerAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddressProvider_GetByEmployeeIdFromEmployeeAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddressProvider_GetByVendorIdFromVendorAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddressProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddressProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddressProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddressProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddressProvider_GetByRowguidOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddressProvider_GetByAddressLine1AddressLine2CityStateProvinceIdPostalCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddressProvider_GetByStateProvinceIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddressProvider_GetByAddressIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddressProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddressProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddressProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShiftProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShiftProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShiftProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShiftProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShiftProvider_GetByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShiftProvider_GetByStartTimeEndTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShiftProvider_GetByShiftIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShiftProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShiftProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShiftProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback StateProvinceProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback StateProvinceProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback StateProvinceProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback StateProvinceProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback StateProvinceProvider_GetByCountryRegionCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback StateProvinceProvider_GetByTerritoryIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback StateProvinceProvider_GetByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback StateProvinceProvider_GetByRowguidOperationCompleted;
        
        private System.Threading.SendOrPostCallback StateProvinceProvider_GetByStateProvinceCodeCountryRegionCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback StateProvinceProvider_GetByStateProvinceIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback StateProvinceProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback StateProvinceProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback StateProvinceProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesReasonProvider_GetBySalesOrderIdFromSalesOrderHeaderSalesReasonOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesReasonProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesReasonProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesReasonProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesReasonProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesReasonProvider_GetBySalesReasonIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesReasonProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesReasonProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesReasonProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CultureProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureOperationCompleted;
        
        private System.Threading.SendOrPostCallback CultureProvider_GetByProductModelIdFromProductModelProductDescriptionCultureOperationCompleted;
        
        private System.Threading.SendOrPostCallback CultureProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback CultureProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback CultureProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback CultureProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback CultureProvider_GetByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback CultureProvider_GetByCultureIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CultureProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback CultureProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback CultureProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderHeaderProvider_GetBySalesReasonIdFromSalesOrderHeaderSalesReasonOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderHeaderProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderHeaderProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderHeaderProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderHeaderProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderHeaderProvider_GetByBillToAddressIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderHeaderProvider_GetByShipToAddressIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderHeaderProvider_GetByContactIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderHeaderProvider_GetByCreditCardIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderHeaderProvider_GetByCurrencyRateIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderHeaderProvider_GetByTerritoryIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderHeaderProvider_GetByShipMethodIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderHeaderProvider_GetByRowguidOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderHeaderProvider_GetBySalesOrderNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderHeaderProvider_GetByCustomerIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderHeaderProvider_GetBySalesPersonIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderHeaderProvider_GetBySalesOrderIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderHeaderProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderHeaderProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesOrderHeaderProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelProductDescriptionCultureProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelProductDescriptionCultureProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelProductDescriptionCultureProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelProductDescriptionCultureProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelProductDescriptionCultureProvider_GetByCultureIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelProductDescriptionCultureProvider_GetByProductDescriptionIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelProductDescriptionCultureProvider_GetByProductModelIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelProductDescriptionCultureProvider_GetByProductModelIdProductDescriptionIdCultureIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelProductDescriptionCultureProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelProductDescriptionCultureProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductModelProductDescriptionCultureProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DocumentProvider_GetByProductIdFromProductDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DocumentProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback DocumentProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback DocumentProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback DocumentProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback DocumentProvider_GetByFileNameRevisionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DocumentProvider_GetByDocumentIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DocumentProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback DocumentProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback DocumentProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductProductPhotoProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductProductPhotoProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductProductPhotoProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductProductPhotoProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductProductPhotoProvider_GetByProductIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductProductPhotoProvider_GetByProductPhotoIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductProductPhotoProvider_GetByProductIdProductPhotoIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductProductPhotoProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductProductPhotoProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductProductPhotoProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductDocumentProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductDocumentProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductDocumentProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductDocumentProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductDocumentProvider_GetByDocumentIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductDocumentProvider_GetByProductIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductDocumentProvider_GetByProductIdDocumentIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductDocumentProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductDocumentProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductDocumentProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback LocationProvider_GetByProductIdFromProductInventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeePayHistoryProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeePayHistoryProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeePayHistoryProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeePayHistoryProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeePayHistoryProvider_GetByEmployeeIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeePayHistoryProvider_GetByEmployeeIdRateChangeDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeePayHistoryProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeePayHistoryProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeePayHistoryProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback AwBuildVersionProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback AwBuildVersionProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback AwBuildVersionProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback AwBuildVersionProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback AwBuildVersionProvider_GetBySystemInformationIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback AwBuildVersionProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback AwBuildVersionProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback AwBuildVersionProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DatabaseLogProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback DatabaseLogProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback DatabaseLogProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback DatabaseLogProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback DatabaseLogProvider_GetByDatabaseLogIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DatabaseLogProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback DatabaseLogProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback DatabaseLogProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeAddressProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeAddressProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeAddressProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeAddressProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeAddressProvider_GetByAddressIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeAddressProvider_GetByEmployeeIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeAddressProvider_GetByRowguidOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeAddressProvider_GetByEmployeeIdAddressIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeAddressProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeAddressProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeAddressProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DepartmentProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback DepartmentProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback DepartmentProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback DepartmentProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback DepartmentProvider_GetByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback DepartmentProvider_GetByDepartmentIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DepartmentProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback DepartmentProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback DepartmentProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductPhotoProvider_GetByProductIdFromProductProductPhotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductPhotoProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductPhotoProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductPhotoProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductPhotoProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductPhotoProvider_GetByProductPhotoIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductPhotoProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductPhotoProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductPhotoProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback BillOfMaterialsProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback BillOfMaterialsProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback BillOfMaterialsProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback BillOfMaterialsProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback BillOfMaterialsProvider_GetByComponentIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback BillOfMaterialsProvider_GetByProductAssemblyIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback BillOfMaterialsProvider_GetByProductAssemblyIdComponentIdStartDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback BillOfMaterialsProvider_GetByUnitMeasureCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback BillOfMaterialsProvider_GetByBillOfMaterialsIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback BillOfMaterialsProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback BillOfMaterialsProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback BillOfMaterialsProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesPersonProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesPersonProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesPersonProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesPersonProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesPersonProvider_GetByTerritoryIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesPersonProvider_GetByRowguidOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesPersonProvider_GetBySalesPersonIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesPersonProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesPersonProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalesPersonProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback JobCandidateProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback JobCandidateProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback JobCandidateProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback JobCandidateProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback JobCandidateProvider_GetByEmployeeIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback JobCandidateProvider_GetByJobCandidateIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback JobCandidateProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback JobCandidateProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback JobCandidateProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeDepartmentHistoryProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeDepartmentHistoryProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeDepartmentHistoryProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeDepartmentHistoryProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeDepartmentHistoryProvider_GetByEmployeeIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeDepartmentHistoryProvider_GetByDepartmentIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeDepartmentHistoryProvider_GetByShiftIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeDepartmentHistoryProvider_GetByEmployeeIdStartDateDepartmentIdShiftIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeDepartmentHistoryProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeDepartmentHistoryProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeDepartmentHistoryProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactTypeProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactTypeProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactTypeProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactTypeProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactTypeProvider_GetByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactTypeProvider_GetByContactTypeIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactTypeProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactTypeProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContactTypeProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ErrorLogProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ErrorLogProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback ErrorLogProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback ErrorLogProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ErrorLogProvider_GetByErrorLogIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ErrorLogProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ErrorLogProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ErrorLogProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeProvider_GetByAddressIdFromEmployeeAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeProvider_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeProvider_FindOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeProvider_GetAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeProvider_GetPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeProvider_GetByContactIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeProvider_GetByLoginIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeProvider_GetByNationalIdNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeProvider_GetByRowguidOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeProvider_GetByManagerIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeProvider_GetByEmployeeIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeProvider_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeProvider_BulkInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmployeeProvider_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountryRegionProvider_GetByCurrencyCodeFromCountryRegionCurrencyOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AdventureWorksServices() {
            this.Url = "http://localhost/AdventureWorksServices/Nettiers.AdventureWorksServices.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event NullFkeyChildProvider_GetPagedCompletedEventHandler NullFkeyChildProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event NullFkeyChildProvider_GetByNullFkeyParentIdCompletedEventHandler NullFkeyChildProvider_GetByNullFkeyParentIdCompleted;
        
        /// <remarks/>
        public event NullFkeyChildProvider_GetByNullFkeyChildIdCompletedEventHandler NullFkeyChildProvider_GetByNullFkeyChildIdCompleted;
        
        /// <remarks/>
        public event NullFkeyChildProvider_InsertCompletedEventHandler NullFkeyChildProvider_InsertCompleted;
        
        /// <remarks/>
        public event NullFkeyChildProvider_BulkInsertCompletedEventHandler NullFkeyChildProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event NullFkeyChildProvider_UpdateCompletedEventHandler NullFkeyChildProvider_UpdateCompleted;
        
        /// <remarks/>
        public event ProductDescriptionProvider_GetByCultureIdFromProductModelProductDescriptionCultureCompletedEventHandler ProductDescriptionProvider_GetByCultureIdFromProductModelProductDescriptionCultureCompleted;
        
        /// <remarks/>
        public event ProductDescriptionProvider_GetByProductModelIdFromProductModelProductDescriptionCultureCompletedEventHandler ProductDescriptionProvider_GetByProductModelIdFromProductModelProductDescriptionCultureCompleted;
        
        /// <remarks/>
        public event ProductDescriptionProvider_DeleteCompletedEventHandler ProductDescriptionProvider_DeleteCompleted;
        
        /// <remarks/>
        public event ProductDescriptionProvider_FindCompletedEventHandler ProductDescriptionProvider_FindCompleted;
        
        /// <remarks/>
        public event ProductDescriptionProvider_GetAllCompletedEventHandler ProductDescriptionProvider_GetAllCompleted;
        
        /// <remarks/>
        public event ProductDescriptionProvider_GetPagedCompletedEventHandler ProductDescriptionProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event ProductDescriptionProvider_GetByRowguidCompletedEventHandler ProductDescriptionProvider_GetByRowguidCompleted;
        
        /// <remarks/>
        public event ProductDescriptionProvider_GetByProductDescriptionIdCompletedEventHandler ProductDescriptionProvider_GetByProductDescriptionIdCompleted;
        
        /// <remarks/>
        public event ProductDescriptionProvider_InsertCompletedEventHandler ProductDescriptionProvider_InsertCompleted;
        
        /// <remarks/>
        public event ProductDescriptionProvider_BulkInsertCompletedEventHandler ProductDescriptionProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event ProductDescriptionProvider_UpdateCompletedEventHandler ProductDescriptionProvider_UpdateCompleted;
        
        /// <remarks/>
        public event VAdditionalContactInfoProvider_GetAllCompletedEventHandler VAdditionalContactInfoProvider_GetAllCompleted;
        
        /// <remarks/>
        public event VAdditionalContactInfoProvider_GetCompletedEventHandler VAdditionalContactInfoProvider_GetCompleted;
        
        /// <remarks/>
        public event VEmployeeProvider_GetAllCompletedEventHandler VEmployeeProvider_GetAllCompleted;
        
        /// <remarks/>
        public event VEmployeeProvider_GetCompletedEventHandler VEmployeeProvider_GetCompleted;
        
        /// <remarks/>
        public event VEmployeeDepartmentProvider_GetAllCompletedEventHandler VEmployeeDepartmentProvider_GetAllCompleted;
        
        /// <remarks/>
        public event VEmployeeDepartmentProvider_GetCompletedEventHandler VEmployeeDepartmentProvider_GetCompleted;
        
        /// <remarks/>
        public event VEmployeeDepartmentHistoryProvider_GetAllCompletedEventHandler VEmployeeDepartmentHistoryProvider_GetAllCompleted;
        
        /// <remarks/>
        public event VEmployeeDepartmentHistoryProvider_GetCompletedEventHandler VEmployeeDepartmentHistoryProvider_GetCompleted;
        
        /// <remarks/>
        public event VIndividualCustomerProvider_GetAllCompletedEventHandler VIndividualCustomerProvider_GetAllCompleted;
        
        /// <remarks/>
        public event VIndividualCustomerProvider_GetCompletedEventHandler VIndividualCustomerProvider_GetCompleted;
        
        /// <remarks/>
        public event VIndividualDemographicsProvider_GetAllCompletedEventHandler VIndividualDemographicsProvider_GetAllCompleted;
        
        /// <remarks/>
        public event VIndividualDemographicsProvider_GetCompletedEventHandler VIndividualDemographicsProvider_GetCompleted;
        
        /// <remarks/>
        public event VJobCandidateProvider_GetAllCompletedEventHandler VJobCandidateProvider_GetAllCompleted;
        
        /// <remarks/>
        public event VJobCandidateProvider_GetCompletedEventHandler VJobCandidateProvider_GetCompleted;
        
        /// <remarks/>
        public event VJobCandidateEducationProvider_GetAllCompletedEventHandler VJobCandidateEducationProvider_GetAllCompleted;
        
        /// <remarks/>
        public event VJobCandidateEducationProvider_GetCompletedEventHandler VJobCandidateEducationProvider_GetCompleted;
        
        /// <remarks/>
        public event VJobCandidateEmploymentProvider_GetAllCompletedEventHandler VJobCandidateEmploymentProvider_GetAllCompleted;
        
        /// <remarks/>
        public event VJobCandidateEmploymentProvider_GetCompletedEventHandler VJobCandidateEmploymentProvider_GetCompleted;
        
        /// <remarks/>
        public event VProductAndDescriptionProvider_GetAllCompletedEventHandler VProductAndDescriptionProvider_GetAllCompleted;
        
        /// <remarks/>
        public event VProductAndDescriptionProvider_GetCompletedEventHandler VProductAndDescriptionProvider_GetCompleted;
        
        /// <remarks/>
        public event VProductModelCatalogDescriptionProvider_GetAllCompletedEventHandler VProductModelCatalogDescriptionProvider_GetAllCompleted;
        
        /// <remarks/>
        public event VProductModelCatalogDescriptionProvider_GetCompletedEventHandler VProductModelCatalogDescriptionProvider_GetCompleted;
        
        /// <remarks/>
        public event VProductModelInstructionsProvider_GetAllCompletedEventHandler VProductModelInstructionsProvider_GetAllCompleted;
        
        /// <remarks/>
        public event VProductModelInstructionsProvider_GetCompletedEventHandler VProductModelInstructionsProvider_GetCompleted;
        
        /// <remarks/>
        public event VSalesPersonProvider_GetAllCompletedEventHandler VSalesPersonProvider_GetAllCompleted;
        
        /// <remarks/>
        public event VSalesPersonProvider_GetCompletedEventHandler VSalesPersonProvider_GetCompleted;
        
        /// <remarks/>
        public event VSalesPersonSalesByFiscalYearsProvider_GetAllCompletedEventHandler VSalesPersonSalesByFiscalYearsProvider_GetAllCompleted;
        
        /// <remarks/>
        public event VSalesPersonSalesByFiscalYearsProvider_GetCompletedEventHandler VSalesPersonSalesByFiscalYearsProvider_GetCompleted;
        
        /// <remarks/>
        public event VStateProvinceCountryRegionProvider_GetAllCompletedEventHandler VStateProvinceCountryRegionProvider_GetAllCompleted;
        
        /// <remarks/>
        public event VStateProvinceCountryRegionProvider_GetCompletedEventHandler VStateProvinceCountryRegionProvider_GetCompleted;
        
        /// <remarks/>
        public event VStoreWithDemographicsProvider_GetAllCompletedEventHandler VStoreWithDemographicsProvider_GetAllCompleted;
        
        /// <remarks/>
        public event VStoreWithDemographicsProvider_GetCompletedEventHandler VStoreWithDemographicsProvider_GetCompleted;
        
        /// <remarks/>
        public event VVendorProvider_GetAllCompletedEventHandler VVendorProvider_GetAllCompleted;
        
        /// <remarks/>
        public event VVendorProvider_GetCompletedEventHandler VVendorProvider_GetCompleted;
        
        /// <remarks/>
        public event ExecuteNonQueryCompletedEventHandler ExecuteNonQueryCompleted;
        
        /// <remarks/>
        public event ExecuteNonQuery1CompletedEventHandler ExecuteNonQuery1Completed;
        
        /// <remarks/>
        public event ExecuteDataSetCompletedEventHandler ExecuteDataSetCompleted;
        
        /// <remarks/>
        public event ExecuteDataSet1CompletedEventHandler ExecuteDataSet1Completed;
        
        /// <remarks/>
        public event ExecuteScalarCompletedEventHandler ExecuteScalarCompleted;
        
        /// <remarks/>
        public event ExecuteScalar1CompletedEventHandler ExecuteScalar1Completed;
        
        /// <remarks/>
        public event StoreProvider_InsertCompletedEventHandler StoreProvider_InsertCompleted;
        
        /// <remarks/>
        public event StoreProvider_BulkInsertCompletedEventHandler StoreProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event StoreProvider_UpdateCompletedEventHandler StoreProvider_UpdateCompleted;
        
        /// <remarks/>
        public event UnitMeasureProvider_DeleteCompletedEventHandler UnitMeasureProvider_DeleteCompleted;
        
        /// <remarks/>
        public event UnitMeasureProvider_FindCompletedEventHandler UnitMeasureProvider_FindCompleted;
        
        /// <remarks/>
        public event UnitMeasureProvider_GetAllCompletedEventHandler UnitMeasureProvider_GetAllCompleted;
        
        /// <remarks/>
        public event UnitMeasureProvider_GetPagedCompletedEventHandler UnitMeasureProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event UnitMeasureProvider_GetByNameCompletedEventHandler UnitMeasureProvider_GetByNameCompleted;
        
        /// <remarks/>
        public event UnitMeasureProvider_GetByUnitMeasureCodeCompletedEventHandler UnitMeasureProvider_GetByUnitMeasureCodeCompleted;
        
        /// <remarks/>
        public event UnitMeasureProvider_InsertCompletedEventHandler UnitMeasureProvider_InsertCompleted;
        
        /// <remarks/>
        public event UnitMeasureProvider_BulkInsertCompletedEventHandler UnitMeasureProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event UnitMeasureProvider_UpdateCompletedEventHandler UnitMeasureProvider_UpdateCompleted;
        
        /// <remarks/>
        public event SalesTaxRateProvider_DeleteCompletedEventHandler SalesTaxRateProvider_DeleteCompleted;
        
        /// <remarks/>
        public event SalesTaxRateProvider_FindCompletedEventHandler SalesTaxRateProvider_FindCompleted;
        
        /// <remarks/>
        public event SalesTaxRateProvider_GetAllCompletedEventHandler SalesTaxRateProvider_GetAllCompleted;
        
        /// <remarks/>
        public event SalesTaxRateProvider_GetPagedCompletedEventHandler SalesTaxRateProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event SalesTaxRateProvider_GetByStateProvinceIdCompletedEventHandler SalesTaxRateProvider_GetByStateProvinceIdCompleted;
        
        /// <remarks/>
        public event SalesTaxRateProvider_GetByRowguidCompletedEventHandler SalesTaxRateProvider_GetByRowguidCompleted;
        
        /// <remarks/>
        public event SalesTaxRateProvider_GetByStateProvinceIdTaxTypeCompletedEventHandler SalesTaxRateProvider_GetByStateProvinceIdTaxTypeCompleted;
        
        /// <remarks/>
        public event SalesTaxRateProvider_GetBySalesTaxRateIdCompletedEventHandler SalesTaxRateProvider_GetBySalesTaxRateIdCompleted;
        
        /// <remarks/>
        public event SalesTaxRateProvider_InsertCompletedEventHandler SalesTaxRateProvider_InsertCompleted;
        
        /// <remarks/>
        public event SalesTaxRateProvider_BulkInsertCompletedEventHandler SalesTaxRateProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event SalesTaxRateProvider_UpdateCompletedEventHandler SalesTaxRateProvider_UpdateCompleted;
        
        /// <remarks/>
        public event SpecialOfferProductProvider_DeleteCompletedEventHandler SpecialOfferProductProvider_DeleteCompleted;
        
        /// <remarks/>
        public event SpecialOfferProductProvider_FindCompletedEventHandler SpecialOfferProductProvider_FindCompleted;
        
        /// <remarks/>
        public event SpecialOfferProductProvider_GetAllCompletedEventHandler SpecialOfferProductProvider_GetAllCompleted;
        
        /// <remarks/>
        public event SpecialOfferProductProvider_GetPagedCompletedEventHandler SpecialOfferProductProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event SpecialOfferProductProvider_GetBySpecialOfferIdCompletedEventHandler SpecialOfferProductProvider_GetBySpecialOfferIdCompleted;
        
        /// <remarks/>
        public event SpecialOfferProductProvider_GetByRowguidCompletedEventHandler SpecialOfferProductProvider_GetByRowguidCompleted;
        
        /// <remarks/>
        public event SpecialOfferProductProvider_GetByProductIdCompletedEventHandler SpecialOfferProductProvider_GetByProductIdCompleted;
        
        /// <remarks/>
        public event SpecialOfferProductProvider_GetBySpecialOfferIdProductIdCompletedEventHandler SpecialOfferProductProvider_GetBySpecialOfferIdProductIdCompleted;
        
        /// <remarks/>
        public event SpecialOfferProductProvider_InsertCompletedEventHandler SpecialOfferProductProvider_InsertCompleted;
        
        /// <remarks/>
        public event SpecialOfferProductProvider_BulkInsertCompletedEventHandler SpecialOfferProductProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event SpecialOfferProductProvider_UpdateCompletedEventHandler SpecialOfferProductProvider_UpdateCompleted;
        
        /// <remarks/>
        public event SalesPersonQuotaHistoryProvider_DeleteCompletedEventHandler SalesPersonQuotaHistoryProvider_DeleteCompleted;
        
        /// <remarks/>
        public event SalesPersonQuotaHistoryProvider_FindCompletedEventHandler SalesPersonQuotaHistoryProvider_FindCompleted;
        
        /// <remarks/>
        public event SalesPersonQuotaHistoryProvider_GetAllCompletedEventHandler SalesPersonQuotaHistoryProvider_GetAllCompleted;
        
        /// <remarks/>
        public event SalesPersonQuotaHistoryProvider_GetPagedCompletedEventHandler SalesPersonQuotaHistoryProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event SalesPersonQuotaHistoryProvider_GetBySalesPersonIdCompletedEventHandler SalesPersonQuotaHistoryProvider_GetBySalesPersonIdCompleted;
        
        /// <remarks/>
        public event SalesPersonQuotaHistoryProvider_GetByRowguidCompletedEventHandler SalesPersonQuotaHistoryProvider_GetByRowguidCompleted;
        
        /// <remarks/>
        public event SalesPersonQuotaHistoryProvider_GetBySalesPersonIdQuotaDateCompletedEventHandler SalesPersonQuotaHistoryProvider_GetBySalesPersonIdQuotaDateCompleted;
        
        /// <remarks/>
        public event SalesPersonQuotaHistoryProvider_InsertCompletedEventHandler SalesPersonQuotaHistoryProvider_InsertCompleted;
        
        /// <remarks/>
        public event SalesPersonQuotaHistoryProvider_BulkInsertCompletedEventHandler SalesPersonQuotaHistoryProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event SalesPersonQuotaHistoryProvider_UpdateCompletedEventHandler SalesPersonQuotaHistoryProvider_UpdateCompleted;
        
        /// <remarks/>
        public event IndividualProvider_DeleteCompletedEventHandler IndividualProvider_DeleteCompleted;
        
        /// <remarks/>
        public event IndividualProvider_FindCompletedEventHandler IndividualProvider_FindCompleted;
        
        /// <remarks/>
        public event IndividualProvider_GetAllCompletedEventHandler IndividualProvider_GetAllCompleted;
        
        /// <remarks/>
        public event IndividualProvider_GetPagedCompletedEventHandler IndividualProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event IndividualProvider_GetByContactIdCompletedEventHandler IndividualProvider_GetByContactIdCompleted;
        
        /// <remarks/>
        public event IndividualProvider_GetByCustomerIdCompletedEventHandler IndividualProvider_GetByCustomerIdCompleted;
        
        /// <remarks/>
        public event IndividualProvider_GetByDemographicsCompletedEventHandler IndividualProvider_GetByDemographicsCompleted;
        
        /// <remarks/>
        public event IndividualProvider_InsertCompletedEventHandler IndividualProvider_InsertCompleted;
        
        /// <remarks/>
        public event IndividualProvider_BulkInsertCompletedEventHandler IndividualProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event IndividualProvider_UpdateCompletedEventHandler IndividualProvider_UpdateCompleted;
        
        /// <remarks/>
        public event WorkOrderProvider_DeleteCompletedEventHandler WorkOrderProvider_DeleteCompleted;
        
        /// <remarks/>
        public event WorkOrderProvider_FindCompletedEventHandler WorkOrderProvider_FindCompleted;
        
        /// <remarks/>
        public event WorkOrderProvider_GetAllCompletedEventHandler WorkOrderProvider_GetAllCompleted;
        
        /// <remarks/>
        public event WorkOrderProvider_GetPagedCompletedEventHandler WorkOrderProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event WorkOrderProvider_GetByProductIdCompletedEventHandler WorkOrderProvider_GetByProductIdCompleted;
        
        /// <remarks/>
        public event WorkOrderProvider_GetByScrapReasonIdCompletedEventHandler WorkOrderProvider_GetByScrapReasonIdCompleted;
        
        /// <remarks/>
        public event WorkOrderProvider_GetByWorkOrderIdCompletedEventHandler WorkOrderProvider_GetByWorkOrderIdCompleted;
        
        /// <remarks/>
        public event WorkOrderProvider_InsertCompletedEventHandler WorkOrderProvider_InsertCompleted;
        
        /// <remarks/>
        public event WorkOrderProvider_BulkInsertCompletedEventHandler WorkOrderProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event WorkOrderProvider_UpdateCompletedEventHandler WorkOrderProvider_UpdateCompleted;
        
        /// <remarks/>
        public event SalesTerritoryHistoryProvider_DeleteCompletedEventHandler SalesTerritoryHistoryProvider_DeleteCompleted;
        
        /// <remarks/>
        public event SalesTerritoryHistoryProvider_FindCompletedEventHandler SalesTerritoryHistoryProvider_FindCompleted;
        
        /// <remarks/>
        public event SalesTerritoryHistoryProvider_GetAllCompletedEventHandler SalesTerritoryHistoryProvider_GetAllCompleted;
        
        /// <remarks/>
        public event SalesTerritoryHistoryProvider_GetPagedCompletedEventHandler SalesTerritoryHistoryProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event SalesTerritoryHistoryProvider_GetBySalesPersonIdCompletedEventHandler SalesTerritoryHistoryProvider_GetBySalesPersonIdCompleted;
        
        /// <remarks/>
        public event SalesTerritoryHistoryProvider_GetByTerritoryIdCompletedEventHandler SalesTerritoryHistoryProvider_GetByTerritoryIdCompleted;
        
        /// <remarks/>
        public event SalesTerritoryHistoryProvider_GetByRowguidCompletedEventHandler SalesTerritoryHistoryProvider_GetByRowguidCompleted;
        
        /// <remarks/>
        public event SalesTerritoryHistoryProvider_GetBySalesPersonIdStartDateTerritoryIdCompletedEventHandler SalesTerritoryHistoryProvider_GetBySalesPersonIdStartDateTerritoryIdCompleted;
        
        /// <remarks/>
        public event SalesTerritoryHistoryProvider_InsertCompletedEventHandler SalesTerritoryHistoryProvider_InsertCompleted;
        
        /// <remarks/>
        public event SalesTerritoryHistoryProvider_BulkInsertCompletedEventHandler SalesTerritoryHistoryProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event SalesTerritoryHistoryProvider_UpdateCompletedEventHandler SalesTerritoryHistoryProvider_UpdateCompleted;
        
        /// <remarks/>
        public event SalesOrderDetailProvider_DeleteCompletedEventHandler SalesOrderDetailProvider_DeleteCompleted;
        
        /// <remarks/>
        public event SalesOrderDetailProvider_FindCompletedEventHandler SalesOrderDetailProvider_FindCompleted;
        
        /// <remarks/>
        public event SalesOrderDetailProvider_GetAllCompletedEventHandler SalesOrderDetailProvider_GetAllCompleted;
        
        /// <remarks/>
        public event SalesOrderDetailProvider_GetPagedCompletedEventHandler SalesOrderDetailProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event SalesOrderDetailProvider_GetBySalesOrderIdCompletedEventHandler SalesOrderDetailProvider_GetBySalesOrderIdCompleted;
        
        /// <remarks/>
        public event SalesOrderDetailProvider_GetBySpecialOfferIdProductIdCompletedEventHandler SalesOrderDetailProvider_GetBySpecialOfferIdProductIdCompleted;
        
        /// <remarks/>
        public event SalesOrderDetailProvider_GetByRowguidCompletedEventHandler SalesOrderDetailProvider_GetByRowguidCompleted;
        
        /// <remarks/>
        public event SalesOrderDetailProvider_GetByProductIdCompletedEventHandler SalesOrderDetailProvider_GetByProductIdCompleted;
        
        /// <remarks/>
        public event SalesOrderDetailProvider_GetBySalesOrderIdSalesOrderDetailIdCompletedEventHandler SalesOrderDetailProvider_GetBySalesOrderIdSalesOrderDetailIdCompleted;
        
        /// <remarks/>
        public event SalesOrderDetailProvider_InsertCompletedEventHandler SalesOrderDetailProvider_InsertCompleted;
        
        /// <remarks/>
        public event SalesOrderDetailProvider_BulkInsertCompletedEventHandler SalesOrderDetailProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event SalesOrderDetailProvider_UpdateCompletedEventHandler SalesOrderDetailProvider_UpdateCompleted;
        
        /// <remarks/>
        public event TestVariantProvider_DeleteCompletedEventHandler TestVariantProvider_DeleteCompleted;
        
        /// <remarks/>
        public event TestVariantProvider_FindCompletedEventHandler TestVariantProvider_FindCompleted;
        
        /// <remarks/>
        public event TestVariantProvider_GetAllCompletedEventHandler TestVariantProvider_GetAllCompleted;
        
        /// <remarks/>
        public event TestVariantProvider_GetPagedCompletedEventHandler TestVariantProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event TestVariantProvider_GetByTestVariantIdCompletedEventHandler TestVariantProvider_GetByTestVariantIdCompleted;
        
        /// <remarks/>
        public event TestVariantProvider_InsertCompletedEventHandler TestVariantProvider_InsertCompleted;
        
        /// <remarks/>
        public event TestVariantProvider_BulkInsertCompletedEventHandler TestVariantProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event TestVariantProvider_UpdateCompletedEventHandler TestVariantProvider_UpdateCompleted;
        
        /// <remarks/>
        public event StoreContactProvider_DeleteCompletedEventHandler StoreContactProvider_DeleteCompleted;
        
        /// <remarks/>
        public event StoreContactProvider_FindCompletedEventHandler StoreContactProvider_FindCompleted;
        
        /// <remarks/>
        public event StoreContactProvider_GetAllCompletedEventHandler StoreContactProvider_GetAllCompleted;
        
        /// <remarks/>
        public event StoreContactProvider_GetPagedCompletedEventHandler StoreContactProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event StoreContactProvider_GetByCustomerIdCompletedEventHandler StoreContactProvider_GetByCustomerIdCompleted;
        
        /// <remarks/>
        public event StoreContactProvider_GetByRowguidCompletedEventHandler StoreContactProvider_GetByRowguidCompleted;
        
        /// <remarks/>
        public event StoreContactProvider_GetByContactIdCompletedEventHandler StoreContactProvider_GetByContactIdCompleted;
        
        /// <remarks/>
        public event StoreContactProvider_GetByContactTypeIdCompletedEventHandler StoreContactProvider_GetByContactTypeIdCompleted;
        
        /// <remarks/>
        public event StoreContactProvider_GetByCustomerIdContactIdCompletedEventHandler StoreContactProvider_GetByCustomerIdContactIdCompleted;
        
        /// <remarks/>
        public event StoreContactProvider_InsertCompletedEventHandler StoreContactProvider_InsertCompleted;
        
        /// <remarks/>
        public event StoreContactProvider_BulkInsertCompletedEventHandler StoreContactProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event StoreContactProvider_UpdateCompletedEventHandler StoreContactProvider_UpdateCompleted;
        
        /// <remarks/>
        public event NullFkeyParentProvider_DeleteCompletedEventHandler NullFkeyParentProvider_DeleteCompleted;
        
        /// <remarks/>
        public event NullFkeyParentProvider_FindCompletedEventHandler NullFkeyParentProvider_FindCompleted;
        
        /// <remarks/>
        public event NullFkeyParentProvider_GetAllCompletedEventHandler NullFkeyParentProvider_GetAllCompleted;
        
        /// <remarks/>
        public event NullFkeyParentProvider_GetPagedCompletedEventHandler NullFkeyParentProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event NullFkeyParentProvider_GetByNullFkeyParentIdCompletedEventHandler NullFkeyParentProvider_GetByNullFkeyParentIdCompleted;
        
        /// <remarks/>
        public event NullFkeyParentProvider_InsertCompletedEventHandler NullFkeyParentProvider_InsertCompleted;
        
        /// <remarks/>
        public event NullFkeyParentProvider_BulkInsertCompletedEventHandler NullFkeyParentProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event NullFkeyParentProvider_UpdateCompletedEventHandler NullFkeyParentProvider_UpdateCompleted;
        
        /// <remarks/>
        public event ShoppingCartItemProvider_DeleteCompletedEventHandler ShoppingCartItemProvider_DeleteCompleted;
        
        /// <remarks/>
        public event ShoppingCartItemProvider_FindCompletedEventHandler ShoppingCartItemProvider_FindCompleted;
        
        /// <remarks/>
        public event ShoppingCartItemProvider_GetAllCompletedEventHandler ShoppingCartItemProvider_GetAllCompleted;
        
        /// <remarks/>
        public event ShoppingCartItemProvider_GetPagedCompletedEventHandler ShoppingCartItemProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event ShoppingCartItemProvider_GetByProductIdCompletedEventHandler ShoppingCartItemProvider_GetByProductIdCompleted;
        
        /// <remarks/>
        public event ShoppingCartItemProvider_GetByShoppingCartIdProductIdCompletedEventHandler ShoppingCartItemProvider_GetByShoppingCartIdProductIdCompleted;
        
        /// <remarks/>
        public event ShoppingCartItemProvider_GetByShoppingCartItemIdCompletedEventHandler ShoppingCartItemProvider_GetByShoppingCartItemIdCompleted;
        
        /// <remarks/>
        public event ShoppingCartItemProvider_InsertCompletedEventHandler ShoppingCartItemProvider_InsertCompleted;
        
        /// <remarks/>
        public event ShoppingCartItemProvider_BulkInsertCompletedEventHandler ShoppingCartItemProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event ShoppingCartItemProvider_UpdateCompletedEventHandler ShoppingCartItemProvider_UpdateCompleted;
        
        /// <remarks/>
        public event NullFkeyChildProvider_DeleteCompletedEventHandler NullFkeyChildProvider_DeleteCompleted;
        
        /// <remarks/>
        public event NullFkeyChildProvider_FindCompletedEventHandler NullFkeyChildProvider_FindCompleted;
        
        /// <remarks/>
        public event NullFkeyChildProvider_GetAllCompletedEventHandler NullFkeyChildProvider_GetAllCompleted;
        
        /// <remarks/>
        public event CustomerAddressProvider_DeleteCompletedEventHandler CustomerAddressProvider_DeleteCompleted;
        
        /// <remarks/>
        public event CustomerAddressProvider_FindCompletedEventHandler CustomerAddressProvider_FindCompleted;
        
        /// <remarks/>
        public event CustomerAddressProvider_GetAllCompletedEventHandler CustomerAddressProvider_GetAllCompleted;
        
        /// <remarks/>
        public event CustomerAddressProvider_GetPagedCompletedEventHandler CustomerAddressProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event CustomerAddressProvider_GetByAddressIdCompletedEventHandler CustomerAddressProvider_GetByAddressIdCompleted;
        
        /// <remarks/>
        public event CustomerAddressProvider_GetByAddressTypeIdCompletedEventHandler CustomerAddressProvider_GetByAddressTypeIdCompleted;
        
        /// <remarks/>
        public event CustomerAddressProvider_GetByCustomerIdCompletedEventHandler CustomerAddressProvider_GetByCustomerIdCompleted;
        
        /// <remarks/>
        public event CustomerAddressProvider_GetByRowguidCompletedEventHandler CustomerAddressProvider_GetByRowguidCompleted;
        
        /// <remarks/>
        public event CustomerAddressProvider_GetByCustomerIdAddressIdCompletedEventHandler CustomerAddressProvider_GetByCustomerIdAddressIdCompleted;
        
        /// <remarks/>
        public event CustomerAddressProvider_InsertCompletedEventHandler CustomerAddressProvider_InsertCompleted;
        
        /// <remarks/>
        public event CustomerAddressProvider_BulkInsertCompletedEventHandler CustomerAddressProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event CustomerAddressProvider_UpdateCompletedEventHandler CustomerAddressProvider_UpdateCompleted;
        
        /// <remarks/>
        public event ProductSubcategoryProvider_DeleteCompletedEventHandler ProductSubcategoryProvider_DeleteCompleted;
        
        /// <remarks/>
        public event ProductSubcategoryProvider_FindCompletedEventHandler ProductSubcategoryProvider_FindCompleted;
        
        /// <remarks/>
        public event ProductSubcategoryProvider_GetAllCompletedEventHandler ProductSubcategoryProvider_GetAllCompleted;
        
        /// <remarks/>
        public event ProductSubcategoryProvider_GetPagedCompletedEventHandler ProductSubcategoryProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event ProductSubcategoryProvider_GetByProductCategoryIdCompletedEventHandler ProductSubcategoryProvider_GetByProductCategoryIdCompleted;
        
        /// <remarks/>
        public event ProductSubcategoryProvider_GetByNameCompletedEventHandler ProductSubcategoryProvider_GetByNameCompleted;
        
        /// <remarks/>
        public event ProductSubcategoryProvider_GetByRowguidCompletedEventHandler ProductSubcategoryProvider_GetByRowguidCompleted;
        
        /// <remarks/>
        public event ProductSubcategoryProvider_GetByProductSubcategoryIdCompletedEventHandler ProductSubcategoryProvider_GetByProductSubcategoryIdCompleted;
        
        /// <remarks/>
        public event ProductSubcategoryProvider_InsertCompletedEventHandler ProductSubcategoryProvider_InsertCompleted;
        
        /// <remarks/>
        public event ProductSubcategoryProvider_BulkInsertCompletedEventHandler ProductSubcategoryProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event ProductSubcategoryProvider_UpdateCompletedEventHandler ProductSubcategoryProvider_UpdateCompleted;
        
        /// <remarks/>
        public event VendorContactProvider_DeleteCompletedEventHandler VendorContactProvider_DeleteCompleted;
        
        /// <remarks/>
        public event VendorContactProvider_FindCompletedEventHandler VendorContactProvider_FindCompleted;
        
        /// <remarks/>
        public event VendorContactProvider_GetAllCompletedEventHandler VendorContactProvider_GetAllCompleted;
        
        /// <remarks/>
        public event VendorContactProvider_GetPagedCompletedEventHandler VendorContactProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event VendorContactProvider_GetByVendorIdCompletedEventHandler VendorContactProvider_GetByVendorIdCompleted;
        
        /// <remarks/>
        public event VendorContactProvider_GetByContactIdCompletedEventHandler VendorContactProvider_GetByContactIdCompleted;
        
        /// <remarks/>
        public event VendorContactProvider_GetByContactTypeIdCompletedEventHandler VendorContactProvider_GetByContactTypeIdCompleted;
        
        /// <remarks/>
        public event VendorContactProvider_GetByVendorIdContactIdCompletedEventHandler VendorContactProvider_GetByVendorIdContactIdCompleted;
        
        /// <remarks/>
        public event VendorContactProvider_InsertCompletedEventHandler VendorContactProvider_InsertCompleted;
        
        /// <remarks/>
        public event VendorContactProvider_BulkInsertCompletedEventHandler VendorContactProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event VendorContactProvider_UpdateCompletedEventHandler VendorContactProvider_UpdateCompleted;
        
        /// <remarks/>
        public event ContactCreditCardProvider_DeleteCompletedEventHandler ContactCreditCardProvider_DeleteCompleted;
        
        /// <remarks/>
        public event ContactCreditCardProvider_FindCompletedEventHandler ContactCreditCardProvider_FindCompleted;
        
        /// <remarks/>
        public event ContactCreditCardProvider_GetAllCompletedEventHandler ContactCreditCardProvider_GetAllCompleted;
        
        /// <remarks/>
        public event ContactCreditCardProvider_GetPagedCompletedEventHandler ContactCreditCardProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event ContactCreditCardProvider_GetByContactIdCompletedEventHandler ContactCreditCardProvider_GetByContactIdCompleted;
        
        /// <remarks/>
        public event ContactCreditCardProvider_GetByCreditCardIdCompletedEventHandler ContactCreditCardProvider_GetByCreditCardIdCompleted;
        
        /// <remarks/>
        public event ContactCreditCardProvider_GetByContactIdCreditCardIdCompletedEventHandler ContactCreditCardProvider_GetByContactIdCreditCardIdCompleted;
        
        /// <remarks/>
        public event ContactCreditCardProvider_InsertCompletedEventHandler ContactCreditCardProvider_InsertCompleted;
        
        /// <remarks/>
        public event ContactCreditCardProvider_BulkInsertCompletedEventHandler ContactCreditCardProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event ContactCreditCardProvider_UpdateCompletedEventHandler ContactCreditCardProvider_UpdateCompleted;
        
        /// <remarks/>
        public event ProductCategoryProvider_DeleteCompletedEventHandler ProductCategoryProvider_DeleteCompleted;
        
        /// <remarks/>
        public event ProductCategoryProvider_FindCompletedEventHandler ProductCategoryProvider_FindCompleted;
        
        /// <remarks/>
        public event ProductCategoryProvider_GetAllCompletedEventHandler ProductCategoryProvider_GetAllCompleted;
        
        /// <remarks/>
        public event ProductCategoryProvider_GetPagedCompletedEventHandler ProductCategoryProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event ProductCategoryProvider_GetByNameCompletedEventHandler ProductCategoryProvider_GetByNameCompleted;
        
        /// <remarks/>
        public event ProductCategoryProvider_GetByRowguidCompletedEventHandler ProductCategoryProvider_GetByRowguidCompleted;
        
        /// <remarks/>
        public event ProductCategoryProvider_GetByProductCategoryIdCompletedEventHandler ProductCategoryProvider_GetByProductCategoryIdCompleted;
        
        /// <remarks/>
        public event ProductCategoryProvider_InsertCompletedEventHandler ProductCategoryProvider_InsertCompleted;
        
        /// <remarks/>
        public event ProductCategoryProvider_BulkInsertCompletedEventHandler ProductCategoryProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event ProductCategoryProvider_UpdateCompletedEventHandler ProductCategoryProvider_UpdateCompleted;
        
        /// <remarks/>
        public event CountryRegionCurrencyProvider_DeleteCompletedEventHandler CountryRegionCurrencyProvider_DeleteCompleted;
        
        /// <remarks/>
        public event CountryRegionCurrencyProvider_FindCompletedEventHandler CountryRegionCurrencyProvider_FindCompleted;
        
        /// <remarks/>
        public event CountryRegionCurrencyProvider_GetAllCompletedEventHandler CountryRegionCurrencyProvider_GetAllCompleted;
        
        /// <remarks/>
        public event CountryRegionCurrencyProvider_GetPagedCompletedEventHandler CountryRegionCurrencyProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event CountryRegionCurrencyProvider_GetByCountryRegionCodeCompletedEventHandler CountryRegionCurrencyProvider_GetByCountryRegionCodeCompleted;
        
        /// <remarks/>
        public event CountryRegionCurrencyProvider_GetByCurrencyCodeCompletedEventHandler CountryRegionCurrencyProvider_GetByCurrencyCodeCompleted;
        
        /// <remarks/>
        public event CountryRegionCurrencyProvider_GetByCountryRegionCodeCurrencyCodeCompletedEventHandler CountryRegionCurrencyProvider_GetByCountryRegionCodeCurrencyCodeCompleted;
        
        /// <remarks/>
        public event CountryRegionCurrencyProvider_InsertCompletedEventHandler CountryRegionCurrencyProvider_InsertCompleted;
        
        /// <remarks/>
        public event CountryRegionCurrencyProvider_BulkInsertCompletedEventHandler CountryRegionCurrencyProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event CountryRegionCurrencyProvider_UpdateCompletedEventHandler CountryRegionCurrencyProvider_UpdateCompleted;
        
        /// <remarks/>
        public event ProductModelProvider_GetByIllustrationIdFromProductModelIllustrationCompletedEventHandler ProductModelProvider_GetByIllustrationIdFromProductModelIllustrationCompleted;
        
        /// <remarks/>
        public event ProductModelProvider_GetByCultureIdFromProductModelProductDescriptionCultureCompletedEventHandler ProductModelProvider_GetByCultureIdFromProductModelProductDescriptionCultureCompleted;
        
        /// <remarks/>
        public event ProductModelProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureCompletedEventHandler ProductModelProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureCompleted;
        
        /// <remarks/>
        public event ProductModelProvider_DeleteCompletedEventHandler ProductModelProvider_DeleteCompleted;
        
        /// <remarks/>
        public event ProductModelProvider_FindCompletedEventHandler ProductModelProvider_FindCompleted;
        
        /// <remarks/>
        public event ProductModelProvider_GetAllCompletedEventHandler ProductModelProvider_GetAllCompleted;
        
        /// <remarks/>
        public event ProductModelProvider_GetPagedCompletedEventHandler ProductModelProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event ProductModelProvider_GetByNameCompletedEventHandler ProductModelProvider_GetByNameCompleted;
        
        /// <remarks/>
        public event ProductModelProvider_GetByRowguidCompletedEventHandler ProductModelProvider_GetByRowguidCompleted;
        
        /// <remarks/>
        public event ProductModelProvider_GetByProductModelIdCompletedEventHandler ProductModelProvider_GetByProductModelIdCompleted;
        
        /// <remarks/>
        public event ProductModelProvider_GetByCatalogDescriptionCompletedEventHandler ProductModelProvider_GetByCatalogDescriptionCompleted;
        
        /// <remarks/>
        public event ProductModelProvider_GetByInstructionsCompletedEventHandler ProductModelProvider_GetByInstructionsCompleted;
        
        /// <remarks/>
        public event ProductModelProvider_InsertCompletedEventHandler ProductModelProvider_InsertCompleted;
        
        /// <remarks/>
        public event ProductModelProvider_BulkInsertCompletedEventHandler ProductModelProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event ProductModelProvider_UpdateCompletedEventHandler ProductModelProvider_UpdateCompleted;
        
        /// <remarks/>
        public event ProductProvider_GetByDocumentIdFromProductDocumentCompletedEventHandler ProductProvider_GetByDocumentIdFromProductDocumentCompleted;
        
        /// <remarks/>
        public event ProductProvider_GetByLocationIdFromProductInventoryCompletedEventHandler ProductProvider_GetByLocationIdFromProductInventoryCompleted;
        
        /// <remarks/>
        public event ProductProvider_GetByProductPhotoIdFromProductProductPhotoCompletedEventHandler ProductProvider_GetByProductPhotoIdFromProductProductPhotoCompleted;
        
        /// <remarks/>
        public event ProductProvider_GetByVendorIdFromProductVendorCompletedEventHandler ProductProvider_GetByVendorIdFromProductVendorCompleted;
        
        /// <remarks/>
        public event ProductProvider_GetBySpecialOfferIdFromSpecialOfferProductCompletedEventHandler ProductProvider_GetBySpecialOfferIdFromSpecialOfferProductCompleted;
        
        /// <remarks/>
        public event ProductProvider_DeleteCompletedEventHandler ProductProvider_DeleteCompleted;
        
        /// <remarks/>
        public event ProductProvider_FindCompletedEventHandler ProductProvider_FindCompleted;
        
        /// <remarks/>
        public event ProductProvider_GetAllCompletedEventHandler ProductProvider_GetAllCompleted;
        
        /// <remarks/>
        public event ProductProvider_GetPagedCompletedEventHandler ProductProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event ProductProvider_GetByProductModelIdCompletedEventHandler ProductProvider_GetByProductModelIdCompleted;
        
        /// <remarks/>
        public event ProductProvider_GetByProductSubcategoryIdCompletedEventHandler ProductProvider_GetByProductSubcategoryIdCompleted;
        
        /// <remarks/>
        public event ProductProvider_GetBySizeUnitMeasureCodeCompletedEventHandler ProductProvider_GetBySizeUnitMeasureCodeCompleted;
        
        /// <remarks/>
        public event ProductProvider_GetByWeightUnitMeasureCodeCompletedEventHandler ProductProvider_GetByWeightUnitMeasureCodeCompleted;
        
        /// <remarks/>
        public event ProductProvider_GetByNameCompletedEventHandler ProductProvider_GetByNameCompleted;
        
        /// <remarks/>
        public event ProductProvider_GetByProductNumberCompletedEventHandler ProductProvider_GetByProductNumberCompleted;
        
        /// <remarks/>
        public event ProductProvider_GetByRowguidCompletedEventHandler ProductProvider_GetByRowguidCompleted;
        
        /// <remarks/>
        public event ProductProvider_GetByProductIdCompletedEventHandler ProductProvider_GetByProductIdCompleted;
        
        /// <remarks/>
        public event ProductProvider_InsertCompletedEventHandler ProductProvider_InsertCompleted;
        
        /// <remarks/>
        public event ProductProvider_BulkInsertCompletedEventHandler ProductProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event ProductProvider_UpdateCompletedEventHandler ProductProvider_UpdateCompleted;
        
        /// <remarks/>
        public event SpecialOfferProvider_GetByProductIdFromSpecialOfferProductCompletedEventHandler SpecialOfferProvider_GetByProductIdFromSpecialOfferProductCompleted;
        
        /// <remarks/>
        public event SpecialOfferProvider_DeleteCompletedEventHandler SpecialOfferProvider_DeleteCompleted;
        
        /// <remarks/>
        public event SpecialOfferProvider_FindCompletedEventHandler SpecialOfferProvider_FindCompleted;
        
        /// <remarks/>
        public event SpecialOfferProvider_GetAllCompletedEventHandler SpecialOfferProvider_GetAllCompleted;
        
        /// <remarks/>
        public event SpecialOfferProvider_GetPagedCompletedEventHandler SpecialOfferProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event SpecialOfferProvider_GetByRowguidCompletedEventHandler SpecialOfferProvider_GetByRowguidCompleted;
        
        /// <remarks/>
        public event SpecialOfferProvider_GetBySpecialOfferIdCompletedEventHandler SpecialOfferProvider_GetBySpecialOfferIdCompleted;
        
        /// <remarks/>
        public event SpecialOfferProvider_InsertCompletedEventHandler SpecialOfferProvider_InsertCompleted;
        
        /// <remarks/>
        public event SpecialOfferProvider_BulkInsertCompletedEventHandler SpecialOfferProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event SpecialOfferProvider_UpdateCompletedEventHandler SpecialOfferProvider_UpdateCompleted;
        
        /// <remarks/>
        public event SalesOrderHeaderSalesReasonProvider_DeleteCompletedEventHandler SalesOrderHeaderSalesReasonProvider_DeleteCompleted;
        
        /// <remarks/>
        public event SalesOrderHeaderSalesReasonProvider_FindCompletedEventHandler SalesOrderHeaderSalesReasonProvider_FindCompleted;
        
        /// <remarks/>
        public event SalesOrderHeaderSalesReasonProvider_GetAllCompletedEventHandler SalesOrderHeaderSalesReasonProvider_GetAllCompleted;
        
        /// <remarks/>
        public event SalesOrderHeaderSalesReasonProvider_GetPagedCompletedEventHandler SalesOrderHeaderSalesReasonProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdCompletedEventHandler SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdCompleted;
        
        /// <remarks/>
        public event SalesOrderHeaderSalesReasonProvider_GetBySalesReasonIdCompletedEventHandler SalesOrderHeaderSalesReasonProvider_GetBySalesReasonIdCompleted;
        
        /// <remarks/>
        public event SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdSalesReasonIdCompletedEventHandler SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdSalesReasonIdCompleted;
        
        /// <remarks/>
        public event SalesOrderHeaderSalesReasonProvider_InsertCompletedEventHandler SalesOrderHeaderSalesReasonProvider_InsertCompleted;
        
        /// <remarks/>
        public event SalesOrderHeaderSalesReasonProvider_BulkInsertCompletedEventHandler SalesOrderHeaderSalesReasonProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event SalesOrderHeaderSalesReasonProvider_UpdateCompletedEventHandler SalesOrderHeaderSalesReasonProvider_UpdateCompleted;
        
        /// <remarks/>
        public event StoreProvider_GetByContactIdFromStoreContactCompletedEventHandler StoreProvider_GetByContactIdFromStoreContactCompleted;
        
        /// <remarks/>
        public event StoreProvider_DeleteCompletedEventHandler StoreProvider_DeleteCompleted;
        
        /// <remarks/>
        public event StoreProvider_FindCompletedEventHandler StoreProvider_FindCompleted;
        
        /// <remarks/>
        public event StoreProvider_GetAllCompletedEventHandler StoreProvider_GetAllCompleted;
        
        /// <remarks/>
        public event StoreProvider_GetPagedCompletedEventHandler StoreProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event StoreProvider_GetByRowguidCompletedEventHandler StoreProvider_GetByRowguidCompleted;
        
        /// <remarks/>
        public event StoreProvider_GetBySalesPersonIdCompletedEventHandler StoreProvider_GetBySalesPersonIdCompleted;
        
        /// <remarks/>
        public event StoreProvider_GetByCustomerIdCompletedEventHandler StoreProvider_GetByCustomerIdCompleted;
        
        /// <remarks/>
        public event StoreProvider_GetByDemographicsCompletedEventHandler StoreProvider_GetByDemographicsCompleted;
        
        /// <remarks/>
        public event ProductListPriceHistoryProvider_DeleteCompletedEventHandler ProductListPriceHistoryProvider_DeleteCompleted;
        
        /// <remarks/>
        public event ProductListPriceHistoryProvider_FindCompletedEventHandler ProductListPriceHistoryProvider_FindCompleted;
        
        /// <remarks/>
        public event ProductListPriceHistoryProvider_GetAllCompletedEventHandler ProductListPriceHistoryProvider_GetAllCompleted;
        
        /// <remarks/>
        public event ProductListPriceHistoryProvider_GetPagedCompletedEventHandler ProductListPriceHistoryProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event ProductListPriceHistoryProvider_GetByProductIdCompletedEventHandler ProductListPriceHistoryProvider_GetByProductIdCompleted;
        
        /// <remarks/>
        public event ProductListPriceHistoryProvider_GetByProductIdStartDateCompletedEventHandler ProductListPriceHistoryProvider_GetByProductIdStartDateCompleted;
        
        /// <remarks/>
        public event ProductListPriceHistoryProvider_InsertCompletedEventHandler ProductListPriceHistoryProvider_InsertCompleted;
        
        /// <remarks/>
        public event ProductListPriceHistoryProvider_BulkInsertCompletedEventHandler ProductListPriceHistoryProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event ProductListPriceHistoryProvider_UpdateCompletedEventHandler ProductListPriceHistoryProvider_UpdateCompleted;
        
        /// <remarks/>
        public event ProductModelIllustrationProvider_DeleteCompletedEventHandler ProductModelIllustrationProvider_DeleteCompleted;
        
        /// <remarks/>
        public event ProductModelIllustrationProvider_FindCompletedEventHandler ProductModelIllustrationProvider_FindCompleted;
        
        /// <remarks/>
        public event ProductModelIllustrationProvider_GetAllCompletedEventHandler ProductModelIllustrationProvider_GetAllCompleted;
        
        /// <remarks/>
        public event ProductModelIllustrationProvider_GetPagedCompletedEventHandler ProductModelIllustrationProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event ProductModelIllustrationProvider_GetByIllustrationIdCompletedEventHandler ProductModelIllustrationProvider_GetByIllustrationIdCompleted;
        
        /// <remarks/>
        public event ProductModelIllustrationProvider_GetByProductModelIdCompletedEventHandler ProductModelIllustrationProvider_GetByProductModelIdCompleted;
        
        /// <remarks/>
        public event ProductModelIllustrationProvider_GetByProductModelIdIllustrationIdCompletedEventHandler ProductModelIllustrationProvider_GetByProductModelIdIllustrationIdCompleted;
        
        /// <remarks/>
        public event ProductModelIllustrationProvider_InsertCompletedEventHandler ProductModelIllustrationProvider_InsertCompleted;
        
        /// <remarks/>
        public event ProductModelIllustrationProvider_BulkInsertCompletedEventHandler ProductModelIllustrationProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event ProductModelIllustrationProvider_UpdateCompletedEventHandler ProductModelIllustrationProvider_UpdateCompleted;
        
        /// <remarks/>
        public event ContactProvider_GetByCreditCardIdFromContactCreditCardCompletedEventHandler ContactProvider_GetByCreditCardIdFromContactCreditCardCompleted;
        
        /// <remarks/>
        public event ContactProvider_GetByCustomerIdFromStoreContactCompletedEventHandler ContactProvider_GetByCustomerIdFromStoreContactCompleted;
        
        /// <remarks/>
        public event ContactProvider_GetByVendorIdFromVendorContactCompletedEventHandler ContactProvider_GetByVendorIdFromVendorContactCompleted;
        
        /// <remarks/>
        public event ContactProvider_DeleteCompletedEventHandler ContactProvider_DeleteCompleted;
        
        /// <remarks/>
        public event ContactProvider_FindCompletedEventHandler ContactProvider_FindCompleted;
        
        /// <remarks/>
        public event ContactProvider_GetAllCompletedEventHandler ContactProvider_GetAllCompleted;
        
        /// <remarks/>
        public event ContactProvider_GetPagedCompletedEventHandler ContactProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event ContactProvider_GetByRowguidCompletedEventHandler ContactProvider_GetByRowguidCompleted;
        
        /// <remarks/>
        public event ContactProvider_GetByEmailAddressCompletedEventHandler ContactProvider_GetByEmailAddressCompleted;
        
        /// <remarks/>
        public event ContactProvider_GetByContactIdCompletedEventHandler ContactProvider_GetByContactIdCompleted;
        
        /// <remarks/>
        public event ContactProvider_GetByAdditionalContactInfoCompletedEventHandler ContactProvider_GetByAdditionalContactInfoCompleted;
        
        /// <remarks/>
        public event ContactProvider_InsertCompletedEventHandler ContactProvider_InsertCompleted;
        
        /// <remarks/>
        public event ContactProvider_BulkInsertCompletedEventHandler ContactProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event ContactProvider_UpdateCompletedEventHandler ContactProvider_UpdateCompleted;
        
        /// <remarks/>
        public event ScrapReasonProvider_DeleteCompletedEventHandler ScrapReasonProvider_DeleteCompleted;
        
        /// <remarks/>
        public event ScrapReasonProvider_FindCompletedEventHandler ScrapReasonProvider_FindCompleted;
        
        /// <remarks/>
        public event ScrapReasonProvider_GetAllCompletedEventHandler ScrapReasonProvider_GetAllCompleted;
        
        /// <remarks/>
        public event ScrapReasonProvider_GetPagedCompletedEventHandler ScrapReasonProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event ScrapReasonProvider_GetByNameCompletedEventHandler ScrapReasonProvider_GetByNameCompleted;
        
        /// <remarks/>
        public event ScrapReasonProvider_GetByScrapReasonIdCompletedEventHandler ScrapReasonProvider_GetByScrapReasonIdCompleted;
        
        /// <remarks/>
        public event ScrapReasonProvider_InsertCompletedEventHandler ScrapReasonProvider_InsertCompleted;
        
        /// <remarks/>
        public event ScrapReasonProvider_BulkInsertCompletedEventHandler ScrapReasonProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event ScrapReasonProvider_UpdateCompletedEventHandler ScrapReasonProvider_UpdateCompleted;
        
        /// <remarks/>
        public event TransactionHistoryArchiveProvider_DeleteCompletedEventHandler TransactionHistoryArchiveProvider_DeleteCompleted;
        
        /// <remarks/>
        public event TransactionHistoryArchiveProvider_FindCompletedEventHandler TransactionHistoryArchiveProvider_FindCompleted;
        
        /// <remarks/>
        public event TransactionHistoryArchiveProvider_GetAllCompletedEventHandler TransactionHistoryArchiveProvider_GetAllCompleted;
        
        /// <remarks/>
        public event TransactionHistoryArchiveProvider_GetPagedCompletedEventHandler TransactionHistoryArchiveProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event TransactionHistoryArchiveProvider_GetByProductIdCompletedEventHandler TransactionHistoryArchiveProvider_GetByProductIdCompleted;
        
        /// <remarks/>
        public event TransactionHistoryArchiveProvider_GetByReferenceOrderIdReferenceOrderLineIdCompletedEventHandler TransactionHistoryArchiveProvider_GetByReferenceOrderIdReferenceOrderLineIdCompleted;
        
        /// <remarks/>
        public event TransactionHistoryArchiveProvider_GetByTransactionIdCompletedEventHandler TransactionHistoryArchiveProvider_GetByTransactionIdCompleted;
        
        /// <remarks/>
        public event TransactionHistoryArchiveProvider_InsertCompletedEventHandler TransactionHistoryArchiveProvider_InsertCompleted;
        
        /// <remarks/>
        public event TransactionHistoryArchiveProvider_BulkInsertCompletedEventHandler TransactionHistoryArchiveProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event TransactionHistoryArchiveProvider_UpdateCompletedEventHandler TransactionHistoryArchiveProvider_UpdateCompleted;
        
        /// <remarks/>
        public event ProductVendorProvider_DeleteCompletedEventHandler ProductVendorProvider_DeleteCompleted;
        
        /// <remarks/>
        public event ProductVendorProvider_FindCompletedEventHandler ProductVendorProvider_FindCompleted;
        
        /// <remarks/>
        public event ProductVendorProvider_GetAllCompletedEventHandler ProductVendorProvider_GetAllCompleted;
        
        /// <remarks/>
        public event ProductVendorProvider_GetPagedCompletedEventHandler ProductVendorProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event ProductVendorProvider_GetByProductIdCompletedEventHandler ProductVendorProvider_GetByProductIdCompleted;
        
        /// <remarks/>
        public event ProductVendorProvider_GetByUnitMeasureCodeCompletedEventHandler ProductVendorProvider_GetByUnitMeasureCodeCompleted;
        
        /// <remarks/>
        public event ProductVendorProvider_GetByVendorIdCompletedEventHandler ProductVendorProvider_GetByVendorIdCompleted;
        
        /// <remarks/>
        public event ProductVendorProvider_GetByProductIdVendorIdCompletedEventHandler ProductVendorProvider_GetByProductIdVendorIdCompleted;
        
        /// <remarks/>
        public event ProductVendorProvider_InsertCompletedEventHandler ProductVendorProvider_InsertCompleted;
        
        /// <remarks/>
        public event ProductVendorProvider_BulkInsertCompletedEventHandler ProductVendorProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event ProductVendorProvider_UpdateCompletedEventHandler ProductVendorProvider_UpdateCompleted;
        
        /// <remarks/>
        public event PurchaseOrderHeaderProvider_DeleteCompletedEventHandler PurchaseOrderHeaderProvider_DeleteCompleted;
        
        /// <remarks/>
        public event PurchaseOrderHeaderProvider_FindCompletedEventHandler PurchaseOrderHeaderProvider_FindCompleted;
        
        /// <remarks/>
        public event PurchaseOrderHeaderProvider_GetAllCompletedEventHandler PurchaseOrderHeaderProvider_GetAllCompleted;
        
        /// <remarks/>
        public event PurchaseOrderHeaderProvider_GetPagedCompletedEventHandler PurchaseOrderHeaderProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event PurchaseOrderHeaderProvider_GetByShipMethodIdCompletedEventHandler PurchaseOrderHeaderProvider_GetByShipMethodIdCompleted;
        
        /// <remarks/>
        public event PurchaseOrderHeaderProvider_GetByEmployeeIdCompletedEventHandler PurchaseOrderHeaderProvider_GetByEmployeeIdCompleted;
        
        /// <remarks/>
        public event PurchaseOrderHeaderProvider_GetByVendorIdCompletedEventHandler PurchaseOrderHeaderProvider_GetByVendorIdCompleted;
        
        /// <remarks/>
        public event PurchaseOrderHeaderProvider_GetByPurchaseOrderIdCompletedEventHandler PurchaseOrderHeaderProvider_GetByPurchaseOrderIdCompleted;
        
        /// <remarks/>
        public event PurchaseOrderHeaderProvider_InsertCompletedEventHandler PurchaseOrderHeaderProvider_InsertCompleted;
        
        /// <remarks/>
        public event PurchaseOrderHeaderProvider_BulkInsertCompletedEventHandler PurchaseOrderHeaderProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event PurchaseOrderHeaderProvider_UpdateCompletedEventHandler PurchaseOrderHeaderProvider_UpdateCompleted;
        
        /// <remarks/>
        public event AddressTypeProvider_DeleteCompletedEventHandler AddressTypeProvider_DeleteCompleted;
        
        /// <remarks/>
        public event AddressTypeProvider_FindCompletedEventHandler AddressTypeProvider_FindCompleted;
        
        /// <remarks/>
        public event AddressTypeProvider_GetAllCompletedEventHandler AddressTypeProvider_GetAllCompleted;
        
        /// <remarks/>
        public event AddressTypeProvider_GetPagedCompletedEventHandler AddressTypeProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event AddressTypeProvider_GetByNameCompletedEventHandler AddressTypeProvider_GetByNameCompleted;
        
        /// <remarks/>
        public event AddressTypeProvider_GetByRowguidCompletedEventHandler AddressTypeProvider_GetByRowguidCompleted;
        
        /// <remarks/>
        public event AddressTypeProvider_GetByAddressTypeIdCompletedEventHandler AddressTypeProvider_GetByAddressTypeIdCompleted;
        
        /// <remarks/>
        public event AddressTypeProvider_InsertCompletedEventHandler AddressTypeProvider_InsertCompleted;
        
        /// <remarks/>
        public event AddressTypeProvider_BulkInsertCompletedEventHandler AddressTypeProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event AddressTypeProvider_UpdateCompletedEventHandler AddressTypeProvider_UpdateCompleted;
        
        /// <remarks/>
        public event WorkOrderRoutingProvider_DeleteCompletedEventHandler WorkOrderRoutingProvider_DeleteCompleted;
        
        /// <remarks/>
        public event WorkOrderRoutingProvider_FindCompletedEventHandler WorkOrderRoutingProvider_FindCompleted;
        
        /// <remarks/>
        public event WorkOrderRoutingProvider_GetAllCompletedEventHandler WorkOrderRoutingProvider_GetAllCompleted;
        
        /// <remarks/>
        public event WorkOrderRoutingProvider_GetPagedCompletedEventHandler WorkOrderRoutingProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event WorkOrderRoutingProvider_GetByLocationIdCompletedEventHandler WorkOrderRoutingProvider_GetByLocationIdCompleted;
        
        /// <remarks/>
        public event WorkOrderRoutingProvider_GetByWorkOrderIdCompletedEventHandler WorkOrderRoutingProvider_GetByWorkOrderIdCompleted;
        
        /// <remarks/>
        public event WorkOrderRoutingProvider_GetByProductIdCompletedEventHandler WorkOrderRoutingProvider_GetByProductIdCompleted;
        
        /// <remarks/>
        public event WorkOrderRoutingProvider_GetByWorkOrderIdProductIdOperationSequenceCompletedEventHandler WorkOrderRoutingProvider_GetByWorkOrderIdProductIdOperationSequenceCompleted;
        
        /// <remarks/>
        public event WorkOrderRoutingProvider_InsertCompletedEventHandler WorkOrderRoutingProvider_InsertCompleted;
        
        /// <remarks/>
        public event WorkOrderRoutingProvider_BulkInsertCompletedEventHandler WorkOrderRoutingProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event WorkOrderRoutingProvider_UpdateCompletedEventHandler WorkOrderRoutingProvider_UpdateCompleted;
        
        /// <remarks/>
        public event VendorProvider_GetByProductIdFromProductVendorCompletedEventHandler VendorProvider_GetByProductIdFromProductVendorCompleted;
        
        /// <remarks/>
        public event VendorProvider_GetByAddressIdFromVendorAddressCompletedEventHandler VendorProvider_GetByAddressIdFromVendorAddressCompleted;
        
        /// <remarks/>
        public event VendorProvider_GetByContactIdFromVendorContactCompletedEventHandler VendorProvider_GetByContactIdFromVendorContactCompleted;
        
        /// <remarks/>
        public event VendorProvider_DeleteCompletedEventHandler VendorProvider_DeleteCompleted;
        
        /// <remarks/>
        public event VendorProvider_FindCompletedEventHandler VendorProvider_FindCompleted;
        
        /// <remarks/>
        public event VendorProvider_GetAllCompletedEventHandler VendorProvider_GetAllCompleted;
        
        /// <remarks/>
        public event VendorProvider_GetPagedCompletedEventHandler VendorProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event VendorProvider_GetByAccountNumberCompletedEventHandler VendorProvider_GetByAccountNumberCompleted;
        
        /// <remarks/>
        public event VendorProvider_GetByVendorIdCompletedEventHandler VendorProvider_GetByVendorIdCompleted;
        
        /// <remarks/>
        public event VendorProvider_InsertCompletedEventHandler VendorProvider_InsertCompleted;
        
        /// <remarks/>
        public event VendorProvider_BulkInsertCompletedEventHandler VendorProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event VendorProvider_UpdateCompletedEventHandler VendorProvider_UpdateCompleted;
        
        /// <remarks/>
        public event VendorAddressProvider_DeleteCompletedEventHandler VendorAddressProvider_DeleteCompleted;
        
        /// <remarks/>
        public event VendorAddressProvider_FindCompletedEventHandler VendorAddressProvider_FindCompleted;
        
        /// <remarks/>
        public event VendorAddressProvider_GetAllCompletedEventHandler VendorAddressProvider_GetAllCompleted;
        
        /// <remarks/>
        public event VendorAddressProvider_GetPagedCompletedEventHandler VendorAddressProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event VendorAddressProvider_GetByAddressTypeIdCompletedEventHandler VendorAddressProvider_GetByAddressTypeIdCompleted;
        
        /// <remarks/>
        public event VendorAddressProvider_GetByVendorIdCompletedEventHandler VendorAddressProvider_GetByVendorIdCompleted;
        
        /// <remarks/>
        public event VendorAddressProvider_GetByAddressIdCompletedEventHandler VendorAddressProvider_GetByAddressIdCompleted;
        
        /// <remarks/>
        public event VendorAddressProvider_GetByVendorIdAddressIdCompletedEventHandler VendorAddressProvider_GetByVendorIdAddressIdCompleted;
        
        /// <remarks/>
        public event VendorAddressProvider_InsertCompletedEventHandler VendorAddressProvider_InsertCompleted;
        
        /// <remarks/>
        public event VendorAddressProvider_BulkInsertCompletedEventHandler VendorAddressProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event VendorAddressProvider_UpdateCompletedEventHandler VendorAddressProvider_UpdateCompleted;
        
        /// <remarks/>
        public event PurchaseOrderDetailProvider_DeleteCompletedEventHandler PurchaseOrderDetailProvider_DeleteCompleted;
        
        /// <remarks/>
        public event PurchaseOrderDetailProvider_FindCompletedEventHandler PurchaseOrderDetailProvider_FindCompleted;
        
        /// <remarks/>
        public event PurchaseOrderDetailProvider_GetAllCompletedEventHandler PurchaseOrderDetailProvider_GetAllCompleted;
        
        /// <remarks/>
        public event PurchaseOrderDetailProvider_GetPagedCompletedEventHandler PurchaseOrderDetailProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event PurchaseOrderDetailProvider_GetByPurchaseOrderIdCompletedEventHandler PurchaseOrderDetailProvider_GetByPurchaseOrderIdCompleted;
        
        /// <remarks/>
        public event PurchaseOrderDetailProvider_GetByProductIdCompletedEventHandler PurchaseOrderDetailProvider_GetByProductIdCompleted;
        
        /// <remarks/>
        public event PurchaseOrderDetailProvider_GetByPurchaseOrderIdPurchaseOrderDetailIdCompletedEventHandler PurchaseOrderDetailProvider_GetByPurchaseOrderIdPurchaseOrderDetailIdCompleted;
        
        /// <remarks/>
        public event PurchaseOrderDetailProvider_InsertCompletedEventHandler PurchaseOrderDetailProvider_InsertCompleted;
        
        /// <remarks/>
        public event PurchaseOrderDetailProvider_BulkInsertCompletedEventHandler PurchaseOrderDetailProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event PurchaseOrderDetailProvider_UpdateCompletedEventHandler PurchaseOrderDetailProvider_UpdateCompleted;
        
        /// <remarks/>
        public event LocationProvider_DeleteCompletedEventHandler LocationProvider_DeleteCompleted;
        
        /// <remarks/>
        public event LocationProvider_FindCompletedEventHandler LocationProvider_FindCompleted;
        
        /// <remarks/>
        public event LocationProvider_GetAllCompletedEventHandler LocationProvider_GetAllCompleted;
        
        /// <remarks/>
        public event LocationProvider_GetPagedCompletedEventHandler LocationProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event LocationProvider_GetByNameCompletedEventHandler LocationProvider_GetByNameCompleted;
        
        /// <remarks/>
        public event LocationProvider_GetByLocationIdCompletedEventHandler LocationProvider_GetByLocationIdCompleted;
        
        /// <remarks/>
        public event LocationProvider_InsertCompletedEventHandler LocationProvider_InsertCompleted;
        
        /// <remarks/>
        public event LocationProvider_BulkInsertCompletedEventHandler LocationProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event LocationProvider_UpdateCompletedEventHandler LocationProvider_UpdateCompleted;
        
        /// <remarks/>
        public event CurrencyProvider_GetByCountryRegionCodeFromCountryRegionCurrencyCompletedEventHandler CurrencyProvider_GetByCountryRegionCodeFromCountryRegionCurrencyCompleted;
        
        /// <remarks/>
        public event CurrencyProvider_DeleteCompletedEventHandler CurrencyProvider_DeleteCompleted;
        
        /// <remarks/>
        public event CurrencyProvider_FindCompletedEventHandler CurrencyProvider_FindCompleted;
        
        /// <remarks/>
        public event CurrencyProvider_GetAllCompletedEventHandler CurrencyProvider_GetAllCompleted;
        
        /// <remarks/>
        public event CurrencyProvider_GetPagedCompletedEventHandler CurrencyProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event CurrencyProvider_GetByNameCompletedEventHandler CurrencyProvider_GetByNameCompleted;
        
        /// <remarks/>
        public event CurrencyProvider_GetByCurrencyCodeCompletedEventHandler CurrencyProvider_GetByCurrencyCodeCompleted;
        
        /// <remarks/>
        public event CurrencyProvider_InsertCompletedEventHandler CurrencyProvider_InsertCompleted;
        
        /// <remarks/>
        public event CurrencyProvider_BulkInsertCompletedEventHandler CurrencyProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event CurrencyProvider_UpdateCompletedEventHandler CurrencyProvider_UpdateCompleted;
        
        /// <remarks/>
        public event CreditCardProvider_GetByContactIdFromContactCreditCardCompletedEventHandler CreditCardProvider_GetByContactIdFromContactCreditCardCompleted;
        
        /// <remarks/>
        public event CreditCardProvider_DeleteCompletedEventHandler CreditCardProvider_DeleteCompleted;
        
        /// <remarks/>
        public event CreditCardProvider_FindCompletedEventHandler CreditCardProvider_FindCompleted;
        
        /// <remarks/>
        public event CreditCardProvider_GetAllCompletedEventHandler CreditCardProvider_GetAllCompleted;
        
        /// <remarks/>
        public event CreditCardProvider_GetPagedCompletedEventHandler CreditCardProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event CreditCardProvider_GetByCardNumberCompletedEventHandler CreditCardProvider_GetByCardNumberCompleted;
        
        /// <remarks/>
        public event CreditCardProvider_GetByCreditCardIdCompletedEventHandler CreditCardProvider_GetByCreditCardIdCompleted;
        
        /// <remarks/>
        public event CreditCardProvider_InsertCompletedEventHandler CreditCardProvider_InsertCompleted;
        
        /// <remarks/>
        public event CreditCardProvider_BulkInsertCompletedEventHandler CreditCardProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event CreditCardProvider_UpdateCompletedEventHandler CreditCardProvider_UpdateCompleted;
        
        /// <remarks/>
        public event ProductCostHistoryProvider_DeleteCompletedEventHandler ProductCostHistoryProvider_DeleteCompleted;
        
        /// <remarks/>
        public event ProductCostHistoryProvider_FindCompletedEventHandler ProductCostHistoryProvider_FindCompleted;
        
        /// <remarks/>
        public event ProductCostHistoryProvider_GetAllCompletedEventHandler ProductCostHistoryProvider_GetAllCompleted;
        
        /// <remarks/>
        public event ProductCostHistoryProvider_GetPagedCompletedEventHandler ProductCostHistoryProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event ProductCostHistoryProvider_GetByProductIdCompletedEventHandler ProductCostHistoryProvider_GetByProductIdCompleted;
        
        /// <remarks/>
        public event ProductCostHistoryProvider_GetByProductIdStartDateCompletedEventHandler ProductCostHistoryProvider_GetByProductIdStartDateCompleted;
        
        /// <remarks/>
        public event ProductCostHistoryProvider_InsertCompletedEventHandler ProductCostHistoryProvider_InsertCompleted;
        
        /// <remarks/>
        public event ProductCostHistoryProvider_BulkInsertCompletedEventHandler ProductCostHistoryProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event ProductCostHistoryProvider_UpdateCompletedEventHandler ProductCostHistoryProvider_UpdateCompleted;
        
        /// <remarks/>
        public event TimestampPkProvider_DeleteCompletedEventHandler TimestampPkProvider_DeleteCompleted;
        
        /// <remarks/>
        public event TimestampPkProvider_FindCompletedEventHandler TimestampPkProvider_FindCompleted;
        
        /// <remarks/>
        public event TimestampPkProvider_GetAllCompletedEventHandler TimestampPkProvider_GetAllCompleted;
        
        /// <remarks/>
        public event TimestampPkProvider_GetPagedCompletedEventHandler TimestampPkProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event TimestampPkProvider_GetByTimestampPkCompletedEventHandler TimestampPkProvider_GetByTimestampPkCompleted;
        
        /// <remarks/>
        public event TimestampPkProvider_InsertCompletedEventHandler TimestampPkProvider_InsertCompleted;
        
        /// <remarks/>
        public event TimestampPkProvider_BulkInsertCompletedEventHandler TimestampPkProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event TimestampPkProvider_UpdateCompletedEventHandler TimestampPkProvider_UpdateCompleted;
        
        /// <remarks/>
        public event ProductInventoryProvider_DeleteCompletedEventHandler ProductInventoryProvider_DeleteCompleted;
        
        /// <remarks/>
        public event ProductInventoryProvider_FindCompletedEventHandler ProductInventoryProvider_FindCompleted;
        
        /// <remarks/>
        public event ProductInventoryProvider_GetAllCompletedEventHandler ProductInventoryProvider_GetAllCompleted;
        
        /// <remarks/>
        public event ProductInventoryProvider_GetPagedCompletedEventHandler ProductInventoryProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event ProductInventoryProvider_GetByLocationIdCompletedEventHandler ProductInventoryProvider_GetByLocationIdCompleted;
        
        /// <remarks/>
        public event ProductInventoryProvider_GetByProductIdCompletedEventHandler ProductInventoryProvider_GetByProductIdCompleted;
        
        /// <remarks/>
        public event ProductInventoryProvider_GetByProductIdLocationIdCompletedEventHandler ProductInventoryProvider_GetByProductIdLocationIdCompleted;
        
        /// <remarks/>
        public event ProductInventoryProvider_InsertCompletedEventHandler ProductInventoryProvider_InsertCompleted;
        
        /// <remarks/>
        public event ProductInventoryProvider_BulkInsertCompletedEventHandler ProductInventoryProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event ProductInventoryProvider_UpdateCompletedEventHandler ProductInventoryProvider_UpdateCompleted;
        
        /// <remarks/>
        public event CurrencyRateProvider_DeleteCompletedEventHandler CurrencyRateProvider_DeleteCompleted;
        
        /// <remarks/>
        public event CurrencyRateProvider_FindCompletedEventHandler CurrencyRateProvider_FindCompleted;
        
        /// <remarks/>
        public event CurrencyRateProvider_GetAllCompletedEventHandler CurrencyRateProvider_GetAllCompleted;
        
        /// <remarks/>
        public event CurrencyRateProvider_GetPagedCompletedEventHandler CurrencyRateProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event CurrencyRateProvider_GetByFromCurrencyCodeCompletedEventHandler CurrencyRateProvider_GetByFromCurrencyCodeCompleted;
        
        /// <remarks/>
        public event CurrencyRateProvider_GetByToCurrencyCodeCompletedEventHandler CurrencyRateProvider_GetByToCurrencyCodeCompleted;
        
        /// <remarks/>
        public event CurrencyRateProvider_GetByCurrencyRateDateFromCurrencyCodeToCurrencyCodeCompletedEventHandler CurrencyRateProvider_GetByCurrencyRateDateFromCurrencyCodeToCurrencyCodeCompleted;
        
        /// <remarks/>
        public event CurrencyRateProvider_GetByCurrencyRateIdCompletedEventHandler CurrencyRateProvider_GetByCurrencyRateIdCompleted;
        
        /// <remarks/>
        public event CurrencyRateProvider_InsertCompletedEventHandler CurrencyRateProvider_InsertCompleted;
        
        /// <remarks/>
        public event CurrencyRateProvider_BulkInsertCompletedEventHandler CurrencyRateProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event CurrencyRateProvider_UpdateCompletedEventHandler CurrencyRateProvider_UpdateCompleted;
        
        /// <remarks/>
        public event SalesTerritoryProvider_DeleteCompletedEventHandler SalesTerritoryProvider_DeleteCompleted;
        
        /// <remarks/>
        public event SalesTerritoryProvider_FindCompletedEventHandler SalesTerritoryProvider_FindCompleted;
        
        /// <remarks/>
        public event SalesTerritoryProvider_GetAllCompletedEventHandler SalesTerritoryProvider_GetAllCompleted;
        
        /// <remarks/>
        public event SalesTerritoryProvider_GetPagedCompletedEventHandler SalesTerritoryProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event SalesTerritoryProvider_GetByNameCompletedEventHandler SalesTerritoryProvider_GetByNameCompleted;
        
        /// <remarks/>
        public event SalesTerritoryProvider_GetByRowguidCompletedEventHandler SalesTerritoryProvider_GetByRowguidCompleted;
        
        /// <remarks/>
        public event SalesTerritoryProvider_GetByTerritoryIdCompletedEventHandler SalesTerritoryProvider_GetByTerritoryIdCompleted;
        
        /// <remarks/>
        public event SalesTerritoryProvider_InsertCompletedEventHandler SalesTerritoryProvider_InsertCompleted;
        
        /// <remarks/>
        public event SalesTerritoryProvider_BulkInsertCompletedEventHandler SalesTerritoryProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event SalesTerritoryProvider_UpdateCompletedEventHandler SalesTerritoryProvider_UpdateCompleted;
        
        /// <remarks/>
        public event TransactionHistoryProvider_DeleteCompletedEventHandler TransactionHistoryProvider_DeleteCompleted;
        
        /// <remarks/>
        public event TransactionHistoryProvider_FindCompletedEventHandler TransactionHistoryProvider_FindCompleted;
        
        /// <remarks/>
        public event TransactionHistoryProvider_GetAllCompletedEventHandler TransactionHistoryProvider_GetAllCompleted;
        
        /// <remarks/>
        public event TransactionHistoryProvider_GetPagedCompletedEventHandler TransactionHistoryProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event TransactionHistoryProvider_GetByProductIdCompletedEventHandler TransactionHistoryProvider_GetByProductIdCompleted;
        
        /// <remarks/>
        public event TransactionHistoryProvider_GetByReferenceOrderIdReferenceOrderLineIdCompletedEventHandler TransactionHistoryProvider_GetByReferenceOrderIdReferenceOrderLineIdCompleted;
        
        /// <remarks/>
        public event TransactionHistoryProvider_GetByTransactionIdCompletedEventHandler TransactionHistoryProvider_GetByTransactionIdCompleted;
        
        /// <remarks/>
        public event TransactionHistoryProvider_InsertCompletedEventHandler TransactionHistoryProvider_InsertCompleted;
        
        /// <remarks/>
        public event TransactionHistoryProvider_BulkInsertCompletedEventHandler TransactionHistoryProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event TransactionHistoryProvider_UpdateCompletedEventHandler TransactionHistoryProvider_UpdateCompleted;
        
        /// <remarks/>
        public event IllustrationProvider_GetByProductModelIdFromProductModelIllustrationCompletedEventHandler IllustrationProvider_GetByProductModelIdFromProductModelIllustrationCompleted;
        
        /// <remarks/>
        public event IllustrationProvider_DeleteCompletedEventHandler IllustrationProvider_DeleteCompleted;
        
        /// <remarks/>
        public event IllustrationProvider_FindCompletedEventHandler IllustrationProvider_FindCompleted;
        
        /// <remarks/>
        public event IllustrationProvider_GetAllCompletedEventHandler IllustrationProvider_GetAllCompleted;
        
        /// <remarks/>
        public event IllustrationProvider_GetPagedCompletedEventHandler IllustrationProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event IllustrationProvider_GetByIllustrationIdCompletedEventHandler IllustrationProvider_GetByIllustrationIdCompleted;
        
        /// <remarks/>
        public event IllustrationProvider_InsertCompletedEventHandler IllustrationProvider_InsertCompleted;
        
        /// <remarks/>
        public event IllustrationProvider_BulkInsertCompletedEventHandler IllustrationProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event IllustrationProvider_UpdateCompletedEventHandler IllustrationProvider_UpdateCompleted;
        
        /// <remarks/>
        public event ShipMethodProvider_DeleteCompletedEventHandler ShipMethodProvider_DeleteCompleted;
        
        /// <remarks/>
        public event ShipMethodProvider_FindCompletedEventHandler ShipMethodProvider_FindCompleted;
        
        /// <remarks/>
        public event ShipMethodProvider_GetAllCompletedEventHandler ShipMethodProvider_GetAllCompleted;
        
        /// <remarks/>
        public event ShipMethodProvider_GetPagedCompletedEventHandler ShipMethodProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event ShipMethodProvider_GetByNameCompletedEventHandler ShipMethodProvider_GetByNameCompleted;
        
        /// <remarks/>
        public event ShipMethodProvider_GetByRowguidCompletedEventHandler ShipMethodProvider_GetByRowguidCompleted;
        
        /// <remarks/>
        public event ShipMethodProvider_GetByShipMethodIdCompletedEventHandler ShipMethodProvider_GetByShipMethodIdCompleted;
        
        /// <remarks/>
        public event ShipMethodProvider_InsertCompletedEventHandler ShipMethodProvider_InsertCompleted;
        
        /// <remarks/>
        public event ShipMethodProvider_BulkInsertCompletedEventHandler ShipMethodProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event ShipMethodProvider_UpdateCompletedEventHandler ShipMethodProvider_UpdateCompleted;
        
        /// <remarks/>
        public event CustomerProvider_GetByAddressIdFromCustomerAddressCompletedEventHandler CustomerProvider_GetByAddressIdFromCustomerAddressCompleted;
        
        /// <remarks/>
        public event CustomerProvider_DeleteCompletedEventHandler CustomerProvider_DeleteCompleted;
        
        /// <remarks/>
        public event CustomerProvider_FindCompletedEventHandler CustomerProvider_FindCompleted;
        
        /// <remarks/>
        public event CustomerProvider_GetAllCompletedEventHandler CustomerProvider_GetAllCompleted;
        
        /// <remarks/>
        public event CustomerProvider_GetPagedCompletedEventHandler CustomerProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event CustomerProvider_GetByAccountNumberCompletedEventHandler CustomerProvider_GetByAccountNumberCompleted;
        
        /// <remarks/>
        public event CustomerProvider_GetByRowguidCompletedEventHandler CustomerProvider_GetByRowguidCompleted;
        
        /// <remarks/>
        public event CustomerProvider_GetByTerritoryIdCompletedEventHandler CustomerProvider_GetByTerritoryIdCompleted;
        
        /// <remarks/>
        public event CustomerProvider_GetByCustomerIdCompletedEventHandler CustomerProvider_GetByCustomerIdCompleted;
        
        /// <remarks/>
        public event CustomerProvider_InsertCompletedEventHandler CustomerProvider_InsertCompleted;
        
        /// <remarks/>
        public event CustomerProvider_BulkInsertCompletedEventHandler CustomerProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event CustomerProvider_UpdateCompletedEventHandler CustomerProvider_UpdateCompleted;
        
        /// <remarks/>
        public event ProductReviewProvider_DeleteCompletedEventHandler ProductReviewProvider_DeleteCompleted;
        
        /// <remarks/>
        public event ProductReviewProvider_FindCompletedEventHandler ProductReviewProvider_FindCompleted;
        
        /// <remarks/>
        public event ProductReviewProvider_GetAllCompletedEventHandler ProductReviewProvider_GetAllCompleted;
        
        /// <remarks/>
        public event ProductReviewProvider_GetPagedCompletedEventHandler ProductReviewProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event ProductReviewProvider_GetByProductIdCompletedEventHandler ProductReviewProvider_GetByProductIdCompleted;
        
        /// <remarks/>
        public event ProductReviewProvider_GetByProductIdReviewerNameCompletedEventHandler ProductReviewProvider_GetByProductIdReviewerNameCompleted;
        
        /// <remarks/>
        public event ProductReviewProvider_GetByProductReviewIdCompletedEventHandler ProductReviewProvider_GetByProductReviewIdCompleted;
        
        /// <remarks/>
        public event ProductReviewProvider_InsertCompletedEventHandler ProductReviewProvider_InsertCompleted;
        
        /// <remarks/>
        public event ProductReviewProvider_BulkInsertCompletedEventHandler ProductReviewProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event ProductReviewProvider_UpdateCompletedEventHandler ProductReviewProvider_UpdateCompleted;
        
        /// <remarks/>
        public event CountryRegionProvider_DeleteCompletedEventHandler CountryRegionProvider_DeleteCompleted;
        
        /// <remarks/>
        public event CountryRegionProvider_FindCompletedEventHandler CountryRegionProvider_FindCompleted;
        
        /// <remarks/>
        public event CountryRegionProvider_GetAllCompletedEventHandler CountryRegionProvider_GetAllCompleted;
        
        /// <remarks/>
        public event CountryRegionProvider_GetPagedCompletedEventHandler CountryRegionProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event CountryRegionProvider_GetByNameCompletedEventHandler CountryRegionProvider_GetByNameCompleted;
        
        /// <remarks/>
        public event CountryRegionProvider_GetByCountryRegionCodeCompletedEventHandler CountryRegionProvider_GetByCountryRegionCodeCompleted;
        
        /// <remarks/>
        public event CountryRegionProvider_InsertCompletedEventHandler CountryRegionProvider_InsertCompleted;
        
        /// <remarks/>
        public event CountryRegionProvider_BulkInsertCompletedEventHandler CountryRegionProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event CountryRegionProvider_UpdateCompletedEventHandler CountryRegionProvider_UpdateCompleted;
        
        /// <remarks/>
        public event AddressProvider_GetByCustomerIdFromCustomerAddressCompletedEventHandler AddressProvider_GetByCustomerIdFromCustomerAddressCompleted;
        
        /// <remarks/>
        public event AddressProvider_GetByEmployeeIdFromEmployeeAddressCompletedEventHandler AddressProvider_GetByEmployeeIdFromEmployeeAddressCompleted;
        
        /// <remarks/>
        public event AddressProvider_GetByVendorIdFromVendorAddressCompletedEventHandler AddressProvider_GetByVendorIdFromVendorAddressCompleted;
        
        /// <remarks/>
        public event AddressProvider_DeleteCompletedEventHandler AddressProvider_DeleteCompleted;
        
        /// <remarks/>
        public event AddressProvider_FindCompletedEventHandler AddressProvider_FindCompleted;
        
        /// <remarks/>
        public event AddressProvider_GetAllCompletedEventHandler AddressProvider_GetAllCompleted;
        
        /// <remarks/>
        public event AddressProvider_GetPagedCompletedEventHandler AddressProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event AddressProvider_GetByRowguidCompletedEventHandler AddressProvider_GetByRowguidCompleted;
        
        /// <remarks/>
        public event AddressProvider_GetByAddressLine1AddressLine2CityStateProvinceIdPostalCodeCompletedEventHandler AddressProvider_GetByAddressLine1AddressLine2CityStateProvinceIdPostalCodeCompleted;
        
        /// <remarks/>
        public event AddressProvider_GetByStateProvinceIdCompletedEventHandler AddressProvider_GetByStateProvinceIdCompleted;
        
        /// <remarks/>
        public event AddressProvider_GetByAddressIdCompletedEventHandler AddressProvider_GetByAddressIdCompleted;
        
        /// <remarks/>
        public event AddressProvider_InsertCompletedEventHandler AddressProvider_InsertCompleted;
        
        /// <remarks/>
        public event AddressProvider_BulkInsertCompletedEventHandler AddressProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event AddressProvider_UpdateCompletedEventHandler AddressProvider_UpdateCompleted;
        
        /// <remarks/>
        public event ShiftProvider_DeleteCompletedEventHandler ShiftProvider_DeleteCompleted;
        
        /// <remarks/>
        public event ShiftProvider_FindCompletedEventHandler ShiftProvider_FindCompleted;
        
        /// <remarks/>
        public event ShiftProvider_GetAllCompletedEventHandler ShiftProvider_GetAllCompleted;
        
        /// <remarks/>
        public event ShiftProvider_GetPagedCompletedEventHandler ShiftProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event ShiftProvider_GetByNameCompletedEventHandler ShiftProvider_GetByNameCompleted;
        
        /// <remarks/>
        public event ShiftProvider_GetByStartTimeEndTimeCompletedEventHandler ShiftProvider_GetByStartTimeEndTimeCompleted;
        
        /// <remarks/>
        public event ShiftProvider_GetByShiftIdCompletedEventHandler ShiftProvider_GetByShiftIdCompleted;
        
        /// <remarks/>
        public event ShiftProvider_InsertCompletedEventHandler ShiftProvider_InsertCompleted;
        
        /// <remarks/>
        public event ShiftProvider_BulkInsertCompletedEventHandler ShiftProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event ShiftProvider_UpdateCompletedEventHandler ShiftProvider_UpdateCompleted;
        
        /// <remarks/>
        public event StateProvinceProvider_DeleteCompletedEventHandler StateProvinceProvider_DeleteCompleted;
        
        /// <remarks/>
        public event StateProvinceProvider_FindCompletedEventHandler StateProvinceProvider_FindCompleted;
        
        /// <remarks/>
        public event StateProvinceProvider_GetAllCompletedEventHandler StateProvinceProvider_GetAllCompleted;
        
        /// <remarks/>
        public event StateProvinceProvider_GetPagedCompletedEventHandler StateProvinceProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event StateProvinceProvider_GetByCountryRegionCodeCompletedEventHandler StateProvinceProvider_GetByCountryRegionCodeCompleted;
        
        /// <remarks/>
        public event StateProvinceProvider_GetByTerritoryIdCompletedEventHandler StateProvinceProvider_GetByTerritoryIdCompleted;
        
        /// <remarks/>
        public event StateProvinceProvider_GetByNameCompletedEventHandler StateProvinceProvider_GetByNameCompleted;
        
        /// <remarks/>
        public event StateProvinceProvider_GetByRowguidCompletedEventHandler StateProvinceProvider_GetByRowguidCompleted;
        
        /// <remarks/>
        public event StateProvinceProvider_GetByStateProvinceCodeCountryRegionCodeCompletedEventHandler StateProvinceProvider_GetByStateProvinceCodeCountryRegionCodeCompleted;
        
        /// <remarks/>
        public event StateProvinceProvider_GetByStateProvinceIdCompletedEventHandler StateProvinceProvider_GetByStateProvinceIdCompleted;
        
        /// <remarks/>
        public event StateProvinceProvider_InsertCompletedEventHandler StateProvinceProvider_InsertCompleted;
        
        /// <remarks/>
        public event StateProvinceProvider_BulkInsertCompletedEventHandler StateProvinceProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event StateProvinceProvider_UpdateCompletedEventHandler StateProvinceProvider_UpdateCompleted;
        
        /// <remarks/>
        public event SalesReasonProvider_GetBySalesOrderIdFromSalesOrderHeaderSalesReasonCompletedEventHandler SalesReasonProvider_GetBySalesOrderIdFromSalesOrderHeaderSalesReasonCompleted;
        
        /// <remarks/>
        public event SalesReasonProvider_DeleteCompletedEventHandler SalesReasonProvider_DeleteCompleted;
        
        /// <remarks/>
        public event SalesReasonProvider_FindCompletedEventHandler SalesReasonProvider_FindCompleted;
        
        /// <remarks/>
        public event SalesReasonProvider_GetAllCompletedEventHandler SalesReasonProvider_GetAllCompleted;
        
        /// <remarks/>
        public event SalesReasonProvider_GetPagedCompletedEventHandler SalesReasonProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event SalesReasonProvider_GetBySalesReasonIdCompletedEventHandler SalesReasonProvider_GetBySalesReasonIdCompleted;
        
        /// <remarks/>
        public event SalesReasonProvider_InsertCompletedEventHandler SalesReasonProvider_InsertCompleted;
        
        /// <remarks/>
        public event SalesReasonProvider_BulkInsertCompletedEventHandler SalesReasonProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event SalesReasonProvider_UpdateCompletedEventHandler SalesReasonProvider_UpdateCompleted;
        
        /// <remarks/>
        public event CultureProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureCompletedEventHandler CultureProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureCompleted;
        
        /// <remarks/>
        public event CultureProvider_GetByProductModelIdFromProductModelProductDescriptionCultureCompletedEventHandler CultureProvider_GetByProductModelIdFromProductModelProductDescriptionCultureCompleted;
        
        /// <remarks/>
        public event CultureProvider_DeleteCompletedEventHandler CultureProvider_DeleteCompleted;
        
        /// <remarks/>
        public event CultureProvider_FindCompletedEventHandler CultureProvider_FindCompleted;
        
        /// <remarks/>
        public event CultureProvider_GetAllCompletedEventHandler CultureProvider_GetAllCompleted;
        
        /// <remarks/>
        public event CultureProvider_GetPagedCompletedEventHandler CultureProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event CultureProvider_GetByNameCompletedEventHandler CultureProvider_GetByNameCompleted;
        
        /// <remarks/>
        public event CultureProvider_GetByCultureIdCompletedEventHandler CultureProvider_GetByCultureIdCompleted;
        
        /// <remarks/>
        public event CultureProvider_InsertCompletedEventHandler CultureProvider_InsertCompleted;
        
        /// <remarks/>
        public event CultureProvider_BulkInsertCompletedEventHandler CultureProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event CultureProvider_UpdateCompletedEventHandler CultureProvider_UpdateCompleted;
        
        /// <remarks/>
        public event SalesOrderHeaderProvider_GetBySalesReasonIdFromSalesOrderHeaderSalesReasonCompletedEventHandler SalesOrderHeaderProvider_GetBySalesReasonIdFromSalesOrderHeaderSalesReasonCompleted;
        
        /// <remarks/>
        public event SalesOrderHeaderProvider_DeleteCompletedEventHandler SalesOrderHeaderProvider_DeleteCompleted;
        
        /// <remarks/>
        public event SalesOrderHeaderProvider_FindCompletedEventHandler SalesOrderHeaderProvider_FindCompleted;
        
        /// <remarks/>
        public event SalesOrderHeaderProvider_GetAllCompletedEventHandler SalesOrderHeaderProvider_GetAllCompleted;
        
        /// <remarks/>
        public event SalesOrderHeaderProvider_GetPagedCompletedEventHandler SalesOrderHeaderProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event SalesOrderHeaderProvider_GetByBillToAddressIdCompletedEventHandler SalesOrderHeaderProvider_GetByBillToAddressIdCompleted;
        
        /// <remarks/>
        public event SalesOrderHeaderProvider_GetByShipToAddressIdCompletedEventHandler SalesOrderHeaderProvider_GetByShipToAddressIdCompleted;
        
        /// <remarks/>
        public event SalesOrderHeaderProvider_GetByContactIdCompletedEventHandler SalesOrderHeaderProvider_GetByContactIdCompleted;
        
        /// <remarks/>
        public event SalesOrderHeaderProvider_GetByCreditCardIdCompletedEventHandler SalesOrderHeaderProvider_GetByCreditCardIdCompleted;
        
        /// <remarks/>
        public event SalesOrderHeaderProvider_GetByCurrencyRateIdCompletedEventHandler SalesOrderHeaderProvider_GetByCurrencyRateIdCompleted;
        
        /// <remarks/>
        public event SalesOrderHeaderProvider_GetByTerritoryIdCompletedEventHandler SalesOrderHeaderProvider_GetByTerritoryIdCompleted;
        
        /// <remarks/>
        public event SalesOrderHeaderProvider_GetByShipMethodIdCompletedEventHandler SalesOrderHeaderProvider_GetByShipMethodIdCompleted;
        
        /// <remarks/>
        public event SalesOrderHeaderProvider_GetByRowguidCompletedEventHandler SalesOrderHeaderProvider_GetByRowguidCompleted;
        
        /// <remarks/>
        public event SalesOrderHeaderProvider_GetBySalesOrderNumberCompletedEventHandler SalesOrderHeaderProvider_GetBySalesOrderNumberCompleted;
        
        /// <remarks/>
        public event SalesOrderHeaderProvider_GetByCustomerIdCompletedEventHandler SalesOrderHeaderProvider_GetByCustomerIdCompleted;
        
        /// <remarks/>
        public event SalesOrderHeaderProvider_GetBySalesPersonIdCompletedEventHandler SalesOrderHeaderProvider_GetBySalesPersonIdCompleted;
        
        /// <remarks/>
        public event SalesOrderHeaderProvider_GetBySalesOrderIdCompletedEventHandler SalesOrderHeaderProvider_GetBySalesOrderIdCompleted;
        
        /// <remarks/>
        public event SalesOrderHeaderProvider_InsertCompletedEventHandler SalesOrderHeaderProvider_InsertCompleted;
        
        /// <remarks/>
        public event SalesOrderHeaderProvider_BulkInsertCompletedEventHandler SalesOrderHeaderProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event SalesOrderHeaderProvider_UpdateCompletedEventHandler SalesOrderHeaderProvider_UpdateCompleted;
        
        /// <remarks/>
        public event ProductModelProductDescriptionCultureProvider_DeleteCompletedEventHandler ProductModelProductDescriptionCultureProvider_DeleteCompleted;
        
        /// <remarks/>
        public event ProductModelProductDescriptionCultureProvider_FindCompletedEventHandler ProductModelProductDescriptionCultureProvider_FindCompleted;
        
        /// <remarks/>
        public event ProductModelProductDescriptionCultureProvider_GetAllCompletedEventHandler ProductModelProductDescriptionCultureProvider_GetAllCompleted;
        
        /// <remarks/>
        public event ProductModelProductDescriptionCultureProvider_GetPagedCompletedEventHandler ProductModelProductDescriptionCultureProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event ProductModelProductDescriptionCultureProvider_GetByCultureIdCompletedEventHandler ProductModelProductDescriptionCultureProvider_GetByCultureIdCompleted;
        
        /// <remarks/>
        public event ProductModelProductDescriptionCultureProvider_GetByProductDescriptionIdCompletedEventHandler ProductModelProductDescriptionCultureProvider_GetByProductDescriptionIdCompleted;
        
        /// <remarks/>
        public event ProductModelProductDescriptionCultureProvider_GetByProductModelIdCompletedEventHandler ProductModelProductDescriptionCultureProvider_GetByProductModelIdCompleted;
        
        /// <remarks/>
        public event ProductModelProductDescriptionCultureProvider_GetByProductModelIdProductDescriptionIdCultureIdCompletedEventHandler ProductModelProductDescriptionCultureProvider_GetByProductModelIdProductDescriptionIdCultureIdCompleted;
        
        /// <remarks/>
        public event ProductModelProductDescriptionCultureProvider_InsertCompletedEventHandler ProductModelProductDescriptionCultureProvider_InsertCompleted;
        
        /// <remarks/>
        public event ProductModelProductDescriptionCultureProvider_BulkInsertCompletedEventHandler ProductModelProductDescriptionCultureProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event ProductModelProductDescriptionCultureProvider_UpdateCompletedEventHandler ProductModelProductDescriptionCultureProvider_UpdateCompleted;
        
        /// <remarks/>
        public event DocumentProvider_GetByProductIdFromProductDocumentCompletedEventHandler DocumentProvider_GetByProductIdFromProductDocumentCompleted;
        
        /// <remarks/>
        public event DocumentProvider_DeleteCompletedEventHandler DocumentProvider_DeleteCompleted;
        
        /// <remarks/>
        public event DocumentProvider_FindCompletedEventHandler DocumentProvider_FindCompleted;
        
        /// <remarks/>
        public event DocumentProvider_GetAllCompletedEventHandler DocumentProvider_GetAllCompleted;
        
        /// <remarks/>
        public event DocumentProvider_GetPagedCompletedEventHandler DocumentProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event DocumentProvider_GetByFileNameRevisionCompletedEventHandler DocumentProvider_GetByFileNameRevisionCompleted;
        
        /// <remarks/>
        public event DocumentProvider_GetByDocumentIdCompletedEventHandler DocumentProvider_GetByDocumentIdCompleted;
        
        /// <remarks/>
        public event DocumentProvider_InsertCompletedEventHandler DocumentProvider_InsertCompleted;
        
        /// <remarks/>
        public event DocumentProvider_BulkInsertCompletedEventHandler DocumentProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event DocumentProvider_UpdateCompletedEventHandler DocumentProvider_UpdateCompleted;
        
        /// <remarks/>
        public event ProductProductPhotoProvider_DeleteCompletedEventHandler ProductProductPhotoProvider_DeleteCompleted;
        
        /// <remarks/>
        public event ProductProductPhotoProvider_FindCompletedEventHandler ProductProductPhotoProvider_FindCompleted;
        
        /// <remarks/>
        public event ProductProductPhotoProvider_GetAllCompletedEventHandler ProductProductPhotoProvider_GetAllCompleted;
        
        /// <remarks/>
        public event ProductProductPhotoProvider_GetPagedCompletedEventHandler ProductProductPhotoProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event ProductProductPhotoProvider_GetByProductIdCompletedEventHandler ProductProductPhotoProvider_GetByProductIdCompleted;
        
        /// <remarks/>
        public event ProductProductPhotoProvider_GetByProductPhotoIdCompletedEventHandler ProductProductPhotoProvider_GetByProductPhotoIdCompleted;
        
        /// <remarks/>
        public event ProductProductPhotoProvider_GetByProductIdProductPhotoIdCompletedEventHandler ProductProductPhotoProvider_GetByProductIdProductPhotoIdCompleted;
        
        /// <remarks/>
        public event ProductProductPhotoProvider_InsertCompletedEventHandler ProductProductPhotoProvider_InsertCompleted;
        
        /// <remarks/>
        public event ProductProductPhotoProvider_BulkInsertCompletedEventHandler ProductProductPhotoProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event ProductProductPhotoProvider_UpdateCompletedEventHandler ProductProductPhotoProvider_UpdateCompleted;
        
        /// <remarks/>
        public event ProductDocumentProvider_DeleteCompletedEventHandler ProductDocumentProvider_DeleteCompleted;
        
        /// <remarks/>
        public event ProductDocumentProvider_FindCompletedEventHandler ProductDocumentProvider_FindCompleted;
        
        /// <remarks/>
        public event ProductDocumentProvider_GetAllCompletedEventHandler ProductDocumentProvider_GetAllCompleted;
        
        /// <remarks/>
        public event ProductDocumentProvider_GetPagedCompletedEventHandler ProductDocumentProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event ProductDocumentProvider_GetByDocumentIdCompletedEventHandler ProductDocumentProvider_GetByDocumentIdCompleted;
        
        /// <remarks/>
        public event ProductDocumentProvider_GetByProductIdCompletedEventHandler ProductDocumentProvider_GetByProductIdCompleted;
        
        /// <remarks/>
        public event ProductDocumentProvider_GetByProductIdDocumentIdCompletedEventHandler ProductDocumentProvider_GetByProductIdDocumentIdCompleted;
        
        /// <remarks/>
        public event ProductDocumentProvider_InsertCompletedEventHandler ProductDocumentProvider_InsertCompleted;
        
        /// <remarks/>
        public event ProductDocumentProvider_BulkInsertCompletedEventHandler ProductDocumentProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event ProductDocumentProvider_UpdateCompletedEventHandler ProductDocumentProvider_UpdateCompleted;
        
        /// <remarks/>
        public event LocationProvider_GetByProductIdFromProductInventoryCompletedEventHandler LocationProvider_GetByProductIdFromProductInventoryCompleted;
        
        /// <remarks/>
        public event EmployeePayHistoryProvider_DeleteCompletedEventHandler EmployeePayHistoryProvider_DeleteCompleted;
        
        /// <remarks/>
        public event EmployeePayHistoryProvider_FindCompletedEventHandler EmployeePayHistoryProvider_FindCompleted;
        
        /// <remarks/>
        public event EmployeePayHistoryProvider_GetAllCompletedEventHandler EmployeePayHistoryProvider_GetAllCompleted;
        
        /// <remarks/>
        public event EmployeePayHistoryProvider_GetPagedCompletedEventHandler EmployeePayHistoryProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event EmployeePayHistoryProvider_GetByEmployeeIdCompletedEventHandler EmployeePayHistoryProvider_GetByEmployeeIdCompleted;
        
        /// <remarks/>
        public event EmployeePayHistoryProvider_GetByEmployeeIdRateChangeDateCompletedEventHandler EmployeePayHistoryProvider_GetByEmployeeIdRateChangeDateCompleted;
        
        /// <remarks/>
        public event EmployeePayHistoryProvider_InsertCompletedEventHandler EmployeePayHistoryProvider_InsertCompleted;
        
        /// <remarks/>
        public event EmployeePayHistoryProvider_BulkInsertCompletedEventHandler EmployeePayHistoryProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event EmployeePayHistoryProvider_UpdateCompletedEventHandler EmployeePayHistoryProvider_UpdateCompleted;
        
        /// <remarks/>
        public event AwBuildVersionProvider_DeleteCompletedEventHandler AwBuildVersionProvider_DeleteCompleted;
        
        /// <remarks/>
        public event AwBuildVersionProvider_FindCompletedEventHandler AwBuildVersionProvider_FindCompleted;
        
        /// <remarks/>
        public event AwBuildVersionProvider_GetAllCompletedEventHandler AwBuildVersionProvider_GetAllCompleted;
        
        /// <remarks/>
        public event AwBuildVersionProvider_GetPagedCompletedEventHandler AwBuildVersionProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event AwBuildVersionProvider_GetBySystemInformationIdCompletedEventHandler AwBuildVersionProvider_GetBySystemInformationIdCompleted;
        
        /// <remarks/>
        public event AwBuildVersionProvider_InsertCompletedEventHandler AwBuildVersionProvider_InsertCompleted;
        
        /// <remarks/>
        public event AwBuildVersionProvider_BulkInsertCompletedEventHandler AwBuildVersionProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event AwBuildVersionProvider_UpdateCompletedEventHandler AwBuildVersionProvider_UpdateCompleted;
        
        /// <remarks/>
        public event DatabaseLogProvider_DeleteCompletedEventHandler DatabaseLogProvider_DeleteCompleted;
        
        /// <remarks/>
        public event DatabaseLogProvider_FindCompletedEventHandler DatabaseLogProvider_FindCompleted;
        
        /// <remarks/>
        public event DatabaseLogProvider_GetAllCompletedEventHandler DatabaseLogProvider_GetAllCompleted;
        
        /// <remarks/>
        public event DatabaseLogProvider_GetPagedCompletedEventHandler DatabaseLogProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event DatabaseLogProvider_GetByDatabaseLogIdCompletedEventHandler DatabaseLogProvider_GetByDatabaseLogIdCompleted;
        
        /// <remarks/>
        public event DatabaseLogProvider_InsertCompletedEventHandler DatabaseLogProvider_InsertCompleted;
        
        /// <remarks/>
        public event DatabaseLogProvider_BulkInsertCompletedEventHandler DatabaseLogProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event DatabaseLogProvider_UpdateCompletedEventHandler DatabaseLogProvider_UpdateCompleted;
        
        /// <remarks/>
        public event EmployeeAddressProvider_DeleteCompletedEventHandler EmployeeAddressProvider_DeleteCompleted;
        
        /// <remarks/>
        public event EmployeeAddressProvider_FindCompletedEventHandler EmployeeAddressProvider_FindCompleted;
        
        /// <remarks/>
        public event EmployeeAddressProvider_GetAllCompletedEventHandler EmployeeAddressProvider_GetAllCompleted;
        
        /// <remarks/>
        public event EmployeeAddressProvider_GetPagedCompletedEventHandler EmployeeAddressProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event EmployeeAddressProvider_GetByAddressIdCompletedEventHandler EmployeeAddressProvider_GetByAddressIdCompleted;
        
        /// <remarks/>
        public event EmployeeAddressProvider_GetByEmployeeIdCompletedEventHandler EmployeeAddressProvider_GetByEmployeeIdCompleted;
        
        /// <remarks/>
        public event EmployeeAddressProvider_GetByRowguidCompletedEventHandler EmployeeAddressProvider_GetByRowguidCompleted;
        
        /// <remarks/>
        public event EmployeeAddressProvider_GetByEmployeeIdAddressIdCompletedEventHandler EmployeeAddressProvider_GetByEmployeeIdAddressIdCompleted;
        
        /// <remarks/>
        public event EmployeeAddressProvider_InsertCompletedEventHandler EmployeeAddressProvider_InsertCompleted;
        
        /// <remarks/>
        public event EmployeeAddressProvider_BulkInsertCompletedEventHandler EmployeeAddressProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event EmployeeAddressProvider_UpdateCompletedEventHandler EmployeeAddressProvider_UpdateCompleted;
        
        /// <remarks/>
        public event DepartmentProvider_DeleteCompletedEventHandler DepartmentProvider_DeleteCompleted;
        
        /// <remarks/>
        public event DepartmentProvider_FindCompletedEventHandler DepartmentProvider_FindCompleted;
        
        /// <remarks/>
        public event DepartmentProvider_GetAllCompletedEventHandler DepartmentProvider_GetAllCompleted;
        
        /// <remarks/>
        public event DepartmentProvider_GetPagedCompletedEventHandler DepartmentProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event DepartmentProvider_GetByNameCompletedEventHandler DepartmentProvider_GetByNameCompleted;
        
        /// <remarks/>
        public event DepartmentProvider_GetByDepartmentIdCompletedEventHandler DepartmentProvider_GetByDepartmentIdCompleted;
        
        /// <remarks/>
        public event DepartmentProvider_InsertCompletedEventHandler DepartmentProvider_InsertCompleted;
        
        /// <remarks/>
        public event DepartmentProvider_BulkInsertCompletedEventHandler DepartmentProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event DepartmentProvider_UpdateCompletedEventHandler DepartmentProvider_UpdateCompleted;
        
        /// <remarks/>
        public event ProductPhotoProvider_GetByProductIdFromProductProductPhotoCompletedEventHandler ProductPhotoProvider_GetByProductIdFromProductProductPhotoCompleted;
        
        /// <remarks/>
        public event ProductPhotoProvider_DeleteCompletedEventHandler ProductPhotoProvider_DeleteCompleted;
        
        /// <remarks/>
        public event ProductPhotoProvider_FindCompletedEventHandler ProductPhotoProvider_FindCompleted;
        
        /// <remarks/>
        public event ProductPhotoProvider_GetAllCompletedEventHandler ProductPhotoProvider_GetAllCompleted;
        
        /// <remarks/>
        public event ProductPhotoProvider_GetPagedCompletedEventHandler ProductPhotoProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event ProductPhotoProvider_GetByProductPhotoIdCompletedEventHandler ProductPhotoProvider_GetByProductPhotoIdCompleted;
        
        /// <remarks/>
        public event ProductPhotoProvider_InsertCompletedEventHandler ProductPhotoProvider_InsertCompleted;
        
        /// <remarks/>
        public event ProductPhotoProvider_BulkInsertCompletedEventHandler ProductPhotoProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event ProductPhotoProvider_UpdateCompletedEventHandler ProductPhotoProvider_UpdateCompleted;
        
        /// <remarks/>
        public event BillOfMaterialsProvider_DeleteCompletedEventHandler BillOfMaterialsProvider_DeleteCompleted;
        
        /// <remarks/>
        public event BillOfMaterialsProvider_FindCompletedEventHandler BillOfMaterialsProvider_FindCompleted;
        
        /// <remarks/>
        public event BillOfMaterialsProvider_GetAllCompletedEventHandler BillOfMaterialsProvider_GetAllCompleted;
        
        /// <remarks/>
        public event BillOfMaterialsProvider_GetPagedCompletedEventHandler BillOfMaterialsProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event BillOfMaterialsProvider_GetByComponentIdCompletedEventHandler BillOfMaterialsProvider_GetByComponentIdCompleted;
        
        /// <remarks/>
        public event BillOfMaterialsProvider_GetByProductAssemblyIdCompletedEventHandler BillOfMaterialsProvider_GetByProductAssemblyIdCompleted;
        
        /// <remarks/>
        public event BillOfMaterialsProvider_GetByProductAssemblyIdComponentIdStartDateCompletedEventHandler BillOfMaterialsProvider_GetByProductAssemblyIdComponentIdStartDateCompleted;
        
        /// <remarks/>
        public event BillOfMaterialsProvider_GetByUnitMeasureCodeCompletedEventHandler BillOfMaterialsProvider_GetByUnitMeasureCodeCompleted;
        
        /// <remarks/>
        public event BillOfMaterialsProvider_GetByBillOfMaterialsIdCompletedEventHandler BillOfMaterialsProvider_GetByBillOfMaterialsIdCompleted;
        
        /// <remarks/>
        public event BillOfMaterialsProvider_InsertCompletedEventHandler BillOfMaterialsProvider_InsertCompleted;
        
        /// <remarks/>
        public event BillOfMaterialsProvider_BulkInsertCompletedEventHandler BillOfMaterialsProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event BillOfMaterialsProvider_UpdateCompletedEventHandler BillOfMaterialsProvider_UpdateCompleted;
        
        /// <remarks/>
        public event SalesPersonProvider_DeleteCompletedEventHandler SalesPersonProvider_DeleteCompleted;
        
        /// <remarks/>
        public event SalesPersonProvider_FindCompletedEventHandler SalesPersonProvider_FindCompleted;
        
        /// <remarks/>
        public event SalesPersonProvider_GetAllCompletedEventHandler SalesPersonProvider_GetAllCompleted;
        
        /// <remarks/>
        public event SalesPersonProvider_GetPagedCompletedEventHandler SalesPersonProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event SalesPersonProvider_GetByTerritoryIdCompletedEventHandler SalesPersonProvider_GetByTerritoryIdCompleted;
        
        /// <remarks/>
        public event SalesPersonProvider_GetByRowguidCompletedEventHandler SalesPersonProvider_GetByRowguidCompleted;
        
        /// <remarks/>
        public event SalesPersonProvider_GetBySalesPersonIdCompletedEventHandler SalesPersonProvider_GetBySalesPersonIdCompleted;
        
        /// <remarks/>
        public event SalesPersonProvider_InsertCompletedEventHandler SalesPersonProvider_InsertCompleted;
        
        /// <remarks/>
        public event SalesPersonProvider_BulkInsertCompletedEventHandler SalesPersonProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event SalesPersonProvider_UpdateCompletedEventHandler SalesPersonProvider_UpdateCompleted;
        
        /// <remarks/>
        public event JobCandidateProvider_DeleteCompletedEventHandler JobCandidateProvider_DeleteCompleted;
        
        /// <remarks/>
        public event JobCandidateProvider_FindCompletedEventHandler JobCandidateProvider_FindCompleted;
        
        /// <remarks/>
        public event JobCandidateProvider_GetAllCompletedEventHandler JobCandidateProvider_GetAllCompleted;
        
        /// <remarks/>
        public event JobCandidateProvider_GetPagedCompletedEventHandler JobCandidateProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event JobCandidateProvider_GetByEmployeeIdCompletedEventHandler JobCandidateProvider_GetByEmployeeIdCompleted;
        
        /// <remarks/>
        public event JobCandidateProvider_GetByJobCandidateIdCompletedEventHandler JobCandidateProvider_GetByJobCandidateIdCompleted;
        
        /// <remarks/>
        public event JobCandidateProvider_InsertCompletedEventHandler JobCandidateProvider_InsertCompleted;
        
        /// <remarks/>
        public event JobCandidateProvider_BulkInsertCompletedEventHandler JobCandidateProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event JobCandidateProvider_UpdateCompletedEventHandler JobCandidateProvider_UpdateCompleted;
        
        /// <remarks/>
        public event EmployeeDepartmentHistoryProvider_DeleteCompletedEventHandler EmployeeDepartmentHistoryProvider_DeleteCompleted;
        
        /// <remarks/>
        public event EmployeeDepartmentHistoryProvider_FindCompletedEventHandler EmployeeDepartmentHistoryProvider_FindCompleted;
        
        /// <remarks/>
        public event EmployeeDepartmentHistoryProvider_GetAllCompletedEventHandler EmployeeDepartmentHistoryProvider_GetAllCompleted;
        
        /// <remarks/>
        public event EmployeeDepartmentHistoryProvider_GetPagedCompletedEventHandler EmployeeDepartmentHistoryProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event EmployeeDepartmentHistoryProvider_GetByEmployeeIdCompletedEventHandler EmployeeDepartmentHistoryProvider_GetByEmployeeIdCompleted;
        
        /// <remarks/>
        public event EmployeeDepartmentHistoryProvider_GetByDepartmentIdCompletedEventHandler EmployeeDepartmentHistoryProvider_GetByDepartmentIdCompleted;
        
        /// <remarks/>
        public event EmployeeDepartmentHistoryProvider_GetByShiftIdCompletedEventHandler EmployeeDepartmentHistoryProvider_GetByShiftIdCompleted;
        
        /// <remarks/>
        public event EmployeeDepartmentHistoryProvider_GetByEmployeeIdStartDateDepartmentIdShiftIdCompletedEventHandler EmployeeDepartmentHistoryProvider_GetByEmployeeIdStartDateDepartmentIdShiftIdCompleted;
        
        /// <remarks/>
        public event EmployeeDepartmentHistoryProvider_InsertCompletedEventHandler EmployeeDepartmentHistoryProvider_InsertCompleted;
        
        /// <remarks/>
        public event EmployeeDepartmentHistoryProvider_BulkInsertCompletedEventHandler EmployeeDepartmentHistoryProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event EmployeeDepartmentHistoryProvider_UpdateCompletedEventHandler EmployeeDepartmentHistoryProvider_UpdateCompleted;
        
        /// <remarks/>
        public event ContactTypeProvider_DeleteCompletedEventHandler ContactTypeProvider_DeleteCompleted;
        
        /// <remarks/>
        public event ContactTypeProvider_FindCompletedEventHandler ContactTypeProvider_FindCompleted;
        
        /// <remarks/>
        public event ContactTypeProvider_GetAllCompletedEventHandler ContactTypeProvider_GetAllCompleted;
        
        /// <remarks/>
        public event ContactTypeProvider_GetPagedCompletedEventHandler ContactTypeProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event ContactTypeProvider_GetByNameCompletedEventHandler ContactTypeProvider_GetByNameCompleted;
        
        /// <remarks/>
        public event ContactTypeProvider_GetByContactTypeIdCompletedEventHandler ContactTypeProvider_GetByContactTypeIdCompleted;
        
        /// <remarks/>
        public event ContactTypeProvider_InsertCompletedEventHandler ContactTypeProvider_InsertCompleted;
        
        /// <remarks/>
        public event ContactTypeProvider_BulkInsertCompletedEventHandler ContactTypeProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event ContactTypeProvider_UpdateCompletedEventHandler ContactTypeProvider_UpdateCompleted;
        
        /// <remarks/>
        public event ErrorLogProvider_DeleteCompletedEventHandler ErrorLogProvider_DeleteCompleted;
        
        /// <remarks/>
        public event ErrorLogProvider_FindCompletedEventHandler ErrorLogProvider_FindCompleted;
        
        /// <remarks/>
        public event ErrorLogProvider_GetAllCompletedEventHandler ErrorLogProvider_GetAllCompleted;
        
        /// <remarks/>
        public event ErrorLogProvider_GetPagedCompletedEventHandler ErrorLogProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event ErrorLogProvider_GetByErrorLogIdCompletedEventHandler ErrorLogProvider_GetByErrorLogIdCompleted;
        
        /// <remarks/>
        public event ErrorLogProvider_InsertCompletedEventHandler ErrorLogProvider_InsertCompleted;
        
        /// <remarks/>
        public event ErrorLogProvider_BulkInsertCompletedEventHandler ErrorLogProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event ErrorLogProvider_UpdateCompletedEventHandler ErrorLogProvider_UpdateCompleted;
        
        /// <remarks/>
        public event EmployeeProvider_GetByAddressIdFromEmployeeAddressCompletedEventHandler EmployeeProvider_GetByAddressIdFromEmployeeAddressCompleted;
        
        /// <remarks/>
        public event EmployeeProvider_DeleteCompletedEventHandler EmployeeProvider_DeleteCompleted;
        
        /// <remarks/>
        public event EmployeeProvider_FindCompletedEventHandler EmployeeProvider_FindCompleted;
        
        /// <remarks/>
        public event EmployeeProvider_GetAllCompletedEventHandler EmployeeProvider_GetAllCompleted;
        
        /// <remarks/>
        public event EmployeeProvider_GetPagedCompletedEventHandler EmployeeProvider_GetPagedCompleted;
        
        /// <remarks/>
        public event EmployeeProvider_GetByContactIdCompletedEventHandler EmployeeProvider_GetByContactIdCompleted;
        
        /// <remarks/>
        public event EmployeeProvider_GetByLoginIdCompletedEventHandler EmployeeProvider_GetByLoginIdCompleted;
        
        /// <remarks/>
        public event EmployeeProvider_GetByNationalIdNumberCompletedEventHandler EmployeeProvider_GetByNationalIdNumberCompleted;
        
        /// <remarks/>
        public event EmployeeProvider_GetByRowguidCompletedEventHandler EmployeeProvider_GetByRowguidCompleted;
        
        /// <remarks/>
        public event EmployeeProvider_GetByManagerIdCompletedEventHandler EmployeeProvider_GetByManagerIdCompleted;
        
        /// <remarks/>
        public event EmployeeProvider_GetByEmployeeIdCompletedEventHandler EmployeeProvider_GetByEmployeeIdCompleted;
        
        /// <remarks/>
        public event EmployeeProvider_InsertCompletedEventHandler EmployeeProvider_InsertCompleted;
        
        /// <remarks/>
        public event EmployeeProvider_BulkInsertCompletedEventHandler EmployeeProvider_BulkInsertCompleted;
        
        /// <remarks/>
        public event EmployeeProvider_UpdateCompletedEventHandler EmployeeProvider_UpdateCompleted;
        
        /// <remarks/>
        public event CountryRegionProvider_GetByCurrencyCodeFromCountryRegionCurrencyCompletedEventHandler CountryRegionProvider_GetByCurrencyCodeFromCountryRegionCurrencyCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/NullFkeyChildProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NullFkeyChild[] NullFkeyChildProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("NullFkeyChildProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((NullFkeyChild[])(results[0]));
        }
        
        /// <remarks/>
        public void NullFkeyChildProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.NullFkeyChildProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void NullFkeyChildProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.NullFkeyChildProvider_GetPagedOperationCompleted == null)) {
                this.NullFkeyChildProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNullFkeyChildProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("NullFkeyChildProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.NullFkeyChildProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnNullFkeyChildProvider_GetPagedOperationCompleted(object arg) {
            if ((this.NullFkeyChildProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NullFkeyChildProvider_GetPagedCompleted(this, new NullFkeyChildProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/NullFkeyChildProvider_GetByNullFkeyParent" +
            "Id", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NullFkeyChild[] NullFkeyChildProvider_GetByNullFkeyParentId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> _nullFkeyParentId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("NullFkeyChildProvider_GetByNullFkeyParentId", new object[] {
                        _nullFkeyParentId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((NullFkeyChild[])(results[0]));
        }
        
        /// <remarks/>
        public void NullFkeyChildProvider_GetByNullFkeyParentIdAsync(System.Nullable<int> _nullFkeyParentId, int start, int pageLength) {
            this.NullFkeyChildProvider_GetByNullFkeyParentIdAsync(_nullFkeyParentId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void NullFkeyChildProvider_GetByNullFkeyParentIdAsync(System.Nullable<int> _nullFkeyParentId, int start, int pageLength, object userState) {
            if ((this.NullFkeyChildProvider_GetByNullFkeyParentIdOperationCompleted == null)) {
                this.NullFkeyChildProvider_GetByNullFkeyParentIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNullFkeyChildProvider_GetByNullFkeyParentIdOperationCompleted);
            }
            this.InvokeAsync("NullFkeyChildProvider_GetByNullFkeyParentId", new object[] {
                        _nullFkeyParentId,
                        start,
                        pageLength}, this.NullFkeyChildProvider_GetByNullFkeyParentIdOperationCompleted, userState);
        }
        
        private void OnNullFkeyChildProvider_GetByNullFkeyParentIdOperationCompleted(object arg) {
            if ((this.NullFkeyChildProvider_GetByNullFkeyParentIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NullFkeyChildProvider_GetByNullFkeyParentIdCompleted(this, new NullFkeyChildProvider_GetByNullFkeyParentIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/NullFkeyChildProvider_GetByNullFkeyChildI" +
            "d", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NullFkeyChild NullFkeyChildProvider_GetByNullFkeyChildId(int _nullFkeyChildId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("NullFkeyChildProvider_GetByNullFkeyChildId", new object[] {
                        _nullFkeyChildId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((NullFkeyChild)(results[0]));
        }
        
        /// <remarks/>
        public void NullFkeyChildProvider_GetByNullFkeyChildIdAsync(int _nullFkeyChildId, int start, int pageLength) {
            this.NullFkeyChildProvider_GetByNullFkeyChildIdAsync(_nullFkeyChildId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void NullFkeyChildProvider_GetByNullFkeyChildIdAsync(int _nullFkeyChildId, int start, int pageLength, object userState) {
            if ((this.NullFkeyChildProvider_GetByNullFkeyChildIdOperationCompleted == null)) {
                this.NullFkeyChildProvider_GetByNullFkeyChildIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNullFkeyChildProvider_GetByNullFkeyChildIdOperationCompleted);
            }
            this.InvokeAsync("NullFkeyChildProvider_GetByNullFkeyChildId", new object[] {
                        _nullFkeyChildId,
                        start,
                        pageLength}, this.NullFkeyChildProvider_GetByNullFkeyChildIdOperationCompleted, userState);
        }
        
        private void OnNullFkeyChildProvider_GetByNullFkeyChildIdOperationCompleted(object arg) {
            if ((this.NullFkeyChildProvider_GetByNullFkeyChildIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NullFkeyChildProvider_GetByNullFkeyChildIdCompleted(this, new NullFkeyChildProvider_GetByNullFkeyChildIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/NullFkeyChildProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NullFkeyChild NullFkeyChildProvider_Insert(NullFkeyChild entity) {
            object[] results = this.Invoke("NullFkeyChildProvider_Insert", new object[] {
                        entity});
            return ((NullFkeyChild)(results[0]));
        }
        
        /// <remarks/>
        public void NullFkeyChildProvider_InsertAsync(NullFkeyChild entity) {
            this.NullFkeyChildProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void NullFkeyChildProvider_InsertAsync(NullFkeyChild entity, object userState) {
            if ((this.NullFkeyChildProvider_InsertOperationCompleted == null)) {
                this.NullFkeyChildProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNullFkeyChildProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("NullFkeyChildProvider_Insert", new object[] {
                        entity}, this.NullFkeyChildProvider_InsertOperationCompleted, userState);
        }
        
        private void OnNullFkeyChildProvider_InsertOperationCompleted(object arg) {
            if ((this.NullFkeyChildProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NullFkeyChildProvider_InsertCompleted(this, new NullFkeyChildProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/NullFkeyChildProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void NullFkeyChildProvider_BulkInsert(NullFkeyChild[] entityList) {
            this.Invoke("NullFkeyChildProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void NullFkeyChildProvider_BulkInsertAsync(NullFkeyChild[] entityList) {
            this.NullFkeyChildProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void NullFkeyChildProvider_BulkInsertAsync(NullFkeyChild[] entityList, object userState) {
            if ((this.NullFkeyChildProvider_BulkInsertOperationCompleted == null)) {
                this.NullFkeyChildProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNullFkeyChildProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("NullFkeyChildProvider_BulkInsert", new object[] {
                        entityList}, this.NullFkeyChildProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnNullFkeyChildProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.NullFkeyChildProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NullFkeyChildProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/NullFkeyChildProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NullFkeyChild NullFkeyChildProvider_Update(NullFkeyChild entity) {
            object[] results = this.Invoke("NullFkeyChildProvider_Update", new object[] {
                        entity});
            return ((NullFkeyChild)(results[0]));
        }
        
        /// <remarks/>
        public void NullFkeyChildProvider_UpdateAsync(NullFkeyChild entity) {
            this.NullFkeyChildProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void NullFkeyChildProvider_UpdateAsync(NullFkeyChild entity, object userState) {
            if ((this.NullFkeyChildProvider_UpdateOperationCompleted == null)) {
                this.NullFkeyChildProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNullFkeyChildProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("NullFkeyChildProvider_Update", new object[] {
                        entity}, this.NullFkeyChildProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnNullFkeyChildProvider_UpdateOperationCompleted(object arg) {
            if ((this.NullFkeyChildProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NullFkeyChildProvider_UpdateCompleted(this, new NullFkeyChildProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductDescriptionProvider_GetByCultureId" +
            "FromProductModelProductDescriptionCulture", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductDescription[] ProductDescriptionProvider_GetByCultureIdFromProductModelProductDescriptionCulture(string _cultureId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductDescriptionProvider_GetByCultureIdFromProductModelProductDescriptionCultur" +
                    "e", new object[] {
                        _cultureId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductDescription[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductDescriptionProvider_GetByCultureIdFromProductModelProductDescriptionCultureAsync(string _cultureId, int start, int pageLength) {
            this.ProductDescriptionProvider_GetByCultureIdFromProductModelProductDescriptionCultureAsync(_cultureId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductDescriptionProvider_GetByCultureIdFromProductModelProductDescriptionCultureAsync(string _cultureId, int start, int pageLength, object userState) {
            if ((this.ProductDescriptionProvider_GetByCultureIdFromProductModelProductDescriptionCultureOperationCompleted == null)) {
                this.ProductDescriptionProvider_GetByCultureIdFromProductModelProductDescriptionCultureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductDescriptionProvider_GetByCultureIdFromProductModelProductDescriptionCultureOperationCompleted);
            }
            this.InvokeAsync("ProductDescriptionProvider_GetByCultureIdFromProductModelProductDescriptionCultur" +
                    "e", new object[] {
                        _cultureId,
                        start,
                        pageLength}, this.ProductDescriptionProvider_GetByCultureIdFromProductModelProductDescriptionCultureOperationCompleted, userState);
        }
        
        private void OnProductDescriptionProvider_GetByCultureIdFromProductModelProductDescriptionCultureOperationCompleted(object arg) {
            if ((this.ProductDescriptionProvider_GetByCultureIdFromProductModelProductDescriptionCultureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductDescriptionProvider_GetByCultureIdFromProductModelProductDescriptionCultureCompleted(this, new ProductDescriptionProvider_GetByCultureIdFromProductModelProductDescriptionCultureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductDescriptionProvider_GetByProductMo" +
            "delIdFromProductModelProductDescriptionCulture", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductDescription[] ProductDescriptionProvider_GetByProductModelIdFromProductModelProductDescriptionCulture(int _productModelId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductDescriptionProvider_GetByProductModelIdFromProductModelProductDescriptionC" +
                    "ulture", new object[] {
                        _productModelId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductDescription[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductDescriptionProvider_GetByProductModelIdFromProductModelProductDescriptionCultureAsync(int _productModelId, int start, int pageLength) {
            this.ProductDescriptionProvider_GetByProductModelIdFromProductModelProductDescriptionCultureAsync(_productModelId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductDescriptionProvider_GetByProductModelIdFromProductModelProductDescriptionCultureAsync(int _productModelId, int start, int pageLength, object userState) {
            if ((this.ProductDescriptionProvider_GetByProductModelIdFromProductModelProductDescriptionCultureOperationCompleted == null)) {
                this.ProductDescriptionProvider_GetByProductModelIdFromProductModelProductDescriptionCultureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductDescriptionProvider_GetByProductModelIdFromProductModelProductDescriptionCultureOperationCompleted);
            }
            this.InvokeAsync("ProductDescriptionProvider_GetByProductModelIdFromProductModelProductDescriptionC" +
                    "ulture", new object[] {
                        _productModelId,
                        start,
                        pageLength}, this.ProductDescriptionProvider_GetByProductModelIdFromProductModelProductDescriptionCultureOperationCompleted, userState);
        }
        
        private void OnProductDescriptionProvider_GetByProductModelIdFromProductModelProductDescriptionCultureOperationCompleted(object arg) {
            if ((this.ProductDescriptionProvider_GetByProductModelIdFromProductModelProductDescriptionCultureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductDescriptionProvider_GetByProductModelIdFromProductModelProductDescriptionCultureCompleted(this, new ProductDescriptionProvider_GetByProductModelIdFromProductModelProductDescriptionCultureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductDescriptionProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ProductDescriptionProvider_Delete(int _productDescriptionId) {
            object[] results = this.Invoke("ProductDescriptionProvider_Delete", new object[] {
                        _productDescriptionId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ProductDescriptionProvider_DeleteAsync(int _productDescriptionId) {
            this.ProductDescriptionProvider_DeleteAsync(_productDescriptionId, null);
        }
        
        /// <remarks/>
        public void ProductDescriptionProvider_DeleteAsync(int _productDescriptionId, object userState) {
            if ((this.ProductDescriptionProvider_DeleteOperationCompleted == null)) {
                this.ProductDescriptionProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductDescriptionProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("ProductDescriptionProvider_Delete", new object[] {
                        _productDescriptionId}, this.ProductDescriptionProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnProductDescriptionProvider_DeleteOperationCompleted(object arg) {
            if ((this.ProductDescriptionProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductDescriptionProvider_DeleteCompleted(this, new ProductDescriptionProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductDescriptionProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductDescription[] ProductDescriptionProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductDescriptionProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductDescription[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductDescriptionProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.ProductDescriptionProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductDescriptionProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.ProductDescriptionProvider_FindOperationCompleted == null)) {
                this.ProductDescriptionProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductDescriptionProvider_FindOperationCompleted);
            }
            this.InvokeAsync("ProductDescriptionProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.ProductDescriptionProvider_FindOperationCompleted, userState);
        }
        
        private void OnProductDescriptionProvider_FindOperationCompleted(object arg) {
            if ((this.ProductDescriptionProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductDescriptionProvider_FindCompleted(this, new ProductDescriptionProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductDescriptionProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductDescription[] ProductDescriptionProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductDescriptionProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductDescription[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductDescriptionProvider_GetAllAsync(int start, int pageLength) {
            this.ProductDescriptionProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductDescriptionProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.ProductDescriptionProvider_GetAllOperationCompleted == null)) {
                this.ProductDescriptionProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductDescriptionProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("ProductDescriptionProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.ProductDescriptionProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnProductDescriptionProvider_GetAllOperationCompleted(object arg) {
            if ((this.ProductDescriptionProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductDescriptionProvider_GetAllCompleted(this, new ProductDescriptionProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductDescriptionProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductDescription[] ProductDescriptionProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductDescriptionProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductDescription[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductDescriptionProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.ProductDescriptionProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductDescriptionProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.ProductDescriptionProvider_GetPagedOperationCompleted == null)) {
                this.ProductDescriptionProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductDescriptionProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("ProductDescriptionProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.ProductDescriptionProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnProductDescriptionProvider_GetPagedOperationCompleted(object arg) {
            if ((this.ProductDescriptionProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductDescriptionProvider_GetPagedCompleted(this, new ProductDescriptionProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductDescriptionProvider_GetByRowguid", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductDescription ProductDescriptionProvider_GetByRowguid(System.Guid _rowguid, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductDescriptionProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductDescription)(results[0]));
        }
        
        /// <remarks/>
        public void ProductDescriptionProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength) {
            this.ProductDescriptionProvider_GetByRowguidAsync(_rowguid, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductDescriptionProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength, object userState) {
            if ((this.ProductDescriptionProvider_GetByRowguidOperationCompleted == null)) {
                this.ProductDescriptionProvider_GetByRowguidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductDescriptionProvider_GetByRowguidOperationCompleted);
            }
            this.InvokeAsync("ProductDescriptionProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength}, this.ProductDescriptionProvider_GetByRowguidOperationCompleted, userState);
        }
        
        private void OnProductDescriptionProvider_GetByRowguidOperationCompleted(object arg) {
            if ((this.ProductDescriptionProvider_GetByRowguidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductDescriptionProvider_GetByRowguidCompleted(this, new ProductDescriptionProvider_GetByRowguidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductDescriptionProvider_GetByProductDe" +
            "scriptionId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductDescription ProductDescriptionProvider_GetByProductDescriptionId(int _productDescriptionId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductDescriptionProvider_GetByProductDescriptionId", new object[] {
                        _productDescriptionId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductDescription)(results[0]));
        }
        
        /// <remarks/>
        public void ProductDescriptionProvider_GetByProductDescriptionIdAsync(int _productDescriptionId, int start, int pageLength) {
            this.ProductDescriptionProvider_GetByProductDescriptionIdAsync(_productDescriptionId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductDescriptionProvider_GetByProductDescriptionIdAsync(int _productDescriptionId, int start, int pageLength, object userState) {
            if ((this.ProductDescriptionProvider_GetByProductDescriptionIdOperationCompleted == null)) {
                this.ProductDescriptionProvider_GetByProductDescriptionIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductDescriptionProvider_GetByProductDescriptionIdOperationCompleted);
            }
            this.InvokeAsync("ProductDescriptionProvider_GetByProductDescriptionId", new object[] {
                        _productDescriptionId,
                        start,
                        pageLength}, this.ProductDescriptionProvider_GetByProductDescriptionIdOperationCompleted, userState);
        }
        
        private void OnProductDescriptionProvider_GetByProductDescriptionIdOperationCompleted(object arg) {
            if ((this.ProductDescriptionProvider_GetByProductDescriptionIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductDescriptionProvider_GetByProductDescriptionIdCompleted(this, new ProductDescriptionProvider_GetByProductDescriptionIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductDescriptionProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductDescription ProductDescriptionProvider_Insert(ProductDescription entity) {
            object[] results = this.Invoke("ProductDescriptionProvider_Insert", new object[] {
                        entity});
            return ((ProductDescription)(results[0]));
        }
        
        /// <remarks/>
        public void ProductDescriptionProvider_InsertAsync(ProductDescription entity) {
            this.ProductDescriptionProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void ProductDescriptionProvider_InsertAsync(ProductDescription entity, object userState) {
            if ((this.ProductDescriptionProvider_InsertOperationCompleted == null)) {
                this.ProductDescriptionProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductDescriptionProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("ProductDescriptionProvider_Insert", new object[] {
                        entity}, this.ProductDescriptionProvider_InsertOperationCompleted, userState);
        }
        
        private void OnProductDescriptionProvider_InsertOperationCompleted(object arg) {
            if ((this.ProductDescriptionProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductDescriptionProvider_InsertCompleted(this, new ProductDescriptionProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductDescriptionProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ProductDescriptionProvider_BulkInsert(ProductDescription[] entityList) {
            this.Invoke("ProductDescriptionProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void ProductDescriptionProvider_BulkInsertAsync(ProductDescription[] entityList) {
            this.ProductDescriptionProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void ProductDescriptionProvider_BulkInsertAsync(ProductDescription[] entityList, object userState) {
            if ((this.ProductDescriptionProvider_BulkInsertOperationCompleted == null)) {
                this.ProductDescriptionProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductDescriptionProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("ProductDescriptionProvider_BulkInsert", new object[] {
                        entityList}, this.ProductDescriptionProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnProductDescriptionProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.ProductDescriptionProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductDescriptionProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductDescriptionProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductDescription ProductDescriptionProvider_Update(ProductDescription entity) {
            object[] results = this.Invoke("ProductDescriptionProvider_Update", new object[] {
                        entity});
            return ((ProductDescription)(results[0]));
        }
        
        /// <remarks/>
        public void ProductDescriptionProvider_UpdateAsync(ProductDescription entity) {
            this.ProductDescriptionProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void ProductDescriptionProvider_UpdateAsync(ProductDescription entity, object userState) {
            if ((this.ProductDescriptionProvider_UpdateOperationCompleted == null)) {
                this.ProductDescriptionProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductDescriptionProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("ProductDescriptionProvider_Update", new object[] {
                        entity}, this.ProductDescriptionProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnProductDescriptionProvider_UpdateOperationCompleted(object arg) {
            if ((this.ProductDescriptionProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductDescriptionProvider_UpdateCompleted(this, new ProductDescriptionProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VAdditionalContactInfoProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VAdditionalContactInfo[] VAdditionalContactInfoProvider_GetAll(int start, int pageLength) {
            object[] results = this.Invoke("VAdditionalContactInfoProvider_GetAll", new object[] {
                        start,
                        pageLength});
            return ((VAdditionalContactInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void VAdditionalContactInfoProvider_GetAllAsync(int start, int pageLength) {
            this.VAdditionalContactInfoProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void VAdditionalContactInfoProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.VAdditionalContactInfoProvider_GetAllOperationCompleted == null)) {
                this.VAdditionalContactInfoProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVAdditionalContactInfoProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("VAdditionalContactInfoProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.VAdditionalContactInfoProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnVAdditionalContactInfoProvider_GetAllOperationCompleted(object arg) {
            if ((this.VAdditionalContactInfoProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VAdditionalContactInfoProvider_GetAllCompleted(this, new VAdditionalContactInfoProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VAdditionalContactInfoProvider_Get", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VAdditionalContactInfo[] VAdditionalContactInfoProvider_Get(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VAdditionalContactInfoProvider_Get", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((VAdditionalContactInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void VAdditionalContactInfoProvider_GetAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.VAdditionalContactInfoProvider_GetAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VAdditionalContactInfoProvider_GetAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.VAdditionalContactInfoProvider_GetOperationCompleted == null)) {
                this.VAdditionalContactInfoProvider_GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVAdditionalContactInfoProvider_GetOperationCompleted);
            }
            this.InvokeAsync("VAdditionalContactInfoProvider_Get", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.VAdditionalContactInfoProvider_GetOperationCompleted, userState);
        }
        
        private void OnVAdditionalContactInfoProvider_GetOperationCompleted(object arg) {
            if ((this.VAdditionalContactInfoProvider_GetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VAdditionalContactInfoProvider_GetCompleted(this, new VAdditionalContactInfoProvider_GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VEmployeeProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VEmployee[] VEmployeeProvider_GetAll(int start, int pageLength) {
            object[] results = this.Invoke("VEmployeeProvider_GetAll", new object[] {
                        start,
                        pageLength});
            return ((VEmployee[])(results[0]));
        }
        
        /// <remarks/>
        public void VEmployeeProvider_GetAllAsync(int start, int pageLength) {
            this.VEmployeeProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void VEmployeeProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.VEmployeeProvider_GetAllOperationCompleted == null)) {
                this.VEmployeeProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVEmployeeProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("VEmployeeProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.VEmployeeProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnVEmployeeProvider_GetAllOperationCompleted(object arg) {
            if ((this.VEmployeeProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VEmployeeProvider_GetAllCompleted(this, new VEmployeeProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VEmployeeProvider_Get", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VEmployee[] VEmployeeProvider_Get(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VEmployeeProvider_Get", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((VEmployee[])(results[0]));
        }
        
        /// <remarks/>
        public void VEmployeeProvider_GetAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.VEmployeeProvider_GetAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VEmployeeProvider_GetAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.VEmployeeProvider_GetOperationCompleted == null)) {
                this.VEmployeeProvider_GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVEmployeeProvider_GetOperationCompleted);
            }
            this.InvokeAsync("VEmployeeProvider_Get", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.VEmployeeProvider_GetOperationCompleted, userState);
        }
        
        private void OnVEmployeeProvider_GetOperationCompleted(object arg) {
            if ((this.VEmployeeProvider_GetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VEmployeeProvider_GetCompleted(this, new VEmployeeProvider_GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VEmployeeDepartmentProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VEmployeeDepartment[] VEmployeeDepartmentProvider_GetAll(int start, int pageLength) {
            object[] results = this.Invoke("VEmployeeDepartmentProvider_GetAll", new object[] {
                        start,
                        pageLength});
            return ((VEmployeeDepartment[])(results[0]));
        }
        
        /// <remarks/>
        public void VEmployeeDepartmentProvider_GetAllAsync(int start, int pageLength) {
            this.VEmployeeDepartmentProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void VEmployeeDepartmentProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.VEmployeeDepartmentProvider_GetAllOperationCompleted == null)) {
                this.VEmployeeDepartmentProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVEmployeeDepartmentProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("VEmployeeDepartmentProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.VEmployeeDepartmentProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnVEmployeeDepartmentProvider_GetAllOperationCompleted(object arg) {
            if ((this.VEmployeeDepartmentProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VEmployeeDepartmentProvider_GetAllCompleted(this, new VEmployeeDepartmentProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VEmployeeDepartmentProvider_Get", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VEmployeeDepartment[] VEmployeeDepartmentProvider_Get(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VEmployeeDepartmentProvider_Get", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((VEmployeeDepartment[])(results[0]));
        }
        
        /// <remarks/>
        public void VEmployeeDepartmentProvider_GetAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.VEmployeeDepartmentProvider_GetAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VEmployeeDepartmentProvider_GetAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.VEmployeeDepartmentProvider_GetOperationCompleted == null)) {
                this.VEmployeeDepartmentProvider_GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVEmployeeDepartmentProvider_GetOperationCompleted);
            }
            this.InvokeAsync("VEmployeeDepartmentProvider_Get", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.VEmployeeDepartmentProvider_GetOperationCompleted, userState);
        }
        
        private void OnVEmployeeDepartmentProvider_GetOperationCompleted(object arg) {
            if ((this.VEmployeeDepartmentProvider_GetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VEmployeeDepartmentProvider_GetCompleted(this, new VEmployeeDepartmentProvider_GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VEmployeeDepartmentHistoryProvider_GetAll" +
            "", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VEmployeeDepartmentHistory[] VEmployeeDepartmentHistoryProvider_GetAll(int start, int pageLength) {
            object[] results = this.Invoke("VEmployeeDepartmentHistoryProvider_GetAll", new object[] {
                        start,
                        pageLength});
            return ((VEmployeeDepartmentHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void VEmployeeDepartmentHistoryProvider_GetAllAsync(int start, int pageLength) {
            this.VEmployeeDepartmentHistoryProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void VEmployeeDepartmentHistoryProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.VEmployeeDepartmentHistoryProvider_GetAllOperationCompleted == null)) {
                this.VEmployeeDepartmentHistoryProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVEmployeeDepartmentHistoryProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("VEmployeeDepartmentHistoryProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.VEmployeeDepartmentHistoryProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnVEmployeeDepartmentHistoryProvider_GetAllOperationCompleted(object arg) {
            if ((this.VEmployeeDepartmentHistoryProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VEmployeeDepartmentHistoryProvider_GetAllCompleted(this, new VEmployeeDepartmentHistoryProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VEmployeeDepartmentHistoryProvider_Get", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VEmployeeDepartmentHistory[] VEmployeeDepartmentHistoryProvider_Get(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VEmployeeDepartmentHistoryProvider_Get", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((VEmployeeDepartmentHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void VEmployeeDepartmentHistoryProvider_GetAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.VEmployeeDepartmentHistoryProvider_GetAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VEmployeeDepartmentHistoryProvider_GetAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.VEmployeeDepartmentHistoryProvider_GetOperationCompleted == null)) {
                this.VEmployeeDepartmentHistoryProvider_GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVEmployeeDepartmentHistoryProvider_GetOperationCompleted);
            }
            this.InvokeAsync("VEmployeeDepartmentHistoryProvider_Get", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.VEmployeeDepartmentHistoryProvider_GetOperationCompleted, userState);
        }
        
        private void OnVEmployeeDepartmentHistoryProvider_GetOperationCompleted(object arg) {
            if ((this.VEmployeeDepartmentHistoryProvider_GetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VEmployeeDepartmentHistoryProvider_GetCompleted(this, new VEmployeeDepartmentHistoryProvider_GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VIndividualCustomerProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VIndividualCustomer[] VIndividualCustomerProvider_GetAll(int start, int pageLength) {
            object[] results = this.Invoke("VIndividualCustomerProvider_GetAll", new object[] {
                        start,
                        pageLength});
            return ((VIndividualCustomer[])(results[0]));
        }
        
        /// <remarks/>
        public void VIndividualCustomerProvider_GetAllAsync(int start, int pageLength) {
            this.VIndividualCustomerProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void VIndividualCustomerProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.VIndividualCustomerProvider_GetAllOperationCompleted == null)) {
                this.VIndividualCustomerProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVIndividualCustomerProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("VIndividualCustomerProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.VIndividualCustomerProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnVIndividualCustomerProvider_GetAllOperationCompleted(object arg) {
            if ((this.VIndividualCustomerProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VIndividualCustomerProvider_GetAllCompleted(this, new VIndividualCustomerProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VIndividualCustomerProvider_Get", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VIndividualCustomer[] VIndividualCustomerProvider_Get(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VIndividualCustomerProvider_Get", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((VIndividualCustomer[])(results[0]));
        }
        
        /// <remarks/>
        public void VIndividualCustomerProvider_GetAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.VIndividualCustomerProvider_GetAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VIndividualCustomerProvider_GetAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.VIndividualCustomerProvider_GetOperationCompleted == null)) {
                this.VIndividualCustomerProvider_GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVIndividualCustomerProvider_GetOperationCompleted);
            }
            this.InvokeAsync("VIndividualCustomerProvider_Get", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.VIndividualCustomerProvider_GetOperationCompleted, userState);
        }
        
        private void OnVIndividualCustomerProvider_GetOperationCompleted(object arg) {
            if ((this.VIndividualCustomerProvider_GetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VIndividualCustomerProvider_GetCompleted(this, new VIndividualCustomerProvider_GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VIndividualDemographicsProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VIndividualDemographics[] VIndividualDemographicsProvider_GetAll(int start, int pageLength) {
            object[] results = this.Invoke("VIndividualDemographicsProvider_GetAll", new object[] {
                        start,
                        pageLength});
            return ((VIndividualDemographics[])(results[0]));
        }
        
        /// <remarks/>
        public void VIndividualDemographicsProvider_GetAllAsync(int start, int pageLength) {
            this.VIndividualDemographicsProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void VIndividualDemographicsProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.VIndividualDemographicsProvider_GetAllOperationCompleted == null)) {
                this.VIndividualDemographicsProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVIndividualDemographicsProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("VIndividualDemographicsProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.VIndividualDemographicsProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnVIndividualDemographicsProvider_GetAllOperationCompleted(object arg) {
            if ((this.VIndividualDemographicsProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VIndividualDemographicsProvider_GetAllCompleted(this, new VIndividualDemographicsProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VIndividualDemographicsProvider_Get", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VIndividualDemographics[] VIndividualDemographicsProvider_Get(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VIndividualDemographicsProvider_Get", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((VIndividualDemographics[])(results[0]));
        }
        
        /// <remarks/>
        public void VIndividualDemographicsProvider_GetAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.VIndividualDemographicsProvider_GetAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VIndividualDemographicsProvider_GetAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.VIndividualDemographicsProvider_GetOperationCompleted == null)) {
                this.VIndividualDemographicsProvider_GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVIndividualDemographicsProvider_GetOperationCompleted);
            }
            this.InvokeAsync("VIndividualDemographicsProvider_Get", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.VIndividualDemographicsProvider_GetOperationCompleted, userState);
        }
        
        private void OnVIndividualDemographicsProvider_GetOperationCompleted(object arg) {
            if ((this.VIndividualDemographicsProvider_GetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VIndividualDemographicsProvider_GetCompleted(this, new VIndividualDemographicsProvider_GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VJobCandidateProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VJobCandidate[] VJobCandidateProvider_GetAll(int start, int pageLength) {
            object[] results = this.Invoke("VJobCandidateProvider_GetAll", new object[] {
                        start,
                        pageLength});
            return ((VJobCandidate[])(results[0]));
        }
        
        /// <remarks/>
        public void VJobCandidateProvider_GetAllAsync(int start, int pageLength) {
            this.VJobCandidateProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void VJobCandidateProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.VJobCandidateProvider_GetAllOperationCompleted == null)) {
                this.VJobCandidateProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVJobCandidateProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("VJobCandidateProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.VJobCandidateProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnVJobCandidateProvider_GetAllOperationCompleted(object arg) {
            if ((this.VJobCandidateProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VJobCandidateProvider_GetAllCompleted(this, new VJobCandidateProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VJobCandidateProvider_Get", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VJobCandidate[] VJobCandidateProvider_Get(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VJobCandidateProvider_Get", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((VJobCandidate[])(results[0]));
        }
        
        /// <remarks/>
        public void VJobCandidateProvider_GetAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.VJobCandidateProvider_GetAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VJobCandidateProvider_GetAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.VJobCandidateProvider_GetOperationCompleted == null)) {
                this.VJobCandidateProvider_GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVJobCandidateProvider_GetOperationCompleted);
            }
            this.InvokeAsync("VJobCandidateProvider_Get", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.VJobCandidateProvider_GetOperationCompleted, userState);
        }
        
        private void OnVJobCandidateProvider_GetOperationCompleted(object arg) {
            if ((this.VJobCandidateProvider_GetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VJobCandidateProvider_GetCompleted(this, new VJobCandidateProvider_GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VJobCandidateEducationProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VJobCandidateEducation[] VJobCandidateEducationProvider_GetAll(int start, int pageLength) {
            object[] results = this.Invoke("VJobCandidateEducationProvider_GetAll", new object[] {
                        start,
                        pageLength});
            return ((VJobCandidateEducation[])(results[0]));
        }
        
        /// <remarks/>
        public void VJobCandidateEducationProvider_GetAllAsync(int start, int pageLength) {
            this.VJobCandidateEducationProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void VJobCandidateEducationProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.VJobCandidateEducationProvider_GetAllOperationCompleted == null)) {
                this.VJobCandidateEducationProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVJobCandidateEducationProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("VJobCandidateEducationProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.VJobCandidateEducationProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnVJobCandidateEducationProvider_GetAllOperationCompleted(object arg) {
            if ((this.VJobCandidateEducationProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VJobCandidateEducationProvider_GetAllCompleted(this, new VJobCandidateEducationProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VJobCandidateEducationProvider_Get", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VJobCandidateEducation[] VJobCandidateEducationProvider_Get(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VJobCandidateEducationProvider_Get", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((VJobCandidateEducation[])(results[0]));
        }
        
        /// <remarks/>
        public void VJobCandidateEducationProvider_GetAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.VJobCandidateEducationProvider_GetAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VJobCandidateEducationProvider_GetAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.VJobCandidateEducationProvider_GetOperationCompleted == null)) {
                this.VJobCandidateEducationProvider_GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVJobCandidateEducationProvider_GetOperationCompleted);
            }
            this.InvokeAsync("VJobCandidateEducationProvider_Get", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.VJobCandidateEducationProvider_GetOperationCompleted, userState);
        }
        
        private void OnVJobCandidateEducationProvider_GetOperationCompleted(object arg) {
            if ((this.VJobCandidateEducationProvider_GetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VJobCandidateEducationProvider_GetCompleted(this, new VJobCandidateEducationProvider_GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VJobCandidateEmploymentProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VJobCandidateEmployment[] VJobCandidateEmploymentProvider_GetAll(int start, int pageLength) {
            object[] results = this.Invoke("VJobCandidateEmploymentProvider_GetAll", new object[] {
                        start,
                        pageLength});
            return ((VJobCandidateEmployment[])(results[0]));
        }
        
        /// <remarks/>
        public void VJobCandidateEmploymentProvider_GetAllAsync(int start, int pageLength) {
            this.VJobCandidateEmploymentProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void VJobCandidateEmploymentProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.VJobCandidateEmploymentProvider_GetAllOperationCompleted == null)) {
                this.VJobCandidateEmploymentProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVJobCandidateEmploymentProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("VJobCandidateEmploymentProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.VJobCandidateEmploymentProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnVJobCandidateEmploymentProvider_GetAllOperationCompleted(object arg) {
            if ((this.VJobCandidateEmploymentProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VJobCandidateEmploymentProvider_GetAllCompleted(this, new VJobCandidateEmploymentProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VJobCandidateEmploymentProvider_Get", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VJobCandidateEmployment[] VJobCandidateEmploymentProvider_Get(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VJobCandidateEmploymentProvider_Get", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((VJobCandidateEmployment[])(results[0]));
        }
        
        /// <remarks/>
        public void VJobCandidateEmploymentProvider_GetAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.VJobCandidateEmploymentProvider_GetAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VJobCandidateEmploymentProvider_GetAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.VJobCandidateEmploymentProvider_GetOperationCompleted == null)) {
                this.VJobCandidateEmploymentProvider_GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVJobCandidateEmploymentProvider_GetOperationCompleted);
            }
            this.InvokeAsync("VJobCandidateEmploymentProvider_Get", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.VJobCandidateEmploymentProvider_GetOperationCompleted, userState);
        }
        
        private void OnVJobCandidateEmploymentProvider_GetOperationCompleted(object arg) {
            if ((this.VJobCandidateEmploymentProvider_GetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VJobCandidateEmploymentProvider_GetCompleted(this, new VJobCandidateEmploymentProvider_GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VProductAndDescriptionProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VProductAndDescription[] VProductAndDescriptionProvider_GetAll(int start, int pageLength) {
            object[] results = this.Invoke("VProductAndDescriptionProvider_GetAll", new object[] {
                        start,
                        pageLength});
            return ((VProductAndDescription[])(results[0]));
        }
        
        /// <remarks/>
        public void VProductAndDescriptionProvider_GetAllAsync(int start, int pageLength) {
            this.VProductAndDescriptionProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void VProductAndDescriptionProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.VProductAndDescriptionProvider_GetAllOperationCompleted == null)) {
                this.VProductAndDescriptionProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVProductAndDescriptionProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("VProductAndDescriptionProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.VProductAndDescriptionProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnVProductAndDescriptionProvider_GetAllOperationCompleted(object arg) {
            if ((this.VProductAndDescriptionProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VProductAndDescriptionProvider_GetAllCompleted(this, new VProductAndDescriptionProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VProductAndDescriptionProvider_Get", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VProductAndDescription[] VProductAndDescriptionProvider_Get(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VProductAndDescriptionProvider_Get", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((VProductAndDescription[])(results[0]));
        }
        
        /// <remarks/>
        public void VProductAndDescriptionProvider_GetAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.VProductAndDescriptionProvider_GetAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VProductAndDescriptionProvider_GetAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.VProductAndDescriptionProvider_GetOperationCompleted == null)) {
                this.VProductAndDescriptionProvider_GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVProductAndDescriptionProvider_GetOperationCompleted);
            }
            this.InvokeAsync("VProductAndDescriptionProvider_Get", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.VProductAndDescriptionProvider_GetOperationCompleted, userState);
        }
        
        private void OnVProductAndDescriptionProvider_GetOperationCompleted(object arg) {
            if ((this.VProductAndDescriptionProvider_GetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VProductAndDescriptionProvider_GetCompleted(this, new VProductAndDescriptionProvider_GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VProductModelCatalogDescriptionProvider_G" +
            "etAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VProductModelCatalogDescription[] VProductModelCatalogDescriptionProvider_GetAll(int start, int pageLength) {
            object[] results = this.Invoke("VProductModelCatalogDescriptionProvider_GetAll", new object[] {
                        start,
                        pageLength});
            return ((VProductModelCatalogDescription[])(results[0]));
        }
        
        /// <remarks/>
        public void VProductModelCatalogDescriptionProvider_GetAllAsync(int start, int pageLength) {
            this.VProductModelCatalogDescriptionProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void VProductModelCatalogDescriptionProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.VProductModelCatalogDescriptionProvider_GetAllOperationCompleted == null)) {
                this.VProductModelCatalogDescriptionProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVProductModelCatalogDescriptionProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("VProductModelCatalogDescriptionProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.VProductModelCatalogDescriptionProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnVProductModelCatalogDescriptionProvider_GetAllOperationCompleted(object arg) {
            if ((this.VProductModelCatalogDescriptionProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VProductModelCatalogDescriptionProvider_GetAllCompleted(this, new VProductModelCatalogDescriptionProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VProductModelCatalogDescriptionProvider_G" +
            "et", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VProductModelCatalogDescription[] VProductModelCatalogDescriptionProvider_Get(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VProductModelCatalogDescriptionProvider_Get", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((VProductModelCatalogDescription[])(results[0]));
        }
        
        /// <remarks/>
        public void VProductModelCatalogDescriptionProvider_GetAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.VProductModelCatalogDescriptionProvider_GetAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VProductModelCatalogDescriptionProvider_GetAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.VProductModelCatalogDescriptionProvider_GetOperationCompleted == null)) {
                this.VProductModelCatalogDescriptionProvider_GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVProductModelCatalogDescriptionProvider_GetOperationCompleted);
            }
            this.InvokeAsync("VProductModelCatalogDescriptionProvider_Get", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.VProductModelCatalogDescriptionProvider_GetOperationCompleted, userState);
        }
        
        private void OnVProductModelCatalogDescriptionProvider_GetOperationCompleted(object arg) {
            if ((this.VProductModelCatalogDescriptionProvider_GetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VProductModelCatalogDescriptionProvider_GetCompleted(this, new VProductModelCatalogDescriptionProvider_GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VProductModelInstructionsProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VProductModelInstructions[] VProductModelInstructionsProvider_GetAll(int start, int pageLength) {
            object[] results = this.Invoke("VProductModelInstructionsProvider_GetAll", new object[] {
                        start,
                        pageLength});
            return ((VProductModelInstructions[])(results[0]));
        }
        
        /// <remarks/>
        public void VProductModelInstructionsProvider_GetAllAsync(int start, int pageLength) {
            this.VProductModelInstructionsProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void VProductModelInstructionsProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.VProductModelInstructionsProvider_GetAllOperationCompleted == null)) {
                this.VProductModelInstructionsProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVProductModelInstructionsProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("VProductModelInstructionsProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.VProductModelInstructionsProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnVProductModelInstructionsProvider_GetAllOperationCompleted(object arg) {
            if ((this.VProductModelInstructionsProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VProductModelInstructionsProvider_GetAllCompleted(this, new VProductModelInstructionsProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VProductModelInstructionsProvider_Get", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VProductModelInstructions[] VProductModelInstructionsProvider_Get(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VProductModelInstructionsProvider_Get", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((VProductModelInstructions[])(results[0]));
        }
        
        /// <remarks/>
        public void VProductModelInstructionsProvider_GetAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.VProductModelInstructionsProvider_GetAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VProductModelInstructionsProvider_GetAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.VProductModelInstructionsProvider_GetOperationCompleted == null)) {
                this.VProductModelInstructionsProvider_GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVProductModelInstructionsProvider_GetOperationCompleted);
            }
            this.InvokeAsync("VProductModelInstructionsProvider_Get", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.VProductModelInstructionsProvider_GetOperationCompleted, userState);
        }
        
        private void OnVProductModelInstructionsProvider_GetOperationCompleted(object arg) {
            if ((this.VProductModelInstructionsProvider_GetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VProductModelInstructionsProvider_GetCompleted(this, new VProductModelInstructionsProvider_GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VSalesPersonProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VSalesPerson[] VSalesPersonProvider_GetAll(int start, int pageLength) {
            object[] results = this.Invoke("VSalesPersonProvider_GetAll", new object[] {
                        start,
                        pageLength});
            return ((VSalesPerson[])(results[0]));
        }
        
        /// <remarks/>
        public void VSalesPersonProvider_GetAllAsync(int start, int pageLength) {
            this.VSalesPersonProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void VSalesPersonProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.VSalesPersonProvider_GetAllOperationCompleted == null)) {
                this.VSalesPersonProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVSalesPersonProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("VSalesPersonProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.VSalesPersonProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnVSalesPersonProvider_GetAllOperationCompleted(object arg) {
            if ((this.VSalesPersonProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VSalesPersonProvider_GetAllCompleted(this, new VSalesPersonProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VSalesPersonProvider_Get", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VSalesPerson[] VSalesPersonProvider_Get(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VSalesPersonProvider_Get", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((VSalesPerson[])(results[0]));
        }
        
        /// <remarks/>
        public void VSalesPersonProvider_GetAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.VSalesPersonProvider_GetAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VSalesPersonProvider_GetAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.VSalesPersonProvider_GetOperationCompleted == null)) {
                this.VSalesPersonProvider_GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVSalesPersonProvider_GetOperationCompleted);
            }
            this.InvokeAsync("VSalesPersonProvider_Get", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.VSalesPersonProvider_GetOperationCompleted, userState);
        }
        
        private void OnVSalesPersonProvider_GetOperationCompleted(object arg) {
            if ((this.VSalesPersonProvider_GetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VSalesPersonProvider_GetCompleted(this, new VSalesPersonProvider_GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VSalesPersonSalesByFiscalYearsProvider_Ge" +
            "tAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VSalesPersonSalesByFiscalYears[] VSalesPersonSalesByFiscalYearsProvider_GetAll(int start, int pageLength) {
            object[] results = this.Invoke("VSalesPersonSalesByFiscalYearsProvider_GetAll", new object[] {
                        start,
                        pageLength});
            return ((VSalesPersonSalesByFiscalYears[])(results[0]));
        }
        
        /// <remarks/>
        public void VSalesPersonSalesByFiscalYearsProvider_GetAllAsync(int start, int pageLength) {
            this.VSalesPersonSalesByFiscalYearsProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void VSalesPersonSalesByFiscalYearsProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.VSalesPersonSalesByFiscalYearsProvider_GetAllOperationCompleted == null)) {
                this.VSalesPersonSalesByFiscalYearsProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVSalesPersonSalesByFiscalYearsProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("VSalesPersonSalesByFiscalYearsProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.VSalesPersonSalesByFiscalYearsProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnVSalesPersonSalesByFiscalYearsProvider_GetAllOperationCompleted(object arg) {
            if ((this.VSalesPersonSalesByFiscalYearsProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VSalesPersonSalesByFiscalYearsProvider_GetAllCompleted(this, new VSalesPersonSalesByFiscalYearsProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VSalesPersonSalesByFiscalYearsProvider_Ge" +
            "t", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VSalesPersonSalesByFiscalYears[] VSalesPersonSalesByFiscalYearsProvider_Get(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VSalesPersonSalesByFiscalYearsProvider_Get", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((VSalesPersonSalesByFiscalYears[])(results[0]));
        }
        
        /// <remarks/>
        public void VSalesPersonSalesByFiscalYearsProvider_GetAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.VSalesPersonSalesByFiscalYearsProvider_GetAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VSalesPersonSalesByFiscalYearsProvider_GetAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.VSalesPersonSalesByFiscalYearsProvider_GetOperationCompleted == null)) {
                this.VSalesPersonSalesByFiscalYearsProvider_GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVSalesPersonSalesByFiscalYearsProvider_GetOperationCompleted);
            }
            this.InvokeAsync("VSalesPersonSalesByFiscalYearsProvider_Get", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.VSalesPersonSalesByFiscalYearsProvider_GetOperationCompleted, userState);
        }
        
        private void OnVSalesPersonSalesByFiscalYearsProvider_GetOperationCompleted(object arg) {
            if ((this.VSalesPersonSalesByFiscalYearsProvider_GetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VSalesPersonSalesByFiscalYearsProvider_GetCompleted(this, new VSalesPersonSalesByFiscalYearsProvider_GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VStateProvinceCountryRegionProvider_GetAl" +
            "l", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VStateProvinceCountryRegion[] VStateProvinceCountryRegionProvider_GetAll(int start, int pageLength) {
            object[] results = this.Invoke("VStateProvinceCountryRegionProvider_GetAll", new object[] {
                        start,
                        pageLength});
            return ((VStateProvinceCountryRegion[])(results[0]));
        }
        
        /// <remarks/>
        public void VStateProvinceCountryRegionProvider_GetAllAsync(int start, int pageLength) {
            this.VStateProvinceCountryRegionProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void VStateProvinceCountryRegionProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.VStateProvinceCountryRegionProvider_GetAllOperationCompleted == null)) {
                this.VStateProvinceCountryRegionProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVStateProvinceCountryRegionProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("VStateProvinceCountryRegionProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.VStateProvinceCountryRegionProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnVStateProvinceCountryRegionProvider_GetAllOperationCompleted(object arg) {
            if ((this.VStateProvinceCountryRegionProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VStateProvinceCountryRegionProvider_GetAllCompleted(this, new VStateProvinceCountryRegionProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VStateProvinceCountryRegionProvider_Get", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VStateProvinceCountryRegion[] VStateProvinceCountryRegionProvider_Get(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VStateProvinceCountryRegionProvider_Get", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((VStateProvinceCountryRegion[])(results[0]));
        }
        
        /// <remarks/>
        public void VStateProvinceCountryRegionProvider_GetAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.VStateProvinceCountryRegionProvider_GetAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VStateProvinceCountryRegionProvider_GetAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.VStateProvinceCountryRegionProvider_GetOperationCompleted == null)) {
                this.VStateProvinceCountryRegionProvider_GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVStateProvinceCountryRegionProvider_GetOperationCompleted);
            }
            this.InvokeAsync("VStateProvinceCountryRegionProvider_Get", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.VStateProvinceCountryRegionProvider_GetOperationCompleted, userState);
        }
        
        private void OnVStateProvinceCountryRegionProvider_GetOperationCompleted(object arg) {
            if ((this.VStateProvinceCountryRegionProvider_GetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VStateProvinceCountryRegionProvider_GetCompleted(this, new VStateProvinceCountryRegionProvider_GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VStoreWithDemographicsProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VStoreWithDemographics[] VStoreWithDemographicsProvider_GetAll(int start, int pageLength) {
            object[] results = this.Invoke("VStoreWithDemographicsProvider_GetAll", new object[] {
                        start,
                        pageLength});
            return ((VStoreWithDemographics[])(results[0]));
        }
        
        /// <remarks/>
        public void VStoreWithDemographicsProvider_GetAllAsync(int start, int pageLength) {
            this.VStoreWithDemographicsProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void VStoreWithDemographicsProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.VStoreWithDemographicsProvider_GetAllOperationCompleted == null)) {
                this.VStoreWithDemographicsProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVStoreWithDemographicsProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("VStoreWithDemographicsProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.VStoreWithDemographicsProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnVStoreWithDemographicsProvider_GetAllOperationCompleted(object arg) {
            if ((this.VStoreWithDemographicsProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VStoreWithDemographicsProvider_GetAllCompleted(this, new VStoreWithDemographicsProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VStoreWithDemographicsProvider_Get", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VStoreWithDemographics[] VStoreWithDemographicsProvider_Get(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VStoreWithDemographicsProvider_Get", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((VStoreWithDemographics[])(results[0]));
        }
        
        /// <remarks/>
        public void VStoreWithDemographicsProvider_GetAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.VStoreWithDemographicsProvider_GetAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VStoreWithDemographicsProvider_GetAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.VStoreWithDemographicsProvider_GetOperationCompleted == null)) {
                this.VStoreWithDemographicsProvider_GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVStoreWithDemographicsProvider_GetOperationCompleted);
            }
            this.InvokeAsync("VStoreWithDemographicsProvider_Get", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.VStoreWithDemographicsProvider_GetOperationCompleted, userState);
        }
        
        private void OnVStoreWithDemographicsProvider_GetOperationCompleted(object arg) {
            if ((this.VStoreWithDemographicsProvider_GetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VStoreWithDemographicsProvider_GetCompleted(this, new VStoreWithDemographicsProvider_GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VVendorProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VVendor[] VVendorProvider_GetAll(int start, int pageLength) {
            object[] results = this.Invoke("VVendorProvider_GetAll", new object[] {
                        start,
                        pageLength});
            return ((VVendor[])(results[0]));
        }
        
        /// <remarks/>
        public void VVendorProvider_GetAllAsync(int start, int pageLength) {
            this.VVendorProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void VVendorProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.VVendorProvider_GetAllOperationCompleted == null)) {
                this.VVendorProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVVendorProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("VVendorProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.VVendorProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnVVendorProvider_GetAllOperationCompleted(object arg) {
            if ((this.VVendorProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VVendorProvider_GetAllCompleted(this, new VVendorProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VVendorProvider_Get", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VVendor[] VVendorProvider_Get(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VVendorProvider_Get", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((VVendor[])(results[0]));
        }
        
        /// <remarks/>
        public void VVendorProvider_GetAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.VVendorProvider_GetAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VVendorProvider_GetAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.VVendorProvider_GetOperationCompleted == null)) {
                this.VVendorProvider_GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVVendorProvider_GetOperationCompleted);
            }
            this.InvokeAsync("VVendorProvider_Get", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.VVendorProvider_GetOperationCompleted, userState);
        }
        
        private void OnVVendorProvider_GetOperationCompleted(object arg) {
            if ((this.VVendorProvider_GetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VVendorProvider_GetCompleted(this, new VVendorProvider_GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ExecuteNonQueryPs", RequestElementName="ExecuteNonQueryPs", RequestNamespace="http://localhost/AdventureWorksServices", ResponseElementName="ExecuteNonQueryPsResponse", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ExecuteNonQueryPsResult")]
        public int ExecuteNonQuery(string storedProcedureName, object[] parameterValues) {
            object[] results = this.Invoke("ExecuteNonQuery", new object[] {
                        storedProcedureName,
                        parameterValues});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteNonQueryAsync(string storedProcedureName, object[] parameterValues) {
            this.ExecuteNonQueryAsync(storedProcedureName, parameterValues, null);
        }
        
        /// <remarks/>
        public void ExecuteNonQueryAsync(string storedProcedureName, object[] parameterValues, object userState) {
            if ((this.ExecuteNonQueryOperationCompleted == null)) {
                this.ExecuteNonQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteNonQueryOperationCompleted);
            }
            this.InvokeAsync("ExecuteNonQuery", new object[] {
                        storedProcedureName,
                        parameterValues}, this.ExecuteNonQueryOperationCompleted, userState);
        }
        
        private void OnExecuteNonQueryOperationCompleted(object arg) {
            if ((this.ExecuteNonQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteNonQueryCompleted(this, new ExecuteNonQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="ExecuteNonQuery1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ExecuteNonQueryQry", RequestElementName="ExecuteNonQueryQry", RequestNamespace="http://localhost/AdventureWorksServices", ResponseElementName="ExecuteNonQueryQryResponse", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ExecuteNonQueryQryResult")]
        public int ExecuteNonQuery(CommandType commandType, string commandText) {
            object[] results = this.Invoke("ExecuteNonQuery1", new object[] {
                        commandType,
                        commandText});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteNonQuery1Async(CommandType commandType, string commandText) {
            this.ExecuteNonQuery1Async(commandType, commandText, null);
        }
        
        /// <remarks/>
        public void ExecuteNonQuery1Async(CommandType commandType, string commandText, object userState) {
            if ((this.ExecuteNonQuery1OperationCompleted == null)) {
                this.ExecuteNonQuery1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteNonQuery1OperationCompleted);
            }
            this.InvokeAsync("ExecuteNonQuery1", new object[] {
                        commandType,
                        commandText}, this.ExecuteNonQuery1OperationCompleted, userState);
        }
        
        private void OnExecuteNonQuery1OperationCompleted(object arg) {
            if ((this.ExecuteNonQuery1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteNonQuery1Completed(this, new ExecuteNonQuery1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ExecuteDataSetPs", RequestElementName="ExecuteDataSetPs", RequestNamespace="http://localhost/AdventureWorksServices", ResponseElementName="ExecuteDataSetPsResponse", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ExecuteDataSetPsResult")]
        public System.Data.DataSet ExecuteDataSet(string storedProcedureName, object[] parameterValues) {
            object[] results = this.Invoke("ExecuteDataSet", new object[] {
                        storedProcedureName,
                        parameterValues});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteDataSetAsync(string storedProcedureName, object[] parameterValues) {
            this.ExecuteDataSetAsync(storedProcedureName, parameterValues, null);
        }
        
        /// <remarks/>
        public void ExecuteDataSetAsync(string storedProcedureName, object[] parameterValues, object userState) {
            if ((this.ExecuteDataSetOperationCompleted == null)) {
                this.ExecuteDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteDataSetOperationCompleted);
            }
            this.InvokeAsync("ExecuteDataSet", new object[] {
                        storedProcedureName,
                        parameterValues}, this.ExecuteDataSetOperationCompleted, userState);
        }
        
        private void OnExecuteDataSetOperationCompleted(object arg) {
            if ((this.ExecuteDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteDataSetCompleted(this, new ExecuteDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="ExecuteDataSet1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ExecuteDataSetQry", RequestElementName="ExecuteDataSetQry", RequestNamespace="http://localhost/AdventureWorksServices", ResponseElementName="ExecuteDataSetQryResponse", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ExecuteDataSetQryResult")]
        public System.Data.DataSet ExecuteDataSet(CommandType commandType, string commandText) {
            object[] results = this.Invoke("ExecuteDataSet1", new object[] {
                        commandType,
                        commandText});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteDataSet1Async(CommandType commandType, string commandText) {
            this.ExecuteDataSet1Async(commandType, commandText, null);
        }
        
        /// <remarks/>
        public void ExecuteDataSet1Async(CommandType commandType, string commandText, object userState) {
            if ((this.ExecuteDataSet1OperationCompleted == null)) {
                this.ExecuteDataSet1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteDataSet1OperationCompleted);
            }
            this.InvokeAsync("ExecuteDataSet1", new object[] {
                        commandType,
                        commandText}, this.ExecuteDataSet1OperationCompleted, userState);
        }
        
        private void OnExecuteDataSet1OperationCompleted(object arg) {
            if ((this.ExecuteDataSet1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteDataSet1Completed(this, new ExecuteDataSet1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ExecuteScalarPs", RequestElementName="ExecuteScalarPs", RequestNamespace="http://localhost/AdventureWorksServices", ResponseElementName="ExecuteScalarPsResponse", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ExecuteScalarPsResult")]
        public object ExecuteScalar(string storedProcedureName, object[] parameterValues) {
            object[] results = this.Invoke("ExecuteScalar", new object[] {
                        storedProcedureName,
                        parameterValues});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteScalarAsync(string storedProcedureName, object[] parameterValues) {
            this.ExecuteScalarAsync(storedProcedureName, parameterValues, null);
        }
        
        /// <remarks/>
        public void ExecuteScalarAsync(string storedProcedureName, object[] parameterValues, object userState) {
            if ((this.ExecuteScalarOperationCompleted == null)) {
                this.ExecuteScalarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteScalarOperationCompleted);
            }
            this.InvokeAsync("ExecuteScalar", new object[] {
                        storedProcedureName,
                        parameterValues}, this.ExecuteScalarOperationCompleted, userState);
        }
        
        private void OnExecuteScalarOperationCompleted(object arg) {
            if ((this.ExecuteScalarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteScalarCompleted(this, new ExecuteScalarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="ExecuteScalar1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ExecuteScalarQry", RequestElementName="ExecuteScalarQry", RequestNamespace="http://localhost/AdventureWorksServices", ResponseElementName="ExecuteScalarQryResponse", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ExecuteScalarQryResult")]
        public object ExecuteScalar(CommandType commandType, string commandText) {
            object[] results = this.Invoke("ExecuteScalar1", new object[] {
                        commandType,
                        commandText});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteScalar1Async(CommandType commandType, string commandText) {
            this.ExecuteScalar1Async(commandType, commandText, null);
        }
        
        /// <remarks/>
        public void ExecuteScalar1Async(CommandType commandType, string commandText, object userState) {
            if ((this.ExecuteScalar1OperationCompleted == null)) {
                this.ExecuteScalar1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteScalar1OperationCompleted);
            }
            this.InvokeAsync("ExecuteScalar1", new object[] {
                        commandType,
                        commandText}, this.ExecuteScalar1OperationCompleted, userState);
        }
        
        private void OnExecuteScalar1OperationCompleted(object arg) {
            if ((this.ExecuteScalar1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteScalar1Completed(this, new ExecuteScalar1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StoreProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Store StoreProvider_Insert(Store entity) {
            object[] results = this.Invoke("StoreProvider_Insert", new object[] {
                        entity});
            return ((Store)(results[0]));
        }
        
        /// <remarks/>
        public void StoreProvider_InsertAsync(Store entity) {
            this.StoreProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void StoreProvider_InsertAsync(Store entity, object userState) {
            if ((this.StoreProvider_InsertOperationCompleted == null)) {
                this.StoreProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoreProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("StoreProvider_Insert", new object[] {
                        entity}, this.StoreProvider_InsertOperationCompleted, userState);
        }
        
        private void OnStoreProvider_InsertOperationCompleted(object arg) {
            if ((this.StoreProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoreProvider_InsertCompleted(this, new StoreProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StoreProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void StoreProvider_BulkInsert(Store[] entityList) {
            this.Invoke("StoreProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void StoreProvider_BulkInsertAsync(Store[] entityList) {
            this.StoreProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void StoreProvider_BulkInsertAsync(Store[] entityList, object userState) {
            if ((this.StoreProvider_BulkInsertOperationCompleted == null)) {
                this.StoreProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoreProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("StoreProvider_BulkInsert", new object[] {
                        entityList}, this.StoreProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnStoreProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.StoreProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoreProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StoreProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Store StoreProvider_Update(Store entity) {
            object[] results = this.Invoke("StoreProvider_Update", new object[] {
                        entity});
            return ((Store)(results[0]));
        }
        
        /// <remarks/>
        public void StoreProvider_UpdateAsync(Store entity) {
            this.StoreProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void StoreProvider_UpdateAsync(Store entity, object userState) {
            if ((this.StoreProvider_UpdateOperationCompleted == null)) {
                this.StoreProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoreProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("StoreProvider_Update", new object[] {
                        entity}, this.StoreProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnStoreProvider_UpdateOperationCompleted(object arg) {
            if ((this.StoreProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoreProvider_UpdateCompleted(this, new StoreProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/UnitMeasureProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UnitMeasureProvider_Delete(string _unitMeasureCode) {
            object[] results = this.Invoke("UnitMeasureProvider_Delete", new object[] {
                        _unitMeasureCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UnitMeasureProvider_DeleteAsync(string _unitMeasureCode) {
            this.UnitMeasureProvider_DeleteAsync(_unitMeasureCode, null);
        }
        
        /// <remarks/>
        public void UnitMeasureProvider_DeleteAsync(string _unitMeasureCode, object userState) {
            if ((this.UnitMeasureProvider_DeleteOperationCompleted == null)) {
                this.UnitMeasureProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnitMeasureProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("UnitMeasureProvider_Delete", new object[] {
                        _unitMeasureCode}, this.UnitMeasureProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnUnitMeasureProvider_DeleteOperationCompleted(object arg) {
            if ((this.UnitMeasureProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnitMeasureProvider_DeleteCompleted(this, new UnitMeasureProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/UnitMeasureProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UnitMeasure[] UnitMeasureProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("UnitMeasureProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((UnitMeasure[])(results[0]));
        }
        
        /// <remarks/>
        public void UnitMeasureProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.UnitMeasureProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void UnitMeasureProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.UnitMeasureProvider_FindOperationCompleted == null)) {
                this.UnitMeasureProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnitMeasureProvider_FindOperationCompleted);
            }
            this.InvokeAsync("UnitMeasureProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.UnitMeasureProvider_FindOperationCompleted, userState);
        }
        
        private void OnUnitMeasureProvider_FindOperationCompleted(object arg) {
            if ((this.UnitMeasureProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnitMeasureProvider_FindCompleted(this, new UnitMeasureProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/UnitMeasureProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UnitMeasure[] UnitMeasureProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("UnitMeasureProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((UnitMeasure[])(results[0]));
        }
        
        /// <remarks/>
        public void UnitMeasureProvider_GetAllAsync(int start, int pageLength) {
            this.UnitMeasureProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void UnitMeasureProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.UnitMeasureProvider_GetAllOperationCompleted == null)) {
                this.UnitMeasureProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnitMeasureProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("UnitMeasureProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.UnitMeasureProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnUnitMeasureProvider_GetAllOperationCompleted(object arg) {
            if ((this.UnitMeasureProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnitMeasureProvider_GetAllCompleted(this, new UnitMeasureProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/UnitMeasureProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UnitMeasure[] UnitMeasureProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("UnitMeasureProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((UnitMeasure[])(results[0]));
        }
        
        /// <remarks/>
        public void UnitMeasureProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.UnitMeasureProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void UnitMeasureProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.UnitMeasureProvider_GetPagedOperationCompleted == null)) {
                this.UnitMeasureProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnitMeasureProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("UnitMeasureProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.UnitMeasureProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnUnitMeasureProvider_GetPagedOperationCompleted(object arg) {
            if ((this.UnitMeasureProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnitMeasureProvider_GetPagedCompleted(this, new UnitMeasureProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/UnitMeasureProvider_GetByName", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UnitMeasure UnitMeasureProvider_GetByName(string _name, int start, int pageLength, out int count) {
            object[] results = this.Invoke("UnitMeasureProvider_GetByName", new object[] {
                        _name,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((UnitMeasure)(results[0]));
        }
        
        /// <remarks/>
        public void UnitMeasureProvider_GetByNameAsync(string _name, int start, int pageLength) {
            this.UnitMeasureProvider_GetByNameAsync(_name, start, pageLength, null);
        }
        
        /// <remarks/>
        public void UnitMeasureProvider_GetByNameAsync(string _name, int start, int pageLength, object userState) {
            if ((this.UnitMeasureProvider_GetByNameOperationCompleted == null)) {
                this.UnitMeasureProvider_GetByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnitMeasureProvider_GetByNameOperationCompleted);
            }
            this.InvokeAsync("UnitMeasureProvider_GetByName", new object[] {
                        _name,
                        start,
                        pageLength}, this.UnitMeasureProvider_GetByNameOperationCompleted, userState);
        }
        
        private void OnUnitMeasureProvider_GetByNameOperationCompleted(object arg) {
            if ((this.UnitMeasureProvider_GetByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnitMeasureProvider_GetByNameCompleted(this, new UnitMeasureProvider_GetByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/UnitMeasureProvider_GetByUnitMeasureCode", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UnitMeasure UnitMeasureProvider_GetByUnitMeasureCode(string _unitMeasureCode, int start, int pageLength, out int count) {
            object[] results = this.Invoke("UnitMeasureProvider_GetByUnitMeasureCode", new object[] {
                        _unitMeasureCode,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((UnitMeasure)(results[0]));
        }
        
        /// <remarks/>
        public void UnitMeasureProvider_GetByUnitMeasureCodeAsync(string _unitMeasureCode, int start, int pageLength) {
            this.UnitMeasureProvider_GetByUnitMeasureCodeAsync(_unitMeasureCode, start, pageLength, null);
        }
        
        /// <remarks/>
        public void UnitMeasureProvider_GetByUnitMeasureCodeAsync(string _unitMeasureCode, int start, int pageLength, object userState) {
            if ((this.UnitMeasureProvider_GetByUnitMeasureCodeOperationCompleted == null)) {
                this.UnitMeasureProvider_GetByUnitMeasureCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnitMeasureProvider_GetByUnitMeasureCodeOperationCompleted);
            }
            this.InvokeAsync("UnitMeasureProvider_GetByUnitMeasureCode", new object[] {
                        _unitMeasureCode,
                        start,
                        pageLength}, this.UnitMeasureProvider_GetByUnitMeasureCodeOperationCompleted, userState);
        }
        
        private void OnUnitMeasureProvider_GetByUnitMeasureCodeOperationCompleted(object arg) {
            if ((this.UnitMeasureProvider_GetByUnitMeasureCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnitMeasureProvider_GetByUnitMeasureCodeCompleted(this, new UnitMeasureProvider_GetByUnitMeasureCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/UnitMeasureProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UnitMeasure UnitMeasureProvider_Insert(UnitMeasure entity) {
            object[] results = this.Invoke("UnitMeasureProvider_Insert", new object[] {
                        entity});
            return ((UnitMeasure)(results[0]));
        }
        
        /// <remarks/>
        public void UnitMeasureProvider_InsertAsync(UnitMeasure entity) {
            this.UnitMeasureProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void UnitMeasureProvider_InsertAsync(UnitMeasure entity, object userState) {
            if ((this.UnitMeasureProvider_InsertOperationCompleted == null)) {
                this.UnitMeasureProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnitMeasureProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("UnitMeasureProvider_Insert", new object[] {
                        entity}, this.UnitMeasureProvider_InsertOperationCompleted, userState);
        }
        
        private void OnUnitMeasureProvider_InsertOperationCompleted(object arg) {
            if ((this.UnitMeasureProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnitMeasureProvider_InsertCompleted(this, new UnitMeasureProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/UnitMeasureProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UnitMeasureProvider_BulkInsert(UnitMeasure[] entityList) {
            this.Invoke("UnitMeasureProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void UnitMeasureProvider_BulkInsertAsync(UnitMeasure[] entityList) {
            this.UnitMeasureProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void UnitMeasureProvider_BulkInsertAsync(UnitMeasure[] entityList, object userState) {
            if ((this.UnitMeasureProvider_BulkInsertOperationCompleted == null)) {
                this.UnitMeasureProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnitMeasureProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("UnitMeasureProvider_BulkInsert", new object[] {
                        entityList}, this.UnitMeasureProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnUnitMeasureProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.UnitMeasureProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnitMeasureProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/UnitMeasureProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UnitMeasure UnitMeasureProvider_Update(UnitMeasure entity) {
            object[] results = this.Invoke("UnitMeasureProvider_Update", new object[] {
                        entity});
            return ((UnitMeasure)(results[0]));
        }
        
        /// <remarks/>
        public void UnitMeasureProvider_UpdateAsync(UnitMeasure entity) {
            this.UnitMeasureProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void UnitMeasureProvider_UpdateAsync(UnitMeasure entity, object userState) {
            if ((this.UnitMeasureProvider_UpdateOperationCompleted == null)) {
                this.UnitMeasureProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnitMeasureProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("UnitMeasureProvider_Update", new object[] {
                        entity}, this.UnitMeasureProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnUnitMeasureProvider_UpdateOperationCompleted(object arg) {
            if ((this.UnitMeasureProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnitMeasureProvider_UpdateCompleted(this, new UnitMeasureProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesTaxRateProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SalesTaxRateProvider_Delete(int _salesTaxRateId) {
            object[] results = this.Invoke("SalesTaxRateProvider_Delete", new object[] {
                        _salesTaxRateId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SalesTaxRateProvider_DeleteAsync(int _salesTaxRateId) {
            this.SalesTaxRateProvider_DeleteAsync(_salesTaxRateId, null);
        }
        
        /// <remarks/>
        public void SalesTaxRateProvider_DeleteAsync(int _salesTaxRateId, object userState) {
            if ((this.SalesTaxRateProvider_DeleteOperationCompleted == null)) {
                this.SalesTaxRateProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesTaxRateProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("SalesTaxRateProvider_Delete", new object[] {
                        _salesTaxRateId}, this.SalesTaxRateProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnSalesTaxRateProvider_DeleteOperationCompleted(object arg) {
            if ((this.SalesTaxRateProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesTaxRateProvider_DeleteCompleted(this, new SalesTaxRateProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesTaxRateProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesTaxRate[] SalesTaxRateProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesTaxRateProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesTaxRate[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesTaxRateProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.SalesTaxRateProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesTaxRateProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.SalesTaxRateProvider_FindOperationCompleted == null)) {
                this.SalesTaxRateProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesTaxRateProvider_FindOperationCompleted);
            }
            this.InvokeAsync("SalesTaxRateProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.SalesTaxRateProvider_FindOperationCompleted, userState);
        }
        
        private void OnSalesTaxRateProvider_FindOperationCompleted(object arg) {
            if ((this.SalesTaxRateProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesTaxRateProvider_FindCompleted(this, new SalesTaxRateProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesTaxRateProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesTaxRate[] SalesTaxRateProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesTaxRateProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesTaxRate[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesTaxRateProvider_GetAllAsync(int start, int pageLength) {
            this.SalesTaxRateProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesTaxRateProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.SalesTaxRateProvider_GetAllOperationCompleted == null)) {
                this.SalesTaxRateProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesTaxRateProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("SalesTaxRateProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.SalesTaxRateProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnSalesTaxRateProvider_GetAllOperationCompleted(object arg) {
            if ((this.SalesTaxRateProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesTaxRateProvider_GetAllCompleted(this, new SalesTaxRateProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesTaxRateProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesTaxRate[] SalesTaxRateProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesTaxRateProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesTaxRate[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesTaxRateProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.SalesTaxRateProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesTaxRateProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.SalesTaxRateProvider_GetPagedOperationCompleted == null)) {
                this.SalesTaxRateProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesTaxRateProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("SalesTaxRateProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.SalesTaxRateProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnSalesTaxRateProvider_GetPagedOperationCompleted(object arg) {
            if ((this.SalesTaxRateProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesTaxRateProvider_GetPagedCompleted(this, new SalesTaxRateProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesTaxRateProvider_GetByStateProvinceId" +
            "", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesTaxRate[] SalesTaxRateProvider_GetByStateProvinceId(int _stateProvinceId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesTaxRateProvider_GetByStateProvinceId", new object[] {
                        _stateProvinceId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesTaxRate[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesTaxRateProvider_GetByStateProvinceIdAsync(int _stateProvinceId, int start, int pageLength) {
            this.SalesTaxRateProvider_GetByStateProvinceIdAsync(_stateProvinceId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesTaxRateProvider_GetByStateProvinceIdAsync(int _stateProvinceId, int start, int pageLength, object userState) {
            if ((this.SalesTaxRateProvider_GetByStateProvinceIdOperationCompleted == null)) {
                this.SalesTaxRateProvider_GetByStateProvinceIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesTaxRateProvider_GetByStateProvinceIdOperationCompleted);
            }
            this.InvokeAsync("SalesTaxRateProvider_GetByStateProvinceId", new object[] {
                        _stateProvinceId,
                        start,
                        pageLength}, this.SalesTaxRateProvider_GetByStateProvinceIdOperationCompleted, userState);
        }
        
        private void OnSalesTaxRateProvider_GetByStateProvinceIdOperationCompleted(object arg) {
            if ((this.SalesTaxRateProvider_GetByStateProvinceIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesTaxRateProvider_GetByStateProvinceIdCompleted(this, new SalesTaxRateProvider_GetByStateProvinceIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesTaxRateProvider_GetByRowguid", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesTaxRate SalesTaxRateProvider_GetByRowguid(System.Guid _rowguid, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesTaxRateProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesTaxRate)(results[0]));
        }
        
        /// <remarks/>
        public void SalesTaxRateProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength) {
            this.SalesTaxRateProvider_GetByRowguidAsync(_rowguid, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesTaxRateProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength, object userState) {
            if ((this.SalesTaxRateProvider_GetByRowguidOperationCompleted == null)) {
                this.SalesTaxRateProvider_GetByRowguidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesTaxRateProvider_GetByRowguidOperationCompleted);
            }
            this.InvokeAsync("SalesTaxRateProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength}, this.SalesTaxRateProvider_GetByRowguidOperationCompleted, userState);
        }
        
        private void OnSalesTaxRateProvider_GetByRowguidOperationCompleted(object arg) {
            if ((this.SalesTaxRateProvider_GetByRowguidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesTaxRateProvider_GetByRowguidCompleted(this, new SalesTaxRateProvider_GetByRowguidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesTaxRateProvider_GetByStateProvinceId" +
            "TaxType", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesTaxRate SalesTaxRateProvider_GetByStateProvinceIdTaxType(int _stateProvinceId, byte _taxType, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesTaxRateProvider_GetByStateProvinceIdTaxType", new object[] {
                        _stateProvinceId,
                        _taxType,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesTaxRate)(results[0]));
        }
        
        /// <remarks/>
        public void SalesTaxRateProvider_GetByStateProvinceIdTaxTypeAsync(int _stateProvinceId, byte _taxType, int start, int pageLength) {
            this.SalesTaxRateProvider_GetByStateProvinceIdTaxTypeAsync(_stateProvinceId, _taxType, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesTaxRateProvider_GetByStateProvinceIdTaxTypeAsync(int _stateProvinceId, byte _taxType, int start, int pageLength, object userState) {
            if ((this.SalesTaxRateProvider_GetByStateProvinceIdTaxTypeOperationCompleted == null)) {
                this.SalesTaxRateProvider_GetByStateProvinceIdTaxTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesTaxRateProvider_GetByStateProvinceIdTaxTypeOperationCompleted);
            }
            this.InvokeAsync("SalesTaxRateProvider_GetByStateProvinceIdTaxType", new object[] {
                        _stateProvinceId,
                        _taxType,
                        start,
                        pageLength}, this.SalesTaxRateProvider_GetByStateProvinceIdTaxTypeOperationCompleted, userState);
        }
        
        private void OnSalesTaxRateProvider_GetByStateProvinceIdTaxTypeOperationCompleted(object arg) {
            if ((this.SalesTaxRateProvider_GetByStateProvinceIdTaxTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesTaxRateProvider_GetByStateProvinceIdTaxTypeCompleted(this, new SalesTaxRateProvider_GetByStateProvinceIdTaxTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesTaxRateProvider_GetBySalesTaxRateId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesTaxRate SalesTaxRateProvider_GetBySalesTaxRateId(int _salesTaxRateId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesTaxRateProvider_GetBySalesTaxRateId", new object[] {
                        _salesTaxRateId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesTaxRate)(results[0]));
        }
        
        /// <remarks/>
        public void SalesTaxRateProvider_GetBySalesTaxRateIdAsync(int _salesTaxRateId, int start, int pageLength) {
            this.SalesTaxRateProvider_GetBySalesTaxRateIdAsync(_salesTaxRateId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesTaxRateProvider_GetBySalesTaxRateIdAsync(int _salesTaxRateId, int start, int pageLength, object userState) {
            if ((this.SalesTaxRateProvider_GetBySalesTaxRateIdOperationCompleted == null)) {
                this.SalesTaxRateProvider_GetBySalesTaxRateIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesTaxRateProvider_GetBySalesTaxRateIdOperationCompleted);
            }
            this.InvokeAsync("SalesTaxRateProvider_GetBySalesTaxRateId", new object[] {
                        _salesTaxRateId,
                        start,
                        pageLength}, this.SalesTaxRateProvider_GetBySalesTaxRateIdOperationCompleted, userState);
        }
        
        private void OnSalesTaxRateProvider_GetBySalesTaxRateIdOperationCompleted(object arg) {
            if ((this.SalesTaxRateProvider_GetBySalesTaxRateIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesTaxRateProvider_GetBySalesTaxRateIdCompleted(this, new SalesTaxRateProvider_GetBySalesTaxRateIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesTaxRateProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesTaxRate SalesTaxRateProvider_Insert(SalesTaxRate entity) {
            object[] results = this.Invoke("SalesTaxRateProvider_Insert", new object[] {
                        entity});
            return ((SalesTaxRate)(results[0]));
        }
        
        /// <remarks/>
        public void SalesTaxRateProvider_InsertAsync(SalesTaxRate entity) {
            this.SalesTaxRateProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void SalesTaxRateProvider_InsertAsync(SalesTaxRate entity, object userState) {
            if ((this.SalesTaxRateProvider_InsertOperationCompleted == null)) {
                this.SalesTaxRateProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesTaxRateProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("SalesTaxRateProvider_Insert", new object[] {
                        entity}, this.SalesTaxRateProvider_InsertOperationCompleted, userState);
        }
        
        private void OnSalesTaxRateProvider_InsertOperationCompleted(object arg) {
            if ((this.SalesTaxRateProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesTaxRateProvider_InsertCompleted(this, new SalesTaxRateProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesTaxRateProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SalesTaxRateProvider_BulkInsert(SalesTaxRate[] entityList) {
            this.Invoke("SalesTaxRateProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void SalesTaxRateProvider_BulkInsertAsync(SalesTaxRate[] entityList) {
            this.SalesTaxRateProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void SalesTaxRateProvider_BulkInsertAsync(SalesTaxRate[] entityList, object userState) {
            if ((this.SalesTaxRateProvider_BulkInsertOperationCompleted == null)) {
                this.SalesTaxRateProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesTaxRateProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("SalesTaxRateProvider_BulkInsert", new object[] {
                        entityList}, this.SalesTaxRateProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnSalesTaxRateProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.SalesTaxRateProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesTaxRateProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesTaxRateProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesTaxRate SalesTaxRateProvider_Update(SalesTaxRate entity) {
            object[] results = this.Invoke("SalesTaxRateProvider_Update", new object[] {
                        entity});
            return ((SalesTaxRate)(results[0]));
        }
        
        /// <remarks/>
        public void SalesTaxRateProvider_UpdateAsync(SalesTaxRate entity) {
            this.SalesTaxRateProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void SalesTaxRateProvider_UpdateAsync(SalesTaxRate entity, object userState) {
            if ((this.SalesTaxRateProvider_UpdateOperationCompleted == null)) {
                this.SalesTaxRateProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesTaxRateProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("SalesTaxRateProvider_Update", new object[] {
                        entity}, this.SalesTaxRateProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnSalesTaxRateProvider_UpdateOperationCompleted(object arg) {
            if ((this.SalesTaxRateProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesTaxRateProvider_UpdateCompleted(this, new SalesTaxRateProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SpecialOfferProductProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SpecialOfferProductProvider_Delete(int _specialOfferId, int _productId) {
            object[] results = this.Invoke("SpecialOfferProductProvider_Delete", new object[] {
                        _specialOfferId,
                        _productId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SpecialOfferProductProvider_DeleteAsync(int _specialOfferId, int _productId) {
            this.SpecialOfferProductProvider_DeleteAsync(_specialOfferId, _productId, null);
        }
        
        /// <remarks/>
        public void SpecialOfferProductProvider_DeleteAsync(int _specialOfferId, int _productId, object userState) {
            if ((this.SpecialOfferProductProvider_DeleteOperationCompleted == null)) {
                this.SpecialOfferProductProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSpecialOfferProductProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("SpecialOfferProductProvider_Delete", new object[] {
                        _specialOfferId,
                        _productId}, this.SpecialOfferProductProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnSpecialOfferProductProvider_DeleteOperationCompleted(object arg) {
            if ((this.SpecialOfferProductProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SpecialOfferProductProvider_DeleteCompleted(this, new SpecialOfferProductProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SpecialOfferProductProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SpecialOfferProduct[] SpecialOfferProductProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SpecialOfferProductProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SpecialOfferProduct[])(results[0]));
        }
        
        /// <remarks/>
        public void SpecialOfferProductProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.SpecialOfferProductProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SpecialOfferProductProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.SpecialOfferProductProvider_FindOperationCompleted == null)) {
                this.SpecialOfferProductProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSpecialOfferProductProvider_FindOperationCompleted);
            }
            this.InvokeAsync("SpecialOfferProductProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.SpecialOfferProductProvider_FindOperationCompleted, userState);
        }
        
        private void OnSpecialOfferProductProvider_FindOperationCompleted(object arg) {
            if ((this.SpecialOfferProductProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SpecialOfferProductProvider_FindCompleted(this, new SpecialOfferProductProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SpecialOfferProductProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SpecialOfferProduct[] SpecialOfferProductProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("SpecialOfferProductProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SpecialOfferProduct[])(results[0]));
        }
        
        /// <remarks/>
        public void SpecialOfferProductProvider_GetAllAsync(int start, int pageLength) {
            this.SpecialOfferProductProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void SpecialOfferProductProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.SpecialOfferProductProvider_GetAllOperationCompleted == null)) {
                this.SpecialOfferProductProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSpecialOfferProductProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("SpecialOfferProductProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.SpecialOfferProductProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnSpecialOfferProductProvider_GetAllOperationCompleted(object arg) {
            if ((this.SpecialOfferProductProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SpecialOfferProductProvider_GetAllCompleted(this, new SpecialOfferProductProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SpecialOfferProductProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SpecialOfferProduct[] SpecialOfferProductProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SpecialOfferProductProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SpecialOfferProduct[])(results[0]));
        }
        
        /// <remarks/>
        public void SpecialOfferProductProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.SpecialOfferProductProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SpecialOfferProductProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.SpecialOfferProductProvider_GetPagedOperationCompleted == null)) {
                this.SpecialOfferProductProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSpecialOfferProductProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("SpecialOfferProductProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.SpecialOfferProductProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnSpecialOfferProductProvider_GetPagedOperationCompleted(object arg) {
            if ((this.SpecialOfferProductProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SpecialOfferProductProvider_GetPagedCompleted(this, new SpecialOfferProductProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SpecialOfferProductProvider_GetBySpecialO" +
            "fferId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SpecialOfferProduct[] SpecialOfferProductProvider_GetBySpecialOfferId(int _specialOfferId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SpecialOfferProductProvider_GetBySpecialOfferId", new object[] {
                        _specialOfferId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SpecialOfferProduct[])(results[0]));
        }
        
        /// <remarks/>
        public void SpecialOfferProductProvider_GetBySpecialOfferIdAsync(int _specialOfferId, int start, int pageLength) {
            this.SpecialOfferProductProvider_GetBySpecialOfferIdAsync(_specialOfferId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SpecialOfferProductProvider_GetBySpecialOfferIdAsync(int _specialOfferId, int start, int pageLength, object userState) {
            if ((this.SpecialOfferProductProvider_GetBySpecialOfferIdOperationCompleted == null)) {
                this.SpecialOfferProductProvider_GetBySpecialOfferIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSpecialOfferProductProvider_GetBySpecialOfferIdOperationCompleted);
            }
            this.InvokeAsync("SpecialOfferProductProvider_GetBySpecialOfferId", new object[] {
                        _specialOfferId,
                        start,
                        pageLength}, this.SpecialOfferProductProvider_GetBySpecialOfferIdOperationCompleted, userState);
        }
        
        private void OnSpecialOfferProductProvider_GetBySpecialOfferIdOperationCompleted(object arg) {
            if ((this.SpecialOfferProductProvider_GetBySpecialOfferIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SpecialOfferProductProvider_GetBySpecialOfferIdCompleted(this, new SpecialOfferProductProvider_GetBySpecialOfferIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SpecialOfferProductProvider_GetByRowguid", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SpecialOfferProduct SpecialOfferProductProvider_GetByRowguid(System.Guid _rowguid, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SpecialOfferProductProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SpecialOfferProduct)(results[0]));
        }
        
        /// <remarks/>
        public void SpecialOfferProductProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength) {
            this.SpecialOfferProductProvider_GetByRowguidAsync(_rowguid, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SpecialOfferProductProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength, object userState) {
            if ((this.SpecialOfferProductProvider_GetByRowguidOperationCompleted == null)) {
                this.SpecialOfferProductProvider_GetByRowguidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSpecialOfferProductProvider_GetByRowguidOperationCompleted);
            }
            this.InvokeAsync("SpecialOfferProductProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength}, this.SpecialOfferProductProvider_GetByRowguidOperationCompleted, userState);
        }
        
        private void OnSpecialOfferProductProvider_GetByRowguidOperationCompleted(object arg) {
            if ((this.SpecialOfferProductProvider_GetByRowguidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SpecialOfferProductProvider_GetByRowguidCompleted(this, new SpecialOfferProductProvider_GetByRowguidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SpecialOfferProductProvider_GetByProductI" +
            "d", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SpecialOfferProduct[] SpecialOfferProductProvider_GetByProductId(int _productId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SpecialOfferProductProvider_GetByProductId", new object[] {
                        _productId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SpecialOfferProduct[])(results[0]));
        }
        
        /// <remarks/>
        public void SpecialOfferProductProvider_GetByProductIdAsync(int _productId, int start, int pageLength) {
            this.SpecialOfferProductProvider_GetByProductIdAsync(_productId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SpecialOfferProductProvider_GetByProductIdAsync(int _productId, int start, int pageLength, object userState) {
            if ((this.SpecialOfferProductProvider_GetByProductIdOperationCompleted == null)) {
                this.SpecialOfferProductProvider_GetByProductIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSpecialOfferProductProvider_GetByProductIdOperationCompleted);
            }
            this.InvokeAsync("SpecialOfferProductProvider_GetByProductId", new object[] {
                        _productId,
                        start,
                        pageLength}, this.SpecialOfferProductProvider_GetByProductIdOperationCompleted, userState);
        }
        
        private void OnSpecialOfferProductProvider_GetByProductIdOperationCompleted(object arg) {
            if ((this.SpecialOfferProductProvider_GetByProductIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SpecialOfferProductProvider_GetByProductIdCompleted(this, new SpecialOfferProductProvider_GetByProductIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SpecialOfferProductProvider_GetBySpecialO" +
            "fferIdProductId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SpecialOfferProduct SpecialOfferProductProvider_GetBySpecialOfferIdProductId(int _specialOfferId, int _productId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SpecialOfferProductProvider_GetBySpecialOfferIdProductId", new object[] {
                        _specialOfferId,
                        _productId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SpecialOfferProduct)(results[0]));
        }
        
        /// <remarks/>
        public void SpecialOfferProductProvider_GetBySpecialOfferIdProductIdAsync(int _specialOfferId, int _productId, int start, int pageLength) {
            this.SpecialOfferProductProvider_GetBySpecialOfferIdProductIdAsync(_specialOfferId, _productId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SpecialOfferProductProvider_GetBySpecialOfferIdProductIdAsync(int _specialOfferId, int _productId, int start, int pageLength, object userState) {
            if ((this.SpecialOfferProductProvider_GetBySpecialOfferIdProductIdOperationCompleted == null)) {
                this.SpecialOfferProductProvider_GetBySpecialOfferIdProductIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSpecialOfferProductProvider_GetBySpecialOfferIdProductIdOperationCompleted);
            }
            this.InvokeAsync("SpecialOfferProductProvider_GetBySpecialOfferIdProductId", new object[] {
                        _specialOfferId,
                        _productId,
                        start,
                        pageLength}, this.SpecialOfferProductProvider_GetBySpecialOfferIdProductIdOperationCompleted, userState);
        }
        
        private void OnSpecialOfferProductProvider_GetBySpecialOfferIdProductIdOperationCompleted(object arg) {
            if ((this.SpecialOfferProductProvider_GetBySpecialOfferIdProductIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SpecialOfferProductProvider_GetBySpecialOfferIdProductIdCompleted(this, new SpecialOfferProductProvider_GetBySpecialOfferIdProductIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SpecialOfferProductProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SpecialOfferProduct SpecialOfferProductProvider_Insert(SpecialOfferProduct entity) {
            object[] results = this.Invoke("SpecialOfferProductProvider_Insert", new object[] {
                        entity});
            return ((SpecialOfferProduct)(results[0]));
        }
        
        /// <remarks/>
        public void SpecialOfferProductProvider_InsertAsync(SpecialOfferProduct entity) {
            this.SpecialOfferProductProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void SpecialOfferProductProvider_InsertAsync(SpecialOfferProduct entity, object userState) {
            if ((this.SpecialOfferProductProvider_InsertOperationCompleted == null)) {
                this.SpecialOfferProductProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSpecialOfferProductProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("SpecialOfferProductProvider_Insert", new object[] {
                        entity}, this.SpecialOfferProductProvider_InsertOperationCompleted, userState);
        }
        
        private void OnSpecialOfferProductProvider_InsertOperationCompleted(object arg) {
            if ((this.SpecialOfferProductProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SpecialOfferProductProvider_InsertCompleted(this, new SpecialOfferProductProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SpecialOfferProductProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SpecialOfferProductProvider_BulkInsert(SpecialOfferProduct[] entityList) {
            this.Invoke("SpecialOfferProductProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void SpecialOfferProductProvider_BulkInsertAsync(SpecialOfferProduct[] entityList) {
            this.SpecialOfferProductProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void SpecialOfferProductProvider_BulkInsertAsync(SpecialOfferProduct[] entityList, object userState) {
            if ((this.SpecialOfferProductProvider_BulkInsertOperationCompleted == null)) {
                this.SpecialOfferProductProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSpecialOfferProductProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("SpecialOfferProductProvider_BulkInsert", new object[] {
                        entityList}, this.SpecialOfferProductProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnSpecialOfferProductProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.SpecialOfferProductProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SpecialOfferProductProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SpecialOfferProductProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SpecialOfferProduct SpecialOfferProductProvider_Update(SpecialOfferProduct entity) {
            object[] results = this.Invoke("SpecialOfferProductProvider_Update", new object[] {
                        entity});
            return ((SpecialOfferProduct)(results[0]));
        }
        
        /// <remarks/>
        public void SpecialOfferProductProvider_UpdateAsync(SpecialOfferProduct entity) {
            this.SpecialOfferProductProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void SpecialOfferProductProvider_UpdateAsync(SpecialOfferProduct entity, object userState) {
            if ((this.SpecialOfferProductProvider_UpdateOperationCompleted == null)) {
                this.SpecialOfferProductProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSpecialOfferProductProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("SpecialOfferProductProvider_Update", new object[] {
                        entity}, this.SpecialOfferProductProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnSpecialOfferProductProvider_UpdateOperationCompleted(object arg) {
            if ((this.SpecialOfferProductProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SpecialOfferProductProvider_UpdateCompleted(this, new SpecialOfferProductProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesPersonQuotaHistoryProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SalesPersonQuotaHistoryProvider_Delete(int _salesPersonId, System.DateTime _quotaDate) {
            object[] results = this.Invoke("SalesPersonQuotaHistoryProvider_Delete", new object[] {
                        _salesPersonId,
                        _quotaDate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SalesPersonQuotaHistoryProvider_DeleteAsync(int _salesPersonId, System.DateTime _quotaDate) {
            this.SalesPersonQuotaHistoryProvider_DeleteAsync(_salesPersonId, _quotaDate, null);
        }
        
        /// <remarks/>
        public void SalesPersonQuotaHistoryProvider_DeleteAsync(int _salesPersonId, System.DateTime _quotaDate, object userState) {
            if ((this.SalesPersonQuotaHistoryProvider_DeleteOperationCompleted == null)) {
                this.SalesPersonQuotaHistoryProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesPersonQuotaHistoryProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("SalesPersonQuotaHistoryProvider_Delete", new object[] {
                        _salesPersonId,
                        _quotaDate}, this.SalesPersonQuotaHistoryProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnSalesPersonQuotaHistoryProvider_DeleteOperationCompleted(object arg) {
            if ((this.SalesPersonQuotaHistoryProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesPersonQuotaHistoryProvider_DeleteCompleted(this, new SalesPersonQuotaHistoryProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesPersonQuotaHistoryProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesPersonQuotaHistory[] SalesPersonQuotaHistoryProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesPersonQuotaHistoryProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesPersonQuotaHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesPersonQuotaHistoryProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.SalesPersonQuotaHistoryProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesPersonQuotaHistoryProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.SalesPersonQuotaHistoryProvider_FindOperationCompleted == null)) {
                this.SalesPersonQuotaHistoryProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesPersonQuotaHistoryProvider_FindOperationCompleted);
            }
            this.InvokeAsync("SalesPersonQuotaHistoryProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.SalesPersonQuotaHistoryProvider_FindOperationCompleted, userState);
        }
        
        private void OnSalesPersonQuotaHistoryProvider_FindOperationCompleted(object arg) {
            if ((this.SalesPersonQuotaHistoryProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesPersonQuotaHistoryProvider_FindCompleted(this, new SalesPersonQuotaHistoryProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesPersonQuotaHistoryProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesPersonQuotaHistory[] SalesPersonQuotaHistoryProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesPersonQuotaHistoryProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesPersonQuotaHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesPersonQuotaHistoryProvider_GetAllAsync(int start, int pageLength) {
            this.SalesPersonQuotaHistoryProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesPersonQuotaHistoryProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.SalesPersonQuotaHistoryProvider_GetAllOperationCompleted == null)) {
                this.SalesPersonQuotaHistoryProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesPersonQuotaHistoryProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("SalesPersonQuotaHistoryProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.SalesPersonQuotaHistoryProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnSalesPersonQuotaHistoryProvider_GetAllOperationCompleted(object arg) {
            if ((this.SalesPersonQuotaHistoryProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesPersonQuotaHistoryProvider_GetAllCompleted(this, new SalesPersonQuotaHistoryProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesPersonQuotaHistoryProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesPersonQuotaHistory[] SalesPersonQuotaHistoryProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesPersonQuotaHistoryProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesPersonQuotaHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesPersonQuotaHistoryProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.SalesPersonQuotaHistoryProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesPersonQuotaHistoryProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.SalesPersonQuotaHistoryProvider_GetPagedOperationCompleted == null)) {
                this.SalesPersonQuotaHistoryProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesPersonQuotaHistoryProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("SalesPersonQuotaHistoryProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.SalesPersonQuotaHistoryProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnSalesPersonQuotaHistoryProvider_GetPagedOperationCompleted(object arg) {
            if ((this.SalesPersonQuotaHistoryProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesPersonQuotaHistoryProvider_GetPagedCompleted(this, new SalesPersonQuotaHistoryProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesPersonQuotaHistoryProvider_GetBySale" +
            "sPersonId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesPersonQuotaHistory[] SalesPersonQuotaHistoryProvider_GetBySalesPersonId(int _salesPersonId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesPersonQuotaHistoryProvider_GetBySalesPersonId", new object[] {
                        _salesPersonId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesPersonQuotaHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesPersonQuotaHistoryProvider_GetBySalesPersonIdAsync(int _salesPersonId, int start, int pageLength) {
            this.SalesPersonQuotaHistoryProvider_GetBySalesPersonIdAsync(_salesPersonId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesPersonQuotaHistoryProvider_GetBySalesPersonIdAsync(int _salesPersonId, int start, int pageLength, object userState) {
            if ((this.SalesPersonQuotaHistoryProvider_GetBySalesPersonIdOperationCompleted == null)) {
                this.SalesPersonQuotaHistoryProvider_GetBySalesPersonIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesPersonQuotaHistoryProvider_GetBySalesPersonIdOperationCompleted);
            }
            this.InvokeAsync("SalesPersonQuotaHistoryProvider_GetBySalesPersonId", new object[] {
                        _salesPersonId,
                        start,
                        pageLength}, this.SalesPersonQuotaHistoryProvider_GetBySalesPersonIdOperationCompleted, userState);
        }
        
        private void OnSalesPersonQuotaHistoryProvider_GetBySalesPersonIdOperationCompleted(object arg) {
            if ((this.SalesPersonQuotaHistoryProvider_GetBySalesPersonIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesPersonQuotaHistoryProvider_GetBySalesPersonIdCompleted(this, new SalesPersonQuotaHistoryProvider_GetBySalesPersonIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesPersonQuotaHistoryProvider_GetByRowg" +
            "uid", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesPersonQuotaHistory SalesPersonQuotaHistoryProvider_GetByRowguid(System.Guid _rowguid, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesPersonQuotaHistoryProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesPersonQuotaHistory)(results[0]));
        }
        
        /// <remarks/>
        public void SalesPersonQuotaHistoryProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength) {
            this.SalesPersonQuotaHistoryProvider_GetByRowguidAsync(_rowguid, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesPersonQuotaHistoryProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength, object userState) {
            if ((this.SalesPersonQuotaHistoryProvider_GetByRowguidOperationCompleted == null)) {
                this.SalesPersonQuotaHistoryProvider_GetByRowguidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesPersonQuotaHistoryProvider_GetByRowguidOperationCompleted);
            }
            this.InvokeAsync("SalesPersonQuotaHistoryProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength}, this.SalesPersonQuotaHistoryProvider_GetByRowguidOperationCompleted, userState);
        }
        
        private void OnSalesPersonQuotaHistoryProvider_GetByRowguidOperationCompleted(object arg) {
            if ((this.SalesPersonQuotaHistoryProvider_GetByRowguidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesPersonQuotaHistoryProvider_GetByRowguidCompleted(this, new SalesPersonQuotaHistoryProvider_GetByRowguidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesPersonQuotaHistoryProvider_GetBySale" +
            "sPersonIdQuotaDate", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesPersonQuotaHistory SalesPersonQuotaHistoryProvider_GetBySalesPersonIdQuotaDate(int _salesPersonId, System.DateTime _quotaDate, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesPersonQuotaHistoryProvider_GetBySalesPersonIdQuotaDate", new object[] {
                        _salesPersonId,
                        _quotaDate,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesPersonQuotaHistory)(results[0]));
        }
        
        /// <remarks/>
        public void SalesPersonQuotaHistoryProvider_GetBySalesPersonIdQuotaDateAsync(int _salesPersonId, System.DateTime _quotaDate, int start, int pageLength) {
            this.SalesPersonQuotaHistoryProvider_GetBySalesPersonIdQuotaDateAsync(_salesPersonId, _quotaDate, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesPersonQuotaHistoryProvider_GetBySalesPersonIdQuotaDateAsync(int _salesPersonId, System.DateTime _quotaDate, int start, int pageLength, object userState) {
            if ((this.SalesPersonQuotaHistoryProvider_GetBySalesPersonIdQuotaDateOperationCompleted == null)) {
                this.SalesPersonQuotaHistoryProvider_GetBySalesPersonIdQuotaDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesPersonQuotaHistoryProvider_GetBySalesPersonIdQuotaDateOperationCompleted);
            }
            this.InvokeAsync("SalesPersonQuotaHistoryProvider_GetBySalesPersonIdQuotaDate", new object[] {
                        _salesPersonId,
                        _quotaDate,
                        start,
                        pageLength}, this.SalesPersonQuotaHistoryProvider_GetBySalesPersonIdQuotaDateOperationCompleted, userState);
        }
        
        private void OnSalesPersonQuotaHistoryProvider_GetBySalesPersonIdQuotaDateOperationCompleted(object arg) {
            if ((this.SalesPersonQuotaHistoryProvider_GetBySalesPersonIdQuotaDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesPersonQuotaHistoryProvider_GetBySalesPersonIdQuotaDateCompleted(this, new SalesPersonQuotaHistoryProvider_GetBySalesPersonIdQuotaDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesPersonQuotaHistoryProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesPersonQuotaHistory SalesPersonQuotaHistoryProvider_Insert(SalesPersonQuotaHistory entity) {
            object[] results = this.Invoke("SalesPersonQuotaHistoryProvider_Insert", new object[] {
                        entity});
            return ((SalesPersonQuotaHistory)(results[0]));
        }
        
        /// <remarks/>
        public void SalesPersonQuotaHistoryProvider_InsertAsync(SalesPersonQuotaHistory entity) {
            this.SalesPersonQuotaHistoryProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void SalesPersonQuotaHistoryProvider_InsertAsync(SalesPersonQuotaHistory entity, object userState) {
            if ((this.SalesPersonQuotaHistoryProvider_InsertOperationCompleted == null)) {
                this.SalesPersonQuotaHistoryProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesPersonQuotaHistoryProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("SalesPersonQuotaHistoryProvider_Insert", new object[] {
                        entity}, this.SalesPersonQuotaHistoryProvider_InsertOperationCompleted, userState);
        }
        
        private void OnSalesPersonQuotaHistoryProvider_InsertOperationCompleted(object arg) {
            if ((this.SalesPersonQuotaHistoryProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesPersonQuotaHistoryProvider_InsertCompleted(this, new SalesPersonQuotaHistoryProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesPersonQuotaHistoryProvider_BulkInser" +
            "t", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SalesPersonQuotaHistoryProvider_BulkInsert(SalesPersonQuotaHistory[] entityList) {
            this.Invoke("SalesPersonQuotaHistoryProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void SalesPersonQuotaHistoryProvider_BulkInsertAsync(SalesPersonQuotaHistory[] entityList) {
            this.SalesPersonQuotaHistoryProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void SalesPersonQuotaHistoryProvider_BulkInsertAsync(SalesPersonQuotaHistory[] entityList, object userState) {
            if ((this.SalesPersonQuotaHistoryProvider_BulkInsertOperationCompleted == null)) {
                this.SalesPersonQuotaHistoryProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesPersonQuotaHistoryProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("SalesPersonQuotaHistoryProvider_BulkInsert", new object[] {
                        entityList}, this.SalesPersonQuotaHistoryProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnSalesPersonQuotaHistoryProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.SalesPersonQuotaHistoryProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesPersonQuotaHistoryProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesPersonQuotaHistoryProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesPersonQuotaHistory SalesPersonQuotaHistoryProvider_Update(SalesPersonQuotaHistory entity) {
            object[] results = this.Invoke("SalesPersonQuotaHistoryProvider_Update", new object[] {
                        entity});
            return ((SalesPersonQuotaHistory)(results[0]));
        }
        
        /// <remarks/>
        public void SalesPersonQuotaHistoryProvider_UpdateAsync(SalesPersonQuotaHistory entity) {
            this.SalesPersonQuotaHistoryProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void SalesPersonQuotaHistoryProvider_UpdateAsync(SalesPersonQuotaHistory entity, object userState) {
            if ((this.SalesPersonQuotaHistoryProvider_UpdateOperationCompleted == null)) {
                this.SalesPersonQuotaHistoryProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesPersonQuotaHistoryProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("SalesPersonQuotaHistoryProvider_Update", new object[] {
                        entity}, this.SalesPersonQuotaHistoryProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnSalesPersonQuotaHistoryProvider_UpdateOperationCompleted(object arg) {
            if ((this.SalesPersonQuotaHistoryProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesPersonQuotaHistoryProvider_UpdateCompleted(this, new SalesPersonQuotaHistoryProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/IndividualProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IndividualProvider_Delete(int _customerId) {
            object[] results = this.Invoke("IndividualProvider_Delete", new object[] {
                        _customerId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IndividualProvider_DeleteAsync(int _customerId) {
            this.IndividualProvider_DeleteAsync(_customerId, null);
        }
        
        /// <remarks/>
        public void IndividualProvider_DeleteAsync(int _customerId, object userState) {
            if ((this.IndividualProvider_DeleteOperationCompleted == null)) {
                this.IndividualProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIndividualProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("IndividualProvider_Delete", new object[] {
                        _customerId}, this.IndividualProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnIndividualProvider_DeleteOperationCompleted(object arg) {
            if ((this.IndividualProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IndividualProvider_DeleteCompleted(this, new IndividualProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/IndividualProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Individual[] IndividualProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("IndividualProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Individual[])(results[0]));
        }
        
        /// <remarks/>
        public void IndividualProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.IndividualProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void IndividualProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.IndividualProvider_FindOperationCompleted == null)) {
                this.IndividualProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIndividualProvider_FindOperationCompleted);
            }
            this.InvokeAsync("IndividualProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.IndividualProvider_FindOperationCompleted, userState);
        }
        
        private void OnIndividualProvider_FindOperationCompleted(object arg) {
            if ((this.IndividualProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IndividualProvider_FindCompleted(this, new IndividualProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/IndividualProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Individual[] IndividualProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("IndividualProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Individual[])(results[0]));
        }
        
        /// <remarks/>
        public void IndividualProvider_GetAllAsync(int start, int pageLength) {
            this.IndividualProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void IndividualProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.IndividualProvider_GetAllOperationCompleted == null)) {
                this.IndividualProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIndividualProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("IndividualProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.IndividualProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnIndividualProvider_GetAllOperationCompleted(object arg) {
            if ((this.IndividualProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IndividualProvider_GetAllCompleted(this, new IndividualProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/IndividualProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Individual[] IndividualProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("IndividualProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Individual[])(results[0]));
        }
        
        /// <remarks/>
        public void IndividualProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.IndividualProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void IndividualProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.IndividualProvider_GetPagedOperationCompleted == null)) {
                this.IndividualProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIndividualProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("IndividualProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.IndividualProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnIndividualProvider_GetPagedOperationCompleted(object arg) {
            if ((this.IndividualProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IndividualProvider_GetPagedCompleted(this, new IndividualProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/IndividualProvider_GetByContactId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Individual[] IndividualProvider_GetByContactId(int _contactId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("IndividualProvider_GetByContactId", new object[] {
                        _contactId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Individual[])(results[0]));
        }
        
        /// <remarks/>
        public void IndividualProvider_GetByContactIdAsync(int _contactId, int start, int pageLength) {
            this.IndividualProvider_GetByContactIdAsync(_contactId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void IndividualProvider_GetByContactIdAsync(int _contactId, int start, int pageLength, object userState) {
            if ((this.IndividualProvider_GetByContactIdOperationCompleted == null)) {
                this.IndividualProvider_GetByContactIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIndividualProvider_GetByContactIdOperationCompleted);
            }
            this.InvokeAsync("IndividualProvider_GetByContactId", new object[] {
                        _contactId,
                        start,
                        pageLength}, this.IndividualProvider_GetByContactIdOperationCompleted, userState);
        }
        
        private void OnIndividualProvider_GetByContactIdOperationCompleted(object arg) {
            if ((this.IndividualProvider_GetByContactIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IndividualProvider_GetByContactIdCompleted(this, new IndividualProvider_GetByContactIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/IndividualProvider_GetByCustomerId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Individual IndividualProvider_GetByCustomerId(int _customerId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("IndividualProvider_GetByCustomerId", new object[] {
                        _customerId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Individual)(results[0]));
        }
        
        /// <remarks/>
        public void IndividualProvider_GetByCustomerIdAsync(int _customerId, int start, int pageLength) {
            this.IndividualProvider_GetByCustomerIdAsync(_customerId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void IndividualProvider_GetByCustomerIdAsync(int _customerId, int start, int pageLength, object userState) {
            if ((this.IndividualProvider_GetByCustomerIdOperationCompleted == null)) {
                this.IndividualProvider_GetByCustomerIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIndividualProvider_GetByCustomerIdOperationCompleted);
            }
            this.InvokeAsync("IndividualProvider_GetByCustomerId", new object[] {
                        _customerId,
                        start,
                        pageLength}, this.IndividualProvider_GetByCustomerIdOperationCompleted, userState);
        }
        
        private void OnIndividualProvider_GetByCustomerIdOperationCompleted(object arg) {
            if ((this.IndividualProvider_GetByCustomerIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IndividualProvider_GetByCustomerIdCompleted(this, new IndividualProvider_GetByCustomerIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/IndividualProvider_GetByDemographics", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Individual[] IndividualProvider_GetByDemographics(string _demographics, int start, int pageLength, out int count) {
            object[] results = this.Invoke("IndividualProvider_GetByDemographics", new object[] {
                        _demographics,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Individual[])(results[0]));
        }
        
        /// <remarks/>
        public void IndividualProvider_GetByDemographicsAsync(string _demographics, int start, int pageLength) {
            this.IndividualProvider_GetByDemographicsAsync(_demographics, start, pageLength, null);
        }
        
        /// <remarks/>
        public void IndividualProvider_GetByDemographicsAsync(string _demographics, int start, int pageLength, object userState) {
            if ((this.IndividualProvider_GetByDemographicsOperationCompleted == null)) {
                this.IndividualProvider_GetByDemographicsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIndividualProvider_GetByDemographicsOperationCompleted);
            }
            this.InvokeAsync("IndividualProvider_GetByDemographics", new object[] {
                        _demographics,
                        start,
                        pageLength}, this.IndividualProvider_GetByDemographicsOperationCompleted, userState);
        }
        
        private void OnIndividualProvider_GetByDemographicsOperationCompleted(object arg) {
            if ((this.IndividualProvider_GetByDemographicsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IndividualProvider_GetByDemographicsCompleted(this, new IndividualProvider_GetByDemographicsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/IndividualProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Individual IndividualProvider_Insert(Individual entity) {
            object[] results = this.Invoke("IndividualProvider_Insert", new object[] {
                        entity});
            return ((Individual)(results[0]));
        }
        
        /// <remarks/>
        public void IndividualProvider_InsertAsync(Individual entity) {
            this.IndividualProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void IndividualProvider_InsertAsync(Individual entity, object userState) {
            if ((this.IndividualProvider_InsertOperationCompleted == null)) {
                this.IndividualProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIndividualProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("IndividualProvider_Insert", new object[] {
                        entity}, this.IndividualProvider_InsertOperationCompleted, userState);
        }
        
        private void OnIndividualProvider_InsertOperationCompleted(object arg) {
            if ((this.IndividualProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IndividualProvider_InsertCompleted(this, new IndividualProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/IndividualProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IndividualProvider_BulkInsert(Individual[] entityList) {
            this.Invoke("IndividualProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void IndividualProvider_BulkInsertAsync(Individual[] entityList) {
            this.IndividualProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void IndividualProvider_BulkInsertAsync(Individual[] entityList, object userState) {
            if ((this.IndividualProvider_BulkInsertOperationCompleted == null)) {
                this.IndividualProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIndividualProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("IndividualProvider_BulkInsert", new object[] {
                        entityList}, this.IndividualProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnIndividualProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.IndividualProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IndividualProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/IndividualProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Individual IndividualProvider_Update(Individual entity) {
            object[] results = this.Invoke("IndividualProvider_Update", new object[] {
                        entity});
            return ((Individual)(results[0]));
        }
        
        /// <remarks/>
        public void IndividualProvider_UpdateAsync(Individual entity) {
            this.IndividualProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void IndividualProvider_UpdateAsync(Individual entity, object userState) {
            if ((this.IndividualProvider_UpdateOperationCompleted == null)) {
                this.IndividualProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIndividualProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("IndividualProvider_Update", new object[] {
                        entity}, this.IndividualProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnIndividualProvider_UpdateOperationCompleted(object arg) {
            if ((this.IndividualProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IndividualProvider_UpdateCompleted(this, new IndividualProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/WorkOrderProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool WorkOrderProvider_Delete(int _workOrderId) {
            object[] results = this.Invoke("WorkOrderProvider_Delete", new object[] {
                        _workOrderId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WorkOrderProvider_DeleteAsync(int _workOrderId) {
            this.WorkOrderProvider_DeleteAsync(_workOrderId, null);
        }
        
        /// <remarks/>
        public void WorkOrderProvider_DeleteAsync(int _workOrderId, object userState) {
            if ((this.WorkOrderProvider_DeleteOperationCompleted == null)) {
                this.WorkOrderProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkOrderProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("WorkOrderProvider_Delete", new object[] {
                        _workOrderId}, this.WorkOrderProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnWorkOrderProvider_DeleteOperationCompleted(object arg) {
            if ((this.WorkOrderProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkOrderProvider_DeleteCompleted(this, new WorkOrderProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/WorkOrderProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WorkOrder[] WorkOrderProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("WorkOrderProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((WorkOrder[])(results[0]));
        }
        
        /// <remarks/>
        public void WorkOrderProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.WorkOrderProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void WorkOrderProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.WorkOrderProvider_FindOperationCompleted == null)) {
                this.WorkOrderProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkOrderProvider_FindOperationCompleted);
            }
            this.InvokeAsync("WorkOrderProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.WorkOrderProvider_FindOperationCompleted, userState);
        }
        
        private void OnWorkOrderProvider_FindOperationCompleted(object arg) {
            if ((this.WorkOrderProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkOrderProvider_FindCompleted(this, new WorkOrderProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/WorkOrderProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WorkOrder[] WorkOrderProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("WorkOrderProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((WorkOrder[])(results[0]));
        }
        
        /// <remarks/>
        public void WorkOrderProvider_GetAllAsync(int start, int pageLength) {
            this.WorkOrderProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void WorkOrderProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.WorkOrderProvider_GetAllOperationCompleted == null)) {
                this.WorkOrderProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkOrderProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("WorkOrderProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.WorkOrderProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnWorkOrderProvider_GetAllOperationCompleted(object arg) {
            if ((this.WorkOrderProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkOrderProvider_GetAllCompleted(this, new WorkOrderProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/WorkOrderProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WorkOrder[] WorkOrderProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("WorkOrderProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((WorkOrder[])(results[0]));
        }
        
        /// <remarks/>
        public void WorkOrderProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.WorkOrderProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void WorkOrderProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.WorkOrderProvider_GetPagedOperationCompleted == null)) {
                this.WorkOrderProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkOrderProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("WorkOrderProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.WorkOrderProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnWorkOrderProvider_GetPagedOperationCompleted(object arg) {
            if ((this.WorkOrderProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkOrderProvider_GetPagedCompleted(this, new WorkOrderProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/WorkOrderProvider_GetByProductId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WorkOrder[] WorkOrderProvider_GetByProductId(int _productId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("WorkOrderProvider_GetByProductId", new object[] {
                        _productId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((WorkOrder[])(results[0]));
        }
        
        /// <remarks/>
        public void WorkOrderProvider_GetByProductIdAsync(int _productId, int start, int pageLength) {
            this.WorkOrderProvider_GetByProductIdAsync(_productId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void WorkOrderProvider_GetByProductIdAsync(int _productId, int start, int pageLength, object userState) {
            if ((this.WorkOrderProvider_GetByProductIdOperationCompleted == null)) {
                this.WorkOrderProvider_GetByProductIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkOrderProvider_GetByProductIdOperationCompleted);
            }
            this.InvokeAsync("WorkOrderProvider_GetByProductId", new object[] {
                        _productId,
                        start,
                        pageLength}, this.WorkOrderProvider_GetByProductIdOperationCompleted, userState);
        }
        
        private void OnWorkOrderProvider_GetByProductIdOperationCompleted(object arg) {
            if ((this.WorkOrderProvider_GetByProductIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkOrderProvider_GetByProductIdCompleted(this, new WorkOrderProvider_GetByProductIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/WorkOrderProvider_GetByScrapReasonId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WorkOrder[] WorkOrderProvider_GetByScrapReasonId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<short> _scrapReasonId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("WorkOrderProvider_GetByScrapReasonId", new object[] {
                        _scrapReasonId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((WorkOrder[])(results[0]));
        }
        
        /// <remarks/>
        public void WorkOrderProvider_GetByScrapReasonIdAsync(System.Nullable<short> _scrapReasonId, int start, int pageLength) {
            this.WorkOrderProvider_GetByScrapReasonIdAsync(_scrapReasonId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void WorkOrderProvider_GetByScrapReasonIdAsync(System.Nullable<short> _scrapReasonId, int start, int pageLength, object userState) {
            if ((this.WorkOrderProvider_GetByScrapReasonIdOperationCompleted == null)) {
                this.WorkOrderProvider_GetByScrapReasonIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkOrderProvider_GetByScrapReasonIdOperationCompleted);
            }
            this.InvokeAsync("WorkOrderProvider_GetByScrapReasonId", new object[] {
                        _scrapReasonId,
                        start,
                        pageLength}, this.WorkOrderProvider_GetByScrapReasonIdOperationCompleted, userState);
        }
        
        private void OnWorkOrderProvider_GetByScrapReasonIdOperationCompleted(object arg) {
            if ((this.WorkOrderProvider_GetByScrapReasonIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkOrderProvider_GetByScrapReasonIdCompleted(this, new WorkOrderProvider_GetByScrapReasonIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/WorkOrderProvider_GetByWorkOrderId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WorkOrder WorkOrderProvider_GetByWorkOrderId(int _workOrderId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("WorkOrderProvider_GetByWorkOrderId", new object[] {
                        _workOrderId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((WorkOrder)(results[0]));
        }
        
        /// <remarks/>
        public void WorkOrderProvider_GetByWorkOrderIdAsync(int _workOrderId, int start, int pageLength) {
            this.WorkOrderProvider_GetByWorkOrderIdAsync(_workOrderId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void WorkOrderProvider_GetByWorkOrderIdAsync(int _workOrderId, int start, int pageLength, object userState) {
            if ((this.WorkOrderProvider_GetByWorkOrderIdOperationCompleted == null)) {
                this.WorkOrderProvider_GetByWorkOrderIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkOrderProvider_GetByWorkOrderIdOperationCompleted);
            }
            this.InvokeAsync("WorkOrderProvider_GetByWorkOrderId", new object[] {
                        _workOrderId,
                        start,
                        pageLength}, this.WorkOrderProvider_GetByWorkOrderIdOperationCompleted, userState);
        }
        
        private void OnWorkOrderProvider_GetByWorkOrderIdOperationCompleted(object arg) {
            if ((this.WorkOrderProvider_GetByWorkOrderIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkOrderProvider_GetByWorkOrderIdCompleted(this, new WorkOrderProvider_GetByWorkOrderIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/WorkOrderProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WorkOrder WorkOrderProvider_Insert(WorkOrder entity) {
            object[] results = this.Invoke("WorkOrderProvider_Insert", new object[] {
                        entity});
            return ((WorkOrder)(results[0]));
        }
        
        /// <remarks/>
        public void WorkOrderProvider_InsertAsync(WorkOrder entity) {
            this.WorkOrderProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void WorkOrderProvider_InsertAsync(WorkOrder entity, object userState) {
            if ((this.WorkOrderProvider_InsertOperationCompleted == null)) {
                this.WorkOrderProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkOrderProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("WorkOrderProvider_Insert", new object[] {
                        entity}, this.WorkOrderProvider_InsertOperationCompleted, userState);
        }
        
        private void OnWorkOrderProvider_InsertOperationCompleted(object arg) {
            if ((this.WorkOrderProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkOrderProvider_InsertCompleted(this, new WorkOrderProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/WorkOrderProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WorkOrderProvider_BulkInsert(WorkOrder[] entityList) {
            this.Invoke("WorkOrderProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void WorkOrderProvider_BulkInsertAsync(WorkOrder[] entityList) {
            this.WorkOrderProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void WorkOrderProvider_BulkInsertAsync(WorkOrder[] entityList, object userState) {
            if ((this.WorkOrderProvider_BulkInsertOperationCompleted == null)) {
                this.WorkOrderProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkOrderProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("WorkOrderProvider_BulkInsert", new object[] {
                        entityList}, this.WorkOrderProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnWorkOrderProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.WorkOrderProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkOrderProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/WorkOrderProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WorkOrder WorkOrderProvider_Update(WorkOrder entity) {
            object[] results = this.Invoke("WorkOrderProvider_Update", new object[] {
                        entity});
            return ((WorkOrder)(results[0]));
        }
        
        /// <remarks/>
        public void WorkOrderProvider_UpdateAsync(WorkOrder entity) {
            this.WorkOrderProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void WorkOrderProvider_UpdateAsync(WorkOrder entity, object userState) {
            if ((this.WorkOrderProvider_UpdateOperationCompleted == null)) {
                this.WorkOrderProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkOrderProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("WorkOrderProvider_Update", new object[] {
                        entity}, this.WorkOrderProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnWorkOrderProvider_UpdateOperationCompleted(object arg) {
            if ((this.WorkOrderProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkOrderProvider_UpdateCompleted(this, new WorkOrderProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesTerritoryHistoryProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SalesTerritoryHistoryProvider_Delete(int _salesPersonId, System.DateTime _startDate, int _territoryId) {
            object[] results = this.Invoke("SalesTerritoryHistoryProvider_Delete", new object[] {
                        _salesPersonId,
                        _startDate,
                        _territoryId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SalesTerritoryHistoryProvider_DeleteAsync(int _salesPersonId, System.DateTime _startDate, int _territoryId) {
            this.SalesTerritoryHistoryProvider_DeleteAsync(_salesPersonId, _startDate, _territoryId, null);
        }
        
        /// <remarks/>
        public void SalesTerritoryHistoryProvider_DeleteAsync(int _salesPersonId, System.DateTime _startDate, int _territoryId, object userState) {
            if ((this.SalesTerritoryHistoryProvider_DeleteOperationCompleted == null)) {
                this.SalesTerritoryHistoryProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesTerritoryHistoryProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("SalesTerritoryHistoryProvider_Delete", new object[] {
                        _salesPersonId,
                        _startDate,
                        _territoryId}, this.SalesTerritoryHistoryProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnSalesTerritoryHistoryProvider_DeleteOperationCompleted(object arg) {
            if ((this.SalesTerritoryHistoryProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesTerritoryHistoryProvider_DeleteCompleted(this, new SalesTerritoryHistoryProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesTerritoryHistoryProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesTerritoryHistory[] SalesTerritoryHistoryProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesTerritoryHistoryProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesTerritoryHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesTerritoryHistoryProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.SalesTerritoryHistoryProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesTerritoryHistoryProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.SalesTerritoryHistoryProvider_FindOperationCompleted == null)) {
                this.SalesTerritoryHistoryProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesTerritoryHistoryProvider_FindOperationCompleted);
            }
            this.InvokeAsync("SalesTerritoryHistoryProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.SalesTerritoryHistoryProvider_FindOperationCompleted, userState);
        }
        
        private void OnSalesTerritoryHistoryProvider_FindOperationCompleted(object arg) {
            if ((this.SalesTerritoryHistoryProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesTerritoryHistoryProvider_FindCompleted(this, new SalesTerritoryHistoryProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesTerritoryHistoryProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesTerritoryHistory[] SalesTerritoryHistoryProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesTerritoryHistoryProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesTerritoryHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesTerritoryHistoryProvider_GetAllAsync(int start, int pageLength) {
            this.SalesTerritoryHistoryProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesTerritoryHistoryProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.SalesTerritoryHistoryProvider_GetAllOperationCompleted == null)) {
                this.SalesTerritoryHistoryProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesTerritoryHistoryProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("SalesTerritoryHistoryProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.SalesTerritoryHistoryProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnSalesTerritoryHistoryProvider_GetAllOperationCompleted(object arg) {
            if ((this.SalesTerritoryHistoryProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesTerritoryHistoryProvider_GetAllCompleted(this, new SalesTerritoryHistoryProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesTerritoryHistoryProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesTerritoryHistory[] SalesTerritoryHistoryProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesTerritoryHistoryProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesTerritoryHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesTerritoryHistoryProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.SalesTerritoryHistoryProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesTerritoryHistoryProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.SalesTerritoryHistoryProvider_GetPagedOperationCompleted == null)) {
                this.SalesTerritoryHistoryProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesTerritoryHistoryProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("SalesTerritoryHistoryProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.SalesTerritoryHistoryProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnSalesTerritoryHistoryProvider_GetPagedOperationCompleted(object arg) {
            if ((this.SalesTerritoryHistoryProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesTerritoryHistoryProvider_GetPagedCompleted(this, new SalesTerritoryHistoryProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesTerritoryHistoryProvider_GetBySalesP" +
            "ersonId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesTerritoryHistory[] SalesTerritoryHistoryProvider_GetBySalesPersonId(int _salesPersonId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesTerritoryHistoryProvider_GetBySalesPersonId", new object[] {
                        _salesPersonId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesTerritoryHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesTerritoryHistoryProvider_GetBySalesPersonIdAsync(int _salesPersonId, int start, int pageLength) {
            this.SalesTerritoryHistoryProvider_GetBySalesPersonIdAsync(_salesPersonId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesTerritoryHistoryProvider_GetBySalesPersonIdAsync(int _salesPersonId, int start, int pageLength, object userState) {
            if ((this.SalesTerritoryHistoryProvider_GetBySalesPersonIdOperationCompleted == null)) {
                this.SalesTerritoryHistoryProvider_GetBySalesPersonIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesTerritoryHistoryProvider_GetBySalesPersonIdOperationCompleted);
            }
            this.InvokeAsync("SalesTerritoryHistoryProvider_GetBySalesPersonId", new object[] {
                        _salesPersonId,
                        start,
                        pageLength}, this.SalesTerritoryHistoryProvider_GetBySalesPersonIdOperationCompleted, userState);
        }
        
        private void OnSalesTerritoryHistoryProvider_GetBySalesPersonIdOperationCompleted(object arg) {
            if ((this.SalesTerritoryHistoryProvider_GetBySalesPersonIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesTerritoryHistoryProvider_GetBySalesPersonIdCompleted(this, new SalesTerritoryHistoryProvider_GetBySalesPersonIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesTerritoryHistoryProvider_GetByTerrit" +
            "oryId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesTerritoryHistory[] SalesTerritoryHistoryProvider_GetByTerritoryId(int _territoryId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesTerritoryHistoryProvider_GetByTerritoryId", new object[] {
                        _territoryId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesTerritoryHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesTerritoryHistoryProvider_GetByTerritoryIdAsync(int _territoryId, int start, int pageLength) {
            this.SalesTerritoryHistoryProvider_GetByTerritoryIdAsync(_territoryId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesTerritoryHistoryProvider_GetByTerritoryIdAsync(int _territoryId, int start, int pageLength, object userState) {
            if ((this.SalesTerritoryHistoryProvider_GetByTerritoryIdOperationCompleted == null)) {
                this.SalesTerritoryHistoryProvider_GetByTerritoryIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesTerritoryHistoryProvider_GetByTerritoryIdOperationCompleted);
            }
            this.InvokeAsync("SalesTerritoryHistoryProvider_GetByTerritoryId", new object[] {
                        _territoryId,
                        start,
                        pageLength}, this.SalesTerritoryHistoryProvider_GetByTerritoryIdOperationCompleted, userState);
        }
        
        private void OnSalesTerritoryHistoryProvider_GetByTerritoryIdOperationCompleted(object arg) {
            if ((this.SalesTerritoryHistoryProvider_GetByTerritoryIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesTerritoryHistoryProvider_GetByTerritoryIdCompleted(this, new SalesTerritoryHistoryProvider_GetByTerritoryIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesTerritoryHistoryProvider_GetByRowgui" +
            "d", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesTerritoryHistory SalesTerritoryHistoryProvider_GetByRowguid(System.Guid _rowguid, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesTerritoryHistoryProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesTerritoryHistory)(results[0]));
        }
        
        /// <remarks/>
        public void SalesTerritoryHistoryProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength) {
            this.SalesTerritoryHistoryProvider_GetByRowguidAsync(_rowguid, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesTerritoryHistoryProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength, object userState) {
            if ((this.SalesTerritoryHistoryProvider_GetByRowguidOperationCompleted == null)) {
                this.SalesTerritoryHistoryProvider_GetByRowguidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesTerritoryHistoryProvider_GetByRowguidOperationCompleted);
            }
            this.InvokeAsync("SalesTerritoryHistoryProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength}, this.SalesTerritoryHistoryProvider_GetByRowguidOperationCompleted, userState);
        }
        
        private void OnSalesTerritoryHistoryProvider_GetByRowguidOperationCompleted(object arg) {
            if ((this.SalesTerritoryHistoryProvider_GetByRowguidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesTerritoryHistoryProvider_GetByRowguidCompleted(this, new SalesTerritoryHistoryProvider_GetByRowguidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesTerritoryHistoryProvider_GetBySalesP" +
            "ersonIdStartDateTerritoryId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesTerritoryHistory SalesTerritoryHistoryProvider_GetBySalesPersonIdStartDateTerritoryId(int _salesPersonId, System.DateTime _startDate, int _territoryId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesTerritoryHistoryProvider_GetBySalesPersonIdStartDateTerritoryId", new object[] {
                        _salesPersonId,
                        _startDate,
                        _territoryId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesTerritoryHistory)(results[0]));
        }
        
        /// <remarks/>
        public void SalesTerritoryHistoryProvider_GetBySalesPersonIdStartDateTerritoryIdAsync(int _salesPersonId, System.DateTime _startDate, int _territoryId, int start, int pageLength) {
            this.SalesTerritoryHistoryProvider_GetBySalesPersonIdStartDateTerritoryIdAsync(_salesPersonId, _startDate, _territoryId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesTerritoryHistoryProvider_GetBySalesPersonIdStartDateTerritoryIdAsync(int _salesPersonId, System.DateTime _startDate, int _territoryId, int start, int pageLength, object userState) {
            if ((this.SalesTerritoryHistoryProvider_GetBySalesPersonIdStartDateTerritoryIdOperationCompleted == null)) {
                this.SalesTerritoryHistoryProvider_GetBySalesPersonIdStartDateTerritoryIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesTerritoryHistoryProvider_GetBySalesPersonIdStartDateTerritoryIdOperationCompleted);
            }
            this.InvokeAsync("SalesTerritoryHistoryProvider_GetBySalesPersonIdStartDateTerritoryId", new object[] {
                        _salesPersonId,
                        _startDate,
                        _territoryId,
                        start,
                        pageLength}, this.SalesTerritoryHistoryProvider_GetBySalesPersonIdStartDateTerritoryIdOperationCompleted, userState);
        }
        
        private void OnSalesTerritoryHistoryProvider_GetBySalesPersonIdStartDateTerritoryIdOperationCompleted(object arg) {
            if ((this.SalesTerritoryHistoryProvider_GetBySalesPersonIdStartDateTerritoryIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesTerritoryHistoryProvider_GetBySalesPersonIdStartDateTerritoryIdCompleted(this, new SalesTerritoryHistoryProvider_GetBySalesPersonIdStartDateTerritoryIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesTerritoryHistoryProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesTerritoryHistory SalesTerritoryHistoryProvider_Insert(SalesTerritoryHistory entity) {
            object[] results = this.Invoke("SalesTerritoryHistoryProvider_Insert", new object[] {
                        entity});
            return ((SalesTerritoryHistory)(results[0]));
        }
        
        /// <remarks/>
        public void SalesTerritoryHistoryProvider_InsertAsync(SalesTerritoryHistory entity) {
            this.SalesTerritoryHistoryProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void SalesTerritoryHistoryProvider_InsertAsync(SalesTerritoryHistory entity, object userState) {
            if ((this.SalesTerritoryHistoryProvider_InsertOperationCompleted == null)) {
                this.SalesTerritoryHistoryProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesTerritoryHistoryProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("SalesTerritoryHistoryProvider_Insert", new object[] {
                        entity}, this.SalesTerritoryHistoryProvider_InsertOperationCompleted, userState);
        }
        
        private void OnSalesTerritoryHistoryProvider_InsertOperationCompleted(object arg) {
            if ((this.SalesTerritoryHistoryProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesTerritoryHistoryProvider_InsertCompleted(this, new SalesTerritoryHistoryProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesTerritoryHistoryProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SalesTerritoryHistoryProvider_BulkInsert(SalesTerritoryHistory[] entityList) {
            this.Invoke("SalesTerritoryHistoryProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void SalesTerritoryHistoryProvider_BulkInsertAsync(SalesTerritoryHistory[] entityList) {
            this.SalesTerritoryHistoryProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void SalesTerritoryHistoryProvider_BulkInsertAsync(SalesTerritoryHistory[] entityList, object userState) {
            if ((this.SalesTerritoryHistoryProvider_BulkInsertOperationCompleted == null)) {
                this.SalesTerritoryHistoryProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesTerritoryHistoryProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("SalesTerritoryHistoryProvider_BulkInsert", new object[] {
                        entityList}, this.SalesTerritoryHistoryProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnSalesTerritoryHistoryProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.SalesTerritoryHistoryProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesTerritoryHistoryProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesTerritoryHistoryProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesTerritoryHistory SalesTerritoryHistoryProvider_Update(SalesTerritoryHistory entity) {
            object[] results = this.Invoke("SalesTerritoryHistoryProvider_Update", new object[] {
                        entity});
            return ((SalesTerritoryHistory)(results[0]));
        }
        
        /// <remarks/>
        public void SalesTerritoryHistoryProvider_UpdateAsync(SalesTerritoryHistory entity) {
            this.SalesTerritoryHistoryProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void SalesTerritoryHistoryProvider_UpdateAsync(SalesTerritoryHistory entity, object userState) {
            if ((this.SalesTerritoryHistoryProvider_UpdateOperationCompleted == null)) {
                this.SalesTerritoryHistoryProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesTerritoryHistoryProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("SalesTerritoryHistoryProvider_Update", new object[] {
                        entity}, this.SalesTerritoryHistoryProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnSalesTerritoryHistoryProvider_UpdateOperationCompleted(object arg) {
            if ((this.SalesTerritoryHistoryProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesTerritoryHistoryProvider_UpdateCompleted(this, new SalesTerritoryHistoryProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderDetailProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SalesOrderDetailProvider_Delete(int _salesOrderId, int _salesOrderDetailId) {
            object[] results = this.Invoke("SalesOrderDetailProvider_Delete", new object[] {
                        _salesOrderId,
                        _salesOrderDetailId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderDetailProvider_DeleteAsync(int _salesOrderId, int _salesOrderDetailId) {
            this.SalesOrderDetailProvider_DeleteAsync(_salesOrderId, _salesOrderDetailId, null);
        }
        
        /// <remarks/>
        public void SalesOrderDetailProvider_DeleteAsync(int _salesOrderId, int _salesOrderDetailId, object userState) {
            if ((this.SalesOrderDetailProvider_DeleteOperationCompleted == null)) {
                this.SalesOrderDetailProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderDetailProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("SalesOrderDetailProvider_Delete", new object[] {
                        _salesOrderId,
                        _salesOrderDetailId}, this.SalesOrderDetailProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnSalesOrderDetailProvider_DeleteOperationCompleted(object arg) {
            if ((this.SalesOrderDetailProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderDetailProvider_DeleteCompleted(this, new SalesOrderDetailProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderDetailProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderDetail[] SalesOrderDetailProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesOrderDetailProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesOrderDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderDetailProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.SalesOrderDetailProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesOrderDetailProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.SalesOrderDetailProvider_FindOperationCompleted == null)) {
                this.SalesOrderDetailProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderDetailProvider_FindOperationCompleted);
            }
            this.InvokeAsync("SalesOrderDetailProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.SalesOrderDetailProvider_FindOperationCompleted, userState);
        }
        
        private void OnSalesOrderDetailProvider_FindOperationCompleted(object arg) {
            if ((this.SalesOrderDetailProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderDetailProvider_FindCompleted(this, new SalesOrderDetailProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderDetailProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderDetail[] SalesOrderDetailProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesOrderDetailProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesOrderDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderDetailProvider_GetAllAsync(int start, int pageLength) {
            this.SalesOrderDetailProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesOrderDetailProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.SalesOrderDetailProvider_GetAllOperationCompleted == null)) {
                this.SalesOrderDetailProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderDetailProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("SalesOrderDetailProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.SalesOrderDetailProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnSalesOrderDetailProvider_GetAllOperationCompleted(object arg) {
            if ((this.SalesOrderDetailProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderDetailProvider_GetAllCompleted(this, new SalesOrderDetailProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderDetailProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderDetail[] SalesOrderDetailProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesOrderDetailProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesOrderDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderDetailProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.SalesOrderDetailProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesOrderDetailProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.SalesOrderDetailProvider_GetPagedOperationCompleted == null)) {
                this.SalesOrderDetailProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderDetailProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("SalesOrderDetailProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.SalesOrderDetailProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnSalesOrderDetailProvider_GetPagedOperationCompleted(object arg) {
            if ((this.SalesOrderDetailProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderDetailProvider_GetPagedCompleted(this, new SalesOrderDetailProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderDetailProvider_GetBySalesOrderI" +
            "d", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderDetail[] SalesOrderDetailProvider_GetBySalesOrderId(int _salesOrderId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesOrderDetailProvider_GetBySalesOrderId", new object[] {
                        _salesOrderId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesOrderDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderDetailProvider_GetBySalesOrderIdAsync(int _salesOrderId, int start, int pageLength) {
            this.SalesOrderDetailProvider_GetBySalesOrderIdAsync(_salesOrderId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesOrderDetailProvider_GetBySalesOrderIdAsync(int _salesOrderId, int start, int pageLength, object userState) {
            if ((this.SalesOrderDetailProvider_GetBySalesOrderIdOperationCompleted == null)) {
                this.SalesOrderDetailProvider_GetBySalesOrderIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderDetailProvider_GetBySalesOrderIdOperationCompleted);
            }
            this.InvokeAsync("SalesOrderDetailProvider_GetBySalesOrderId", new object[] {
                        _salesOrderId,
                        start,
                        pageLength}, this.SalesOrderDetailProvider_GetBySalesOrderIdOperationCompleted, userState);
        }
        
        private void OnSalesOrderDetailProvider_GetBySalesOrderIdOperationCompleted(object arg) {
            if ((this.SalesOrderDetailProvider_GetBySalesOrderIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderDetailProvider_GetBySalesOrderIdCompleted(this, new SalesOrderDetailProvider_GetBySalesOrderIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderDetailProvider_GetBySpecialOffe" +
            "rIdProductId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderDetail[] SalesOrderDetailProvider_GetBySpecialOfferIdProductId(int _specialOfferId, int _productId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesOrderDetailProvider_GetBySpecialOfferIdProductId", new object[] {
                        _specialOfferId,
                        _productId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesOrderDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderDetailProvider_GetBySpecialOfferIdProductIdAsync(int _specialOfferId, int _productId, int start, int pageLength) {
            this.SalesOrderDetailProvider_GetBySpecialOfferIdProductIdAsync(_specialOfferId, _productId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesOrderDetailProvider_GetBySpecialOfferIdProductIdAsync(int _specialOfferId, int _productId, int start, int pageLength, object userState) {
            if ((this.SalesOrderDetailProvider_GetBySpecialOfferIdProductIdOperationCompleted == null)) {
                this.SalesOrderDetailProvider_GetBySpecialOfferIdProductIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderDetailProvider_GetBySpecialOfferIdProductIdOperationCompleted);
            }
            this.InvokeAsync("SalesOrderDetailProvider_GetBySpecialOfferIdProductId", new object[] {
                        _specialOfferId,
                        _productId,
                        start,
                        pageLength}, this.SalesOrderDetailProvider_GetBySpecialOfferIdProductIdOperationCompleted, userState);
        }
        
        private void OnSalesOrderDetailProvider_GetBySpecialOfferIdProductIdOperationCompleted(object arg) {
            if ((this.SalesOrderDetailProvider_GetBySpecialOfferIdProductIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderDetailProvider_GetBySpecialOfferIdProductIdCompleted(this, new SalesOrderDetailProvider_GetBySpecialOfferIdProductIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderDetailProvider_GetByRowguid", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderDetail SalesOrderDetailProvider_GetByRowguid(System.Guid _rowguid, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesOrderDetailProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesOrderDetail)(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderDetailProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength) {
            this.SalesOrderDetailProvider_GetByRowguidAsync(_rowguid, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesOrderDetailProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength, object userState) {
            if ((this.SalesOrderDetailProvider_GetByRowguidOperationCompleted == null)) {
                this.SalesOrderDetailProvider_GetByRowguidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderDetailProvider_GetByRowguidOperationCompleted);
            }
            this.InvokeAsync("SalesOrderDetailProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength}, this.SalesOrderDetailProvider_GetByRowguidOperationCompleted, userState);
        }
        
        private void OnSalesOrderDetailProvider_GetByRowguidOperationCompleted(object arg) {
            if ((this.SalesOrderDetailProvider_GetByRowguidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderDetailProvider_GetByRowguidCompleted(this, new SalesOrderDetailProvider_GetByRowguidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderDetailProvider_GetByProductId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderDetail[] SalesOrderDetailProvider_GetByProductId(int _productId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesOrderDetailProvider_GetByProductId", new object[] {
                        _productId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesOrderDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderDetailProvider_GetByProductIdAsync(int _productId, int start, int pageLength) {
            this.SalesOrderDetailProvider_GetByProductIdAsync(_productId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesOrderDetailProvider_GetByProductIdAsync(int _productId, int start, int pageLength, object userState) {
            if ((this.SalesOrderDetailProvider_GetByProductIdOperationCompleted == null)) {
                this.SalesOrderDetailProvider_GetByProductIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderDetailProvider_GetByProductIdOperationCompleted);
            }
            this.InvokeAsync("SalesOrderDetailProvider_GetByProductId", new object[] {
                        _productId,
                        start,
                        pageLength}, this.SalesOrderDetailProvider_GetByProductIdOperationCompleted, userState);
        }
        
        private void OnSalesOrderDetailProvider_GetByProductIdOperationCompleted(object arg) {
            if ((this.SalesOrderDetailProvider_GetByProductIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderDetailProvider_GetByProductIdCompleted(this, new SalesOrderDetailProvider_GetByProductIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderDetailProvider_GetBySalesOrderI" +
            "dSalesOrderDetailId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderDetail SalesOrderDetailProvider_GetBySalesOrderIdSalesOrderDetailId(int _salesOrderId, int _salesOrderDetailId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesOrderDetailProvider_GetBySalesOrderIdSalesOrderDetailId", new object[] {
                        _salesOrderId,
                        _salesOrderDetailId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesOrderDetail)(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderDetailProvider_GetBySalesOrderIdSalesOrderDetailIdAsync(int _salesOrderId, int _salesOrderDetailId, int start, int pageLength) {
            this.SalesOrderDetailProvider_GetBySalesOrderIdSalesOrderDetailIdAsync(_salesOrderId, _salesOrderDetailId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesOrderDetailProvider_GetBySalesOrderIdSalesOrderDetailIdAsync(int _salesOrderId, int _salesOrderDetailId, int start, int pageLength, object userState) {
            if ((this.SalesOrderDetailProvider_GetBySalesOrderIdSalesOrderDetailIdOperationCompleted == null)) {
                this.SalesOrderDetailProvider_GetBySalesOrderIdSalesOrderDetailIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderDetailProvider_GetBySalesOrderIdSalesOrderDetailIdOperationCompleted);
            }
            this.InvokeAsync("SalesOrderDetailProvider_GetBySalesOrderIdSalesOrderDetailId", new object[] {
                        _salesOrderId,
                        _salesOrderDetailId,
                        start,
                        pageLength}, this.SalesOrderDetailProvider_GetBySalesOrderIdSalesOrderDetailIdOperationCompleted, userState);
        }
        
        private void OnSalesOrderDetailProvider_GetBySalesOrderIdSalesOrderDetailIdOperationCompleted(object arg) {
            if ((this.SalesOrderDetailProvider_GetBySalesOrderIdSalesOrderDetailIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderDetailProvider_GetBySalesOrderIdSalesOrderDetailIdCompleted(this, new SalesOrderDetailProvider_GetBySalesOrderIdSalesOrderDetailIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderDetailProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderDetail SalesOrderDetailProvider_Insert(SalesOrderDetail entity) {
            object[] results = this.Invoke("SalesOrderDetailProvider_Insert", new object[] {
                        entity});
            return ((SalesOrderDetail)(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderDetailProvider_InsertAsync(SalesOrderDetail entity) {
            this.SalesOrderDetailProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void SalesOrderDetailProvider_InsertAsync(SalesOrderDetail entity, object userState) {
            if ((this.SalesOrderDetailProvider_InsertOperationCompleted == null)) {
                this.SalesOrderDetailProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderDetailProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("SalesOrderDetailProvider_Insert", new object[] {
                        entity}, this.SalesOrderDetailProvider_InsertOperationCompleted, userState);
        }
        
        private void OnSalesOrderDetailProvider_InsertOperationCompleted(object arg) {
            if ((this.SalesOrderDetailProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderDetailProvider_InsertCompleted(this, new SalesOrderDetailProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderDetailProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SalesOrderDetailProvider_BulkInsert(SalesOrderDetail[] entityList) {
            this.Invoke("SalesOrderDetailProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void SalesOrderDetailProvider_BulkInsertAsync(SalesOrderDetail[] entityList) {
            this.SalesOrderDetailProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void SalesOrderDetailProvider_BulkInsertAsync(SalesOrderDetail[] entityList, object userState) {
            if ((this.SalesOrderDetailProvider_BulkInsertOperationCompleted == null)) {
                this.SalesOrderDetailProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderDetailProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("SalesOrderDetailProvider_BulkInsert", new object[] {
                        entityList}, this.SalesOrderDetailProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnSalesOrderDetailProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.SalesOrderDetailProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderDetailProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderDetailProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderDetail SalesOrderDetailProvider_Update(SalesOrderDetail entity) {
            object[] results = this.Invoke("SalesOrderDetailProvider_Update", new object[] {
                        entity});
            return ((SalesOrderDetail)(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderDetailProvider_UpdateAsync(SalesOrderDetail entity) {
            this.SalesOrderDetailProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void SalesOrderDetailProvider_UpdateAsync(SalesOrderDetail entity, object userState) {
            if ((this.SalesOrderDetailProvider_UpdateOperationCompleted == null)) {
                this.SalesOrderDetailProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderDetailProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("SalesOrderDetailProvider_Update", new object[] {
                        entity}, this.SalesOrderDetailProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnSalesOrderDetailProvider_UpdateOperationCompleted(object arg) {
            if ((this.SalesOrderDetailProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderDetailProvider_UpdateCompleted(this, new SalesOrderDetailProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TestVariantProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TestVariantProvider_Delete(int _testVariantId) {
            object[] results = this.Invoke("TestVariantProvider_Delete", new object[] {
                        _testVariantId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TestVariantProvider_DeleteAsync(int _testVariantId) {
            this.TestVariantProvider_DeleteAsync(_testVariantId, null);
        }
        
        /// <remarks/>
        public void TestVariantProvider_DeleteAsync(int _testVariantId, object userState) {
            if ((this.TestVariantProvider_DeleteOperationCompleted == null)) {
                this.TestVariantProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestVariantProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("TestVariantProvider_Delete", new object[] {
                        _testVariantId}, this.TestVariantProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnTestVariantProvider_DeleteOperationCompleted(object arg) {
            if ((this.TestVariantProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestVariantProvider_DeleteCompleted(this, new TestVariantProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TestVariantProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TestVariant[] TestVariantProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("TestVariantProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((TestVariant[])(results[0]));
        }
        
        /// <remarks/>
        public void TestVariantProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.TestVariantProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void TestVariantProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.TestVariantProvider_FindOperationCompleted == null)) {
                this.TestVariantProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestVariantProvider_FindOperationCompleted);
            }
            this.InvokeAsync("TestVariantProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.TestVariantProvider_FindOperationCompleted, userState);
        }
        
        private void OnTestVariantProvider_FindOperationCompleted(object arg) {
            if ((this.TestVariantProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestVariantProvider_FindCompleted(this, new TestVariantProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TestVariantProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TestVariant[] TestVariantProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("TestVariantProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((TestVariant[])(results[0]));
        }
        
        /// <remarks/>
        public void TestVariantProvider_GetAllAsync(int start, int pageLength) {
            this.TestVariantProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void TestVariantProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.TestVariantProvider_GetAllOperationCompleted == null)) {
                this.TestVariantProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestVariantProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("TestVariantProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.TestVariantProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnTestVariantProvider_GetAllOperationCompleted(object arg) {
            if ((this.TestVariantProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestVariantProvider_GetAllCompleted(this, new TestVariantProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TestVariantProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TestVariant[] TestVariantProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("TestVariantProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((TestVariant[])(results[0]));
        }
        
        /// <remarks/>
        public void TestVariantProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.TestVariantProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void TestVariantProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.TestVariantProvider_GetPagedOperationCompleted == null)) {
                this.TestVariantProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestVariantProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("TestVariantProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.TestVariantProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnTestVariantProvider_GetPagedOperationCompleted(object arg) {
            if ((this.TestVariantProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestVariantProvider_GetPagedCompleted(this, new TestVariantProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TestVariantProvider_GetByTestVariantId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TestVariant TestVariantProvider_GetByTestVariantId(int _testVariantId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("TestVariantProvider_GetByTestVariantId", new object[] {
                        _testVariantId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((TestVariant)(results[0]));
        }
        
        /// <remarks/>
        public void TestVariantProvider_GetByTestVariantIdAsync(int _testVariantId, int start, int pageLength) {
            this.TestVariantProvider_GetByTestVariantIdAsync(_testVariantId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void TestVariantProvider_GetByTestVariantIdAsync(int _testVariantId, int start, int pageLength, object userState) {
            if ((this.TestVariantProvider_GetByTestVariantIdOperationCompleted == null)) {
                this.TestVariantProvider_GetByTestVariantIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestVariantProvider_GetByTestVariantIdOperationCompleted);
            }
            this.InvokeAsync("TestVariantProvider_GetByTestVariantId", new object[] {
                        _testVariantId,
                        start,
                        pageLength}, this.TestVariantProvider_GetByTestVariantIdOperationCompleted, userState);
        }
        
        private void OnTestVariantProvider_GetByTestVariantIdOperationCompleted(object arg) {
            if ((this.TestVariantProvider_GetByTestVariantIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestVariantProvider_GetByTestVariantIdCompleted(this, new TestVariantProvider_GetByTestVariantIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TestVariantProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TestVariant TestVariantProvider_Insert(TestVariant entity) {
            object[] results = this.Invoke("TestVariantProvider_Insert", new object[] {
                        entity});
            return ((TestVariant)(results[0]));
        }
        
        /// <remarks/>
        public void TestVariantProvider_InsertAsync(TestVariant entity) {
            this.TestVariantProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void TestVariantProvider_InsertAsync(TestVariant entity, object userState) {
            if ((this.TestVariantProvider_InsertOperationCompleted == null)) {
                this.TestVariantProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestVariantProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("TestVariantProvider_Insert", new object[] {
                        entity}, this.TestVariantProvider_InsertOperationCompleted, userState);
        }
        
        private void OnTestVariantProvider_InsertOperationCompleted(object arg) {
            if ((this.TestVariantProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestVariantProvider_InsertCompleted(this, new TestVariantProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TestVariantProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TestVariantProvider_BulkInsert(TestVariant[] entityList) {
            this.Invoke("TestVariantProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void TestVariantProvider_BulkInsertAsync(TestVariant[] entityList) {
            this.TestVariantProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void TestVariantProvider_BulkInsertAsync(TestVariant[] entityList, object userState) {
            if ((this.TestVariantProvider_BulkInsertOperationCompleted == null)) {
                this.TestVariantProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestVariantProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("TestVariantProvider_BulkInsert", new object[] {
                        entityList}, this.TestVariantProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnTestVariantProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.TestVariantProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestVariantProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TestVariantProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TestVariant TestVariantProvider_Update(TestVariant entity) {
            object[] results = this.Invoke("TestVariantProvider_Update", new object[] {
                        entity});
            return ((TestVariant)(results[0]));
        }
        
        /// <remarks/>
        public void TestVariantProvider_UpdateAsync(TestVariant entity) {
            this.TestVariantProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void TestVariantProvider_UpdateAsync(TestVariant entity, object userState) {
            if ((this.TestVariantProvider_UpdateOperationCompleted == null)) {
                this.TestVariantProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestVariantProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("TestVariantProvider_Update", new object[] {
                        entity}, this.TestVariantProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnTestVariantProvider_UpdateOperationCompleted(object arg) {
            if ((this.TestVariantProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestVariantProvider_UpdateCompleted(this, new TestVariantProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StoreContactProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StoreContactProvider_Delete(int _customerId, int _contactId) {
            object[] results = this.Invoke("StoreContactProvider_Delete", new object[] {
                        _customerId,
                        _contactId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StoreContactProvider_DeleteAsync(int _customerId, int _contactId) {
            this.StoreContactProvider_DeleteAsync(_customerId, _contactId, null);
        }
        
        /// <remarks/>
        public void StoreContactProvider_DeleteAsync(int _customerId, int _contactId, object userState) {
            if ((this.StoreContactProvider_DeleteOperationCompleted == null)) {
                this.StoreContactProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoreContactProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("StoreContactProvider_Delete", new object[] {
                        _customerId,
                        _contactId}, this.StoreContactProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnStoreContactProvider_DeleteOperationCompleted(object arg) {
            if ((this.StoreContactProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoreContactProvider_DeleteCompleted(this, new StoreContactProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StoreContactProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StoreContact[] StoreContactProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("StoreContactProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((StoreContact[])(results[0]));
        }
        
        /// <remarks/>
        public void StoreContactProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.StoreContactProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void StoreContactProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.StoreContactProvider_FindOperationCompleted == null)) {
                this.StoreContactProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoreContactProvider_FindOperationCompleted);
            }
            this.InvokeAsync("StoreContactProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.StoreContactProvider_FindOperationCompleted, userState);
        }
        
        private void OnStoreContactProvider_FindOperationCompleted(object arg) {
            if ((this.StoreContactProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoreContactProvider_FindCompleted(this, new StoreContactProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StoreContactProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StoreContact[] StoreContactProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("StoreContactProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((StoreContact[])(results[0]));
        }
        
        /// <remarks/>
        public void StoreContactProvider_GetAllAsync(int start, int pageLength) {
            this.StoreContactProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void StoreContactProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.StoreContactProvider_GetAllOperationCompleted == null)) {
                this.StoreContactProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoreContactProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("StoreContactProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.StoreContactProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnStoreContactProvider_GetAllOperationCompleted(object arg) {
            if ((this.StoreContactProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoreContactProvider_GetAllCompleted(this, new StoreContactProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StoreContactProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StoreContact[] StoreContactProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("StoreContactProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((StoreContact[])(results[0]));
        }
        
        /// <remarks/>
        public void StoreContactProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.StoreContactProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void StoreContactProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.StoreContactProvider_GetPagedOperationCompleted == null)) {
                this.StoreContactProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoreContactProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("StoreContactProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.StoreContactProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnStoreContactProvider_GetPagedOperationCompleted(object arg) {
            if ((this.StoreContactProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoreContactProvider_GetPagedCompleted(this, new StoreContactProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StoreContactProvider_GetByCustomerId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StoreContact[] StoreContactProvider_GetByCustomerId(int _customerId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("StoreContactProvider_GetByCustomerId", new object[] {
                        _customerId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((StoreContact[])(results[0]));
        }
        
        /// <remarks/>
        public void StoreContactProvider_GetByCustomerIdAsync(int _customerId, int start, int pageLength) {
            this.StoreContactProvider_GetByCustomerIdAsync(_customerId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void StoreContactProvider_GetByCustomerIdAsync(int _customerId, int start, int pageLength, object userState) {
            if ((this.StoreContactProvider_GetByCustomerIdOperationCompleted == null)) {
                this.StoreContactProvider_GetByCustomerIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoreContactProvider_GetByCustomerIdOperationCompleted);
            }
            this.InvokeAsync("StoreContactProvider_GetByCustomerId", new object[] {
                        _customerId,
                        start,
                        pageLength}, this.StoreContactProvider_GetByCustomerIdOperationCompleted, userState);
        }
        
        private void OnStoreContactProvider_GetByCustomerIdOperationCompleted(object arg) {
            if ((this.StoreContactProvider_GetByCustomerIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoreContactProvider_GetByCustomerIdCompleted(this, new StoreContactProvider_GetByCustomerIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StoreContactProvider_GetByRowguid", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StoreContact StoreContactProvider_GetByRowguid(System.Guid _rowguid, int start, int pageLength, out int count) {
            object[] results = this.Invoke("StoreContactProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((StoreContact)(results[0]));
        }
        
        /// <remarks/>
        public void StoreContactProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength) {
            this.StoreContactProvider_GetByRowguidAsync(_rowguid, start, pageLength, null);
        }
        
        /// <remarks/>
        public void StoreContactProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength, object userState) {
            if ((this.StoreContactProvider_GetByRowguidOperationCompleted == null)) {
                this.StoreContactProvider_GetByRowguidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoreContactProvider_GetByRowguidOperationCompleted);
            }
            this.InvokeAsync("StoreContactProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength}, this.StoreContactProvider_GetByRowguidOperationCompleted, userState);
        }
        
        private void OnStoreContactProvider_GetByRowguidOperationCompleted(object arg) {
            if ((this.StoreContactProvider_GetByRowguidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoreContactProvider_GetByRowguidCompleted(this, new StoreContactProvider_GetByRowguidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StoreContactProvider_GetByContactId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StoreContact[] StoreContactProvider_GetByContactId(int _contactId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("StoreContactProvider_GetByContactId", new object[] {
                        _contactId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((StoreContact[])(results[0]));
        }
        
        /// <remarks/>
        public void StoreContactProvider_GetByContactIdAsync(int _contactId, int start, int pageLength) {
            this.StoreContactProvider_GetByContactIdAsync(_contactId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void StoreContactProvider_GetByContactIdAsync(int _contactId, int start, int pageLength, object userState) {
            if ((this.StoreContactProvider_GetByContactIdOperationCompleted == null)) {
                this.StoreContactProvider_GetByContactIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoreContactProvider_GetByContactIdOperationCompleted);
            }
            this.InvokeAsync("StoreContactProvider_GetByContactId", new object[] {
                        _contactId,
                        start,
                        pageLength}, this.StoreContactProvider_GetByContactIdOperationCompleted, userState);
        }
        
        private void OnStoreContactProvider_GetByContactIdOperationCompleted(object arg) {
            if ((this.StoreContactProvider_GetByContactIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoreContactProvider_GetByContactIdCompleted(this, new StoreContactProvider_GetByContactIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StoreContactProvider_GetByContactTypeId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StoreContact[] StoreContactProvider_GetByContactTypeId(int _contactTypeId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("StoreContactProvider_GetByContactTypeId", new object[] {
                        _contactTypeId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((StoreContact[])(results[0]));
        }
        
        /// <remarks/>
        public void StoreContactProvider_GetByContactTypeIdAsync(int _contactTypeId, int start, int pageLength) {
            this.StoreContactProvider_GetByContactTypeIdAsync(_contactTypeId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void StoreContactProvider_GetByContactTypeIdAsync(int _contactTypeId, int start, int pageLength, object userState) {
            if ((this.StoreContactProvider_GetByContactTypeIdOperationCompleted == null)) {
                this.StoreContactProvider_GetByContactTypeIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoreContactProvider_GetByContactTypeIdOperationCompleted);
            }
            this.InvokeAsync("StoreContactProvider_GetByContactTypeId", new object[] {
                        _contactTypeId,
                        start,
                        pageLength}, this.StoreContactProvider_GetByContactTypeIdOperationCompleted, userState);
        }
        
        private void OnStoreContactProvider_GetByContactTypeIdOperationCompleted(object arg) {
            if ((this.StoreContactProvider_GetByContactTypeIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoreContactProvider_GetByContactTypeIdCompleted(this, new StoreContactProvider_GetByContactTypeIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StoreContactProvider_GetByCustomerIdConta" +
            "ctId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StoreContact StoreContactProvider_GetByCustomerIdContactId(int _customerId, int _contactId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("StoreContactProvider_GetByCustomerIdContactId", new object[] {
                        _customerId,
                        _contactId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((StoreContact)(results[0]));
        }
        
        /// <remarks/>
        public void StoreContactProvider_GetByCustomerIdContactIdAsync(int _customerId, int _contactId, int start, int pageLength) {
            this.StoreContactProvider_GetByCustomerIdContactIdAsync(_customerId, _contactId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void StoreContactProvider_GetByCustomerIdContactIdAsync(int _customerId, int _contactId, int start, int pageLength, object userState) {
            if ((this.StoreContactProvider_GetByCustomerIdContactIdOperationCompleted == null)) {
                this.StoreContactProvider_GetByCustomerIdContactIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoreContactProvider_GetByCustomerIdContactIdOperationCompleted);
            }
            this.InvokeAsync("StoreContactProvider_GetByCustomerIdContactId", new object[] {
                        _customerId,
                        _contactId,
                        start,
                        pageLength}, this.StoreContactProvider_GetByCustomerIdContactIdOperationCompleted, userState);
        }
        
        private void OnStoreContactProvider_GetByCustomerIdContactIdOperationCompleted(object arg) {
            if ((this.StoreContactProvider_GetByCustomerIdContactIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoreContactProvider_GetByCustomerIdContactIdCompleted(this, new StoreContactProvider_GetByCustomerIdContactIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StoreContactProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StoreContact StoreContactProvider_Insert(StoreContact entity) {
            object[] results = this.Invoke("StoreContactProvider_Insert", new object[] {
                        entity});
            return ((StoreContact)(results[0]));
        }
        
        /// <remarks/>
        public void StoreContactProvider_InsertAsync(StoreContact entity) {
            this.StoreContactProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void StoreContactProvider_InsertAsync(StoreContact entity, object userState) {
            if ((this.StoreContactProvider_InsertOperationCompleted == null)) {
                this.StoreContactProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoreContactProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("StoreContactProvider_Insert", new object[] {
                        entity}, this.StoreContactProvider_InsertOperationCompleted, userState);
        }
        
        private void OnStoreContactProvider_InsertOperationCompleted(object arg) {
            if ((this.StoreContactProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoreContactProvider_InsertCompleted(this, new StoreContactProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StoreContactProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void StoreContactProvider_BulkInsert(StoreContact[] entityList) {
            this.Invoke("StoreContactProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void StoreContactProvider_BulkInsertAsync(StoreContact[] entityList) {
            this.StoreContactProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void StoreContactProvider_BulkInsertAsync(StoreContact[] entityList, object userState) {
            if ((this.StoreContactProvider_BulkInsertOperationCompleted == null)) {
                this.StoreContactProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoreContactProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("StoreContactProvider_BulkInsert", new object[] {
                        entityList}, this.StoreContactProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnStoreContactProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.StoreContactProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoreContactProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StoreContactProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StoreContact StoreContactProvider_Update(StoreContact entity) {
            object[] results = this.Invoke("StoreContactProvider_Update", new object[] {
                        entity});
            return ((StoreContact)(results[0]));
        }
        
        /// <remarks/>
        public void StoreContactProvider_UpdateAsync(StoreContact entity) {
            this.StoreContactProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void StoreContactProvider_UpdateAsync(StoreContact entity, object userState) {
            if ((this.StoreContactProvider_UpdateOperationCompleted == null)) {
                this.StoreContactProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoreContactProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("StoreContactProvider_Update", new object[] {
                        entity}, this.StoreContactProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnStoreContactProvider_UpdateOperationCompleted(object arg) {
            if ((this.StoreContactProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoreContactProvider_UpdateCompleted(this, new StoreContactProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/NullFkeyParentProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool NullFkeyParentProvider_Delete(int _nullFkeyParentId) {
            object[] results = this.Invoke("NullFkeyParentProvider_Delete", new object[] {
                        _nullFkeyParentId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void NullFkeyParentProvider_DeleteAsync(int _nullFkeyParentId) {
            this.NullFkeyParentProvider_DeleteAsync(_nullFkeyParentId, null);
        }
        
        /// <remarks/>
        public void NullFkeyParentProvider_DeleteAsync(int _nullFkeyParentId, object userState) {
            if ((this.NullFkeyParentProvider_DeleteOperationCompleted == null)) {
                this.NullFkeyParentProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNullFkeyParentProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("NullFkeyParentProvider_Delete", new object[] {
                        _nullFkeyParentId}, this.NullFkeyParentProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnNullFkeyParentProvider_DeleteOperationCompleted(object arg) {
            if ((this.NullFkeyParentProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NullFkeyParentProvider_DeleteCompleted(this, new NullFkeyParentProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/NullFkeyParentProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NullFkeyParent[] NullFkeyParentProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("NullFkeyParentProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((NullFkeyParent[])(results[0]));
        }
        
        /// <remarks/>
        public void NullFkeyParentProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.NullFkeyParentProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void NullFkeyParentProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.NullFkeyParentProvider_FindOperationCompleted == null)) {
                this.NullFkeyParentProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNullFkeyParentProvider_FindOperationCompleted);
            }
            this.InvokeAsync("NullFkeyParentProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.NullFkeyParentProvider_FindOperationCompleted, userState);
        }
        
        private void OnNullFkeyParentProvider_FindOperationCompleted(object arg) {
            if ((this.NullFkeyParentProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NullFkeyParentProvider_FindCompleted(this, new NullFkeyParentProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/NullFkeyParentProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NullFkeyParent[] NullFkeyParentProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("NullFkeyParentProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((NullFkeyParent[])(results[0]));
        }
        
        /// <remarks/>
        public void NullFkeyParentProvider_GetAllAsync(int start, int pageLength) {
            this.NullFkeyParentProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void NullFkeyParentProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.NullFkeyParentProvider_GetAllOperationCompleted == null)) {
                this.NullFkeyParentProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNullFkeyParentProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("NullFkeyParentProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.NullFkeyParentProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnNullFkeyParentProvider_GetAllOperationCompleted(object arg) {
            if ((this.NullFkeyParentProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NullFkeyParentProvider_GetAllCompleted(this, new NullFkeyParentProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/NullFkeyParentProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NullFkeyParent[] NullFkeyParentProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("NullFkeyParentProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((NullFkeyParent[])(results[0]));
        }
        
        /// <remarks/>
        public void NullFkeyParentProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.NullFkeyParentProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void NullFkeyParentProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.NullFkeyParentProvider_GetPagedOperationCompleted == null)) {
                this.NullFkeyParentProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNullFkeyParentProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("NullFkeyParentProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.NullFkeyParentProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnNullFkeyParentProvider_GetPagedOperationCompleted(object arg) {
            if ((this.NullFkeyParentProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NullFkeyParentProvider_GetPagedCompleted(this, new NullFkeyParentProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/NullFkeyParentProvider_GetByNullFkeyParen" +
            "tId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NullFkeyParent NullFkeyParentProvider_GetByNullFkeyParentId(int _nullFkeyParentId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("NullFkeyParentProvider_GetByNullFkeyParentId", new object[] {
                        _nullFkeyParentId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((NullFkeyParent)(results[0]));
        }
        
        /// <remarks/>
        public void NullFkeyParentProvider_GetByNullFkeyParentIdAsync(int _nullFkeyParentId, int start, int pageLength) {
            this.NullFkeyParentProvider_GetByNullFkeyParentIdAsync(_nullFkeyParentId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void NullFkeyParentProvider_GetByNullFkeyParentIdAsync(int _nullFkeyParentId, int start, int pageLength, object userState) {
            if ((this.NullFkeyParentProvider_GetByNullFkeyParentIdOperationCompleted == null)) {
                this.NullFkeyParentProvider_GetByNullFkeyParentIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNullFkeyParentProvider_GetByNullFkeyParentIdOperationCompleted);
            }
            this.InvokeAsync("NullFkeyParentProvider_GetByNullFkeyParentId", new object[] {
                        _nullFkeyParentId,
                        start,
                        pageLength}, this.NullFkeyParentProvider_GetByNullFkeyParentIdOperationCompleted, userState);
        }
        
        private void OnNullFkeyParentProvider_GetByNullFkeyParentIdOperationCompleted(object arg) {
            if ((this.NullFkeyParentProvider_GetByNullFkeyParentIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NullFkeyParentProvider_GetByNullFkeyParentIdCompleted(this, new NullFkeyParentProvider_GetByNullFkeyParentIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/NullFkeyParentProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NullFkeyParent NullFkeyParentProvider_Insert(NullFkeyParent entity) {
            object[] results = this.Invoke("NullFkeyParentProvider_Insert", new object[] {
                        entity});
            return ((NullFkeyParent)(results[0]));
        }
        
        /// <remarks/>
        public void NullFkeyParentProvider_InsertAsync(NullFkeyParent entity) {
            this.NullFkeyParentProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void NullFkeyParentProvider_InsertAsync(NullFkeyParent entity, object userState) {
            if ((this.NullFkeyParentProvider_InsertOperationCompleted == null)) {
                this.NullFkeyParentProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNullFkeyParentProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("NullFkeyParentProvider_Insert", new object[] {
                        entity}, this.NullFkeyParentProvider_InsertOperationCompleted, userState);
        }
        
        private void OnNullFkeyParentProvider_InsertOperationCompleted(object arg) {
            if ((this.NullFkeyParentProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NullFkeyParentProvider_InsertCompleted(this, new NullFkeyParentProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/NullFkeyParentProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void NullFkeyParentProvider_BulkInsert(NullFkeyParent[] entityList) {
            this.Invoke("NullFkeyParentProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void NullFkeyParentProvider_BulkInsertAsync(NullFkeyParent[] entityList) {
            this.NullFkeyParentProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void NullFkeyParentProvider_BulkInsertAsync(NullFkeyParent[] entityList, object userState) {
            if ((this.NullFkeyParentProvider_BulkInsertOperationCompleted == null)) {
                this.NullFkeyParentProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNullFkeyParentProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("NullFkeyParentProvider_BulkInsert", new object[] {
                        entityList}, this.NullFkeyParentProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnNullFkeyParentProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.NullFkeyParentProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NullFkeyParentProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/NullFkeyParentProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NullFkeyParent NullFkeyParentProvider_Update(NullFkeyParent entity) {
            object[] results = this.Invoke("NullFkeyParentProvider_Update", new object[] {
                        entity});
            return ((NullFkeyParent)(results[0]));
        }
        
        /// <remarks/>
        public void NullFkeyParentProvider_UpdateAsync(NullFkeyParent entity) {
            this.NullFkeyParentProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void NullFkeyParentProvider_UpdateAsync(NullFkeyParent entity, object userState) {
            if ((this.NullFkeyParentProvider_UpdateOperationCompleted == null)) {
                this.NullFkeyParentProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNullFkeyParentProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("NullFkeyParentProvider_Update", new object[] {
                        entity}, this.NullFkeyParentProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnNullFkeyParentProvider_UpdateOperationCompleted(object arg) {
            if ((this.NullFkeyParentProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NullFkeyParentProvider_UpdateCompleted(this, new NullFkeyParentProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ShoppingCartItemProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ShoppingCartItemProvider_Delete(int _shoppingCartItemId) {
            object[] results = this.Invoke("ShoppingCartItemProvider_Delete", new object[] {
                        _shoppingCartItemId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ShoppingCartItemProvider_DeleteAsync(int _shoppingCartItemId) {
            this.ShoppingCartItemProvider_DeleteAsync(_shoppingCartItemId, null);
        }
        
        /// <remarks/>
        public void ShoppingCartItemProvider_DeleteAsync(int _shoppingCartItemId, object userState) {
            if ((this.ShoppingCartItemProvider_DeleteOperationCompleted == null)) {
                this.ShoppingCartItemProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShoppingCartItemProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("ShoppingCartItemProvider_Delete", new object[] {
                        _shoppingCartItemId}, this.ShoppingCartItemProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnShoppingCartItemProvider_DeleteOperationCompleted(object arg) {
            if ((this.ShoppingCartItemProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShoppingCartItemProvider_DeleteCompleted(this, new ShoppingCartItemProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ShoppingCartItemProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ShoppingCartItem[] ShoppingCartItemProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ShoppingCartItemProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ShoppingCartItem[])(results[0]));
        }
        
        /// <remarks/>
        public void ShoppingCartItemProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.ShoppingCartItemProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ShoppingCartItemProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.ShoppingCartItemProvider_FindOperationCompleted == null)) {
                this.ShoppingCartItemProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShoppingCartItemProvider_FindOperationCompleted);
            }
            this.InvokeAsync("ShoppingCartItemProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.ShoppingCartItemProvider_FindOperationCompleted, userState);
        }
        
        private void OnShoppingCartItemProvider_FindOperationCompleted(object arg) {
            if ((this.ShoppingCartItemProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShoppingCartItemProvider_FindCompleted(this, new ShoppingCartItemProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ShoppingCartItemProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ShoppingCartItem[] ShoppingCartItemProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("ShoppingCartItemProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ShoppingCartItem[])(results[0]));
        }
        
        /// <remarks/>
        public void ShoppingCartItemProvider_GetAllAsync(int start, int pageLength) {
            this.ShoppingCartItemProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void ShoppingCartItemProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.ShoppingCartItemProvider_GetAllOperationCompleted == null)) {
                this.ShoppingCartItemProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShoppingCartItemProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("ShoppingCartItemProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.ShoppingCartItemProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnShoppingCartItemProvider_GetAllOperationCompleted(object arg) {
            if ((this.ShoppingCartItemProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShoppingCartItemProvider_GetAllCompleted(this, new ShoppingCartItemProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ShoppingCartItemProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ShoppingCartItem[] ShoppingCartItemProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ShoppingCartItemProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ShoppingCartItem[])(results[0]));
        }
        
        /// <remarks/>
        public void ShoppingCartItemProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.ShoppingCartItemProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ShoppingCartItemProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.ShoppingCartItemProvider_GetPagedOperationCompleted == null)) {
                this.ShoppingCartItemProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShoppingCartItemProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("ShoppingCartItemProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.ShoppingCartItemProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnShoppingCartItemProvider_GetPagedOperationCompleted(object arg) {
            if ((this.ShoppingCartItemProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShoppingCartItemProvider_GetPagedCompleted(this, new ShoppingCartItemProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ShoppingCartItemProvider_GetByProductId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ShoppingCartItem[] ShoppingCartItemProvider_GetByProductId(int _productId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ShoppingCartItemProvider_GetByProductId", new object[] {
                        _productId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ShoppingCartItem[])(results[0]));
        }
        
        /// <remarks/>
        public void ShoppingCartItemProvider_GetByProductIdAsync(int _productId, int start, int pageLength) {
            this.ShoppingCartItemProvider_GetByProductIdAsync(_productId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ShoppingCartItemProvider_GetByProductIdAsync(int _productId, int start, int pageLength, object userState) {
            if ((this.ShoppingCartItemProvider_GetByProductIdOperationCompleted == null)) {
                this.ShoppingCartItemProvider_GetByProductIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShoppingCartItemProvider_GetByProductIdOperationCompleted);
            }
            this.InvokeAsync("ShoppingCartItemProvider_GetByProductId", new object[] {
                        _productId,
                        start,
                        pageLength}, this.ShoppingCartItemProvider_GetByProductIdOperationCompleted, userState);
        }
        
        private void OnShoppingCartItemProvider_GetByProductIdOperationCompleted(object arg) {
            if ((this.ShoppingCartItemProvider_GetByProductIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShoppingCartItemProvider_GetByProductIdCompleted(this, new ShoppingCartItemProvider_GetByProductIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ShoppingCartItemProvider_GetByShoppingCar" +
            "tIdProductId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ShoppingCartItem[] ShoppingCartItemProvider_GetByShoppingCartIdProductId(string _shoppingCartId, int _productId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ShoppingCartItemProvider_GetByShoppingCartIdProductId", new object[] {
                        _shoppingCartId,
                        _productId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ShoppingCartItem[])(results[0]));
        }
        
        /// <remarks/>
        public void ShoppingCartItemProvider_GetByShoppingCartIdProductIdAsync(string _shoppingCartId, int _productId, int start, int pageLength) {
            this.ShoppingCartItemProvider_GetByShoppingCartIdProductIdAsync(_shoppingCartId, _productId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ShoppingCartItemProvider_GetByShoppingCartIdProductIdAsync(string _shoppingCartId, int _productId, int start, int pageLength, object userState) {
            if ((this.ShoppingCartItemProvider_GetByShoppingCartIdProductIdOperationCompleted == null)) {
                this.ShoppingCartItemProvider_GetByShoppingCartIdProductIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShoppingCartItemProvider_GetByShoppingCartIdProductIdOperationCompleted);
            }
            this.InvokeAsync("ShoppingCartItemProvider_GetByShoppingCartIdProductId", new object[] {
                        _shoppingCartId,
                        _productId,
                        start,
                        pageLength}, this.ShoppingCartItemProvider_GetByShoppingCartIdProductIdOperationCompleted, userState);
        }
        
        private void OnShoppingCartItemProvider_GetByShoppingCartIdProductIdOperationCompleted(object arg) {
            if ((this.ShoppingCartItemProvider_GetByShoppingCartIdProductIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShoppingCartItemProvider_GetByShoppingCartIdProductIdCompleted(this, new ShoppingCartItemProvider_GetByShoppingCartIdProductIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ShoppingCartItemProvider_GetByShoppingCar" +
            "tItemId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ShoppingCartItem ShoppingCartItemProvider_GetByShoppingCartItemId(int _shoppingCartItemId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ShoppingCartItemProvider_GetByShoppingCartItemId", new object[] {
                        _shoppingCartItemId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ShoppingCartItem)(results[0]));
        }
        
        /// <remarks/>
        public void ShoppingCartItemProvider_GetByShoppingCartItemIdAsync(int _shoppingCartItemId, int start, int pageLength) {
            this.ShoppingCartItemProvider_GetByShoppingCartItemIdAsync(_shoppingCartItemId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ShoppingCartItemProvider_GetByShoppingCartItemIdAsync(int _shoppingCartItemId, int start, int pageLength, object userState) {
            if ((this.ShoppingCartItemProvider_GetByShoppingCartItemIdOperationCompleted == null)) {
                this.ShoppingCartItemProvider_GetByShoppingCartItemIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShoppingCartItemProvider_GetByShoppingCartItemIdOperationCompleted);
            }
            this.InvokeAsync("ShoppingCartItemProvider_GetByShoppingCartItemId", new object[] {
                        _shoppingCartItemId,
                        start,
                        pageLength}, this.ShoppingCartItemProvider_GetByShoppingCartItemIdOperationCompleted, userState);
        }
        
        private void OnShoppingCartItemProvider_GetByShoppingCartItemIdOperationCompleted(object arg) {
            if ((this.ShoppingCartItemProvider_GetByShoppingCartItemIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShoppingCartItemProvider_GetByShoppingCartItemIdCompleted(this, new ShoppingCartItemProvider_GetByShoppingCartItemIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ShoppingCartItemProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ShoppingCartItem ShoppingCartItemProvider_Insert(ShoppingCartItem entity) {
            object[] results = this.Invoke("ShoppingCartItemProvider_Insert", new object[] {
                        entity});
            return ((ShoppingCartItem)(results[0]));
        }
        
        /// <remarks/>
        public void ShoppingCartItemProvider_InsertAsync(ShoppingCartItem entity) {
            this.ShoppingCartItemProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void ShoppingCartItemProvider_InsertAsync(ShoppingCartItem entity, object userState) {
            if ((this.ShoppingCartItemProvider_InsertOperationCompleted == null)) {
                this.ShoppingCartItemProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShoppingCartItemProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("ShoppingCartItemProvider_Insert", new object[] {
                        entity}, this.ShoppingCartItemProvider_InsertOperationCompleted, userState);
        }
        
        private void OnShoppingCartItemProvider_InsertOperationCompleted(object arg) {
            if ((this.ShoppingCartItemProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShoppingCartItemProvider_InsertCompleted(this, new ShoppingCartItemProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ShoppingCartItemProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ShoppingCartItemProvider_BulkInsert(ShoppingCartItem[] entityList) {
            this.Invoke("ShoppingCartItemProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void ShoppingCartItemProvider_BulkInsertAsync(ShoppingCartItem[] entityList) {
            this.ShoppingCartItemProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void ShoppingCartItemProvider_BulkInsertAsync(ShoppingCartItem[] entityList, object userState) {
            if ((this.ShoppingCartItemProvider_BulkInsertOperationCompleted == null)) {
                this.ShoppingCartItemProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShoppingCartItemProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("ShoppingCartItemProvider_BulkInsert", new object[] {
                        entityList}, this.ShoppingCartItemProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnShoppingCartItemProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.ShoppingCartItemProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShoppingCartItemProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ShoppingCartItemProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ShoppingCartItem ShoppingCartItemProvider_Update(ShoppingCartItem entity) {
            object[] results = this.Invoke("ShoppingCartItemProvider_Update", new object[] {
                        entity});
            return ((ShoppingCartItem)(results[0]));
        }
        
        /// <remarks/>
        public void ShoppingCartItemProvider_UpdateAsync(ShoppingCartItem entity) {
            this.ShoppingCartItemProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void ShoppingCartItemProvider_UpdateAsync(ShoppingCartItem entity, object userState) {
            if ((this.ShoppingCartItemProvider_UpdateOperationCompleted == null)) {
                this.ShoppingCartItemProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShoppingCartItemProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("ShoppingCartItemProvider_Update", new object[] {
                        entity}, this.ShoppingCartItemProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnShoppingCartItemProvider_UpdateOperationCompleted(object arg) {
            if ((this.ShoppingCartItemProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShoppingCartItemProvider_UpdateCompleted(this, new ShoppingCartItemProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/NullFkeyChildProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool NullFkeyChildProvider_Delete(int _nullFkeyChildId) {
            object[] results = this.Invoke("NullFkeyChildProvider_Delete", new object[] {
                        _nullFkeyChildId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void NullFkeyChildProvider_DeleteAsync(int _nullFkeyChildId) {
            this.NullFkeyChildProvider_DeleteAsync(_nullFkeyChildId, null);
        }
        
        /// <remarks/>
        public void NullFkeyChildProvider_DeleteAsync(int _nullFkeyChildId, object userState) {
            if ((this.NullFkeyChildProvider_DeleteOperationCompleted == null)) {
                this.NullFkeyChildProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNullFkeyChildProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("NullFkeyChildProvider_Delete", new object[] {
                        _nullFkeyChildId}, this.NullFkeyChildProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnNullFkeyChildProvider_DeleteOperationCompleted(object arg) {
            if ((this.NullFkeyChildProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NullFkeyChildProvider_DeleteCompleted(this, new NullFkeyChildProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/NullFkeyChildProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NullFkeyChild[] NullFkeyChildProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("NullFkeyChildProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((NullFkeyChild[])(results[0]));
        }
        
        /// <remarks/>
        public void NullFkeyChildProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.NullFkeyChildProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void NullFkeyChildProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.NullFkeyChildProvider_FindOperationCompleted == null)) {
                this.NullFkeyChildProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNullFkeyChildProvider_FindOperationCompleted);
            }
            this.InvokeAsync("NullFkeyChildProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.NullFkeyChildProvider_FindOperationCompleted, userState);
        }
        
        private void OnNullFkeyChildProvider_FindOperationCompleted(object arg) {
            if ((this.NullFkeyChildProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NullFkeyChildProvider_FindCompleted(this, new NullFkeyChildProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/NullFkeyChildProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NullFkeyChild[] NullFkeyChildProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("NullFkeyChildProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((NullFkeyChild[])(results[0]));
        }
        
        /// <remarks/>
        public void NullFkeyChildProvider_GetAllAsync(int start, int pageLength) {
            this.NullFkeyChildProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void NullFkeyChildProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.NullFkeyChildProvider_GetAllOperationCompleted == null)) {
                this.NullFkeyChildProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNullFkeyChildProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("NullFkeyChildProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.NullFkeyChildProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnNullFkeyChildProvider_GetAllOperationCompleted(object arg) {
            if ((this.NullFkeyChildProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NullFkeyChildProvider_GetAllCompleted(this, new NullFkeyChildProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CustomerAddressProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CustomerAddressProvider_Delete(int _customerId, int _addressId) {
            object[] results = this.Invoke("CustomerAddressProvider_Delete", new object[] {
                        _customerId,
                        _addressId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CustomerAddressProvider_DeleteAsync(int _customerId, int _addressId) {
            this.CustomerAddressProvider_DeleteAsync(_customerId, _addressId, null);
        }
        
        /// <remarks/>
        public void CustomerAddressProvider_DeleteAsync(int _customerId, int _addressId, object userState) {
            if ((this.CustomerAddressProvider_DeleteOperationCompleted == null)) {
                this.CustomerAddressProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerAddressProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("CustomerAddressProvider_Delete", new object[] {
                        _customerId,
                        _addressId}, this.CustomerAddressProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnCustomerAddressProvider_DeleteOperationCompleted(object arg) {
            if ((this.CustomerAddressProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerAddressProvider_DeleteCompleted(this, new CustomerAddressProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CustomerAddressProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomerAddress[] CustomerAddressProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CustomerAddressProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((CustomerAddress[])(results[0]));
        }
        
        /// <remarks/>
        public void CustomerAddressProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.CustomerAddressProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CustomerAddressProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.CustomerAddressProvider_FindOperationCompleted == null)) {
                this.CustomerAddressProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerAddressProvider_FindOperationCompleted);
            }
            this.InvokeAsync("CustomerAddressProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.CustomerAddressProvider_FindOperationCompleted, userState);
        }
        
        private void OnCustomerAddressProvider_FindOperationCompleted(object arg) {
            if ((this.CustomerAddressProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerAddressProvider_FindCompleted(this, new CustomerAddressProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CustomerAddressProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomerAddress[] CustomerAddressProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("CustomerAddressProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((CustomerAddress[])(results[0]));
        }
        
        /// <remarks/>
        public void CustomerAddressProvider_GetAllAsync(int start, int pageLength) {
            this.CustomerAddressProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void CustomerAddressProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.CustomerAddressProvider_GetAllOperationCompleted == null)) {
                this.CustomerAddressProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerAddressProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("CustomerAddressProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.CustomerAddressProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnCustomerAddressProvider_GetAllOperationCompleted(object arg) {
            if ((this.CustomerAddressProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerAddressProvider_GetAllCompleted(this, new CustomerAddressProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CustomerAddressProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomerAddress[] CustomerAddressProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CustomerAddressProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((CustomerAddress[])(results[0]));
        }
        
        /// <remarks/>
        public void CustomerAddressProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.CustomerAddressProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CustomerAddressProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.CustomerAddressProvider_GetPagedOperationCompleted == null)) {
                this.CustomerAddressProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerAddressProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("CustomerAddressProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.CustomerAddressProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnCustomerAddressProvider_GetPagedOperationCompleted(object arg) {
            if ((this.CustomerAddressProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerAddressProvider_GetPagedCompleted(this, new CustomerAddressProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CustomerAddressProvider_GetByAddressId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomerAddress[] CustomerAddressProvider_GetByAddressId(int _addressId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CustomerAddressProvider_GetByAddressId", new object[] {
                        _addressId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((CustomerAddress[])(results[0]));
        }
        
        /// <remarks/>
        public void CustomerAddressProvider_GetByAddressIdAsync(int _addressId, int start, int pageLength) {
            this.CustomerAddressProvider_GetByAddressIdAsync(_addressId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CustomerAddressProvider_GetByAddressIdAsync(int _addressId, int start, int pageLength, object userState) {
            if ((this.CustomerAddressProvider_GetByAddressIdOperationCompleted == null)) {
                this.CustomerAddressProvider_GetByAddressIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerAddressProvider_GetByAddressIdOperationCompleted);
            }
            this.InvokeAsync("CustomerAddressProvider_GetByAddressId", new object[] {
                        _addressId,
                        start,
                        pageLength}, this.CustomerAddressProvider_GetByAddressIdOperationCompleted, userState);
        }
        
        private void OnCustomerAddressProvider_GetByAddressIdOperationCompleted(object arg) {
            if ((this.CustomerAddressProvider_GetByAddressIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerAddressProvider_GetByAddressIdCompleted(this, new CustomerAddressProvider_GetByAddressIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CustomerAddressProvider_GetByAddressTypeI" +
            "d", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomerAddress[] CustomerAddressProvider_GetByAddressTypeId(int _addressTypeId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CustomerAddressProvider_GetByAddressTypeId", new object[] {
                        _addressTypeId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((CustomerAddress[])(results[0]));
        }
        
        /// <remarks/>
        public void CustomerAddressProvider_GetByAddressTypeIdAsync(int _addressTypeId, int start, int pageLength) {
            this.CustomerAddressProvider_GetByAddressTypeIdAsync(_addressTypeId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CustomerAddressProvider_GetByAddressTypeIdAsync(int _addressTypeId, int start, int pageLength, object userState) {
            if ((this.CustomerAddressProvider_GetByAddressTypeIdOperationCompleted == null)) {
                this.CustomerAddressProvider_GetByAddressTypeIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerAddressProvider_GetByAddressTypeIdOperationCompleted);
            }
            this.InvokeAsync("CustomerAddressProvider_GetByAddressTypeId", new object[] {
                        _addressTypeId,
                        start,
                        pageLength}, this.CustomerAddressProvider_GetByAddressTypeIdOperationCompleted, userState);
        }
        
        private void OnCustomerAddressProvider_GetByAddressTypeIdOperationCompleted(object arg) {
            if ((this.CustomerAddressProvider_GetByAddressTypeIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerAddressProvider_GetByAddressTypeIdCompleted(this, new CustomerAddressProvider_GetByAddressTypeIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CustomerAddressProvider_GetByCustomerId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomerAddress[] CustomerAddressProvider_GetByCustomerId(int _customerId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CustomerAddressProvider_GetByCustomerId", new object[] {
                        _customerId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((CustomerAddress[])(results[0]));
        }
        
        /// <remarks/>
        public void CustomerAddressProvider_GetByCustomerIdAsync(int _customerId, int start, int pageLength) {
            this.CustomerAddressProvider_GetByCustomerIdAsync(_customerId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CustomerAddressProvider_GetByCustomerIdAsync(int _customerId, int start, int pageLength, object userState) {
            if ((this.CustomerAddressProvider_GetByCustomerIdOperationCompleted == null)) {
                this.CustomerAddressProvider_GetByCustomerIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerAddressProvider_GetByCustomerIdOperationCompleted);
            }
            this.InvokeAsync("CustomerAddressProvider_GetByCustomerId", new object[] {
                        _customerId,
                        start,
                        pageLength}, this.CustomerAddressProvider_GetByCustomerIdOperationCompleted, userState);
        }
        
        private void OnCustomerAddressProvider_GetByCustomerIdOperationCompleted(object arg) {
            if ((this.CustomerAddressProvider_GetByCustomerIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerAddressProvider_GetByCustomerIdCompleted(this, new CustomerAddressProvider_GetByCustomerIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CustomerAddressProvider_GetByRowguid", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomerAddress CustomerAddressProvider_GetByRowguid(System.Guid _rowguid, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CustomerAddressProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((CustomerAddress)(results[0]));
        }
        
        /// <remarks/>
        public void CustomerAddressProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength) {
            this.CustomerAddressProvider_GetByRowguidAsync(_rowguid, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CustomerAddressProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength, object userState) {
            if ((this.CustomerAddressProvider_GetByRowguidOperationCompleted == null)) {
                this.CustomerAddressProvider_GetByRowguidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerAddressProvider_GetByRowguidOperationCompleted);
            }
            this.InvokeAsync("CustomerAddressProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength}, this.CustomerAddressProvider_GetByRowguidOperationCompleted, userState);
        }
        
        private void OnCustomerAddressProvider_GetByRowguidOperationCompleted(object arg) {
            if ((this.CustomerAddressProvider_GetByRowguidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerAddressProvider_GetByRowguidCompleted(this, new CustomerAddressProvider_GetByRowguidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CustomerAddressProvider_GetByCustomerIdAd" +
            "dressId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomerAddress CustomerAddressProvider_GetByCustomerIdAddressId(int _customerId, int _addressId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CustomerAddressProvider_GetByCustomerIdAddressId", new object[] {
                        _customerId,
                        _addressId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((CustomerAddress)(results[0]));
        }
        
        /// <remarks/>
        public void CustomerAddressProvider_GetByCustomerIdAddressIdAsync(int _customerId, int _addressId, int start, int pageLength) {
            this.CustomerAddressProvider_GetByCustomerIdAddressIdAsync(_customerId, _addressId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CustomerAddressProvider_GetByCustomerIdAddressIdAsync(int _customerId, int _addressId, int start, int pageLength, object userState) {
            if ((this.CustomerAddressProvider_GetByCustomerIdAddressIdOperationCompleted == null)) {
                this.CustomerAddressProvider_GetByCustomerIdAddressIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerAddressProvider_GetByCustomerIdAddressIdOperationCompleted);
            }
            this.InvokeAsync("CustomerAddressProvider_GetByCustomerIdAddressId", new object[] {
                        _customerId,
                        _addressId,
                        start,
                        pageLength}, this.CustomerAddressProvider_GetByCustomerIdAddressIdOperationCompleted, userState);
        }
        
        private void OnCustomerAddressProvider_GetByCustomerIdAddressIdOperationCompleted(object arg) {
            if ((this.CustomerAddressProvider_GetByCustomerIdAddressIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerAddressProvider_GetByCustomerIdAddressIdCompleted(this, new CustomerAddressProvider_GetByCustomerIdAddressIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CustomerAddressProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomerAddress CustomerAddressProvider_Insert(CustomerAddress entity) {
            object[] results = this.Invoke("CustomerAddressProvider_Insert", new object[] {
                        entity});
            return ((CustomerAddress)(results[0]));
        }
        
        /// <remarks/>
        public void CustomerAddressProvider_InsertAsync(CustomerAddress entity) {
            this.CustomerAddressProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void CustomerAddressProvider_InsertAsync(CustomerAddress entity, object userState) {
            if ((this.CustomerAddressProvider_InsertOperationCompleted == null)) {
                this.CustomerAddressProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerAddressProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("CustomerAddressProvider_Insert", new object[] {
                        entity}, this.CustomerAddressProvider_InsertOperationCompleted, userState);
        }
        
        private void OnCustomerAddressProvider_InsertOperationCompleted(object arg) {
            if ((this.CustomerAddressProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerAddressProvider_InsertCompleted(this, new CustomerAddressProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CustomerAddressProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CustomerAddressProvider_BulkInsert(CustomerAddress[] entityList) {
            this.Invoke("CustomerAddressProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void CustomerAddressProvider_BulkInsertAsync(CustomerAddress[] entityList) {
            this.CustomerAddressProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void CustomerAddressProvider_BulkInsertAsync(CustomerAddress[] entityList, object userState) {
            if ((this.CustomerAddressProvider_BulkInsertOperationCompleted == null)) {
                this.CustomerAddressProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerAddressProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("CustomerAddressProvider_BulkInsert", new object[] {
                        entityList}, this.CustomerAddressProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnCustomerAddressProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.CustomerAddressProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerAddressProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CustomerAddressProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomerAddress CustomerAddressProvider_Update(CustomerAddress entity) {
            object[] results = this.Invoke("CustomerAddressProvider_Update", new object[] {
                        entity});
            return ((CustomerAddress)(results[0]));
        }
        
        /// <remarks/>
        public void CustomerAddressProvider_UpdateAsync(CustomerAddress entity) {
            this.CustomerAddressProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void CustomerAddressProvider_UpdateAsync(CustomerAddress entity, object userState) {
            if ((this.CustomerAddressProvider_UpdateOperationCompleted == null)) {
                this.CustomerAddressProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerAddressProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("CustomerAddressProvider_Update", new object[] {
                        entity}, this.CustomerAddressProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnCustomerAddressProvider_UpdateOperationCompleted(object arg) {
            if ((this.CustomerAddressProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerAddressProvider_UpdateCompleted(this, new CustomerAddressProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductSubcategoryProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ProductSubcategoryProvider_Delete(int _productSubcategoryId) {
            object[] results = this.Invoke("ProductSubcategoryProvider_Delete", new object[] {
                        _productSubcategoryId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ProductSubcategoryProvider_DeleteAsync(int _productSubcategoryId) {
            this.ProductSubcategoryProvider_DeleteAsync(_productSubcategoryId, null);
        }
        
        /// <remarks/>
        public void ProductSubcategoryProvider_DeleteAsync(int _productSubcategoryId, object userState) {
            if ((this.ProductSubcategoryProvider_DeleteOperationCompleted == null)) {
                this.ProductSubcategoryProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductSubcategoryProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("ProductSubcategoryProvider_Delete", new object[] {
                        _productSubcategoryId}, this.ProductSubcategoryProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnProductSubcategoryProvider_DeleteOperationCompleted(object arg) {
            if ((this.ProductSubcategoryProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductSubcategoryProvider_DeleteCompleted(this, new ProductSubcategoryProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductSubcategoryProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductSubcategory[] ProductSubcategoryProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductSubcategoryProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductSubcategory[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductSubcategoryProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.ProductSubcategoryProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductSubcategoryProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.ProductSubcategoryProvider_FindOperationCompleted == null)) {
                this.ProductSubcategoryProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductSubcategoryProvider_FindOperationCompleted);
            }
            this.InvokeAsync("ProductSubcategoryProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.ProductSubcategoryProvider_FindOperationCompleted, userState);
        }
        
        private void OnProductSubcategoryProvider_FindOperationCompleted(object arg) {
            if ((this.ProductSubcategoryProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductSubcategoryProvider_FindCompleted(this, new ProductSubcategoryProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductSubcategoryProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductSubcategory[] ProductSubcategoryProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductSubcategoryProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductSubcategory[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductSubcategoryProvider_GetAllAsync(int start, int pageLength) {
            this.ProductSubcategoryProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductSubcategoryProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.ProductSubcategoryProvider_GetAllOperationCompleted == null)) {
                this.ProductSubcategoryProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductSubcategoryProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("ProductSubcategoryProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.ProductSubcategoryProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnProductSubcategoryProvider_GetAllOperationCompleted(object arg) {
            if ((this.ProductSubcategoryProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductSubcategoryProvider_GetAllCompleted(this, new ProductSubcategoryProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductSubcategoryProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductSubcategory[] ProductSubcategoryProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductSubcategoryProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductSubcategory[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductSubcategoryProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.ProductSubcategoryProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductSubcategoryProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.ProductSubcategoryProvider_GetPagedOperationCompleted == null)) {
                this.ProductSubcategoryProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductSubcategoryProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("ProductSubcategoryProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.ProductSubcategoryProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnProductSubcategoryProvider_GetPagedOperationCompleted(object arg) {
            if ((this.ProductSubcategoryProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductSubcategoryProvider_GetPagedCompleted(this, new ProductSubcategoryProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductSubcategoryProvider_GetByProductCa" +
            "tegoryId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductSubcategory[] ProductSubcategoryProvider_GetByProductCategoryId(int _productCategoryId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductSubcategoryProvider_GetByProductCategoryId", new object[] {
                        _productCategoryId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductSubcategory[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductSubcategoryProvider_GetByProductCategoryIdAsync(int _productCategoryId, int start, int pageLength) {
            this.ProductSubcategoryProvider_GetByProductCategoryIdAsync(_productCategoryId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductSubcategoryProvider_GetByProductCategoryIdAsync(int _productCategoryId, int start, int pageLength, object userState) {
            if ((this.ProductSubcategoryProvider_GetByProductCategoryIdOperationCompleted == null)) {
                this.ProductSubcategoryProvider_GetByProductCategoryIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductSubcategoryProvider_GetByProductCategoryIdOperationCompleted);
            }
            this.InvokeAsync("ProductSubcategoryProvider_GetByProductCategoryId", new object[] {
                        _productCategoryId,
                        start,
                        pageLength}, this.ProductSubcategoryProvider_GetByProductCategoryIdOperationCompleted, userState);
        }
        
        private void OnProductSubcategoryProvider_GetByProductCategoryIdOperationCompleted(object arg) {
            if ((this.ProductSubcategoryProvider_GetByProductCategoryIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductSubcategoryProvider_GetByProductCategoryIdCompleted(this, new ProductSubcategoryProvider_GetByProductCategoryIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductSubcategoryProvider_GetByName", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductSubcategory ProductSubcategoryProvider_GetByName(string _name, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductSubcategoryProvider_GetByName", new object[] {
                        _name,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductSubcategory)(results[0]));
        }
        
        /// <remarks/>
        public void ProductSubcategoryProvider_GetByNameAsync(string _name, int start, int pageLength) {
            this.ProductSubcategoryProvider_GetByNameAsync(_name, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductSubcategoryProvider_GetByNameAsync(string _name, int start, int pageLength, object userState) {
            if ((this.ProductSubcategoryProvider_GetByNameOperationCompleted == null)) {
                this.ProductSubcategoryProvider_GetByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductSubcategoryProvider_GetByNameOperationCompleted);
            }
            this.InvokeAsync("ProductSubcategoryProvider_GetByName", new object[] {
                        _name,
                        start,
                        pageLength}, this.ProductSubcategoryProvider_GetByNameOperationCompleted, userState);
        }
        
        private void OnProductSubcategoryProvider_GetByNameOperationCompleted(object arg) {
            if ((this.ProductSubcategoryProvider_GetByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductSubcategoryProvider_GetByNameCompleted(this, new ProductSubcategoryProvider_GetByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductSubcategoryProvider_GetByRowguid", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductSubcategory ProductSubcategoryProvider_GetByRowguid(System.Guid _rowguid, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductSubcategoryProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductSubcategory)(results[0]));
        }
        
        /// <remarks/>
        public void ProductSubcategoryProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength) {
            this.ProductSubcategoryProvider_GetByRowguidAsync(_rowguid, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductSubcategoryProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength, object userState) {
            if ((this.ProductSubcategoryProvider_GetByRowguidOperationCompleted == null)) {
                this.ProductSubcategoryProvider_GetByRowguidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductSubcategoryProvider_GetByRowguidOperationCompleted);
            }
            this.InvokeAsync("ProductSubcategoryProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength}, this.ProductSubcategoryProvider_GetByRowguidOperationCompleted, userState);
        }
        
        private void OnProductSubcategoryProvider_GetByRowguidOperationCompleted(object arg) {
            if ((this.ProductSubcategoryProvider_GetByRowguidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductSubcategoryProvider_GetByRowguidCompleted(this, new ProductSubcategoryProvider_GetByRowguidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductSubcategoryProvider_GetByProductSu" +
            "bcategoryId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductSubcategory ProductSubcategoryProvider_GetByProductSubcategoryId(int _productSubcategoryId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductSubcategoryProvider_GetByProductSubcategoryId", new object[] {
                        _productSubcategoryId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductSubcategory)(results[0]));
        }
        
        /// <remarks/>
        public void ProductSubcategoryProvider_GetByProductSubcategoryIdAsync(int _productSubcategoryId, int start, int pageLength) {
            this.ProductSubcategoryProvider_GetByProductSubcategoryIdAsync(_productSubcategoryId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductSubcategoryProvider_GetByProductSubcategoryIdAsync(int _productSubcategoryId, int start, int pageLength, object userState) {
            if ((this.ProductSubcategoryProvider_GetByProductSubcategoryIdOperationCompleted == null)) {
                this.ProductSubcategoryProvider_GetByProductSubcategoryIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductSubcategoryProvider_GetByProductSubcategoryIdOperationCompleted);
            }
            this.InvokeAsync("ProductSubcategoryProvider_GetByProductSubcategoryId", new object[] {
                        _productSubcategoryId,
                        start,
                        pageLength}, this.ProductSubcategoryProvider_GetByProductSubcategoryIdOperationCompleted, userState);
        }
        
        private void OnProductSubcategoryProvider_GetByProductSubcategoryIdOperationCompleted(object arg) {
            if ((this.ProductSubcategoryProvider_GetByProductSubcategoryIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductSubcategoryProvider_GetByProductSubcategoryIdCompleted(this, new ProductSubcategoryProvider_GetByProductSubcategoryIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductSubcategoryProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductSubcategory ProductSubcategoryProvider_Insert(ProductSubcategory entity) {
            object[] results = this.Invoke("ProductSubcategoryProvider_Insert", new object[] {
                        entity});
            return ((ProductSubcategory)(results[0]));
        }
        
        /// <remarks/>
        public void ProductSubcategoryProvider_InsertAsync(ProductSubcategory entity) {
            this.ProductSubcategoryProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void ProductSubcategoryProvider_InsertAsync(ProductSubcategory entity, object userState) {
            if ((this.ProductSubcategoryProvider_InsertOperationCompleted == null)) {
                this.ProductSubcategoryProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductSubcategoryProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("ProductSubcategoryProvider_Insert", new object[] {
                        entity}, this.ProductSubcategoryProvider_InsertOperationCompleted, userState);
        }
        
        private void OnProductSubcategoryProvider_InsertOperationCompleted(object arg) {
            if ((this.ProductSubcategoryProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductSubcategoryProvider_InsertCompleted(this, new ProductSubcategoryProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductSubcategoryProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ProductSubcategoryProvider_BulkInsert(ProductSubcategory[] entityList) {
            this.Invoke("ProductSubcategoryProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void ProductSubcategoryProvider_BulkInsertAsync(ProductSubcategory[] entityList) {
            this.ProductSubcategoryProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void ProductSubcategoryProvider_BulkInsertAsync(ProductSubcategory[] entityList, object userState) {
            if ((this.ProductSubcategoryProvider_BulkInsertOperationCompleted == null)) {
                this.ProductSubcategoryProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductSubcategoryProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("ProductSubcategoryProvider_BulkInsert", new object[] {
                        entityList}, this.ProductSubcategoryProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnProductSubcategoryProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.ProductSubcategoryProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductSubcategoryProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductSubcategoryProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductSubcategory ProductSubcategoryProvider_Update(ProductSubcategory entity) {
            object[] results = this.Invoke("ProductSubcategoryProvider_Update", new object[] {
                        entity});
            return ((ProductSubcategory)(results[0]));
        }
        
        /// <remarks/>
        public void ProductSubcategoryProvider_UpdateAsync(ProductSubcategory entity) {
            this.ProductSubcategoryProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void ProductSubcategoryProvider_UpdateAsync(ProductSubcategory entity, object userState) {
            if ((this.ProductSubcategoryProvider_UpdateOperationCompleted == null)) {
                this.ProductSubcategoryProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductSubcategoryProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("ProductSubcategoryProvider_Update", new object[] {
                        entity}, this.ProductSubcategoryProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnProductSubcategoryProvider_UpdateOperationCompleted(object arg) {
            if ((this.ProductSubcategoryProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductSubcategoryProvider_UpdateCompleted(this, new ProductSubcategoryProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VendorContactProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool VendorContactProvider_Delete(int _vendorId, int _contactId) {
            object[] results = this.Invoke("VendorContactProvider_Delete", new object[] {
                        _vendorId,
                        _contactId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void VendorContactProvider_DeleteAsync(int _vendorId, int _contactId) {
            this.VendorContactProvider_DeleteAsync(_vendorId, _contactId, null);
        }
        
        /// <remarks/>
        public void VendorContactProvider_DeleteAsync(int _vendorId, int _contactId, object userState) {
            if ((this.VendorContactProvider_DeleteOperationCompleted == null)) {
                this.VendorContactProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorContactProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("VendorContactProvider_Delete", new object[] {
                        _vendorId,
                        _contactId}, this.VendorContactProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnVendorContactProvider_DeleteOperationCompleted(object arg) {
            if ((this.VendorContactProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorContactProvider_DeleteCompleted(this, new VendorContactProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VendorContactProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VendorContact[] VendorContactProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VendorContactProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((VendorContact[])(results[0]));
        }
        
        /// <remarks/>
        public void VendorContactProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.VendorContactProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VendorContactProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.VendorContactProvider_FindOperationCompleted == null)) {
                this.VendorContactProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorContactProvider_FindOperationCompleted);
            }
            this.InvokeAsync("VendorContactProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.VendorContactProvider_FindOperationCompleted, userState);
        }
        
        private void OnVendorContactProvider_FindOperationCompleted(object arg) {
            if ((this.VendorContactProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorContactProvider_FindCompleted(this, new VendorContactProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VendorContactProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VendorContact[] VendorContactProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("VendorContactProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((VendorContact[])(results[0]));
        }
        
        /// <remarks/>
        public void VendorContactProvider_GetAllAsync(int start, int pageLength) {
            this.VendorContactProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void VendorContactProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.VendorContactProvider_GetAllOperationCompleted == null)) {
                this.VendorContactProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorContactProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("VendorContactProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.VendorContactProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnVendorContactProvider_GetAllOperationCompleted(object arg) {
            if ((this.VendorContactProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorContactProvider_GetAllCompleted(this, new VendorContactProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VendorContactProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VendorContact[] VendorContactProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VendorContactProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((VendorContact[])(results[0]));
        }
        
        /// <remarks/>
        public void VendorContactProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.VendorContactProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VendorContactProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.VendorContactProvider_GetPagedOperationCompleted == null)) {
                this.VendorContactProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorContactProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("VendorContactProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.VendorContactProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnVendorContactProvider_GetPagedOperationCompleted(object arg) {
            if ((this.VendorContactProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorContactProvider_GetPagedCompleted(this, new VendorContactProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VendorContactProvider_GetByVendorId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VendorContact[] VendorContactProvider_GetByVendorId(int _vendorId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VendorContactProvider_GetByVendorId", new object[] {
                        _vendorId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((VendorContact[])(results[0]));
        }
        
        /// <remarks/>
        public void VendorContactProvider_GetByVendorIdAsync(int _vendorId, int start, int pageLength) {
            this.VendorContactProvider_GetByVendorIdAsync(_vendorId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VendorContactProvider_GetByVendorIdAsync(int _vendorId, int start, int pageLength, object userState) {
            if ((this.VendorContactProvider_GetByVendorIdOperationCompleted == null)) {
                this.VendorContactProvider_GetByVendorIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorContactProvider_GetByVendorIdOperationCompleted);
            }
            this.InvokeAsync("VendorContactProvider_GetByVendorId", new object[] {
                        _vendorId,
                        start,
                        pageLength}, this.VendorContactProvider_GetByVendorIdOperationCompleted, userState);
        }
        
        private void OnVendorContactProvider_GetByVendorIdOperationCompleted(object arg) {
            if ((this.VendorContactProvider_GetByVendorIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorContactProvider_GetByVendorIdCompleted(this, new VendorContactProvider_GetByVendorIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VendorContactProvider_GetByContactId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VendorContact[] VendorContactProvider_GetByContactId(int _contactId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VendorContactProvider_GetByContactId", new object[] {
                        _contactId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((VendorContact[])(results[0]));
        }
        
        /// <remarks/>
        public void VendorContactProvider_GetByContactIdAsync(int _contactId, int start, int pageLength) {
            this.VendorContactProvider_GetByContactIdAsync(_contactId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VendorContactProvider_GetByContactIdAsync(int _contactId, int start, int pageLength, object userState) {
            if ((this.VendorContactProvider_GetByContactIdOperationCompleted == null)) {
                this.VendorContactProvider_GetByContactIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorContactProvider_GetByContactIdOperationCompleted);
            }
            this.InvokeAsync("VendorContactProvider_GetByContactId", new object[] {
                        _contactId,
                        start,
                        pageLength}, this.VendorContactProvider_GetByContactIdOperationCompleted, userState);
        }
        
        private void OnVendorContactProvider_GetByContactIdOperationCompleted(object arg) {
            if ((this.VendorContactProvider_GetByContactIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorContactProvider_GetByContactIdCompleted(this, new VendorContactProvider_GetByContactIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VendorContactProvider_GetByContactTypeId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VendorContact[] VendorContactProvider_GetByContactTypeId(int _contactTypeId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VendorContactProvider_GetByContactTypeId", new object[] {
                        _contactTypeId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((VendorContact[])(results[0]));
        }
        
        /// <remarks/>
        public void VendorContactProvider_GetByContactTypeIdAsync(int _contactTypeId, int start, int pageLength) {
            this.VendorContactProvider_GetByContactTypeIdAsync(_contactTypeId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VendorContactProvider_GetByContactTypeIdAsync(int _contactTypeId, int start, int pageLength, object userState) {
            if ((this.VendorContactProvider_GetByContactTypeIdOperationCompleted == null)) {
                this.VendorContactProvider_GetByContactTypeIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorContactProvider_GetByContactTypeIdOperationCompleted);
            }
            this.InvokeAsync("VendorContactProvider_GetByContactTypeId", new object[] {
                        _contactTypeId,
                        start,
                        pageLength}, this.VendorContactProvider_GetByContactTypeIdOperationCompleted, userState);
        }
        
        private void OnVendorContactProvider_GetByContactTypeIdOperationCompleted(object arg) {
            if ((this.VendorContactProvider_GetByContactTypeIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorContactProvider_GetByContactTypeIdCompleted(this, new VendorContactProvider_GetByContactTypeIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VendorContactProvider_GetByVendorIdContac" +
            "tId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VendorContact VendorContactProvider_GetByVendorIdContactId(int _vendorId, int _contactId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VendorContactProvider_GetByVendorIdContactId", new object[] {
                        _vendorId,
                        _contactId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((VendorContact)(results[0]));
        }
        
        /// <remarks/>
        public void VendorContactProvider_GetByVendorIdContactIdAsync(int _vendorId, int _contactId, int start, int pageLength) {
            this.VendorContactProvider_GetByVendorIdContactIdAsync(_vendorId, _contactId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VendorContactProvider_GetByVendorIdContactIdAsync(int _vendorId, int _contactId, int start, int pageLength, object userState) {
            if ((this.VendorContactProvider_GetByVendorIdContactIdOperationCompleted == null)) {
                this.VendorContactProvider_GetByVendorIdContactIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorContactProvider_GetByVendorIdContactIdOperationCompleted);
            }
            this.InvokeAsync("VendorContactProvider_GetByVendorIdContactId", new object[] {
                        _vendorId,
                        _contactId,
                        start,
                        pageLength}, this.VendorContactProvider_GetByVendorIdContactIdOperationCompleted, userState);
        }
        
        private void OnVendorContactProvider_GetByVendorIdContactIdOperationCompleted(object arg) {
            if ((this.VendorContactProvider_GetByVendorIdContactIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorContactProvider_GetByVendorIdContactIdCompleted(this, new VendorContactProvider_GetByVendorIdContactIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VendorContactProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VendorContact VendorContactProvider_Insert(VendorContact entity) {
            object[] results = this.Invoke("VendorContactProvider_Insert", new object[] {
                        entity});
            return ((VendorContact)(results[0]));
        }
        
        /// <remarks/>
        public void VendorContactProvider_InsertAsync(VendorContact entity) {
            this.VendorContactProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void VendorContactProvider_InsertAsync(VendorContact entity, object userState) {
            if ((this.VendorContactProvider_InsertOperationCompleted == null)) {
                this.VendorContactProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorContactProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("VendorContactProvider_Insert", new object[] {
                        entity}, this.VendorContactProvider_InsertOperationCompleted, userState);
        }
        
        private void OnVendorContactProvider_InsertOperationCompleted(object arg) {
            if ((this.VendorContactProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorContactProvider_InsertCompleted(this, new VendorContactProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VendorContactProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void VendorContactProvider_BulkInsert(VendorContact[] entityList) {
            this.Invoke("VendorContactProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void VendorContactProvider_BulkInsertAsync(VendorContact[] entityList) {
            this.VendorContactProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void VendorContactProvider_BulkInsertAsync(VendorContact[] entityList, object userState) {
            if ((this.VendorContactProvider_BulkInsertOperationCompleted == null)) {
                this.VendorContactProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorContactProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("VendorContactProvider_BulkInsert", new object[] {
                        entityList}, this.VendorContactProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnVendorContactProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.VendorContactProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorContactProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VendorContactProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VendorContact VendorContactProvider_Update(VendorContact entity) {
            object[] results = this.Invoke("VendorContactProvider_Update", new object[] {
                        entity});
            return ((VendorContact)(results[0]));
        }
        
        /// <remarks/>
        public void VendorContactProvider_UpdateAsync(VendorContact entity) {
            this.VendorContactProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void VendorContactProvider_UpdateAsync(VendorContact entity, object userState) {
            if ((this.VendorContactProvider_UpdateOperationCompleted == null)) {
                this.VendorContactProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorContactProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("VendorContactProvider_Update", new object[] {
                        entity}, this.VendorContactProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnVendorContactProvider_UpdateOperationCompleted(object arg) {
            if ((this.VendorContactProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorContactProvider_UpdateCompleted(this, new VendorContactProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ContactCreditCardProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ContactCreditCardProvider_Delete(int _contactId, int _creditCardId) {
            object[] results = this.Invoke("ContactCreditCardProvider_Delete", new object[] {
                        _contactId,
                        _creditCardId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ContactCreditCardProvider_DeleteAsync(int _contactId, int _creditCardId) {
            this.ContactCreditCardProvider_DeleteAsync(_contactId, _creditCardId, null);
        }
        
        /// <remarks/>
        public void ContactCreditCardProvider_DeleteAsync(int _contactId, int _creditCardId, object userState) {
            if ((this.ContactCreditCardProvider_DeleteOperationCompleted == null)) {
                this.ContactCreditCardProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactCreditCardProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("ContactCreditCardProvider_Delete", new object[] {
                        _contactId,
                        _creditCardId}, this.ContactCreditCardProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnContactCreditCardProvider_DeleteOperationCompleted(object arg) {
            if ((this.ContactCreditCardProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactCreditCardProvider_DeleteCompleted(this, new ContactCreditCardProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ContactCreditCardProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ContactCreditCard[] ContactCreditCardProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ContactCreditCardProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ContactCreditCard[])(results[0]));
        }
        
        /// <remarks/>
        public void ContactCreditCardProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.ContactCreditCardProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ContactCreditCardProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.ContactCreditCardProvider_FindOperationCompleted == null)) {
                this.ContactCreditCardProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactCreditCardProvider_FindOperationCompleted);
            }
            this.InvokeAsync("ContactCreditCardProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.ContactCreditCardProvider_FindOperationCompleted, userState);
        }
        
        private void OnContactCreditCardProvider_FindOperationCompleted(object arg) {
            if ((this.ContactCreditCardProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactCreditCardProvider_FindCompleted(this, new ContactCreditCardProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ContactCreditCardProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ContactCreditCard[] ContactCreditCardProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("ContactCreditCardProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ContactCreditCard[])(results[0]));
        }
        
        /// <remarks/>
        public void ContactCreditCardProvider_GetAllAsync(int start, int pageLength) {
            this.ContactCreditCardProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void ContactCreditCardProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.ContactCreditCardProvider_GetAllOperationCompleted == null)) {
                this.ContactCreditCardProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactCreditCardProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("ContactCreditCardProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.ContactCreditCardProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnContactCreditCardProvider_GetAllOperationCompleted(object arg) {
            if ((this.ContactCreditCardProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactCreditCardProvider_GetAllCompleted(this, new ContactCreditCardProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ContactCreditCardProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ContactCreditCard[] ContactCreditCardProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ContactCreditCardProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ContactCreditCard[])(results[0]));
        }
        
        /// <remarks/>
        public void ContactCreditCardProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.ContactCreditCardProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ContactCreditCardProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.ContactCreditCardProvider_GetPagedOperationCompleted == null)) {
                this.ContactCreditCardProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactCreditCardProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("ContactCreditCardProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.ContactCreditCardProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnContactCreditCardProvider_GetPagedOperationCompleted(object arg) {
            if ((this.ContactCreditCardProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactCreditCardProvider_GetPagedCompleted(this, new ContactCreditCardProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ContactCreditCardProvider_GetByContactId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ContactCreditCard[] ContactCreditCardProvider_GetByContactId(int _contactId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ContactCreditCardProvider_GetByContactId", new object[] {
                        _contactId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ContactCreditCard[])(results[0]));
        }
        
        /// <remarks/>
        public void ContactCreditCardProvider_GetByContactIdAsync(int _contactId, int start, int pageLength) {
            this.ContactCreditCardProvider_GetByContactIdAsync(_contactId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ContactCreditCardProvider_GetByContactIdAsync(int _contactId, int start, int pageLength, object userState) {
            if ((this.ContactCreditCardProvider_GetByContactIdOperationCompleted == null)) {
                this.ContactCreditCardProvider_GetByContactIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactCreditCardProvider_GetByContactIdOperationCompleted);
            }
            this.InvokeAsync("ContactCreditCardProvider_GetByContactId", new object[] {
                        _contactId,
                        start,
                        pageLength}, this.ContactCreditCardProvider_GetByContactIdOperationCompleted, userState);
        }
        
        private void OnContactCreditCardProvider_GetByContactIdOperationCompleted(object arg) {
            if ((this.ContactCreditCardProvider_GetByContactIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactCreditCardProvider_GetByContactIdCompleted(this, new ContactCreditCardProvider_GetByContactIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ContactCreditCardProvider_GetByCreditCard" +
            "Id", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ContactCreditCard[] ContactCreditCardProvider_GetByCreditCardId(int _creditCardId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ContactCreditCardProvider_GetByCreditCardId", new object[] {
                        _creditCardId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ContactCreditCard[])(results[0]));
        }
        
        /// <remarks/>
        public void ContactCreditCardProvider_GetByCreditCardIdAsync(int _creditCardId, int start, int pageLength) {
            this.ContactCreditCardProvider_GetByCreditCardIdAsync(_creditCardId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ContactCreditCardProvider_GetByCreditCardIdAsync(int _creditCardId, int start, int pageLength, object userState) {
            if ((this.ContactCreditCardProvider_GetByCreditCardIdOperationCompleted == null)) {
                this.ContactCreditCardProvider_GetByCreditCardIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactCreditCardProvider_GetByCreditCardIdOperationCompleted);
            }
            this.InvokeAsync("ContactCreditCardProvider_GetByCreditCardId", new object[] {
                        _creditCardId,
                        start,
                        pageLength}, this.ContactCreditCardProvider_GetByCreditCardIdOperationCompleted, userState);
        }
        
        private void OnContactCreditCardProvider_GetByCreditCardIdOperationCompleted(object arg) {
            if ((this.ContactCreditCardProvider_GetByCreditCardIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactCreditCardProvider_GetByCreditCardIdCompleted(this, new ContactCreditCardProvider_GetByCreditCardIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ContactCreditCardProvider_GetByContactIdC" +
            "reditCardId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ContactCreditCard ContactCreditCardProvider_GetByContactIdCreditCardId(int _contactId, int _creditCardId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ContactCreditCardProvider_GetByContactIdCreditCardId", new object[] {
                        _contactId,
                        _creditCardId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ContactCreditCard)(results[0]));
        }
        
        /// <remarks/>
        public void ContactCreditCardProvider_GetByContactIdCreditCardIdAsync(int _contactId, int _creditCardId, int start, int pageLength) {
            this.ContactCreditCardProvider_GetByContactIdCreditCardIdAsync(_contactId, _creditCardId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ContactCreditCardProvider_GetByContactIdCreditCardIdAsync(int _contactId, int _creditCardId, int start, int pageLength, object userState) {
            if ((this.ContactCreditCardProvider_GetByContactIdCreditCardIdOperationCompleted == null)) {
                this.ContactCreditCardProvider_GetByContactIdCreditCardIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactCreditCardProvider_GetByContactIdCreditCardIdOperationCompleted);
            }
            this.InvokeAsync("ContactCreditCardProvider_GetByContactIdCreditCardId", new object[] {
                        _contactId,
                        _creditCardId,
                        start,
                        pageLength}, this.ContactCreditCardProvider_GetByContactIdCreditCardIdOperationCompleted, userState);
        }
        
        private void OnContactCreditCardProvider_GetByContactIdCreditCardIdOperationCompleted(object arg) {
            if ((this.ContactCreditCardProvider_GetByContactIdCreditCardIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactCreditCardProvider_GetByContactIdCreditCardIdCompleted(this, new ContactCreditCardProvider_GetByContactIdCreditCardIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ContactCreditCardProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ContactCreditCard ContactCreditCardProvider_Insert(ContactCreditCard entity) {
            object[] results = this.Invoke("ContactCreditCardProvider_Insert", new object[] {
                        entity});
            return ((ContactCreditCard)(results[0]));
        }
        
        /// <remarks/>
        public void ContactCreditCardProvider_InsertAsync(ContactCreditCard entity) {
            this.ContactCreditCardProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void ContactCreditCardProvider_InsertAsync(ContactCreditCard entity, object userState) {
            if ((this.ContactCreditCardProvider_InsertOperationCompleted == null)) {
                this.ContactCreditCardProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactCreditCardProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("ContactCreditCardProvider_Insert", new object[] {
                        entity}, this.ContactCreditCardProvider_InsertOperationCompleted, userState);
        }
        
        private void OnContactCreditCardProvider_InsertOperationCompleted(object arg) {
            if ((this.ContactCreditCardProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactCreditCardProvider_InsertCompleted(this, new ContactCreditCardProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ContactCreditCardProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ContactCreditCardProvider_BulkInsert(ContactCreditCard[] entityList) {
            this.Invoke("ContactCreditCardProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void ContactCreditCardProvider_BulkInsertAsync(ContactCreditCard[] entityList) {
            this.ContactCreditCardProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void ContactCreditCardProvider_BulkInsertAsync(ContactCreditCard[] entityList, object userState) {
            if ((this.ContactCreditCardProvider_BulkInsertOperationCompleted == null)) {
                this.ContactCreditCardProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactCreditCardProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("ContactCreditCardProvider_BulkInsert", new object[] {
                        entityList}, this.ContactCreditCardProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnContactCreditCardProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.ContactCreditCardProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactCreditCardProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ContactCreditCardProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ContactCreditCard ContactCreditCardProvider_Update(ContactCreditCard entity) {
            object[] results = this.Invoke("ContactCreditCardProvider_Update", new object[] {
                        entity});
            return ((ContactCreditCard)(results[0]));
        }
        
        /// <remarks/>
        public void ContactCreditCardProvider_UpdateAsync(ContactCreditCard entity) {
            this.ContactCreditCardProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void ContactCreditCardProvider_UpdateAsync(ContactCreditCard entity, object userState) {
            if ((this.ContactCreditCardProvider_UpdateOperationCompleted == null)) {
                this.ContactCreditCardProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactCreditCardProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("ContactCreditCardProvider_Update", new object[] {
                        entity}, this.ContactCreditCardProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnContactCreditCardProvider_UpdateOperationCompleted(object arg) {
            if ((this.ContactCreditCardProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactCreditCardProvider_UpdateCompleted(this, new ContactCreditCardProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductCategoryProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ProductCategoryProvider_Delete(int _productCategoryId) {
            object[] results = this.Invoke("ProductCategoryProvider_Delete", new object[] {
                        _productCategoryId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ProductCategoryProvider_DeleteAsync(int _productCategoryId) {
            this.ProductCategoryProvider_DeleteAsync(_productCategoryId, null);
        }
        
        /// <remarks/>
        public void ProductCategoryProvider_DeleteAsync(int _productCategoryId, object userState) {
            if ((this.ProductCategoryProvider_DeleteOperationCompleted == null)) {
                this.ProductCategoryProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductCategoryProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("ProductCategoryProvider_Delete", new object[] {
                        _productCategoryId}, this.ProductCategoryProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnProductCategoryProvider_DeleteOperationCompleted(object arg) {
            if ((this.ProductCategoryProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductCategoryProvider_DeleteCompleted(this, new ProductCategoryProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductCategoryProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductCategory[] ProductCategoryProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductCategoryProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductCategory[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductCategoryProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.ProductCategoryProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductCategoryProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.ProductCategoryProvider_FindOperationCompleted == null)) {
                this.ProductCategoryProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductCategoryProvider_FindOperationCompleted);
            }
            this.InvokeAsync("ProductCategoryProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.ProductCategoryProvider_FindOperationCompleted, userState);
        }
        
        private void OnProductCategoryProvider_FindOperationCompleted(object arg) {
            if ((this.ProductCategoryProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductCategoryProvider_FindCompleted(this, new ProductCategoryProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductCategoryProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductCategory[] ProductCategoryProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductCategoryProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductCategory[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductCategoryProvider_GetAllAsync(int start, int pageLength) {
            this.ProductCategoryProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductCategoryProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.ProductCategoryProvider_GetAllOperationCompleted == null)) {
                this.ProductCategoryProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductCategoryProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("ProductCategoryProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.ProductCategoryProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnProductCategoryProvider_GetAllOperationCompleted(object arg) {
            if ((this.ProductCategoryProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductCategoryProvider_GetAllCompleted(this, new ProductCategoryProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductCategoryProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductCategory[] ProductCategoryProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductCategoryProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductCategory[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductCategoryProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.ProductCategoryProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductCategoryProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.ProductCategoryProvider_GetPagedOperationCompleted == null)) {
                this.ProductCategoryProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductCategoryProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("ProductCategoryProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.ProductCategoryProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnProductCategoryProvider_GetPagedOperationCompleted(object arg) {
            if ((this.ProductCategoryProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductCategoryProvider_GetPagedCompleted(this, new ProductCategoryProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductCategoryProvider_GetByName", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductCategory ProductCategoryProvider_GetByName(string _name, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductCategoryProvider_GetByName", new object[] {
                        _name,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductCategory)(results[0]));
        }
        
        /// <remarks/>
        public void ProductCategoryProvider_GetByNameAsync(string _name, int start, int pageLength) {
            this.ProductCategoryProvider_GetByNameAsync(_name, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductCategoryProvider_GetByNameAsync(string _name, int start, int pageLength, object userState) {
            if ((this.ProductCategoryProvider_GetByNameOperationCompleted == null)) {
                this.ProductCategoryProvider_GetByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductCategoryProvider_GetByNameOperationCompleted);
            }
            this.InvokeAsync("ProductCategoryProvider_GetByName", new object[] {
                        _name,
                        start,
                        pageLength}, this.ProductCategoryProvider_GetByNameOperationCompleted, userState);
        }
        
        private void OnProductCategoryProvider_GetByNameOperationCompleted(object arg) {
            if ((this.ProductCategoryProvider_GetByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductCategoryProvider_GetByNameCompleted(this, new ProductCategoryProvider_GetByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductCategoryProvider_GetByRowguid", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductCategory ProductCategoryProvider_GetByRowguid(System.Guid _rowguid, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductCategoryProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductCategory)(results[0]));
        }
        
        /// <remarks/>
        public void ProductCategoryProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength) {
            this.ProductCategoryProvider_GetByRowguidAsync(_rowguid, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductCategoryProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength, object userState) {
            if ((this.ProductCategoryProvider_GetByRowguidOperationCompleted == null)) {
                this.ProductCategoryProvider_GetByRowguidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductCategoryProvider_GetByRowguidOperationCompleted);
            }
            this.InvokeAsync("ProductCategoryProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength}, this.ProductCategoryProvider_GetByRowguidOperationCompleted, userState);
        }
        
        private void OnProductCategoryProvider_GetByRowguidOperationCompleted(object arg) {
            if ((this.ProductCategoryProvider_GetByRowguidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductCategoryProvider_GetByRowguidCompleted(this, new ProductCategoryProvider_GetByRowguidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductCategoryProvider_GetByProductCateg" +
            "oryId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductCategory ProductCategoryProvider_GetByProductCategoryId(int _productCategoryId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductCategoryProvider_GetByProductCategoryId", new object[] {
                        _productCategoryId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductCategory)(results[0]));
        }
        
        /// <remarks/>
        public void ProductCategoryProvider_GetByProductCategoryIdAsync(int _productCategoryId, int start, int pageLength) {
            this.ProductCategoryProvider_GetByProductCategoryIdAsync(_productCategoryId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductCategoryProvider_GetByProductCategoryIdAsync(int _productCategoryId, int start, int pageLength, object userState) {
            if ((this.ProductCategoryProvider_GetByProductCategoryIdOperationCompleted == null)) {
                this.ProductCategoryProvider_GetByProductCategoryIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductCategoryProvider_GetByProductCategoryIdOperationCompleted);
            }
            this.InvokeAsync("ProductCategoryProvider_GetByProductCategoryId", new object[] {
                        _productCategoryId,
                        start,
                        pageLength}, this.ProductCategoryProvider_GetByProductCategoryIdOperationCompleted, userState);
        }
        
        private void OnProductCategoryProvider_GetByProductCategoryIdOperationCompleted(object arg) {
            if ((this.ProductCategoryProvider_GetByProductCategoryIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductCategoryProvider_GetByProductCategoryIdCompleted(this, new ProductCategoryProvider_GetByProductCategoryIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductCategoryProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductCategory ProductCategoryProvider_Insert(ProductCategory entity) {
            object[] results = this.Invoke("ProductCategoryProvider_Insert", new object[] {
                        entity});
            return ((ProductCategory)(results[0]));
        }
        
        /// <remarks/>
        public void ProductCategoryProvider_InsertAsync(ProductCategory entity) {
            this.ProductCategoryProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void ProductCategoryProvider_InsertAsync(ProductCategory entity, object userState) {
            if ((this.ProductCategoryProvider_InsertOperationCompleted == null)) {
                this.ProductCategoryProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductCategoryProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("ProductCategoryProvider_Insert", new object[] {
                        entity}, this.ProductCategoryProvider_InsertOperationCompleted, userState);
        }
        
        private void OnProductCategoryProvider_InsertOperationCompleted(object arg) {
            if ((this.ProductCategoryProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductCategoryProvider_InsertCompleted(this, new ProductCategoryProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductCategoryProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ProductCategoryProvider_BulkInsert(ProductCategory[] entityList) {
            this.Invoke("ProductCategoryProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void ProductCategoryProvider_BulkInsertAsync(ProductCategory[] entityList) {
            this.ProductCategoryProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void ProductCategoryProvider_BulkInsertAsync(ProductCategory[] entityList, object userState) {
            if ((this.ProductCategoryProvider_BulkInsertOperationCompleted == null)) {
                this.ProductCategoryProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductCategoryProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("ProductCategoryProvider_BulkInsert", new object[] {
                        entityList}, this.ProductCategoryProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnProductCategoryProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.ProductCategoryProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductCategoryProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductCategoryProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductCategory ProductCategoryProvider_Update(ProductCategory entity) {
            object[] results = this.Invoke("ProductCategoryProvider_Update", new object[] {
                        entity});
            return ((ProductCategory)(results[0]));
        }
        
        /// <remarks/>
        public void ProductCategoryProvider_UpdateAsync(ProductCategory entity) {
            this.ProductCategoryProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void ProductCategoryProvider_UpdateAsync(ProductCategory entity, object userState) {
            if ((this.ProductCategoryProvider_UpdateOperationCompleted == null)) {
                this.ProductCategoryProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductCategoryProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("ProductCategoryProvider_Update", new object[] {
                        entity}, this.ProductCategoryProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnProductCategoryProvider_UpdateOperationCompleted(object arg) {
            if ((this.ProductCategoryProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductCategoryProvider_UpdateCompleted(this, new ProductCategoryProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CountryRegionCurrencyProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CountryRegionCurrencyProvider_Delete(string _countryRegionCode, string _currencyCode) {
            object[] results = this.Invoke("CountryRegionCurrencyProvider_Delete", new object[] {
                        _countryRegionCode,
                        _currencyCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CountryRegionCurrencyProvider_DeleteAsync(string _countryRegionCode, string _currencyCode) {
            this.CountryRegionCurrencyProvider_DeleteAsync(_countryRegionCode, _currencyCode, null);
        }
        
        /// <remarks/>
        public void CountryRegionCurrencyProvider_DeleteAsync(string _countryRegionCode, string _currencyCode, object userState) {
            if ((this.CountryRegionCurrencyProvider_DeleteOperationCompleted == null)) {
                this.CountryRegionCurrencyProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountryRegionCurrencyProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("CountryRegionCurrencyProvider_Delete", new object[] {
                        _countryRegionCode,
                        _currencyCode}, this.CountryRegionCurrencyProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnCountryRegionCurrencyProvider_DeleteOperationCompleted(object arg) {
            if ((this.CountryRegionCurrencyProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountryRegionCurrencyProvider_DeleteCompleted(this, new CountryRegionCurrencyProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CountryRegionCurrencyProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CountryRegionCurrency[] CountryRegionCurrencyProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CountryRegionCurrencyProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((CountryRegionCurrency[])(results[0]));
        }
        
        /// <remarks/>
        public void CountryRegionCurrencyProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.CountryRegionCurrencyProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CountryRegionCurrencyProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.CountryRegionCurrencyProvider_FindOperationCompleted == null)) {
                this.CountryRegionCurrencyProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountryRegionCurrencyProvider_FindOperationCompleted);
            }
            this.InvokeAsync("CountryRegionCurrencyProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.CountryRegionCurrencyProvider_FindOperationCompleted, userState);
        }
        
        private void OnCountryRegionCurrencyProvider_FindOperationCompleted(object arg) {
            if ((this.CountryRegionCurrencyProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountryRegionCurrencyProvider_FindCompleted(this, new CountryRegionCurrencyProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CountryRegionCurrencyProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CountryRegionCurrency[] CountryRegionCurrencyProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("CountryRegionCurrencyProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((CountryRegionCurrency[])(results[0]));
        }
        
        /// <remarks/>
        public void CountryRegionCurrencyProvider_GetAllAsync(int start, int pageLength) {
            this.CountryRegionCurrencyProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void CountryRegionCurrencyProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.CountryRegionCurrencyProvider_GetAllOperationCompleted == null)) {
                this.CountryRegionCurrencyProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountryRegionCurrencyProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("CountryRegionCurrencyProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.CountryRegionCurrencyProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnCountryRegionCurrencyProvider_GetAllOperationCompleted(object arg) {
            if ((this.CountryRegionCurrencyProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountryRegionCurrencyProvider_GetAllCompleted(this, new CountryRegionCurrencyProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CountryRegionCurrencyProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CountryRegionCurrency[] CountryRegionCurrencyProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CountryRegionCurrencyProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((CountryRegionCurrency[])(results[0]));
        }
        
        /// <remarks/>
        public void CountryRegionCurrencyProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.CountryRegionCurrencyProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CountryRegionCurrencyProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.CountryRegionCurrencyProvider_GetPagedOperationCompleted == null)) {
                this.CountryRegionCurrencyProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountryRegionCurrencyProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("CountryRegionCurrencyProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.CountryRegionCurrencyProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnCountryRegionCurrencyProvider_GetPagedOperationCompleted(object arg) {
            if ((this.CountryRegionCurrencyProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountryRegionCurrencyProvider_GetPagedCompleted(this, new CountryRegionCurrencyProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CountryRegionCurrencyProvider_GetByCountr" +
            "yRegionCode", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CountryRegionCurrency[] CountryRegionCurrencyProvider_GetByCountryRegionCode(string _countryRegionCode, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CountryRegionCurrencyProvider_GetByCountryRegionCode", new object[] {
                        _countryRegionCode,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((CountryRegionCurrency[])(results[0]));
        }
        
        /// <remarks/>
        public void CountryRegionCurrencyProvider_GetByCountryRegionCodeAsync(string _countryRegionCode, int start, int pageLength) {
            this.CountryRegionCurrencyProvider_GetByCountryRegionCodeAsync(_countryRegionCode, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CountryRegionCurrencyProvider_GetByCountryRegionCodeAsync(string _countryRegionCode, int start, int pageLength, object userState) {
            if ((this.CountryRegionCurrencyProvider_GetByCountryRegionCodeOperationCompleted == null)) {
                this.CountryRegionCurrencyProvider_GetByCountryRegionCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountryRegionCurrencyProvider_GetByCountryRegionCodeOperationCompleted);
            }
            this.InvokeAsync("CountryRegionCurrencyProvider_GetByCountryRegionCode", new object[] {
                        _countryRegionCode,
                        start,
                        pageLength}, this.CountryRegionCurrencyProvider_GetByCountryRegionCodeOperationCompleted, userState);
        }
        
        private void OnCountryRegionCurrencyProvider_GetByCountryRegionCodeOperationCompleted(object arg) {
            if ((this.CountryRegionCurrencyProvider_GetByCountryRegionCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountryRegionCurrencyProvider_GetByCountryRegionCodeCompleted(this, new CountryRegionCurrencyProvider_GetByCountryRegionCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CountryRegionCurrencyProvider_GetByCurren" +
            "cyCode", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CountryRegionCurrency[] CountryRegionCurrencyProvider_GetByCurrencyCode(string _currencyCode, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CountryRegionCurrencyProvider_GetByCurrencyCode", new object[] {
                        _currencyCode,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((CountryRegionCurrency[])(results[0]));
        }
        
        /// <remarks/>
        public void CountryRegionCurrencyProvider_GetByCurrencyCodeAsync(string _currencyCode, int start, int pageLength) {
            this.CountryRegionCurrencyProvider_GetByCurrencyCodeAsync(_currencyCode, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CountryRegionCurrencyProvider_GetByCurrencyCodeAsync(string _currencyCode, int start, int pageLength, object userState) {
            if ((this.CountryRegionCurrencyProvider_GetByCurrencyCodeOperationCompleted == null)) {
                this.CountryRegionCurrencyProvider_GetByCurrencyCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountryRegionCurrencyProvider_GetByCurrencyCodeOperationCompleted);
            }
            this.InvokeAsync("CountryRegionCurrencyProvider_GetByCurrencyCode", new object[] {
                        _currencyCode,
                        start,
                        pageLength}, this.CountryRegionCurrencyProvider_GetByCurrencyCodeOperationCompleted, userState);
        }
        
        private void OnCountryRegionCurrencyProvider_GetByCurrencyCodeOperationCompleted(object arg) {
            if ((this.CountryRegionCurrencyProvider_GetByCurrencyCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountryRegionCurrencyProvider_GetByCurrencyCodeCompleted(this, new CountryRegionCurrencyProvider_GetByCurrencyCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CountryRegionCurrencyProvider_GetByCountr" +
            "yRegionCodeCurrencyCode", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CountryRegionCurrency CountryRegionCurrencyProvider_GetByCountryRegionCodeCurrencyCode(string _countryRegionCode, string _currencyCode, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CountryRegionCurrencyProvider_GetByCountryRegionCodeCurrencyCode", new object[] {
                        _countryRegionCode,
                        _currencyCode,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((CountryRegionCurrency)(results[0]));
        }
        
        /// <remarks/>
        public void CountryRegionCurrencyProvider_GetByCountryRegionCodeCurrencyCodeAsync(string _countryRegionCode, string _currencyCode, int start, int pageLength) {
            this.CountryRegionCurrencyProvider_GetByCountryRegionCodeCurrencyCodeAsync(_countryRegionCode, _currencyCode, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CountryRegionCurrencyProvider_GetByCountryRegionCodeCurrencyCodeAsync(string _countryRegionCode, string _currencyCode, int start, int pageLength, object userState) {
            if ((this.CountryRegionCurrencyProvider_GetByCountryRegionCodeCurrencyCodeOperationCompleted == null)) {
                this.CountryRegionCurrencyProvider_GetByCountryRegionCodeCurrencyCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountryRegionCurrencyProvider_GetByCountryRegionCodeCurrencyCodeOperationCompleted);
            }
            this.InvokeAsync("CountryRegionCurrencyProvider_GetByCountryRegionCodeCurrencyCode", new object[] {
                        _countryRegionCode,
                        _currencyCode,
                        start,
                        pageLength}, this.CountryRegionCurrencyProvider_GetByCountryRegionCodeCurrencyCodeOperationCompleted, userState);
        }
        
        private void OnCountryRegionCurrencyProvider_GetByCountryRegionCodeCurrencyCodeOperationCompleted(object arg) {
            if ((this.CountryRegionCurrencyProvider_GetByCountryRegionCodeCurrencyCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountryRegionCurrencyProvider_GetByCountryRegionCodeCurrencyCodeCompleted(this, new CountryRegionCurrencyProvider_GetByCountryRegionCodeCurrencyCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CountryRegionCurrencyProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CountryRegionCurrency CountryRegionCurrencyProvider_Insert(CountryRegionCurrency entity) {
            object[] results = this.Invoke("CountryRegionCurrencyProvider_Insert", new object[] {
                        entity});
            return ((CountryRegionCurrency)(results[0]));
        }
        
        /// <remarks/>
        public void CountryRegionCurrencyProvider_InsertAsync(CountryRegionCurrency entity) {
            this.CountryRegionCurrencyProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void CountryRegionCurrencyProvider_InsertAsync(CountryRegionCurrency entity, object userState) {
            if ((this.CountryRegionCurrencyProvider_InsertOperationCompleted == null)) {
                this.CountryRegionCurrencyProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountryRegionCurrencyProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("CountryRegionCurrencyProvider_Insert", new object[] {
                        entity}, this.CountryRegionCurrencyProvider_InsertOperationCompleted, userState);
        }
        
        private void OnCountryRegionCurrencyProvider_InsertOperationCompleted(object arg) {
            if ((this.CountryRegionCurrencyProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountryRegionCurrencyProvider_InsertCompleted(this, new CountryRegionCurrencyProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CountryRegionCurrencyProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CountryRegionCurrencyProvider_BulkInsert(CountryRegionCurrency[] entityList) {
            this.Invoke("CountryRegionCurrencyProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void CountryRegionCurrencyProvider_BulkInsertAsync(CountryRegionCurrency[] entityList) {
            this.CountryRegionCurrencyProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void CountryRegionCurrencyProvider_BulkInsertAsync(CountryRegionCurrency[] entityList, object userState) {
            if ((this.CountryRegionCurrencyProvider_BulkInsertOperationCompleted == null)) {
                this.CountryRegionCurrencyProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountryRegionCurrencyProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("CountryRegionCurrencyProvider_BulkInsert", new object[] {
                        entityList}, this.CountryRegionCurrencyProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnCountryRegionCurrencyProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.CountryRegionCurrencyProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountryRegionCurrencyProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CountryRegionCurrencyProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CountryRegionCurrency CountryRegionCurrencyProvider_Update(CountryRegionCurrency entity) {
            object[] results = this.Invoke("CountryRegionCurrencyProvider_Update", new object[] {
                        entity});
            return ((CountryRegionCurrency)(results[0]));
        }
        
        /// <remarks/>
        public void CountryRegionCurrencyProvider_UpdateAsync(CountryRegionCurrency entity) {
            this.CountryRegionCurrencyProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void CountryRegionCurrencyProvider_UpdateAsync(CountryRegionCurrency entity, object userState) {
            if ((this.CountryRegionCurrencyProvider_UpdateOperationCompleted == null)) {
                this.CountryRegionCurrencyProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountryRegionCurrencyProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("CountryRegionCurrencyProvider_Update", new object[] {
                        entity}, this.CountryRegionCurrencyProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnCountryRegionCurrencyProvider_UpdateOperationCompleted(object arg) {
            if ((this.CountryRegionCurrencyProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountryRegionCurrencyProvider_UpdateCompleted(this, new CountryRegionCurrencyProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelProvider_GetByIllustrationIdF" +
            "romProductModelIllustration", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductModel[] ProductModelProvider_GetByIllustrationIdFromProductModelIllustration(int _illustrationId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductModelProvider_GetByIllustrationIdFromProductModelIllustration", new object[] {
                        _illustrationId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductModel[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductModelProvider_GetByIllustrationIdFromProductModelIllustrationAsync(int _illustrationId, int start, int pageLength) {
            this.ProductModelProvider_GetByIllustrationIdFromProductModelIllustrationAsync(_illustrationId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductModelProvider_GetByIllustrationIdFromProductModelIllustrationAsync(int _illustrationId, int start, int pageLength, object userState) {
            if ((this.ProductModelProvider_GetByIllustrationIdFromProductModelIllustrationOperationCompleted == null)) {
                this.ProductModelProvider_GetByIllustrationIdFromProductModelIllustrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelProvider_GetByIllustrationIdFromProductModelIllustrationOperationCompleted);
            }
            this.InvokeAsync("ProductModelProvider_GetByIllustrationIdFromProductModelIllustration", new object[] {
                        _illustrationId,
                        start,
                        pageLength}, this.ProductModelProvider_GetByIllustrationIdFromProductModelIllustrationOperationCompleted, userState);
        }
        
        private void OnProductModelProvider_GetByIllustrationIdFromProductModelIllustrationOperationCompleted(object arg) {
            if ((this.ProductModelProvider_GetByIllustrationIdFromProductModelIllustrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelProvider_GetByIllustrationIdFromProductModelIllustrationCompleted(this, new ProductModelProvider_GetByIllustrationIdFromProductModelIllustrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelProvider_GetByCultureIdFromPr" +
            "oductModelProductDescriptionCulture", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductModel[] ProductModelProvider_GetByCultureIdFromProductModelProductDescriptionCulture(string _cultureId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductModelProvider_GetByCultureIdFromProductModelProductDescriptionCulture", new object[] {
                        _cultureId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductModel[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductModelProvider_GetByCultureIdFromProductModelProductDescriptionCultureAsync(string _cultureId, int start, int pageLength) {
            this.ProductModelProvider_GetByCultureIdFromProductModelProductDescriptionCultureAsync(_cultureId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductModelProvider_GetByCultureIdFromProductModelProductDescriptionCultureAsync(string _cultureId, int start, int pageLength, object userState) {
            if ((this.ProductModelProvider_GetByCultureIdFromProductModelProductDescriptionCultureOperationCompleted == null)) {
                this.ProductModelProvider_GetByCultureIdFromProductModelProductDescriptionCultureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelProvider_GetByCultureIdFromProductModelProductDescriptionCultureOperationCompleted);
            }
            this.InvokeAsync("ProductModelProvider_GetByCultureIdFromProductModelProductDescriptionCulture", new object[] {
                        _cultureId,
                        start,
                        pageLength}, this.ProductModelProvider_GetByCultureIdFromProductModelProductDescriptionCultureOperationCompleted, userState);
        }
        
        private void OnProductModelProvider_GetByCultureIdFromProductModelProductDescriptionCultureOperationCompleted(object arg) {
            if ((this.ProductModelProvider_GetByCultureIdFromProductModelProductDescriptionCultureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelProvider_GetByCultureIdFromProductModelProductDescriptionCultureCompleted(this, new ProductModelProvider_GetByCultureIdFromProductModelProductDescriptionCultureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelProvider_GetByProductDescript" +
            "ionIdFromProductModelProductDescriptionCulture", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductModel[] ProductModelProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCulture(int _productDescriptionId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductModelProvider_GetByProductDescriptionIdFromProductModelProductDescriptionC" +
                    "ulture", new object[] {
                        _productDescriptionId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductModel[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductModelProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureAsync(int _productDescriptionId, int start, int pageLength) {
            this.ProductModelProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureAsync(_productDescriptionId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductModelProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureAsync(int _productDescriptionId, int start, int pageLength, object userState) {
            if ((this.ProductModelProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureOperationCompleted == null)) {
                this.ProductModelProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureOperationCompleted);
            }
            this.InvokeAsync("ProductModelProvider_GetByProductDescriptionIdFromProductModelProductDescriptionC" +
                    "ulture", new object[] {
                        _productDescriptionId,
                        start,
                        pageLength}, this.ProductModelProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureOperationCompleted, userState);
        }
        
        private void OnProductModelProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureOperationCompleted(object arg) {
            if ((this.ProductModelProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureCompleted(this, new ProductModelProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ProductModelProvider_Delete(int _productModelId) {
            object[] results = this.Invoke("ProductModelProvider_Delete", new object[] {
                        _productModelId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ProductModelProvider_DeleteAsync(int _productModelId) {
            this.ProductModelProvider_DeleteAsync(_productModelId, null);
        }
        
        /// <remarks/>
        public void ProductModelProvider_DeleteAsync(int _productModelId, object userState) {
            if ((this.ProductModelProvider_DeleteOperationCompleted == null)) {
                this.ProductModelProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("ProductModelProvider_Delete", new object[] {
                        _productModelId}, this.ProductModelProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnProductModelProvider_DeleteOperationCompleted(object arg) {
            if ((this.ProductModelProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelProvider_DeleteCompleted(this, new ProductModelProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductModel[] ProductModelProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductModelProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductModel[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductModelProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.ProductModelProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductModelProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.ProductModelProvider_FindOperationCompleted == null)) {
                this.ProductModelProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelProvider_FindOperationCompleted);
            }
            this.InvokeAsync("ProductModelProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.ProductModelProvider_FindOperationCompleted, userState);
        }
        
        private void OnProductModelProvider_FindOperationCompleted(object arg) {
            if ((this.ProductModelProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelProvider_FindCompleted(this, new ProductModelProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductModel[] ProductModelProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductModelProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductModel[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductModelProvider_GetAllAsync(int start, int pageLength) {
            this.ProductModelProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductModelProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.ProductModelProvider_GetAllOperationCompleted == null)) {
                this.ProductModelProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("ProductModelProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.ProductModelProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnProductModelProvider_GetAllOperationCompleted(object arg) {
            if ((this.ProductModelProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelProvider_GetAllCompleted(this, new ProductModelProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductModel[] ProductModelProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductModelProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductModel[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductModelProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.ProductModelProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductModelProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.ProductModelProvider_GetPagedOperationCompleted == null)) {
                this.ProductModelProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("ProductModelProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.ProductModelProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnProductModelProvider_GetPagedOperationCompleted(object arg) {
            if ((this.ProductModelProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelProvider_GetPagedCompleted(this, new ProductModelProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelProvider_GetByName", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductModel ProductModelProvider_GetByName(string _name, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductModelProvider_GetByName", new object[] {
                        _name,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductModel)(results[0]));
        }
        
        /// <remarks/>
        public void ProductModelProvider_GetByNameAsync(string _name, int start, int pageLength) {
            this.ProductModelProvider_GetByNameAsync(_name, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductModelProvider_GetByNameAsync(string _name, int start, int pageLength, object userState) {
            if ((this.ProductModelProvider_GetByNameOperationCompleted == null)) {
                this.ProductModelProvider_GetByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelProvider_GetByNameOperationCompleted);
            }
            this.InvokeAsync("ProductModelProvider_GetByName", new object[] {
                        _name,
                        start,
                        pageLength}, this.ProductModelProvider_GetByNameOperationCompleted, userState);
        }
        
        private void OnProductModelProvider_GetByNameOperationCompleted(object arg) {
            if ((this.ProductModelProvider_GetByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelProvider_GetByNameCompleted(this, new ProductModelProvider_GetByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelProvider_GetByRowguid", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductModel ProductModelProvider_GetByRowguid(System.Guid _rowguid, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductModelProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductModel)(results[0]));
        }
        
        /// <remarks/>
        public void ProductModelProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength) {
            this.ProductModelProvider_GetByRowguidAsync(_rowguid, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductModelProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength, object userState) {
            if ((this.ProductModelProvider_GetByRowguidOperationCompleted == null)) {
                this.ProductModelProvider_GetByRowguidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelProvider_GetByRowguidOperationCompleted);
            }
            this.InvokeAsync("ProductModelProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength}, this.ProductModelProvider_GetByRowguidOperationCompleted, userState);
        }
        
        private void OnProductModelProvider_GetByRowguidOperationCompleted(object arg) {
            if ((this.ProductModelProvider_GetByRowguidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelProvider_GetByRowguidCompleted(this, new ProductModelProvider_GetByRowguidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelProvider_GetByProductModelId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductModel ProductModelProvider_GetByProductModelId(int _productModelId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductModelProvider_GetByProductModelId", new object[] {
                        _productModelId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductModel)(results[0]));
        }
        
        /// <remarks/>
        public void ProductModelProvider_GetByProductModelIdAsync(int _productModelId, int start, int pageLength) {
            this.ProductModelProvider_GetByProductModelIdAsync(_productModelId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductModelProvider_GetByProductModelIdAsync(int _productModelId, int start, int pageLength, object userState) {
            if ((this.ProductModelProvider_GetByProductModelIdOperationCompleted == null)) {
                this.ProductModelProvider_GetByProductModelIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelProvider_GetByProductModelIdOperationCompleted);
            }
            this.InvokeAsync("ProductModelProvider_GetByProductModelId", new object[] {
                        _productModelId,
                        start,
                        pageLength}, this.ProductModelProvider_GetByProductModelIdOperationCompleted, userState);
        }
        
        private void OnProductModelProvider_GetByProductModelIdOperationCompleted(object arg) {
            if ((this.ProductModelProvider_GetByProductModelIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelProvider_GetByProductModelIdCompleted(this, new ProductModelProvider_GetByProductModelIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelProvider_GetByCatalogDescript" +
            "ion", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductModel[] ProductModelProvider_GetByCatalogDescription(string _catalogDescription, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductModelProvider_GetByCatalogDescription", new object[] {
                        _catalogDescription,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductModel[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductModelProvider_GetByCatalogDescriptionAsync(string _catalogDescription, int start, int pageLength) {
            this.ProductModelProvider_GetByCatalogDescriptionAsync(_catalogDescription, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductModelProvider_GetByCatalogDescriptionAsync(string _catalogDescription, int start, int pageLength, object userState) {
            if ((this.ProductModelProvider_GetByCatalogDescriptionOperationCompleted == null)) {
                this.ProductModelProvider_GetByCatalogDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelProvider_GetByCatalogDescriptionOperationCompleted);
            }
            this.InvokeAsync("ProductModelProvider_GetByCatalogDescription", new object[] {
                        _catalogDescription,
                        start,
                        pageLength}, this.ProductModelProvider_GetByCatalogDescriptionOperationCompleted, userState);
        }
        
        private void OnProductModelProvider_GetByCatalogDescriptionOperationCompleted(object arg) {
            if ((this.ProductModelProvider_GetByCatalogDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelProvider_GetByCatalogDescriptionCompleted(this, new ProductModelProvider_GetByCatalogDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelProvider_GetByInstructions", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductModel[] ProductModelProvider_GetByInstructions(string _instructions, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductModelProvider_GetByInstructions", new object[] {
                        _instructions,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductModel[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductModelProvider_GetByInstructionsAsync(string _instructions, int start, int pageLength) {
            this.ProductModelProvider_GetByInstructionsAsync(_instructions, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductModelProvider_GetByInstructionsAsync(string _instructions, int start, int pageLength, object userState) {
            if ((this.ProductModelProvider_GetByInstructionsOperationCompleted == null)) {
                this.ProductModelProvider_GetByInstructionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelProvider_GetByInstructionsOperationCompleted);
            }
            this.InvokeAsync("ProductModelProvider_GetByInstructions", new object[] {
                        _instructions,
                        start,
                        pageLength}, this.ProductModelProvider_GetByInstructionsOperationCompleted, userState);
        }
        
        private void OnProductModelProvider_GetByInstructionsOperationCompleted(object arg) {
            if ((this.ProductModelProvider_GetByInstructionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelProvider_GetByInstructionsCompleted(this, new ProductModelProvider_GetByInstructionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductModel ProductModelProvider_Insert(ProductModel entity) {
            object[] results = this.Invoke("ProductModelProvider_Insert", new object[] {
                        entity});
            return ((ProductModel)(results[0]));
        }
        
        /// <remarks/>
        public void ProductModelProvider_InsertAsync(ProductModel entity) {
            this.ProductModelProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void ProductModelProvider_InsertAsync(ProductModel entity, object userState) {
            if ((this.ProductModelProvider_InsertOperationCompleted == null)) {
                this.ProductModelProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("ProductModelProvider_Insert", new object[] {
                        entity}, this.ProductModelProvider_InsertOperationCompleted, userState);
        }
        
        private void OnProductModelProvider_InsertOperationCompleted(object arg) {
            if ((this.ProductModelProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelProvider_InsertCompleted(this, new ProductModelProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ProductModelProvider_BulkInsert(ProductModel[] entityList) {
            this.Invoke("ProductModelProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void ProductModelProvider_BulkInsertAsync(ProductModel[] entityList) {
            this.ProductModelProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void ProductModelProvider_BulkInsertAsync(ProductModel[] entityList, object userState) {
            if ((this.ProductModelProvider_BulkInsertOperationCompleted == null)) {
                this.ProductModelProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("ProductModelProvider_BulkInsert", new object[] {
                        entityList}, this.ProductModelProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnProductModelProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.ProductModelProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductModel ProductModelProvider_Update(ProductModel entity) {
            object[] results = this.Invoke("ProductModelProvider_Update", new object[] {
                        entity});
            return ((ProductModel)(results[0]));
        }
        
        /// <remarks/>
        public void ProductModelProvider_UpdateAsync(ProductModel entity) {
            this.ProductModelProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void ProductModelProvider_UpdateAsync(ProductModel entity, object userState) {
            if ((this.ProductModelProvider_UpdateOperationCompleted == null)) {
                this.ProductModelProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("ProductModelProvider_Update", new object[] {
                        entity}, this.ProductModelProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnProductModelProvider_UpdateOperationCompleted(object arg) {
            if ((this.ProductModelProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelProvider_UpdateCompleted(this, new ProductModelProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductProvider_GetByDocumentIdFromProduc" +
            "tDocument", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Product[] ProductProvider_GetByDocumentIdFromProductDocument(int _documentId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductProvider_GetByDocumentIdFromProductDocument", new object[] {
                        _documentId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Product[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductProvider_GetByDocumentIdFromProductDocumentAsync(int _documentId, int start, int pageLength) {
            this.ProductProvider_GetByDocumentIdFromProductDocumentAsync(_documentId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductProvider_GetByDocumentIdFromProductDocumentAsync(int _documentId, int start, int pageLength, object userState) {
            if ((this.ProductProvider_GetByDocumentIdFromProductDocumentOperationCompleted == null)) {
                this.ProductProvider_GetByDocumentIdFromProductDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductProvider_GetByDocumentIdFromProductDocumentOperationCompleted);
            }
            this.InvokeAsync("ProductProvider_GetByDocumentIdFromProductDocument", new object[] {
                        _documentId,
                        start,
                        pageLength}, this.ProductProvider_GetByDocumentIdFromProductDocumentOperationCompleted, userState);
        }
        
        private void OnProductProvider_GetByDocumentIdFromProductDocumentOperationCompleted(object arg) {
            if ((this.ProductProvider_GetByDocumentIdFromProductDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductProvider_GetByDocumentIdFromProductDocumentCompleted(this, new ProductProvider_GetByDocumentIdFromProductDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductProvider_GetByLocationIdFromProduc" +
            "tInventory", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Product[] ProductProvider_GetByLocationIdFromProductInventory(short _locationId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductProvider_GetByLocationIdFromProductInventory", new object[] {
                        _locationId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Product[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductProvider_GetByLocationIdFromProductInventoryAsync(short _locationId, int start, int pageLength) {
            this.ProductProvider_GetByLocationIdFromProductInventoryAsync(_locationId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductProvider_GetByLocationIdFromProductInventoryAsync(short _locationId, int start, int pageLength, object userState) {
            if ((this.ProductProvider_GetByLocationIdFromProductInventoryOperationCompleted == null)) {
                this.ProductProvider_GetByLocationIdFromProductInventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductProvider_GetByLocationIdFromProductInventoryOperationCompleted);
            }
            this.InvokeAsync("ProductProvider_GetByLocationIdFromProductInventory", new object[] {
                        _locationId,
                        start,
                        pageLength}, this.ProductProvider_GetByLocationIdFromProductInventoryOperationCompleted, userState);
        }
        
        private void OnProductProvider_GetByLocationIdFromProductInventoryOperationCompleted(object arg) {
            if ((this.ProductProvider_GetByLocationIdFromProductInventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductProvider_GetByLocationIdFromProductInventoryCompleted(this, new ProductProvider_GetByLocationIdFromProductInventoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductProvider_GetByProductPhotoIdFromPr" +
            "oductProductPhoto", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Product[] ProductProvider_GetByProductPhotoIdFromProductProductPhoto(int _productPhotoId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductProvider_GetByProductPhotoIdFromProductProductPhoto", new object[] {
                        _productPhotoId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Product[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductProvider_GetByProductPhotoIdFromProductProductPhotoAsync(int _productPhotoId, int start, int pageLength) {
            this.ProductProvider_GetByProductPhotoIdFromProductProductPhotoAsync(_productPhotoId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductProvider_GetByProductPhotoIdFromProductProductPhotoAsync(int _productPhotoId, int start, int pageLength, object userState) {
            if ((this.ProductProvider_GetByProductPhotoIdFromProductProductPhotoOperationCompleted == null)) {
                this.ProductProvider_GetByProductPhotoIdFromProductProductPhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductProvider_GetByProductPhotoIdFromProductProductPhotoOperationCompleted);
            }
            this.InvokeAsync("ProductProvider_GetByProductPhotoIdFromProductProductPhoto", new object[] {
                        _productPhotoId,
                        start,
                        pageLength}, this.ProductProvider_GetByProductPhotoIdFromProductProductPhotoOperationCompleted, userState);
        }
        
        private void OnProductProvider_GetByProductPhotoIdFromProductProductPhotoOperationCompleted(object arg) {
            if ((this.ProductProvider_GetByProductPhotoIdFromProductProductPhotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductProvider_GetByProductPhotoIdFromProductProductPhotoCompleted(this, new ProductProvider_GetByProductPhotoIdFromProductProductPhotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductProvider_GetByVendorIdFromProductV" +
            "endor", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Product[] ProductProvider_GetByVendorIdFromProductVendor(int _vendorId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductProvider_GetByVendorIdFromProductVendor", new object[] {
                        _vendorId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Product[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductProvider_GetByVendorIdFromProductVendorAsync(int _vendorId, int start, int pageLength) {
            this.ProductProvider_GetByVendorIdFromProductVendorAsync(_vendorId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductProvider_GetByVendorIdFromProductVendorAsync(int _vendorId, int start, int pageLength, object userState) {
            if ((this.ProductProvider_GetByVendorIdFromProductVendorOperationCompleted == null)) {
                this.ProductProvider_GetByVendorIdFromProductVendorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductProvider_GetByVendorIdFromProductVendorOperationCompleted);
            }
            this.InvokeAsync("ProductProvider_GetByVendorIdFromProductVendor", new object[] {
                        _vendorId,
                        start,
                        pageLength}, this.ProductProvider_GetByVendorIdFromProductVendorOperationCompleted, userState);
        }
        
        private void OnProductProvider_GetByVendorIdFromProductVendorOperationCompleted(object arg) {
            if ((this.ProductProvider_GetByVendorIdFromProductVendorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductProvider_GetByVendorIdFromProductVendorCompleted(this, new ProductProvider_GetByVendorIdFromProductVendorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductProvider_GetBySpecialOfferIdFromSp" +
            "ecialOfferProduct", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Product[] ProductProvider_GetBySpecialOfferIdFromSpecialOfferProduct(int _specialOfferId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductProvider_GetBySpecialOfferIdFromSpecialOfferProduct", new object[] {
                        _specialOfferId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Product[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductProvider_GetBySpecialOfferIdFromSpecialOfferProductAsync(int _specialOfferId, int start, int pageLength) {
            this.ProductProvider_GetBySpecialOfferIdFromSpecialOfferProductAsync(_specialOfferId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductProvider_GetBySpecialOfferIdFromSpecialOfferProductAsync(int _specialOfferId, int start, int pageLength, object userState) {
            if ((this.ProductProvider_GetBySpecialOfferIdFromSpecialOfferProductOperationCompleted == null)) {
                this.ProductProvider_GetBySpecialOfferIdFromSpecialOfferProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductProvider_GetBySpecialOfferIdFromSpecialOfferProductOperationCompleted);
            }
            this.InvokeAsync("ProductProvider_GetBySpecialOfferIdFromSpecialOfferProduct", new object[] {
                        _specialOfferId,
                        start,
                        pageLength}, this.ProductProvider_GetBySpecialOfferIdFromSpecialOfferProductOperationCompleted, userState);
        }
        
        private void OnProductProvider_GetBySpecialOfferIdFromSpecialOfferProductOperationCompleted(object arg) {
            if ((this.ProductProvider_GetBySpecialOfferIdFromSpecialOfferProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductProvider_GetBySpecialOfferIdFromSpecialOfferProductCompleted(this, new ProductProvider_GetBySpecialOfferIdFromSpecialOfferProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ProductProvider_Delete(int _productId) {
            object[] results = this.Invoke("ProductProvider_Delete", new object[] {
                        _productId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ProductProvider_DeleteAsync(int _productId) {
            this.ProductProvider_DeleteAsync(_productId, null);
        }
        
        /// <remarks/>
        public void ProductProvider_DeleteAsync(int _productId, object userState) {
            if ((this.ProductProvider_DeleteOperationCompleted == null)) {
                this.ProductProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("ProductProvider_Delete", new object[] {
                        _productId}, this.ProductProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnProductProvider_DeleteOperationCompleted(object arg) {
            if ((this.ProductProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductProvider_DeleteCompleted(this, new ProductProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Product[] ProductProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Product[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.ProductProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.ProductProvider_FindOperationCompleted == null)) {
                this.ProductProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductProvider_FindOperationCompleted);
            }
            this.InvokeAsync("ProductProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.ProductProvider_FindOperationCompleted, userState);
        }
        
        private void OnProductProvider_FindOperationCompleted(object arg) {
            if ((this.ProductProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductProvider_FindCompleted(this, new ProductProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Product[] ProductProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Product[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductProvider_GetAllAsync(int start, int pageLength) {
            this.ProductProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.ProductProvider_GetAllOperationCompleted == null)) {
                this.ProductProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("ProductProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.ProductProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnProductProvider_GetAllOperationCompleted(object arg) {
            if ((this.ProductProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductProvider_GetAllCompleted(this, new ProductProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Product[] ProductProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Product[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.ProductProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.ProductProvider_GetPagedOperationCompleted == null)) {
                this.ProductProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("ProductProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.ProductProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnProductProvider_GetPagedOperationCompleted(object arg) {
            if ((this.ProductProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductProvider_GetPagedCompleted(this, new ProductProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductProvider_GetByProductModelId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Product[] ProductProvider_GetByProductModelId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> _productModelId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductProvider_GetByProductModelId", new object[] {
                        _productModelId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Product[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductProvider_GetByProductModelIdAsync(System.Nullable<int> _productModelId, int start, int pageLength) {
            this.ProductProvider_GetByProductModelIdAsync(_productModelId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductProvider_GetByProductModelIdAsync(System.Nullable<int> _productModelId, int start, int pageLength, object userState) {
            if ((this.ProductProvider_GetByProductModelIdOperationCompleted == null)) {
                this.ProductProvider_GetByProductModelIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductProvider_GetByProductModelIdOperationCompleted);
            }
            this.InvokeAsync("ProductProvider_GetByProductModelId", new object[] {
                        _productModelId,
                        start,
                        pageLength}, this.ProductProvider_GetByProductModelIdOperationCompleted, userState);
        }
        
        private void OnProductProvider_GetByProductModelIdOperationCompleted(object arg) {
            if ((this.ProductProvider_GetByProductModelIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductProvider_GetByProductModelIdCompleted(this, new ProductProvider_GetByProductModelIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductProvider_GetByProductSubcategoryId" +
            "", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Product[] ProductProvider_GetByProductSubcategoryId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> _productSubcategoryId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductProvider_GetByProductSubcategoryId", new object[] {
                        _productSubcategoryId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Product[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductProvider_GetByProductSubcategoryIdAsync(System.Nullable<int> _productSubcategoryId, int start, int pageLength) {
            this.ProductProvider_GetByProductSubcategoryIdAsync(_productSubcategoryId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductProvider_GetByProductSubcategoryIdAsync(System.Nullable<int> _productSubcategoryId, int start, int pageLength, object userState) {
            if ((this.ProductProvider_GetByProductSubcategoryIdOperationCompleted == null)) {
                this.ProductProvider_GetByProductSubcategoryIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductProvider_GetByProductSubcategoryIdOperationCompleted);
            }
            this.InvokeAsync("ProductProvider_GetByProductSubcategoryId", new object[] {
                        _productSubcategoryId,
                        start,
                        pageLength}, this.ProductProvider_GetByProductSubcategoryIdOperationCompleted, userState);
        }
        
        private void OnProductProvider_GetByProductSubcategoryIdOperationCompleted(object arg) {
            if ((this.ProductProvider_GetByProductSubcategoryIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductProvider_GetByProductSubcategoryIdCompleted(this, new ProductProvider_GetByProductSubcategoryIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductProvider_GetBySizeUnitMeasureCode", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Product[] ProductProvider_GetBySizeUnitMeasureCode(string _sizeUnitMeasureCode, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductProvider_GetBySizeUnitMeasureCode", new object[] {
                        _sizeUnitMeasureCode,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Product[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductProvider_GetBySizeUnitMeasureCodeAsync(string _sizeUnitMeasureCode, int start, int pageLength) {
            this.ProductProvider_GetBySizeUnitMeasureCodeAsync(_sizeUnitMeasureCode, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductProvider_GetBySizeUnitMeasureCodeAsync(string _sizeUnitMeasureCode, int start, int pageLength, object userState) {
            if ((this.ProductProvider_GetBySizeUnitMeasureCodeOperationCompleted == null)) {
                this.ProductProvider_GetBySizeUnitMeasureCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductProvider_GetBySizeUnitMeasureCodeOperationCompleted);
            }
            this.InvokeAsync("ProductProvider_GetBySizeUnitMeasureCode", new object[] {
                        _sizeUnitMeasureCode,
                        start,
                        pageLength}, this.ProductProvider_GetBySizeUnitMeasureCodeOperationCompleted, userState);
        }
        
        private void OnProductProvider_GetBySizeUnitMeasureCodeOperationCompleted(object arg) {
            if ((this.ProductProvider_GetBySizeUnitMeasureCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductProvider_GetBySizeUnitMeasureCodeCompleted(this, new ProductProvider_GetBySizeUnitMeasureCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductProvider_GetByWeightUnitMeasureCod" +
            "e", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Product[] ProductProvider_GetByWeightUnitMeasureCode(string _weightUnitMeasureCode, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductProvider_GetByWeightUnitMeasureCode", new object[] {
                        _weightUnitMeasureCode,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Product[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductProvider_GetByWeightUnitMeasureCodeAsync(string _weightUnitMeasureCode, int start, int pageLength) {
            this.ProductProvider_GetByWeightUnitMeasureCodeAsync(_weightUnitMeasureCode, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductProvider_GetByWeightUnitMeasureCodeAsync(string _weightUnitMeasureCode, int start, int pageLength, object userState) {
            if ((this.ProductProvider_GetByWeightUnitMeasureCodeOperationCompleted == null)) {
                this.ProductProvider_GetByWeightUnitMeasureCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductProvider_GetByWeightUnitMeasureCodeOperationCompleted);
            }
            this.InvokeAsync("ProductProvider_GetByWeightUnitMeasureCode", new object[] {
                        _weightUnitMeasureCode,
                        start,
                        pageLength}, this.ProductProvider_GetByWeightUnitMeasureCodeOperationCompleted, userState);
        }
        
        private void OnProductProvider_GetByWeightUnitMeasureCodeOperationCompleted(object arg) {
            if ((this.ProductProvider_GetByWeightUnitMeasureCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductProvider_GetByWeightUnitMeasureCodeCompleted(this, new ProductProvider_GetByWeightUnitMeasureCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductProvider_GetByName", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Product ProductProvider_GetByName(string _name, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductProvider_GetByName", new object[] {
                        _name,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Product)(results[0]));
        }
        
        /// <remarks/>
        public void ProductProvider_GetByNameAsync(string _name, int start, int pageLength) {
            this.ProductProvider_GetByNameAsync(_name, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductProvider_GetByNameAsync(string _name, int start, int pageLength, object userState) {
            if ((this.ProductProvider_GetByNameOperationCompleted == null)) {
                this.ProductProvider_GetByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductProvider_GetByNameOperationCompleted);
            }
            this.InvokeAsync("ProductProvider_GetByName", new object[] {
                        _name,
                        start,
                        pageLength}, this.ProductProvider_GetByNameOperationCompleted, userState);
        }
        
        private void OnProductProvider_GetByNameOperationCompleted(object arg) {
            if ((this.ProductProvider_GetByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductProvider_GetByNameCompleted(this, new ProductProvider_GetByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductProvider_GetByProductNumber", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Product ProductProvider_GetByProductNumber(string _productNumber, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductProvider_GetByProductNumber", new object[] {
                        _productNumber,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Product)(results[0]));
        }
        
        /// <remarks/>
        public void ProductProvider_GetByProductNumberAsync(string _productNumber, int start, int pageLength) {
            this.ProductProvider_GetByProductNumberAsync(_productNumber, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductProvider_GetByProductNumberAsync(string _productNumber, int start, int pageLength, object userState) {
            if ((this.ProductProvider_GetByProductNumberOperationCompleted == null)) {
                this.ProductProvider_GetByProductNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductProvider_GetByProductNumberOperationCompleted);
            }
            this.InvokeAsync("ProductProvider_GetByProductNumber", new object[] {
                        _productNumber,
                        start,
                        pageLength}, this.ProductProvider_GetByProductNumberOperationCompleted, userState);
        }
        
        private void OnProductProvider_GetByProductNumberOperationCompleted(object arg) {
            if ((this.ProductProvider_GetByProductNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductProvider_GetByProductNumberCompleted(this, new ProductProvider_GetByProductNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductProvider_GetByRowguid", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Product ProductProvider_GetByRowguid(System.Guid _rowguid, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Product)(results[0]));
        }
        
        /// <remarks/>
        public void ProductProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength) {
            this.ProductProvider_GetByRowguidAsync(_rowguid, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength, object userState) {
            if ((this.ProductProvider_GetByRowguidOperationCompleted == null)) {
                this.ProductProvider_GetByRowguidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductProvider_GetByRowguidOperationCompleted);
            }
            this.InvokeAsync("ProductProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength}, this.ProductProvider_GetByRowguidOperationCompleted, userState);
        }
        
        private void OnProductProvider_GetByRowguidOperationCompleted(object arg) {
            if ((this.ProductProvider_GetByRowguidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductProvider_GetByRowguidCompleted(this, new ProductProvider_GetByRowguidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductProvider_GetByProductId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Product ProductProvider_GetByProductId(int _productId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductProvider_GetByProductId", new object[] {
                        _productId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Product)(results[0]));
        }
        
        /// <remarks/>
        public void ProductProvider_GetByProductIdAsync(int _productId, int start, int pageLength) {
            this.ProductProvider_GetByProductIdAsync(_productId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductProvider_GetByProductIdAsync(int _productId, int start, int pageLength, object userState) {
            if ((this.ProductProvider_GetByProductIdOperationCompleted == null)) {
                this.ProductProvider_GetByProductIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductProvider_GetByProductIdOperationCompleted);
            }
            this.InvokeAsync("ProductProvider_GetByProductId", new object[] {
                        _productId,
                        start,
                        pageLength}, this.ProductProvider_GetByProductIdOperationCompleted, userState);
        }
        
        private void OnProductProvider_GetByProductIdOperationCompleted(object arg) {
            if ((this.ProductProvider_GetByProductIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductProvider_GetByProductIdCompleted(this, new ProductProvider_GetByProductIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Product ProductProvider_Insert(Product entity) {
            object[] results = this.Invoke("ProductProvider_Insert", new object[] {
                        entity});
            return ((Product)(results[0]));
        }
        
        /// <remarks/>
        public void ProductProvider_InsertAsync(Product entity) {
            this.ProductProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void ProductProvider_InsertAsync(Product entity, object userState) {
            if ((this.ProductProvider_InsertOperationCompleted == null)) {
                this.ProductProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("ProductProvider_Insert", new object[] {
                        entity}, this.ProductProvider_InsertOperationCompleted, userState);
        }
        
        private void OnProductProvider_InsertOperationCompleted(object arg) {
            if ((this.ProductProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductProvider_InsertCompleted(this, new ProductProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ProductProvider_BulkInsert(Product[] entityList) {
            this.Invoke("ProductProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void ProductProvider_BulkInsertAsync(Product[] entityList) {
            this.ProductProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void ProductProvider_BulkInsertAsync(Product[] entityList, object userState) {
            if ((this.ProductProvider_BulkInsertOperationCompleted == null)) {
                this.ProductProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("ProductProvider_BulkInsert", new object[] {
                        entityList}, this.ProductProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnProductProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.ProductProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Product ProductProvider_Update(Product entity) {
            object[] results = this.Invoke("ProductProvider_Update", new object[] {
                        entity});
            return ((Product)(results[0]));
        }
        
        /// <remarks/>
        public void ProductProvider_UpdateAsync(Product entity) {
            this.ProductProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void ProductProvider_UpdateAsync(Product entity, object userState) {
            if ((this.ProductProvider_UpdateOperationCompleted == null)) {
                this.ProductProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("ProductProvider_Update", new object[] {
                        entity}, this.ProductProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnProductProvider_UpdateOperationCompleted(object arg) {
            if ((this.ProductProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductProvider_UpdateCompleted(this, new ProductProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SpecialOfferProvider_GetByProductIdFromSp" +
            "ecialOfferProduct", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SpecialOffer[] SpecialOfferProvider_GetByProductIdFromSpecialOfferProduct(int _productId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SpecialOfferProvider_GetByProductIdFromSpecialOfferProduct", new object[] {
                        _productId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SpecialOffer[])(results[0]));
        }
        
        /// <remarks/>
        public void SpecialOfferProvider_GetByProductIdFromSpecialOfferProductAsync(int _productId, int start, int pageLength) {
            this.SpecialOfferProvider_GetByProductIdFromSpecialOfferProductAsync(_productId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SpecialOfferProvider_GetByProductIdFromSpecialOfferProductAsync(int _productId, int start, int pageLength, object userState) {
            if ((this.SpecialOfferProvider_GetByProductIdFromSpecialOfferProductOperationCompleted == null)) {
                this.SpecialOfferProvider_GetByProductIdFromSpecialOfferProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSpecialOfferProvider_GetByProductIdFromSpecialOfferProductOperationCompleted);
            }
            this.InvokeAsync("SpecialOfferProvider_GetByProductIdFromSpecialOfferProduct", new object[] {
                        _productId,
                        start,
                        pageLength}, this.SpecialOfferProvider_GetByProductIdFromSpecialOfferProductOperationCompleted, userState);
        }
        
        private void OnSpecialOfferProvider_GetByProductIdFromSpecialOfferProductOperationCompleted(object arg) {
            if ((this.SpecialOfferProvider_GetByProductIdFromSpecialOfferProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SpecialOfferProvider_GetByProductIdFromSpecialOfferProductCompleted(this, new SpecialOfferProvider_GetByProductIdFromSpecialOfferProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SpecialOfferProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SpecialOfferProvider_Delete(int _specialOfferId) {
            object[] results = this.Invoke("SpecialOfferProvider_Delete", new object[] {
                        _specialOfferId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SpecialOfferProvider_DeleteAsync(int _specialOfferId) {
            this.SpecialOfferProvider_DeleteAsync(_specialOfferId, null);
        }
        
        /// <remarks/>
        public void SpecialOfferProvider_DeleteAsync(int _specialOfferId, object userState) {
            if ((this.SpecialOfferProvider_DeleteOperationCompleted == null)) {
                this.SpecialOfferProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSpecialOfferProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("SpecialOfferProvider_Delete", new object[] {
                        _specialOfferId}, this.SpecialOfferProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnSpecialOfferProvider_DeleteOperationCompleted(object arg) {
            if ((this.SpecialOfferProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SpecialOfferProvider_DeleteCompleted(this, new SpecialOfferProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SpecialOfferProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SpecialOffer[] SpecialOfferProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SpecialOfferProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SpecialOffer[])(results[0]));
        }
        
        /// <remarks/>
        public void SpecialOfferProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.SpecialOfferProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SpecialOfferProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.SpecialOfferProvider_FindOperationCompleted == null)) {
                this.SpecialOfferProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSpecialOfferProvider_FindOperationCompleted);
            }
            this.InvokeAsync("SpecialOfferProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.SpecialOfferProvider_FindOperationCompleted, userState);
        }
        
        private void OnSpecialOfferProvider_FindOperationCompleted(object arg) {
            if ((this.SpecialOfferProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SpecialOfferProvider_FindCompleted(this, new SpecialOfferProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SpecialOfferProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SpecialOffer[] SpecialOfferProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("SpecialOfferProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SpecialOffer[])(results[0]));
        }
        
        /// <remarks/>
        public void SpecialOfferProvider_GetAllAsync(int start, int pageLength) {
            this.SpecialOfferProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void SpecialOfferProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.SpecialOfferProvider_GetAllOperationCompleted == null)) {
                this.SpecialOfferProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSpecialOfferProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("SpecialOfferProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.SpecialOfferProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnSpecialOfferProvider_GetAllOperationCompleted(object arg) {
            if ((this.SpecialOfferProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SpecialOfferProvider_GetAllCompleted(this, new SpecialOfferProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SpecialOfferProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SpecialOffer[] SpecialOfferProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SpecialOfferProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SpecialOffer[])(results[0]));
        }
        
        /// <remarks/>
        public void SpecialOfferProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.SpecialOfferProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SpecialOfferProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.SpecialOfferProvider_GetPagedOperationCompleted == null)) {
                this.SpecialOfferProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSpecialOfferProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("SpecialOfferProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.SpecialOfferProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnSpecialOfferProvider_GetPagedOperationCompleted(object arg) {
            if ((this.SpecialOfferProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SpecialOfferProvider_GetPagedCompleted(this, new SpecialOfferProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SpecialOfferProvider_GetByRowguid", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SpecialOffer SpecialOfferProvider_GetByRowguid(System.Guid _rowguid, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SpecialOfferProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SpecialOffer)(results[0]));
        }
        
        /// <remarks/>
        public void SpecialOfferProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength) {
            this.SpecialOfferProvider_GetByRowguidAsync(_rowguid, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SpecialOfferProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength, object userState) {
            if ((this.SpecialOfferProvider_GetByRowguidOperationCompleted == null)) {
                this.SpecialOfferProvider_GetByRowguidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSpecialOfferProvider_GetByRowguidOperationCompleted);
            }
            this.InvokeAsync("SpecialOfferProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength}, this.SpecialOfferProvider_GetByRowguidOperationCompleted, userState);
        }
        
        private void OnSpecialOfferProvider_GetByRowguidOperationCompleted(object arg) {
            if ((this.SpecialOfferProvider_GetByRowguidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SpecialOfferProvider_GetByRowguidCompleted(this, new SpecialOfferProvider_GetByRowguidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SpecialOfferProvider_GetBySpecialOfferId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SpecialOffer SpecialOfferProvider_GetBySpecialOfferId(int _specialOfferId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SpecialOfferProvider_GetBySpecialOfferId", new object[] {
                        _specialOfferId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SpecialOffer)(results[0]));
        }
        
        /// <remarks/>
        public void SpecialOfferProvider_GetBySpecialOfferIdAsync(int _specialOfferId, int start, int pageLength) {
            this.SpecialOfferProvider_GetBySpecialOfferIdAsync(_specialOfferId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SpecialOfferProvider_GetBySpecialOfferIdAsync(int _specialOfferId, int start, int pageLength, object userState) {
            if ((this.SpecialOfferProvider_GetBySpecialOfferIdOperationCompleted == null)) {
                this.SpecialOfferProvider_GetBySpecialOfferIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSpecialOfferProvider_GetBySpecialOfferIdOperationCompleted);
            }
            this.InvokeAsync("SpecialOfferProvider_GetBySpecialOfferId", new object[] {
                        _specialOfferId,
                        start,
                        pageLength}, this.SpecialOfferProvider_GetBySpecialOfferIdOperationCompleted, userState);
        }
        
        private void OnSpecialOfferProvider_GetBySpecialOfferIdOperationCompleted(object arg) {
            if ((this.SpecialOfferProvider_GetBySpecialOfferIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SpecialOfferProvider_GetBySpecialOfferIdCompleted(this, new SpecialOfferProvider_GetBySpecialOfferIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SpecialOfferProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SpecialOffer SpecialOfferProvider_Insert(SpecialOffer entity) {
            object[] results = this.Invoke("SpecialOfferProvider_Insert", new object[] {
                        entity});
            return ((SpecialOffer)(results[0]));
        }
        
        /// <remarks/>
        public void SpecialOfferProvider_InsertAsync(SpecialOffer entity) {
            this.SpecialOfferProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void SpecialOfferProvider_InsertAsync(SpecialOffer entity, object userState) {
            if ((this.SpecialOfferProvider_InsertOperationCompleted == null)) {
                this.SpecialOfferProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSpecialOfferProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("SpecialOfferProvider_Insert", new object[] {
                        entity}, this.SpecialOfferProvider_InsertOperationCompleted, userState);
        }
        
        private void OnSpecialOfferProvider_InsertOperationCompleted(object arg) {
            if ((this.SpecialOfferProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SpecialOfferProvider_InsertCompleted(this, new SpecialOfferProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SpecialOfferProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SpecialOfferProvider_BulkInsert(SpecialOffer[] entityList) {
            this.Invoke("SpecialOfferProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void SpecialOfferProvider_BulkInsertAsync(SpecialOffer[] entityList) {
            this.SpecialOfferProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void SpecialOfferProvider_BulkInsertAsync(SpecialOffer[] entityList, object userState) {
            if ((this.SpecialOfferProvider_BulkInsertOperationCompleted == null)) {
                this.SpecialOfferProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSpecialOfferProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("SpecialOfferProvider_BulkInsert", new object[] {
                        entityList}, this.SpecialOfferProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnSpecialOfferProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.SpecialOfferProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SpecialOfferProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SpecialOfferProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SpecialOffer SpecialOfferProvider_Update(SpecialOffer entity) {
            object[] results = this.Invoke("SpecialOfferProvider_Update", new object[] {
                        entity});
            return ((SpecialOffer)(results[0]));
        }
        
        /// <remarks/>
        public void SpecialOfferProvider_UpdateAsync(SpecialOffer entity) {
            this.SpecialOfferProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void SpecialOfferProvider_UpdateAsync(SpecialOffer entity, object userState) {
            if ((this.SpecialOfferProvider_UpdateOperationCompleted == null)) {
                this.SpecialOfferProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSpecialOfferProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("SpecialOfferProvider_Update", new object[] {
                        entity}, this.SpecialOfferProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnSpecialOfferProvider_UpdateOperationCompleted(object arg) {
            if ((this.SpecialOfferProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SpecialOfferProvider_UpdateCompleted(this, new SpecialOfferProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderHeaderSalesReasonProvider_Delet" +
            "e", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SalesOrderHeaderSalesReasonProvider_Delete(int _salesOrderId, int _salesReasonId) {
            object[] results = this.Invoke("SalesOrderHeaderSalesReasonProvider_Delete", new object[] {
                        _salesOrderId,
                        _salesReasonId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderHeaderSalesReasonProvider_DeleteAsync(int _salesOrderId, int _salesReasonId) {
            this.SalesOrderHeaderSalesReasonProvider_DeleteAsync(_salesOrderId, _salesReasonId, null);
        }
        
        /// <remarks/>
        public void SalesOrderHeaderSalesReasonProvider_DeleteAsync(int _salesOrderId, int _salesReasonId, object userState) {
            if ((this.SalesOrderHeaderSalesReasonProvider_DeleteOperationCompleted == null)) {
                this.SalesOrderHeaderSalesReasonProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderHeaderSalesReasonProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("SalesOrderHeaderSalesReasonProvider_Delete", new object[] {
                        _salesOrderId,
                        _salesReasonId}, this.SalesOrderHeaderSalesReasonProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnSalesOrderHeaderSalesReasonProvider_DeleteOperationCompleted(object arg) {
            if ((this.SalesOrderHeaderSalesReasonProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderHeaderSalesReasonProvider_DeleteCompleted(this, new SalesOrderHeaderSalesReasonProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderHeaderSalesReasonProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderHeaderSalesReason[] SalesOrderHeaderSalesReasonProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesOrderHeaderSalesReasonProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesOrderHeaderSalesReason[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderHeaderSalesReasonProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.SalesOrderHeaderSalesReasonProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesOrderHeaderSalesReasonProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.SalesOrderHeaderSalesReasonProvider_FindOperationCompleted == null)) {
                this.SalesOrderHeaderSalesReasonProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderHeaderSalesReasonProvider_FindOperationCompleted);
            }
            this.InvokeAsync("SalesOrderHeaderSalesReasonProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.SalesOrderHeaderSalesReasonProvider_FindOperationCompleted, userState);
        }
        
        private void OnSalesOrderHeaderSalesReasonProvider_FindOperationCompleted(object arg) {
            if ((this.SalesOrderHeaderSalesReasonProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderHeaderSalesReasonProvider_FindCompleted(this, new SalesOrderHeaderSalesReasonProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderHeaderSalesReasonProvider_GetAl" +
            "l", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderHeaderSalesReason[] SalesOrderHeaderSalesReasonProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesOrderHeaderSalesReasonProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesOrderHeaderSalesReason[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderHeaderSalesReasonProvider_GetAllAsync(int start, int pageLength) {
            this.SalesOrderHeaderSalesReasonProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesOrderHeaderSalesReasonProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.SalesOrderHeaderSalesReasonProvider_GetAllOperationCompleted == null)) {
                this.SalesOrderHeaderSalesReasonProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderHeaderSalesReasonProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("SalesOrderHeaderSalesReasonProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.SalesOrderHeaderSalesReasonProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnSalesOrderHeaderSalesReasonProvider_GetAllOperationCompleted(object arg) {
            if ((this.SalesOrderHeaderSalesReasonProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderHeaderSalesReasonProvider_GetAllCompleted(this, new SalesOrderHeaderSalesReasonProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderHeaderSalesReasonProvider_GetPa" +
            "ged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderHeaderSalesReason[] SalesOrderHeaderSalesReasonProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesOrderHeaderSalesReasonProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesOrderHeaderSalesReason[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderHeaderSalesReasonProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.SalesOrderHeaderSalesReasonProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesOrderHeaderSalesReasonProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.SalesOrderHeaderSalesReasonProvider_GetPagedOperationCompleted == null)) {
                this.SalesOrderHeaderSalesReasonProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderHeaderSalesReasonProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("SalesOrderHeaderSalesReasonProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.SalesOrderHeaderSalesReasonProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnSalesOrderHeaderSalesReasonProvider_GetPagedOperationCompleted(object arg) {
            if ((this.SalesOrderHeaderSalesReasonProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderHeaderSalesReasonProvider_GetPagedCompleted(this, new SalesOrderHeaderSalesReasonProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderHeaderSalesReasonProvider_GetBy" +
            "SalesOrderId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderHeaderSalesReason[] SalesOrderHeaderSalesReasonProvider_GetBySalesOrderId(int _salesOrderId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesOrderHeaderSalesReasonProvider_GetBySalesOrderId", new object[] {
                        _salesOrderId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesOrderHeaderSalesReason[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdAsync(int _salesOrderId, int start, int pageLength) {
            this.SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdAsync(_salesOrderId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdAsync(int _salesOrderId, int start, int pageLength, object userState) {
            if ((this.SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdOperationCompleted == null)) {
                this.SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdOperationCompleted);
            }
            this.InvokeAsync("SalesOrderHeaderSalesReasonProvider_GetBySalesOrderId", new object[] {
                        _salesOrderId,
                        start,
                        pageLength}, this.SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdOperationCompleted, userState);
        }
        
        private void OnSalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdOperationCompleted(object arg) {
            if ((this.SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdCompleted(this, new SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderHeaderSalesReasonProvider_GetBy" +
            "SalesReasonId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderHeaderSalesReason[] SalesOrderHeaderSalesReasonProvider_GetBySalesReasonId(int _salesReasonId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesOrderHeaderSalesReasonProvider_GetBySalesReasonId", new object[] {
                        _salesReasonId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesOrderHeaderSalesReason[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderHeaderSalesReasonProvider_GetBySalesReasonIdAsync(int _salesReasonId, int start, int pageLength) {
            this.SalesOrderHeaderSalesReasonProvider_GetBySalesReasonIdAsync(_salesReasonId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesOrderHeaderSalesReasonProvider_GetBySalesReasonIdAsync(int _salesReasonId, int start, int pageLength, object userState) {
            if ((this.SalesOrderHeaderSalesReasonProvider_GetBySalesReasonIdOperationCompleted == null)) {
                this.SalesOrderHeaderSalesReasonProvider_GetBySalesReasonIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderHeaderSalesReasonProvider_GetBySalesReasonIdOperationCompleted);
            }
            this.InvokeAsync("SalesOrderHeaderSalesReasonProvider_GetBySalesReasonId", new object[] {
                        _salesReasonId,
                        start,
                        pageLength}, this.SalesOrderHeaderSalesReasonProvider_GetBySalesReasonIdOperationCompleted, userState);
        }
        
        private void OnSalesOrderHeaderSalesReasonProvider_GetBySalesReasonIdOperationCompleted(object arg) {
            if ((this.SalesOrderHeaderSalesReasonProvider_GetBySalesReasonIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderHeaderSalesReasonProvider_GetBySalesReasonIdCompleted(this, new SalesOrderHeaderSalesReasonProvider_GetBySalesReasonIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderHeaderSalesReasonProvider_GetBy" +
            "SalesOrderIdSalesReasonId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderHeaderSalesReason SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdSalesReasonId(int _salesOrderId, int _salesReasonId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdSalesReasonId", new object[] {
                        _salesOrderId,
                        _salesReasonId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesOrderHeaderSalesReason)(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdSalesReasonIdAsync(int _salesOrderId, int _salesReasonId, int start, int pageLength) {
            this.SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdSalesReasonIdAsync(_salesOrderId, _salesReasonId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdSalesReasonIdAsync(int _salesOrderId, int _salesReasonId, int start, int pageLength, object userState) {
            if ((this.SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdSalesReasonIdOperationCompleted == null)) {
                this.SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdSalesReasonIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdSalesReasonIdOperationCompleted);
            }
            this.InvokeAsync("SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdSalesReasonId", new object[] {
                        _salesOrderId,
                        _salesReasonId,
                        start,
                        pageLength}, this.SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdSalesReasonIdOperationCompleted, userState);
        }
        
        private void OnSalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdSalesReasonIdOperationCompleted(object arg) {
            if ((this.SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdSalesReasonIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdSalesReasonIdCompleted(this, new SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdSalesReasonIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderHeaderSalesReasonProvider_Inser" +
            "t", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderHeaderSalesReason SalesOrderHeaderSalesReasonProvider_Insert(SalesOrderHeaderSalesReason entity) {
            object[] results = this.Invoke("SalesOrderHeaderSalesReasonProvider_Insert", new object[] {
                        entity});
            return ((SalesOrderHeaderSalesReason)(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderHeaderSalesReasonProvider_InsertAsync(SalesOrderHeaderSalesReason entity) {
            this.SalesOrderHeaderSalesReasonProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void SalesOrderHeaderSalesReasonProvider_InsertAsync(SalesOrderHeaderSalesReason entity, object userState) {
            if ((this.SalesOrderHeaderSalesReasonProvider_InsertOperationCompleted == null)) {
                this.SalesOrderHeaderSalesReasonProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderHeaderSalesReasonProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("SalesOrderHeaderSalesReasonProvider_Insert", new object[] {
                        entity}, this.SalesOrderHeaderSalesReasonProvider_InsertOperationCompleted, userState);
        }
        
        private void OnSalesOrderHeaderSalesReasonProvider_InsertOperationCompleted(object arg) {
            if ((this.SalesOrderHeaderSalesReasonProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderHeaderSalesReasonProvider_InsertCompleted(this, new SalesOrderHeaderSalesReasonProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderHeaderSalesReasonProvider_BulkI" +
            "nsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SalesOrderHeaderSalesReasonProvider_BulkInsert(SalesOrderHeaderSalesReason[] entityList) {
            this.Invoke("SalesOrderHeaderSalesReasonProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void SalesOrderHeaderSalesReasonProvider_BulkInsertAsync(SalesOrderHeaderSalesReason[] entityList) {
            this.SalesOrderHeaderSalesReasonProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void SalesOrderHeaderSalesReasonProvider_BulkInsertAsync(SalesOrderHeaderSalesReason[] entityList, object userState) {
            if ((this.SalesOrderHeaderSalesReasonProvider_BulkInsertOperationCompleted == null)) {
                this.SalesOrderHeaderSalesReasonProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderHeaderSalesReasonProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("SalesOrderHeaderSalesReasonProvider_BulkInsert", new object[] {
                        entityList}, this.SalesOrderHeaderSalesReasonProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnSalesOrderHeaderSalesReasonProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.SalesOrderHeaderSalesReasonProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderHeaderSalesReasonProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderHeaderSalesReasonProvider_Updat" +
            "e", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderHeaderSalesReason SalesOrderHeaderSalesReasonProvider_Update(SalesOrderHeaderSalesReason entity) {
            object[] results = this.Invoke("SalesOrderHeaderSalesReasonProvider_Update", new object[] {
                        entity});
            return ((SalesOrderHeaderSalesReason)(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderHeaderSalesReasonProvider_UpdateAsync(SalesOrderHeaderSalesReason entity) {
            this.SalesOrderHeaderSalesReasonProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void SalesOrderHeaderSalesReasonProvider_UpdateAsync(SalesOrderHeaderSalesReason entity, object userState) {
            if ((this.SalesOrderHeaderSalesReasonProvider_UpdateOperationCompleted == null)) {
                this.SalesOrderHeaderSalesReasonProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderHeaderSalesReasonProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("SalesOrderHeaderSalesReasonProvider_Update", new object[] {
                        entity}, this.SalesOrderHeaderSalesReasonProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnSalesOrderHeaderSalesReasonProvider_UpdateOperationCompleted(object arg) {
            if ((this.SalesOrderHeaderSalesReasonProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderHeaderSalesReasonProvider_UpdateCompleted(this, new SalesOrderHeaderSalesReasonProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StoreProvider_GetByContactIdFromStoreCont" +
            "act", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Store[] StoreProvider_GetByContactIdFromStoreContact(int _contactId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("StoreProvider_GetByContactIdFromStoreContact", new object[] {
                        _contactId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Store[])(results[0]));
        }
        
        /// <remarks/>
        public void StoreProvider_GetByContactIdFromStoreContactAsync(int _contactId, int start, int pageLength) {
            this.StoreProvider_GetByContactIdFromStoreContactAsync(_contactId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void StoreProvider_GetByContactIdFromStoreContactAsync(int _contactId, int start, int pageLength, object userState) {
            if ((this.StoreProvider_GetByContactIdFromStoreContactOperationCompleted == null)) {
                this.StoreProvider_GetByContactIdFromStoreContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoreProvider_GetByContactIdFromStoreContactOperationCompleted);
            }
            this.InvokeAsync("StoreProvider_GetByContactIdFromStoreContact", new object[] {
                        _contactId,
                        start,
                        pageLength}, this.StoreProvider_GetByContactIdFromStoreContactOperationCompleted, userState);
        }
        
        private void OnStoreProvider_GetByContactIdFromStoreContactOperationCompleted(object arg) {
            if ((this.StoreProvider_GetByContactIdFromStoreContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoreProvider_GetByContactIdFromStoreContactCompleted(this, new StoreProvider_GetByContactIdFromStoreContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StoreProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StoreProvider_Delete(int _customerId) {
            object[] results = this.Invoke("StoreProvider_Delete", new object[] {
                        _customerId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StoreProvider_DeleteAsync(int _customerId) {
            this.StoreProvider_DeleteAsync(_customerId, null);
        }
        
        /// <remarks/>
        public void StoreProvider_DeleteAsync(int _customerId, object userState) {
            if ((this.StoreProvider_DeleteOperationCompleted == null)) {
                this.StoreProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoreProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("StoreProvider_Delete", new object[] {
                        _customerId}, this.StoreProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnStoreProvider_DeleteOperationCompleted(object arg) {
            if ((this.StoreProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoreProvider_DeleteCompleted(this, new StoreProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StoreProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Store[] StoreProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("StoreProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Store[])(results[0]));
        }
        
        /// <remarks/>
        public void StoreProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.StoreProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void StoreProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.StoreProvider_FindOperationCompleted == null)) {
                this.StoreProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoreProvider_FindOperationCompleted);
            }
            this.InvokeAsync("StoreProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.StoreProvider_FindOperationCompleted, userState);
        }
        
        private void OnStoreProvider_FindOperationCompleted(object arg) {
            if ((this.StoreProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoreProvider_FindCompleted(this, new StoreProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StoreProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Store[] StoreProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("StoreProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Store[])(results[0]));
        }
        
        /// <remarks/>
        public void StoreProvider_GetAllAsync(int start, int pageLength) {
            this.StoreProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void StoreProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.StoreProvider_GetAllOperationCompleted == null)) {
                this.StoreProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoreProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("StoreProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.StoreProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnStoreProvider_GetAllOperationCompleted(object arg) {
            if ((this.StoreProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoreProvider_GetAllCompleted(this, new StoreProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StoreProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Store[] StoreProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("StoreProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Store[])(results[0]));
        }
        
        /// <remarks/>
        public void StoreProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.StoreProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void StoreProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.StoreProvider_GetPagedOperationCompleted == null)) {
                this.StoreProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoreProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("StoreProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.StoreProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnStoreProvider_GetPagedOperationCompleted(object arg) {
            if ((this.StoreProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoreProvider_GetPagedCompleted(this, new StoreProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StoreProvider_GetByRowguid", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Store StoreProvider_GetByRowguid(System.Guid _rowguid, int start, int pageLength, out int count) {
            object[] results = this.Invoke("StoreProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Store)(results[0]));
        }
        
        /// <remarks/>
        public void StoreProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength) {
            this.StoreProvider_GetByRowguidAsync(_rowguid, start, pageLength, null);
        }
        
        /// <remarks/>
        public void StoreProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength, object userState) {
            if ((this.StoreProvider_GetByRowguidOperationCompleted == null)) {
                this.StoreProvider_GetByRowguidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoreProvider_GetByRowguidOperationCompleted);
            }
            this.InvokeAsync("StoreProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength}, this.StoreProvider_GetByRowguidOperationCompleted, userState);
        }
        
        private void OnStoreProvider_GetByRowguidOperationCompleted(object arg) {
            if ((this.StoreProvider_GetByRowguidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoreProvider_GetByRowguidCompleted(this, new StoreProvider_GetByRowguidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StoreProvider_GetBySalesPersonId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Store[] StoreProvider_GetBySalesPersonId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> _salesPersonId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("StoreProvider_GetBySalesPersonId", new object[] {
                        _salesPersonId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Store[])(results[0]));
        }
        
        /// <remarks/>
        public void StoreProvider_GetBySalesPersonIdAsync(System.Nullable<int> _salesPersonId, int start, int pageLength) {
            this.StoreProvider_GetBySalesPersonIdAsync(_salesPersonId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void StoreProvider_GetBySalesPersonIdAsync(System.Nullable<int> _salesPersonId, int start, int pageLength, object userState) {
            if ((this.StoreProvider_GetBySalesPersonIdOperationCompleted == null)) {
                this.StoreProvider_GetBySalesPersonIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoreProvider_GetBySalesPersonIdOperationCompleted);
            }
            this.InvokeAsync("StoreProvider_GetBySalesPersonId", new object[] {
                        _salesPersonId,
                        start,
                        pageLength}, this.StoreProvider_GetBySalesPersonIdOperationCompleted, userState);
        }
        
        private void OnStoreProvider_GetBySalesPersonIdOperationCompleted(object arg) {
            if ((this.StoreProvider_GetBySalesPersonIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoreProvider_GetBySalesPersonIdCompleted(this, new StoreProvider_GetBySalesPersonIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StoreProvider_GetByCustomerId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Store StoreProvider_GetByCustomerId(int _customerId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("StoreProvider_GetByCustomerId", new object[] {
                        _customerId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Store)(results[0]));
        }
        
        /// <remarks/>
        public void StoreProvider_GetByCustomerIdAsync(int _customerId, int start, int pageLength) {
            this.StoreProvider_GetByCustomerIdAsync(_customerId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void StoreProvider_GetByCustomerIdAsync(int _customerId, int start, int pageLength, object userState) {
            if ((this.StoreProvider_GetByCustomerIdOperationCompleted == null)) {
                this.StoreProvider_GetByCustomerIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoreProvider_GetByCustomerIdOperationCompleted);
            }
            this.InvokeAsync("StoreProvider_GetByCustomerId", new object[] {
                        _customerId,
                        start,
                        pageLength}, this.StoreProvider_GetByCustomerIdOperationCompleted, userState);
        }
        
        private void OnStoreProvider_GetByCustomerIdOperationCompleted(object arg) {
            if ((this.StoreProvider_GetByCustomerIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoreProvider_GetByCustomerIdCompleted(this, new StoreProvider_GetByCustomerIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StoreProvider_GetByDemographics", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Store[] StoreProvider_GetByDemographics(string _demographics, int start, int pageLength, out int count) {
            object[] results = this.Invoke("StoreProvider_GetByDemographics", new object[] {
                        _demographics,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Store[])(results[0]));
        }
        
        /// <remarks/>
        public void StoreProvider_GetByDemographicsAsync(string _demographics, int start, int pageLength) {
            this.StoreProvider_GetByDemographicsAsync(_demographics, start, pageLength, null);
        }
        
        /// <remarks/>
        public void StoreProvider_GetByDemographicsAsync(string _demographics, int start, int pageLength, object userState) {
            if ((this.StoreProvider_GetByDemographicsOperationCompleted == null)) {
                this.StoreProvider_GetByDemographicsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoreProvider_GetByDemographicsOperationCompleted);
            }
            this.InvokeAsync("StoreProvider_GetByDemographics", new object[] {
                        _demographics,
                        start,
                        pageLength}, this.StoreProvider_GetByDemographicsOperationCompleted, userState);
        }
        
        private void OnStoreProvider_GetByDemographicsOperationCompleted(object arg) {
            if ((this.StoreProvider_GetByDemographicsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoreProvider_GetByDemographicsCompleted(this, new StoreProvider_GetByDemographicsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductListPriceHistoryProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ProductListPriceHistoryProvider_Delete(int _productId, System.DateTime _startDate) {
            object[] results = this.Invoke("ProductListPriceHistoryProvider_Delete", new object[] {
                        _productId,
                        _startDate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ProductListPriceHistoryProvider_DeleteAsync(int _productId, System.DateTime _startDate) {
            this.ProductListPriceHistoryProvider_DeleteAsync(_productId, _startDate, null);
        }
        
        /// <remarks/>
        public void ProductListPriceHistoryProvider_DeleteAsync(int _productId, System.DateTime _startDate, object userState) {
            if ((this.ProductListPriceHistoryProvider_DeleteOperationCompleted == null)) {
                this.ProductListPriceHistoryProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductListPriceHistoryProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("ProductListPriceHistoryProvider_Delete", new object[] {
                        _productId,
                        _startDate}, this.ProductListPriceHistoryProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnProductListPriceHistoryProvider_DeleteOperationCompleted(object arg) {
            if ((this.ProductListPriceHistoryProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductListPriceHistoryProvider_DeleteCompleted(this, new ProductListPriceHistoryProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductListPriceHistoryProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductListPriceHistory[] ProductListPriceHistoryProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductListPriceHistoryProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductListPriceHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductListPriceHistoryProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.ProductListPriceHistoryProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductListPriceHistoryProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.ProductListPriceHistoryProvider_FindOperationCompleted == null)) {
                this.ProductListPriceHistoryProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductListPriceHistoryProvider_FindOperationCompleted);
            }
            this.InvokeAsync("ProductListPriceHistoryProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.ProductListPriceHistoryProvider_FindOperationCompleted, userState);
        }
        
        private void OnProductListPriceHistoryProvider_FindOperationCompleted(object arg) {
            if ((this.ProductListPriceHistoryProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductListPriceHistoryProvider_FindCompleted(this, new ProductListPriceHistoryProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductListPriceHistoryProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductListPriceHistory[] ProductListPriceHistoryProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductListPriceHistoryProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductListPriceHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductListPriceHistoryProvider_GetAllAsync(int start, int pageLength) {
            this.ProductListPriceHistoryProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductListPriceHistoryProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.ProductListPriceHistoryProvider_GetAllOperationCompleted == null)) {
                this.ProductListPriceHistoryProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductListPriceHistoryProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("ProductListPriceHistoryProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.ProductListPriceHistoryProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnProductListPriceHistoryProvider_GetAllOperationCompleted(object arg) {
            if ((this.ProductListPriceHistoryProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductListPriceHistoryProvider_GetAllCompleted(this, new ProductListPriceHistoryProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductListPriceHistoryProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductListPriceHistory[] ProductListPriceHistoryProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductListPriceHistoryProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductListPriceHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductListPriceHistoryProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.ProductListPriceHistoryProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductListPriceHistoryProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.ProductListPriceHistoryProvider_GetPagedOperationCompleted == null)) {
                this.ProductListPriceHistoryProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductListPriceHistoryProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("ProductListPriceHistoryProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.ProductListPriceHistoryProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnProductListPriceHistoryProvider_GetPagedOperationCompleted(object arg) {
            if ((this.ProductListPriceHistoryProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductListPriceHistoryProvider_GetPagedCompleted(this, new ProductListPriceHistoryProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductListPriceHistoryProvider_GetByProd" +
            "uctId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductListPriceHistory[] ProductListPriceHistoryProvider_GetByProductId(int _productId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductListPriceHistoryProvider_GetByProductId", new object[] {
                        _productId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductListPriceHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductListPriceHistoryProvider_GetByProductIdAsync(int _productId, int start, int pageLength) {
            this.ProductListPriceHistoryProvider_GetByProductIdAsync(_productId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductListPriceHistoryProvider_GetByProductIdAsync(int _productId, int start, int pageLength, object userState) {
            if ((this.ProductListPriceHistoryProvider_GetByProductIdOperationCompleted == null)) {
                this.ProductListPriceHistoryProvider_GetByProductIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductListPriceHistoryProvider_GetByProductIdOperationCompleted);
            }
            this.InvokeAsync("ProductListPriceHistoryProvider_GetByProductId", new object[] {
                        _productId,
                        start,
                        pageLength}, this.ProductListPriceHistoryProvider_GetByProductIdOperationCompleted, userState);
        }
        
        private void OnProductListPriceHistoryProvider_GetByProductIdOperationCompleted(object arg) {
            if ((this.ProductListPriceHistoryProvider_GetByProductIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductListPriceHistoryProvider_GetByProductIdCompleted(this, new ProductListPriceHistoryProvider_GetByProductIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductListPriceHistoryProvider_GetByProd" +
            "uctIdStartDate", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductListPriceHistory ProductListPriceHistoryProvider_GetByProductIdStartDate(int _productId, System.DateTime _startDate, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductListPriceHistoryProvider_GetByProductIdStartDate", new object[] {
                        _productId,
                        _startDate,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductListPriceHistory)(results[0]));
        }
        
        /// <remarks/>
        public void ProductListPriceHistoryProvider_GetByProductIdStartDateAsync(int _productId, System.DateTime _startDate, int start, int pageLength) {
            this.ProductListPriceHistoryProvider_GetByProductIdStartDateAsync(_productId, _startDate, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductListPriceHistoryProvider_GetByProductIdStartDateAsync(int _productId, System.DateTime _startDate, int start, int pageLength, object userState) {
            if ((this.ProductListPriceHistoryProvider_GetByProductIdStartDateOperationCompleted == null)) {
                this.ProductListPriceHistoryProvider_GetByProductIdStartDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductListPriceHistoryProvider_GetByProductIdStartDateOperationCompleted);
            }
            this.InvokeAsync("ProductListPriceHistoryProvider_GetByProductIdStartDate", new object[] {
                        _productId,
                        _startDate,
                        start,
                        pageLength}, this.ProductListPriceHistoryProvider_GetByProductIdStartDateOperationCompleted, userState);
        }
        
        private void OnProductListPriceHistoryProvider_GetByProductIdStartDateOperationCompleted(object arg) {
            if ((this.ProductListPriceHistoryProvider_GetByProductIdStartDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductListPriceHistoryProvider_GetByProductIdStartDateCompleted(this, new ProductListPriceHistoryProvider_GetByProductIdStartDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductListPriceHistoryProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductListPriceHistory ProductListPriceHistoryProvider_Insert(ProductListPriceHistory entity) {
            object[] results = this.Invoke("ProductListPriceHistoryProvider_Insert", new object[] {
                        entity});
            return ((ProductListPriceHistory)(results[0]));
        }
        
        /// <remarks/>
        public void ProductListPriceHistoryProvider_InsertAsync(ProductListPriceHistory entity) {
            this.ProductListPriceHistoryProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void ProductListPriceHistoryProvider_InsertAsync(ProductListPriceHistory entity, object userState) {
            if ((this.ProductListPriceHistoryProvider_InsertOperationCompleted == null)) {
                this.ProductListPriceHistoryProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductListPriceHistoryProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("ProductListPriceHistoryProvider_Insert", new object[] {
                        entity}, this.ProductListPriceHistoryProvider_InsertOperationCompleted, userState);
        }
        
        private void OnProductListPriceHistoryProvider_InsertOperationCompleted(object arg) {
            if ((this.ProductListPriceHistoryProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductListPriceHistoryProvider_InsertCompleted(this, new ProductListPriceHistoryProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductListPriceHistoryProvider_BulkInser" +
            "t", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ProductListPriceHistoryProvider_BulkInsert(ProductListPriceHistory[] entityList) {
            this.Invoke("ProductListPriceHistoryProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void ProductListPriceHistoryProvider_BulkInsertAsync(ProductListPriceHistory[] entityList) {
            this.ProductListPriceHistoryProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void ProductListPriceHistoryProvider_BulkInsertAsync(ProductListPriceHistory[] entityList, object userState) {
            if ((this.ProductListPriceHistoryProvider_BulkInsertOperationCompleted == null)) {
                this.ProductListPriceHistoryProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductListPriceHistoryProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("ProductListPriceHistoryProvider_BulkInsert", new object[] {
                        entityList}, this.ProductListPriceHistoryProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnProductListPriceHistoryProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.ProductListPriceHistoryProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductListPriceHistoryProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductListPriceHistoryProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductListPriceHistory ProductListPriceHistoryProvider_Update(ProductListPriceHistory entity) {
            object[] results = this.Invoke("ProductListPriceHistoryProvider_Update", new object[] {
                        entity});
            return ((ProductListPriceHistory)(results[0]));
        }
        
        /// <remarks/>
        public void ProductListPriceHistoryProvider_UpdateAsync(ProductListPriceHistory entity) {
            this.ProductListPriceHistoryProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void ProductListPriceHistoryProvider_UpdateAsync(ProductListPriceHistory entity, object userState) {
            if ((this.ProductListPriceHistoryProvider_UpdateOperationCompleted == null)) {
                this.ProductListPriceHistoryProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductListPriceHistoryProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("ProductListPriceHistoryProvider_Update", new object[] {
                        entity}, this.ProductListPriceHistoryProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnProductListPriceHistoryProvider_UpdateOperationCompleted(object arg) {
            if ((this.ProductListPriceHistoryProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductListPriceHistoryProvider_UpdateCompleted(this, new ProductListPriceHistoryProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelIllustrationProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ProductModelIllustrationProvider_Delete(int _productModelId, int _illustrationId) {
            object[] results = this.Invoke("ProductModelIllustrationProvider_Delete", new object[] {
                        _productModelId,
                        _illustrationId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ProductModelIllustrationProvider_DeleteAsync(int _productModelId, int _illustrationId) {
            this.ProductModelIllustrationProvider_DeleteAsync(_productModelId, _illustrationId, null);
        }
        
        /// <remarks/>
        public void ProductModelIllustrationProvider_DeleteAsync(int _productModelId, int _illustrationId, object userState) {
            if ((this.ProductModelIllustrationProvider_DeleteOperationCompleted == null)) {
                this.ProductModelIllustrationProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelIllustrationProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("ProductModelIllustrationProvider_Delete", new object[] {
                        _productModelId,
                        _illustrationId}, this.ProductModelIllustrationProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnProductModelIllustrationProvider_DeleteOperationCompleted(object arg) {
            if ((this.ProductModelIllustrationProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelIllustrationProvider_DeleteCompleted(this, new ProductModelIllustrationProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelIllustrationProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductModelIllustration[] ProductModelIllustrationProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductModelIllustrationProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductModelIllustration[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductModelIllustrationProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.ProductModelIllustrationProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductModelIllustrationProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.ProductModelIllustrationProvider_FindOperationCompleted == null)) {
                this.ProductModelIllustrationProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelIllustrationProvider_FindOperationCompleted);
            }
            this.InvokeAsync("ProductModelIllustrationProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.ProductModelIllustrationProvider_FindOperationCompleted, userState);
        }
        
        private void OnProductModelIllustrationProvider_FindOperationCompleted(object arg) {
            if ((this.ProductModelIllustrationProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelIllustrationProvider_FindCompleted(this, new ProductModelIllustrationProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelIllustrationProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductModelIllustration[] ProductModelIllustrationProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductModelIllustrationProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductModelIllustration[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductModelIllustrationProvider_GetAllAsync(int start, int pageLength) {
            this.ProductModelIllustrationProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductModelIllustrationProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.ProductModelIllustrationProvider_GetAllOperationCompleted == null)) {
                this.ProductModelIllustrationProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelIllustrationProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("ProductModelIllustrationProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.ProductModelIllustrationProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnProductModelIllustrationProvider_GetAllOperationCompleted(object arg) {
            if ((this.ProductModelIllustrationProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelIllustrationProvider_GetAllCompleted(this, new ProductModelIllustrationProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelIllustrationProvider_GetPaged" +
            "", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductModelIllustration[] ProductModelIllustrationProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductModelIllustrationProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductModelIllustration[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductModelIllustrationProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.ProductModelIllustrationProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductModelIllustrationProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.ProductModelIllustrationProvider_GetPagedOperationCompleted == null)) {
                this.ProductModelIllustrationProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelIllustrationProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("ProductModelIllustrationProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.ProductModelIllustrationProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnProductModelIllustrationProvider_GetPagedOperationCompleted(object arg) {
            if ((this.ProductModelIllustrationProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelIllustrationProvider_GetPagedCompleted(this, new ProductModelIllustrationProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelIllustrationProvider_GetByIll" +
            "ustrationId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductModelIllustration[] ProductModelIllustrationProvider_GetByIllustrationId(int _illustrationId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductModelIllustrationProvider_GetByIllustrationId", new object[] {
                        _illustrationId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductModelIllustration[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductModelIllustrationProvider_GetByIllustrationIdAsync(int _illustrationId, int start, int pageLength) {
            this.ProductModelIllustrationProvider_GetByIllustrationIdAsync(_illustrationId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductModelIllustrationProvider_GetByIllustrationIdAsync(int _illustrationId, int start, int pageLength, object userState) {
            if ((this.ProductModelIllustrationProvider_GetByIllustrationIdOperationCompleted == null)) {
                this.ProductModelIllustrationProvider_GetByIllustrationIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelIllustrationProvider_GetByIllustrationIdOperationCompleted);
            }
            this.InvokeAsync("ProductModelIllustrationProvider_GetByIllustrationId", new object[] {
                        _illustrationId,
                        start,
                        pageLength}, this.ProductModelIllustrationProvider_GetByIllustrationIdOperationCompleted, userState);
        }
        
        private void OnProductModelIllustrationProvider_GetByIllustrationIdOperationCompleted(object arg) {
            if ((this.ProductModelIllustrationProvider_GetByIllustrationIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelIllustrationProvider_GetByIllustrationIdCompleted(this, new ProductModelIllustrationProvider_GetByIllustrationIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelIllustrationProvider_GetByPro" +
            "ductModelId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductModelIllustration[] ProductModelIllustrationProvider_GetByProductModelId(int _productModelId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductModelIllustrationProvider_GetByProductModelId", new object[] {
                        _productModelId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductModelIllustration[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductModelIllustrationProvider_GetByProductModelIdAsync(int _productModelId, int start, int pageLength) {
            this.ProductModelIllustrationProvider_GetByProductModelIdAsync(_productModelId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductModelIllustrationProvider_GetByProductModelIdAsync(int _productModelId, int start, int pageLength, object userState) {
            if ((this.ProductModelIllustrationProvider_GetByProductModelIdOperationCompleted == null)) {
                this.ProductModelIllustrationProvider_GetByProductModelIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelIllustrationProvider_GetByProductModelIdOperationCompleted);
            }
            this.InvokeAsync("ProductModelIllustrationProvider_GetByProductModelId", new object[] {
                        _productModelId,
                        start,
                        pageLength}, this.ProductModelIllustrationProvider_GetByProductModelIdOperationCompleted, userState);
        }
        
        private void OnProductModelIllustrationProvider_GetByProductModelIdOperationCompleted(object arg) {
            if ((this.ProductModelIllustrationProvider_GetByProductModelIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelIllustrationProvider_GetByProductModelIdCompleted(this, new ProductModelIllustrationProvider_GetByProductModelIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelIllustrationProvider_GetByPro" +
            "ductModelIdIllustrationId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductModelIllustration ProductModelIllustrationProvider_GetByProductModelIdIllustrationId(int _productModelId, int _illustrationId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductModelIllustrationProvider_GetByProductModelIdIllustrationId", new object[] {
                        _productModelId,
                        _illustrationId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductModelIllustration)(results[0]));
        }
        
        /// <remarks/>
        public void ProductModelIllustrationProvider_GetByProductModelIdIllustrationIdAsync(int _productModelId, int _illustrationId, int start, int pageLength) {
            this.ProductModelIllustrationProvider_GetByProductModelIdIllustrationIdAsync(_productModelId, _illustrationId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductModelIllustrationProvider_GetByProductModelIdIllustrationIdAsync(int _productModelId, int _illustrationId, int start, int pageLength, object userState) {
            if ((this.ProductModelIllustrationProvider_GetByProductModelIdIllustrationIdOperationCompleted == null)) {
                this.ProductModelIllustrationProvider_GetByProductModelIdIllustrationIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelIllustrationProvider_GetByProductModelIdIllustrationIdOperationCompleted);
            }
            this.InvokeAsync("ProductModelIllustrationProvider_GetByProductModelIdIllustrationId", new object[] {
                        _productModelId,
                        _illustrationId,
                        start,
                        pageLength}, this.ProductModelIllustrationProvider_GetByProductModelIdIllustrationIdOperationCompleted, userState);
        }
        
        private void OnProductModelIllustrationProvider_GetByProductModelIdIllustrationIdOperationCompleted(object arg) {
            if ((this.ProductModelIllustrationProvider_GetByProductModelIdIllustrationIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelIllustrationProvider_GetByProductModelIdIllustrationIdCompleted(this, new ProductModelIllustrationProvider_GetByProductModelIdIllustrationIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelIllustrationProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductModelIllustration ProductModelIllustrationProvider_Insert(ProductModelIllustration entity) {
            object[] results = this.Invoke("ProductModelIllustrationProvider_Insert", new object[] {
                        entity});
            return ((ProductModelIllustration)(results[0]));
        }
        
        /// <remarks/>
        public void ProductModelIllustrationProvider_InsertAsync(ProductModelIllustration entity) {
            this.ProductModelIllustrationProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void ProductModelIllustrationProvider_InsertAsync(ProductModelIllustration entity, object userState) {
            if ((this.ProductModelIllustrationProvider_InsertOperationCompleted == null)) {
                this.ProductModelIllustrationProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelIllustrationProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("ProductModelIllustrationProvider_Insert", new object[] {
                        entity}, this.ProductModelIllustrationProvider_InsertOperationCompleted, userState);
        }
        
        private void OnProductModelIllustrationProvider_InsertOperationCompleted(object arg) {
            if ((this.ProductModelIllustrationProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelIllustrationProvider_InsertCompleted(this, new ProductModelIllustrationProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelIllustrationProvider_BulkInse" +
            "rt", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ProductModelIllustrationProvider_BulkInsert(ProductModelIllustration[] entityList) {
            this.Invoke("ProductModelIllustrationProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void ProductModelIllustrationProvider_BulkInsertAsync(ProductModelIllustration[] entityList) {
            this.ProductModelIllustrationProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void ProductModelIllustrationProvider_BulkInsertAsync(ProductModelIllustration[] entityList, object userState) {
            if ((this.ProductModelIllustrationProvider_BulkInsertOperationCompleted == null)) {
                this.ProductModelIllustrationProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelIllustrationProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("ProductModelIllustrationProvider_BulkInsert", new object[] {
                        entityList}, this.ProductModelIllustrationProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnProductModelIllustrationProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.ProductModelIllustrationProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelIllustrationProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelIllustrationProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductModelIllustration ProductModelIllustrationProvider_Update(ProductModelIllustration entity) {
            object[] results = this.Invoke("ProductModelIllustrationProvider_Update", new object[] {
                        entity});
            return ((ProductModelIllustration)(results[0]));
        }
        
        /// <remarks/>
        public void ProductModelIllustrationProvider_UpdateAsync(ProductModelIllustration entity) {
            this.ProductModelIllustrationProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void ProductModelIllustrationProvider_UpdateAsync(ProductModelIllustration entity, object userState) {
            if ((this.ProductModelIllustrationProvider_UpdateOperationCompleted == null)) {
                this.ProductModelIllustrationProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelIllustrationProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("ProductModelIllustrationProvider_Update", new object[] {
                        entity}, this.ProductModelIllustrationProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnProductModelIllustrationProvider_UpdateOperationCompleted(object arg) {
            if ((this.ProductModelIllustrationProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelIllustrationProvider_UpdateCompleted(this, new ProductModelIllustrationProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ContactProvider_GetByCreditCardIdFromCont" +
            "actCreditCard", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Contact[] ContactProvider_GetByCreditCardIdFromContactCreditCard(int _creditCardId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ContactProvider_GetByCreditCardIdFromContactCreditCard", new object[] {
                        _creditCardId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Contact[])(results[0]));
        }
        
        /// <remarks/>
        public void ContactProvider_GetByCreditCardIdFromContactCreditCardAsync(int _creditCardId, int start, int pageLength) {
            this.ContactProvider_GetByCreditCardIdFromContactCreditCardAsync(_creditCardId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ContactProvider_GetByCreditCardIdFromContactCreditCardAsync(int _creditCardId, int start, int pageLength, object userState) {
            if ((this.ContactProvider_GetByCreditCardIdFromContactCreditCardOperationCompleted == null)) {
                this.ContactProvider_GetByCreditCardIdFromContactCreditCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactProvider_GetByCreditCardIdFromContactCreditCardOperationCompleted);
            }
            this.InvokeAsync("ContactProvider_GetByCreditCardIdFromContactCreditCard", new object[] {
                        _creditCardId,
                        start,
                        pageLength}, this.ContactProvider_GetByCreditCardIdFromContactCreditCardOperationCompleted, userState);
        }
        
        private void OnContactProvider_GetByCreditCardIdFromContactCreditCardOperationCompleted(object arg) {
            if ((this.ContactProvider_GetByCreditCardIdFromContactCreditCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactProvider_GetByCreditCardIdFromContactCreditCardCompleted(this, new ContactProvider_GetByCreditCardIdFromContactCreditCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ContactProvider_GetByCustomerIdFromStoreC" +
            "ontact", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Contact[] ContactProvider_GetByCustomerIdFromStoreContact(int _customerId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ContactProvider_GetByCustomerIdFromStoreContact", new object[] {
                        _customerId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Contact[])(results[0]));
        }
        
        /// <remarks/>
        public void ContactProvider_GetByCustomerIdFromStoreContactAsync(int _customerId, int start, int pageLength) {
            this.ContactProvider_GetByCustomerIdFromStoreContactAsync(_customerId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ContactProvider_GetByCustomerIdFromStoreContactAsync(int _customerId, int start, int pageLength, object userState) {
            if ((this.ContactProvider_GetByCustomerIdFromStoreContactOperationCompleted == null)) {
                this.ContactProvider_GetByCustomerIdFromStoreContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactProvider_GetByCustomerIdFromStoreContactOperationCompleted);
            }
            this.InvokeAsync("ContactProvider_GetByCustomerIdFromStoreContact", new object[] {
                        _customerId,
                        start,
                        pageLength}, this.ContactProvider_GetByCustomerIdFromStoreContactOperationCompleted, userState);
        }
        
        private void OnContactProvider_GetByCustomerIdFromStoreContactOperationCompleted(object arg) {
            if ((this.ContactProvider_GetByCustomerIdFromStoreContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactProvider_GetByCustomerIdFromStoreContactCompleted(this, new ContactProvider_GetByCustomerIdFromStoreContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ContactProvider_GetByVendorIdFromVendorCo" +
            "ntact", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Contact[] ContactProvider_GetByVendorIdFromVendorContact(int _vendorId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ContactProvider_GetByVendorIdFromVendorContact", new object[] {
                        _vendorId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Contact[])(results[0]));
        }
        
        /// <remarks/>
        public void ContactProvider_GetByVendorIdFromVendorContactAsync(int _vendorId, int start, int pageLength) {
            this.ContactProvider_GetByVendorIdFromVendorContactAsync(_vendorId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ContactProvider_GetByVendorIdFromVendorContactAsync(int _vendorId, int start, int pageLength, object userState) {
            if ((this.ContactProvider_GetByVendorIdFromVendorContactOperationCompleted == null)) {
                this.ContactProvider_GetByVendorIdFromVendorContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactProvider_GetByVendorIdFromVendorContactOperationCompleted);
            }
            this.InvokeAsync("ContactProvider_GetByVendorIdFromVendorContact", new object[] {
                        _vendorId,
                        start,
                        pageLength}, this.ContactProvider_GetByVendorIdFromVendorContactOperationCompleted, userState);
        }
        
        private void OnContactProvider_GetByVendorIdFromVendorContactOperationCompleted(object arg) {
            if ((this.ContactProvider_GetByVendorIdFromVendorContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactProvider_GetByVendorIdFromVendorContactCompleted(this, new ContactProvider_GetByVendorIdFromVendorContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ContactProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ContactProvider_Delete(int _contactId) {
            object[] results = this.Invoke("ContactProvider_Delete", new object[] {
                        _contactId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ContactProvider_DeleteAsync(int _contactId) {
            this.ContactProvider_DeleteAsync(_contactId, null);
        }
        
        /// <remarks/>
        public void ContactProvider_DeleteAsync(int _contactId, object userState) {
            if ((this.ContactProvider_DeleteOperationCompleted == null)) {
                this.ContactProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("ContactProvider_Delete", new object[] {
                        _contactId}, this.ContactProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnContactProvider_DeleteOperationCompleted(object arg) {
            if ((this.ContactProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactProvider_DeleteCompleted(this, new ContactProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ContactProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Contact[] ContactProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ContactProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Contact[])(results[0]));
        }
        
        /// <remarks/>
        public void ContactProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.ContactProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ContactProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.ContactProvider_FindOperationCompleted == null)) {
                this.ContactProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactProvider_FindOperationCompleted);
            }
            this.InvokeAsync("ContactProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.ContactProvider_FindOperationCompleted, userState);
        }
        
        private void OnContactProvider_FindOperationCompleted(object arg) {
            if ((this.ContactProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactProvider_FindCompleted(this, new ContactProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ContactProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Contact[] ContactProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("ContactProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Contact[])(results[0]));
        }
        
        /// <remarks/>
        public void ContactProvider_GetAllAsync(int start, int pageLength) {
            this.ContactProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void ContactProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.ContactProvider_GetAllOperationCompleted == null)) {
                this.ContactProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("ContactProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.ContactProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnContactProvider_GetAllOperationCompleted(object arg) {
            if ((this.ContactProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactProvider_GetAllCompleted(this, new ContactProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ContactProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Contact[] ContactProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ContactProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Contact[])(results[0]));
        }
        
        /// <remarks/>
        public void ContactProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.ContactProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ContactProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.ContactProvider_GetPagedOperationCompleted == null)) {
                this.ContactProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("ContactProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.ContactProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnContactProvider_GetPagedOperationCompleted(object arg) {
            if ((this.ContactProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactProvider_GetPagedCompleted(this, new ContactProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ContactProvider_GetByRowguid", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Contact ContactProvider_GetByRowguid(System.Guid _rowguid, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ContactProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Contact)(results[0]));
        }
        
        /// <remarks/>
        public void ContactProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength) {
            this.ContactProvider_GetByRowguidAsync(_rowguid, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ContactProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength, object userState) {
            if ((this.ContactProvider_GetByRowguidOperationCompleted == null)) {
                this.ContactProvider_GetByRowguidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactProvider_GetByRowguidOperationCompleted);
            }
            this.InvokeAsync("ContactProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength}, this.ContactProvider_GetByRowguidOperationCompleted, userState);
        }
        
        private void OnContactProvider_GetByRowguidOperationCompleted(object arg) {
            if ((this.ContactProvider_GetByRowguidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactProvider_GetByRowguidCompleted(this, new ContactProvider_GetByRowguidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ContactProvider_GetByEmailAddress", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Contact[] ContactProvider_GetByEmailAddress(string _emailAddress, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ContactProvider_GetByEmailAddress", new object[] {
                        _emailAddress,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Contact[])(results[0]));
        }
        
        /// <remarks/>
        public void ContactProvider_GetByEmailAddressAsync(string _emailAddress, int start, int pageLength) {
            this.ContactProvider_GetByEmailAddressAsync(_emailAddress, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ContactProvider_GetByEmailAddressAsync(string _emailAddress, int start, int pageLength, object userState) {
            if ((this.ContactProvider_GetByEmailAddressOperationCompleted == null)) {
                this.ContactProvider_GetByEmailAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactProvider_GetByEmailAddressOperationCompleted);
            }
            this.InvokeAsync("ContactProvider_GetByEmailAddress", new object[] {
                        _emailAddress,
                        start,
                        pageLength}, this.ContactProvider_GetByEmailAddressOperationCompleted, userState);
        }
        
        private void OnContactProvider_GetByEmailAddressOperationCompleted(object arg) {
            if ((this.ContactProvider_GetByEmailAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactProvider_GetByEmailAddressCompleted(this, new ContactProvider_GetByEmailAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ContactProvider_GetByContactId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Contact ContactProvider_GetByContactId(int _contactId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ContactProvider_GetByContactId", new object[] {
                        _contactId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Contact)(results[0]));
        }
        
        /// <remarks/>
        public void ContactProvider_GetByContactIdAsync(int _contactId, int start, int pageLength) {
            this.ContactProvider_GetByContactIdAsync(_contactId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ContactProvider_GetByContactIdAsync(int _contactId, int start, int pageLength, object userState) {
            if ((this.ContactProvider_GetByContactIdOperationCompleted == null)) {
                this.ContactProvider_GetByContactIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactProvider_GetByContactIdOperationCompleted);
            }
            this.InvokeAsync("ContactProvider_GetByContactId", new object[] {
                        _contactId,
                        start,
                        pageLength}, this.ContactProvider_GetByContactIdOperationCompleted, userState);
        }
        
        private void OnContactProvider_GetByContactIdOperationCompleted(object arg) {
            if ((this.ContactProvider_GetByContactIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactProvider_GetByContactIdCompleted(this, new ContactProvider_GetByContactIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ContactProvider_GetByAdditionalContactInf" +
            "o", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Contact[] ContactProvider_GetByAdditionalContactInfo(string _additionalContactInfo, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ContactProvider_GetByAdditionalContactInfo", new object[] {
                        _additionalContactInfo,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Contact[])(results[0]));
        }
        
        /// <remarks/>
        public void ContactProvider_GetByAdditionalContactInfoAsync(string _additionalContactInfo, int start, int pageLength) {
            this.ContactProvider_GetByAdditionalContactInfoAsync(_additionalContactInfo, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ContactProvider_GetByAdditionalContactInfoAsync(string _additionalContactInfo, int start, int pageLength, object userState) {
            if ((this.ContactProvider_GetByAdditionalContactInfoOperationCompleted == null)) {
                this.ContactProvider_GetByAdditionalContactInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactProvider_GetByAdditionalContactInfoOperationCompleted);
            }
            this.InvokeAsync("ContactProvider_GetByAdditionalContactInfo", new object[] {
                        _additionalContactInfo,
                        start,
                        pageLength}, this.ContactProvider_GetByAdditionalContactInfoOperationCompleted, userState);
        }
        
        private void OnContactProvider_GetByAdditionalContactInfoOperationCompleted(object arg) {
            if ((this.ContactProvider_GetByAdditionalContactInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactProvider_GetByAdditionalContactInfoCompleted(this, new ContactProvider_GetByAdditionalContactInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ContactProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Contact ContactProvider_Insert(Contact entity) {
            object[] results = this.Invoke("ContactProvider_Insert", new object[] {
                        entity});
            return ((Contact)(results[0]));
        }
        
        /// <remarks/>
        public void ContactProvider_InsertAsync(Contact entity) {
            this.ContactProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void ContactProvider_InsertAsync(Contact entity, object userState) {
            if ((this.ContactProvider_InsertOperationCompleted == null)) {
                this.ContactProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("ContactProvider_Insert", new object[] {
                        entity}, this.ContactProvider_InsertOperationCompleted, userState);
        }
        
        private void OnContactProvider_InsertOperationCompleted(object arg) {
            if ((this.ContactProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactProvider_InsertCompleted(this, new ContactProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ContactProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ContactProvider_BulkInsert(Contact[] entityList) {
            this.Invoke("ContactProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void ContactProvider_BulkInsertAsync(Contact[] entityList) {
            this.ContactProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void ContactProvider_BulkInsertAsync(Contact[] entityList, object userState) {
            if ((this.ContactProvider_BulkInsertOperationCompleted == null)) {
                this.ContactProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("ContactProvider_BulkInsert", new object[] {
                        entityList}, this.ContactProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnContactProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.ContactProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ContactProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Contact ContactProvider_Update(Contact entity) {
            object[] results = this.Invoke("ContactProvider_Update", new object[] {
                        entity});
            return ((Contact)(results[0]));
        }
        
        /// <remarks/>
        public void ContactProvider_UpdateAsync(Contact entity) {
            this.ContactProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void ContactProvider_UpdateAsync(Contact entity, object userState) {
            if ((this.ContactProvider_UpdateOperationCompleted == null)) {
                this.ContactProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("ContactProvider_Update", new object[] {
                        entity}, this.ContactProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnContactProvider_UpdateOperationCompleted(object arg) {
            if ((this.ContactProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactProvider_UpdateCompleted(this, new ContactProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ScrapReasonProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ScrapReasonProvider_Delete(short _scrapReasonId) {
            object[] results = this.Invoke("ScrapReasonProvider_Delete", new object[] {
                        _scrapReasonId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ScrapReasonProvider_DeleteAsync(short _scrapReasonId) {
            this.ScrapReasonProvider_DeleteAsync(_scrapReasonId, null);
        }
        
        /// <remarks/>
        public void ScrapReasonProvider_DeleteAsync(short _scrapReasonId, object userState) {
            if ((this.ScrapReasonProvider_DeleteOperationCompleted == null)) {
                this.ScrapReasonProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnScrapReasonProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("ScrapReasonProvider_Delete", new object[] {
                        _scrapReasonId}, this.ScrapReasonProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnScrapReasonProvider_DeleteOperationCompleted(object arg) {
            if ((this.ScrapReasonProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ScrapReasonProvider_DeleteCompleted(this, new ScrapReasonProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ScrapReasonProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ScrapReason[] ScrapReasonProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ScrapReasonProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ScrapReason[])(results[0]));
        }
        
        /// <remarks/>
        public void ScrapReasonProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.ScrapReasonProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ScrapReasonProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.ScrapReasonProvider_FindOperationCompleted == null)) {
                this.ScrapReasonProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnScrapReasonProvider_FindOperationCompleted);
            }
            this.InvokeAsync("ScrapReasonProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.ScrapReasonProvider_FindOperationCompleted, userState);
        }
        
        private void OnScrapReasonProvider_FindOperationCompleted(object arg) {
            if ((this.ScrapReasonProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ScrapReasonProvider_FindCompleted(this, new ScrapReasonProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ScrapReasonProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ScrapReason[] ScrapReasonProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("ScrapReasonProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ScrapReason[])(results[0]));
        }
        
        /// <remarks/>
        public void ScrapReasonProvider_GetAllAsync(int start, int pageLength) {
            this.ScrapReasonProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void ScrapReasonProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.ScrapReasonProvider_GetAllOperationCompleted == null)) {
                this.ScrapReasonProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnScrapReasonProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("ScrapReasonProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.ScrapReasonProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnScrapReasonProvider_GetAllOperationCompleted(object arg) {
            if ((this.ScrapReasonProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ScrapReasonProvider_GetAllCompleted(this, new ScrapReasonProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ScrapReasonProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ScrapReason[] ScrapReasonProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ScrapReasonProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ScrapReason[])(results[0]));
        }
        
        /// <remarks/>
        public void ScrapReasonProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.ScrapReasonProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ScrapReasonProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.ScrapReasonProvider_GetPagedOperationCompleted == null)) {
                this.ScrapReasonProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnScrapReasonProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("ScrapReasonProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.ScrapReasonProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnScrapReasonProvider_GetPagedOperationCompleted(object arg) {
            if ((this.ScrapReasonProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ScrapReasonProvider_GetPagedCompleted(this, new ScrapReasonProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ScrapReasonProvider_GetByName", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ScrapReason ScrapReasonProvider_GetByName(string _name, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ScrapReasonProvider_GetByName", new object[] {
                        _name,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ScrapReason)(results[0]));
        }
        
        /// <remarks/>
        public void ScrapReasonProvider_GetByNameAsync(string _name, int start, int pageLength) {
            this.ScrapReasonProvider_GetByNameAsync(_name, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ScrapReasonProvider_GetByNameAsync(string _name, int start, int pageLength, object userState) {
            if ((this.ScrapReasonProvider_GetByNameOperationCompleted == null)) {
                this.ScrapReasonProvider_GetByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnScrapReasonProvider_GetByNameOperationCompleted);
            }
            this.InvokeAsync("ScrapReasonProvider_GetByName", new object[] {
                        _name,
                        start,
                        pageLength}, this.ScrapReasonProvider_GetByNameOperationCompleted, userState);
        }
        
        private void OnScrapReasonProvider_GetByNameOperationCompleted(object arg) {
            if ((this.ScrapReasonProvider_GetByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ScrapReasonProvider_GetByNameCompleted(this, new ScrapReasonProvider_GetByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ScrapReasonProvider_GetByScrapReasonId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ScrapReason ScrapReasonProvider_GetByScrapReasonId(short _scrapReasonId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ScrapReasonProvider_GetByScrapReasonId", new object[] {
                        _scrapReasonId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ScrapReason)(results[0]));
        }
        
        /// <remarks/>
        public void ScrapReasonProvider_GetByScrapReasonIdAsync(short _scrapReasonId, int start, int pageLength) {
            this.ScrapReasonProvider_GetByScrapReasonIdAsync(_scrapReasonId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ScrapReasonProvider_GetByScrapReasonIdAsync(short _scrapReasonId, int start, int pageLength, object userState) {
            if ((this.ScrapReasonProvider_GetByScrapReasonIdOperationCompleted == null)) {
                this.ScrapReasonProvider_GetByScrapReasonIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnScrapReasonProvider_GetByScrapReasonIdOperationCompleted);
            }
            this.InvokeAsync("ScrapReasonProvider_GetByScrapReasonId", new object[] {
                        _scrapReasonId,
                        start,
                        pageLength}, this.ScrapReasonProvider_GetByScrapReasonIdOperationCompleted, userState);
        }
        
        private void OnScrapReasonProvider_GetByScrapReasonIdOperationCompleted(object arg) {
            if ((this.ScrapReasonProvider_GetByScrapReasonIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ScrapReasonProvider_GetByScrapReasonIdCompleted(this, new ScrapReasonProvider_GetByScrapReasonIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ScrapReasonProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ScrapReason ScrapReasonProvider_Insert(ScrapReason entity) {
            object[] results = this.Invoke("ScrapReasonProvider_Insert", new object[] {
                        entity});
            return ((ScrapReason)(results[0]));
        }
        
        /// <remarks/>
        public void ScrapReasonProvider_InsertAsync(ScrapReason entity) {
            this.ScrapReasonProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void ScrapReasonProvider_InsertAsync(ScrapReason entity, object userState) {
            if ((this.ScrapReasonProvider_InsertOperationCompleted == null)) {
                this.ScrapReasonProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnScrapReasonProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("ScrapReasonProvider_Insert", new object[] {
                        entity}, this.ScrapReasonProvider_InsertOperationCompleted, userState);
        }
        
        private void OnScrapReasonProvider_InsertOperationCompleted(object arg) {
            if ((this.ScrapReasonProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ScrapReasonProvider_InsertCompleted(this, new ScrapReasonProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ScrapReasonProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ScrapReasonProvider_BulkInsert(ScrapReason[] entityList) {
            this.Invoke("ScrapReasonProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void ScrapReasonProvider_BulkInsertAsync(ScrapReason[] entityList) {
            this.ScrapReasonProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void ScrapReasonProvider_BulkInsertAsync(ScrapReason[] entityList, object userState) {
            if ((this.ScrapReasonProvider_BulkInsertOperationCompleted == null)) {
                this.ScrapReasonProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnScrapReasonProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("ScrapReasonProvider_BulkInsert", new object[] {
                        entityList}, this.ScrapReasonProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnScrapReasonProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.ScrapReasonProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ScrapReasonProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ScrapReasonProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ScrapReason ScrapReasonProvider_Update(ScrapReason entity) {
            object[] results = this.Invoke("ScrapReasonProvider_Update", new object[] {
                        entity});
            return ((ScrapReason)(results[0]));
        }
        
        /// <remarks/>
        public void ScrapReasonProvider_UpdateAsync(ScrapReason entity) {
            this.ScrapReasonProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void ScrapReasonProvider_UpdateAsync(ScrapReason entity, object userState) {
            if ((this.ScrapReasonProvider_UpdateOperationCompleted == null)) {
                this.ScrapReasonProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnScrapReasonProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("ScrapReasonProvider_Update", new object[] {
                        entity}, this.ScrapReasonProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnScrapReasonProvider_UpdateOperationCompleted(object arg) {
            if ((this.ScrapReasonProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ScrapReasonProvider_UpdateCompleted(this, new ScrapReasonProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TransactionHistoryArchiveProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TransactionHistoryArchiveProvider_Delete(int _transactionId) {
            object[] results = this.Invoke("TransactionHistoryArchiveProvider_Delete", new object[] {
                        _transactionId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TransactionHistoryArchiveProvider_DeleteAsync(int _transactionId) {
            this.TransactionHistoryArchiveProvider_DeleteAsync(_transactionId, null);
        }
        
        /// <remarks/>
        public void TransactionHistoryArchiveProvider_DeleteAsync(int _transactionId, object userState) {
            if ((this.TransactionHistoryArchiveProvider_DeleteOperationCompleted == null)) {
                this.TransactionHistoryArchiveProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransactionHistoryArchiveProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("TransactionHistoryArchiveProvider_Delete", new object[] {
                        _transactionId}, this.TransactionHistoryArchiveProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnTransactionHistoryArchiveProvider_DeleteOperationCompleted(object arg) {
            if ((this.TransactionHistoryArchiveProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransactionHistoryArchiveProvider_DeleteCompleted(this, new TransactionHistoryArchiveProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TransactionHistoryArchiveProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionHistoryArchive[] TransactionHistoryArchiveProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("TransactionHistoryArchiveProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((TransactionHistoryArchive[])(results[0]));
        }
        
        /// <remarks/>
        public void TransactionHistoryArchiveProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.TransactionHistoryArchiveProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void TransactionHistoryArchiveProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.TransactionHistoryArchiveProvider_FindOperationCompleted == null)) {
                this.TransactionHistoryArchiveProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransactionHistoryArchiveProvider_FindOperationCompleted);
            }
            this.InvokeAsync("TransactionHistoryArchiveProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.TransactionHistoryArchiveProvider_FindOperationCompleted, userState);
        }
        
        private void OnTransactionHistoryArchiveProvider_FindOperationCompleted(object arg) {
            if ((this.TransactionHistoryArchiveProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransactionHistoryArchiveProvider_FindCompleted(this, new TransactionHistoryArchiveProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TransactionHistoryArchiveProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionHistoryArchive[] TransactionHistoryArchiveProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("TransactionHistoryArchiveProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((TransactionHistoryArchive[])(results[0]));
        }
        
        /// <remarks/>
        public void TransactionHistoryArchiveProvider_GetAllAsync(int start, int pageLength) {
            this.TransactionHistoryArchiveProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void TransactionHistoryArchiveProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.TransactionHistoryArchiveProvider_GetAllOperationCompleted == null)) {
                this.TransactionHistoryArchiveProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransactionHistoryArchiveProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("TransactionHistoryArchiveProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.TransactionHistoryArchiveProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnTransactionHistoryArchiveProvider_GetAllOperationCompleted(object arg) {
            if ((this.TransactionHistoryArchiveProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransactionHistoryArchiveProvider_GetAllCompleted(this, new TransactionHistoryArchiveProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TransactionHistoryArchiveProvider_GetPage" +
            "d", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionHistoryArchive[] TransactionHistoryArchiveProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("TransactionHistoryArchiveProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((TransactionHistoryArchive[])(results[0]));
        }
        
        /// <remarks/>
        public void TransactionHistoryArchiveProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.TransactionHistoryArchiveProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void TransactionHistoryArchiveProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.TransactionHistoryArchiveProvider_GetPagedOperationCompleted == null)) {
                this.TransactionHistoryArchiveProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransactionHistoryArchiveProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("TransactionHistoryArchiveProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.TransactionHistoryArchiveProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnTransactionHistoryArchiveProvider_GetPagedOperationCompleted(object arg) {
            if ((this.TransactionHistoryArchiveProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransactionHistoryArchiveProvider_GetPagedCompleted(this, new TransactionHistoryArchiveProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TransactionHistoryArchiveProvider_GetByPr" +
            "oductId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionHistoryArchive[] TransactionHistoryArchiveProvider_GetByProductId(int _productId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("TransactionHistoryArchiveProvider_GetByProductId", new object[] {
                        _productId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((TransactionHistoryArchive[])(results[0]));
        }
        
        /// <remarks/>
        public void TransactionHistoryArchiveProvider_GetByProductIdAsync(int _productId, int start, int pageLength) {
            this.TransactionHistoryArchiveProvider_GetByProductIdAsync(_productId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void TransactionHistoryArchiveProvider_GetByProductIdAsync(int _productId, int start, int pageLength, object userState) {
            if ((this.TransactionHistoryArchiveProvider_GetByProductIdOperationCompleted == null)) {
                this.TransactionHistoryArchiveProvider_GetByProductIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransactionHistoryArchiveProvider_GetByProductIdOperationCompleted);
            }
            this.InvokeAsync("TransactionHistoryArchiveProvider_GetByProductId", new object[] {
                        _productId,
                        start,
                        pageLength}, this.TransactionHistoryArchiveProvider_GetByProductIdOperationCompleted, userState);
        }
        
        private void OnTransactionHistoryArchiveProvider_GetByProductIdOperationCompleted(object arg) {
            if ((this.TransactionHistoryArchiveProvider_GetByProductIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransactionHistoryArchiveProvider_GetByProductIdCompleted(this, new TransactionHistoryArchiveProvider_GetByProductIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TransactionHistoryArchiveProvider_GetByRe" +
            "ferenceOrderIdReferenceOrderLineId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionHistoryArchive[] TransactionHistoryArchiveProvider_GetByReferenceOrderIdReferenceOrderLineId(int _referenceOrderId, int _referenceOrderLineId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("TransactionHistoryArchiveProvider_GetByReferenceOrderIdReferenceOrderLineId", new object[] {
                        _referenceOrderId,
                        _referenceOrderLineId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((TransactionHistoryArchive[])(results[0]));
        }
        
        /// <remarks/>
        public void TransactionHistoryArchiveProvider_GetByReferenceOrderIdReferenceOrderLineIdAsync(int _referenceOrderId, int _referenceOrderLineId, int start, int pageLength) {
            this.TransactionHistoryArchiveProvider_GetByReferenceOrderIdReferenceOrderLineIdAsync(_referenceOrderId, _referenceOrderLineId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void TransactionHistoryArchiveProvider_GetByReferenceOrderIdReferenceOrderLineIdAsync(int _referenceOrderId, int _referenceOrderLineId, int start, int pageLength, object userState) {
            if ((this.TransactionHistoryArchiveProvider_GetByReferenceOrderIdReferenceOrderLineIdOperationCompleted == null)) {
                this.TransactionHistoryArchiveProvider_GetByReferenceOrderIdReferenceOrderLineIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransactionHistoryArchiveProvider_GetByReferenceOrderIdReferenceOrderLineIdOperationCompleted);
            }
            this.InvokeAsync("TransactionHistoryArchiveProvider_GetByReferenceOrderIdReferenceOrderLineId", new object[] {
                        _referenceOrderId,
                        _referenceOrderLineId,
                        start,
                        pageLength}, this.TransactionHistoryArchiveProvider_GetByReferenceOrderIdReferenceOrderLineIdOperationCompleted, userState);
        }
        
        private void OnTransactionHistoryArchiveProvider_GetByReferenceOrderIdReferenceOrderLineIdOperationCompleted(object arg) {
            if ((this.TransactionHistoryArchiveProvider_GetByReferenceOrderIdReferenceOrderLineIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransactionHistoryArchiveProvider_GetByReferenceOrderIdReferenceOrderLineIdCompleted(this, new TransactionHistoryArchiveProvider_GetByReferenceOrderIdReferenceOrderLineIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TransactionHistoryArchiveProvider_GetByTr" +
            "ansactionId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionHistoryArchive TransactionHistoryArchiveProvider_GetByTransactionId(int _transactionId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("TransactionHistoryArchiveProvider_GetByTransactionId", new object[] {
                        _transactionId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((TransactionHistoryArchive)(results[0]));
        }
        
        /// <remarks/>
        public void TransactionHistoryArchiveProvider_GetByTransactionIdAsync(int _transactionId, int start, int pageLength) {
            this.TransactionHistoryArchiveProvider_GetByTransactionIdAsync(_transactionId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void TransactionHistoryArchiveProvider_GetByTransactionIdAsync(int _transactionId, int start, int pageLength, object userState) {
            if ((this.TransactionHistoryArchiveProvider_GetByTransactionIdOperationCompleted == null)) {
                this.TransactionHistoryArchiveProvider_GetByTransactionIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransactionHistoryArchiveProvider_GetByTransactionIdOperationCompleted);
            }
            this.InvokeAsync("TransactionHistoryArchiveProvider_GetByTransactionId", new object[] {
                        _transactionId,
                        start,
                        pageLength}, this.TransactionHistoryArchiveProvider_GetByTransactionIdOperationCompleted, userState);
        }
        
        private void OnTransactionHistoryArchiveProvider_GetByTransactionIdOperationCompleted(object arg) {
            if ((this.TransactionHistoryArchiveProvider_GetByTransactionIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransactionHistoryArchiveProvider_GetByTransactionIdCompleted(this, new TransactionHistoryArchiveProvider_GetByTransactionIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TransactionHistoryArchiveProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionHistoryArchive TransactionHistoryArchiveProvider_Insert(TransactionHistoryArchive entity) {
            object[] results = this.Invoke("TransactionHistoryArchiveProvider_Insert", new object[] {
                        entity});
            return ((TransactionHistoryArchive)(results[0]));
        }
        
        /// <remarks/>
        public void TransactionHistoryArchiveProvider_InsertAsync(TransactionHistoryArchive entity) {
            this.TransactionHistoryArchiveProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void TransactionHistoryArchiveProvider_InsertAsync(TransactionHistoryArchive entity, object userState) {
            if ((this.TransactionHistoryArchiveProvider_InsertOperationCompleted == null)) {
                this.TransactionHistoryArchiveProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransactionHistoryArchiveProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("TransactionHistoryArchiveProvider_Insert", new object[] {
                        entity}, this.TransactionHistoryArchiveProvider_InsertOperationCompleted, userState);
        }
        
        private void OnTransactionHistoryArchiveProvider_InsertOperationCompleted(object arg) {
            if ((this.TransactionHistoryArchiveProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransactionHistoryArchiveProvider_InsertCompleted(this, new TransactionHistoryArchiveProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TransactionHistoryArchiveProvider_BulkIns" +
            "ert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TransactionHistoryArchiveProvider_BulkInsert(TransactionHistoryArchive[] entityList) {
            this.Invoke("TransactionHistoryArchiveProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void TransactionHistoryArchiveProvider_BulkInsertAsync(TransactionHistoryArchive[] entityList) {
            this.TransactionHistoryArchiveProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void TransactionHistoryArchiveProvider_BulkInsertAsync(TransactionHistoryArchive[] entityList, object userState) {
            if ((this.TransactionHistoryArchiveProvider_BulkInsertOperationCompleted == null)) {
                this.TransactionHistoryArchiveProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransactionHistoryArchiveProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("TransactionHistoryArchiveProvider_BulkInsert", new object[] {
                        entityList}, this.TransactionHistoryArchiveProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnTransactionHistoryArchiveProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.TransactionHistoryArchiveProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransactionHistoryArchiveProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TransactionHistoryArchiveProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionHistoryArchive TransactionHistoryArchiveProvider_Update(TransactionHistoryArchive entity) {
            object[] results = this.Invoke("TransactionHistoryArchiveProvider_Update", new object[] {
                        entity});
            return ((TransactionHistoryArchive)(results[0]));
        }
        
        /// <remarks/>
        public void TransactionHistoryArchiveProvider_UpdateAsync(TransactionHistoryArchive entity) {
            this.TransactionHistoryArchiveProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void TransactionHistoryArchiveProvider_UpdateAsync(TransactionHistoryArchive entity, object userState) {
            if ((this.TransactionHistoryArchiveProvider_UpdateOperationCompleted == null)) {
                this.TransactionHistoryArchiveProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransactionHistoryArchiveProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("TransactionHistoryArchiveProvider_Update", new object[] {
                        entity}, this.TransactionHistoryArchiveProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnTransactionHistoryArchiveProvider_UpdateOperationCompleted(object arg) {
            if ((this.TransactionHistoryArchiveProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransactionHistoryArchiveProvider_UpdateCompleted(this, new TransactionHistoryArchiveProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductVendorProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ProductVendorProvider_Delete(int _productId, int _vendorId) {
            object[] results = this.Invoke("ProductVendorProvider_Delete", new object[] {
                        _productId,
                        _vendorId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ProductVendorProvider_DeleteAsync(int _productId, int _vendorId) {
            this.ProductVendorProvider_DeleteAsync(_productId, _vendorId, null);
        }
        
        /// <remarks/>
        public void ProductVendorProvider_DeleteAsync(int _productId, int _vendorId, object userState) {
            if ((this.ProductVendorProvider_DeleteOperationCompleted == null)) {
                this.ProductVendorProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductVendorProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("ProductVendorProvider_Delete", new object[] {
                        _productId,
                        _vendorId}, this.ProductVendorProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnProductVendorProvider_DeleteOperationCompleted(object arg) {
            if ((this.ProductVendorProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductVendorProvider_DeleteCompleted(this, new ProductVendorProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductVendorProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductVendor[] ProductVendorProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductVendorProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductVendor[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductVendorProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.ProductVendorProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductVendorProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.ProductVendorProvider_FindOperationCompleted == null)) {
                this.ProductVendorProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductVendorProvider_FindOperationCompleted);
            }
            this.InvokeAsync("ProductVendorProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.ProductVendorProvider_FindOperationCompleted, userState);
        }
        
        private void OnProductVendorProvider_FindOperationCompleted(object arg) {
            if ((this.ProductVendorProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductVendorProvider_FindCompleted(this, new ProductVendorProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductVendorProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductVendor[] ProductVendorProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductVendorProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductVendor[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductVendorProvider_GetAllAsync(int start, int pageLength) {
            this.ProductVendorProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductVendorProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.ProductVendorProvider_GetAllOperationCompleted == null)) {
                this.ProductVendorProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductVendorProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("ProductVendorProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.ProductVendorProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnProductVendorProvider_GetAllOperationCompleted(object arg) {
            if ((this.ProductVendorProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductVendorProvider_GetAllCompleted(this, new ProductVendorProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductVendorProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductVendor[] ProductVendorProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductVendorProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductVendor[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductVendorProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.ProductVendorProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductVendorProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.ProductVendorProvider_GetPagedOperationCompleted == null)) {
                this.ProductVendorProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductVendorProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("ProductVendorProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.ProductVendorProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnProductVendorProvider_GetPagedOperationCompleted(object arg) {
            if ((this.ProductVendorProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductVendorProvider_GetPagedCompleted(this, new ProductVendorProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductVendorProvider_GetByProductId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductVendor[] ProductVendorProvider_GetByProductId(int _productId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductVendorProvider_GetByProductId", new object[] {
                        _productId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductVendor[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductVendorProvider_GetByProductIdAsync(int _productId, int start, int pageLength) {
            this.ProductVendorProvider_GetByProductIdAsync(_productId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductVendorProvider_GetByProductIdAsync(int _productId, int start, int pageLength, object userState) {
            if ((this.ProductVendorProvider_GetByProductIdOperationCompleted == null)) {
                this.ProductVendorProvider_GetByProductIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductVendorProvider_GetByProductIdOperationCompleted);
            }
            this.InvokeAsync("ProductVendorProvider_GetByProductId", new object[] {
                        _productId,
                        start,
                        pageLength}, this.ProductVendorProvider_GetByProductIdOperationCompleted, userState);
        }
        
        private void OnProductVendorProvider_GetByProductIdOperationCompleted(object arg) {
            if ((this.ProductVendorProvider_GetByProductIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductVendorProvider_GetByProductIdCompleted(this, new ProductVendorProvider_GetByProductIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductVendorProvider_GetByUnitMeasureCod" +
            "e", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductVendor[] ProductVendorProvider_GetByUnitMeasureCode(string _unitMeasureCode, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductVendorProvider_GetByUnitMeasureCode", new object[] {
                        _unitMeasureCode,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductVendor[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductVendorProvider_GetByUnitMeasureCodeAsync(string _unitMeasureCode, int start, int pageLength) {
            this.ProductVendorProvider_GetByUnitMeasureCodeAsync(_unitMeasureCode, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductVendorProvider_GetByUnitMeasureCodeAsync(string _unitMeasureCode, int start, int pageLength, object userState) {
            if ((this.ProductVendorProvider_GetByUnitMeasureCodeOperationCompleted == null)) {
                this.ProductVendorProvider_GetByUnitMeasureCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductVendorProvider_GetByUnitMeasureCodeOperationCompleted);
            }
            this.InvokeAsync("ProductVendorProvider_GetByUnitMeasureCode", new object[] {
                        _unitMeasureCode,
                        start,
                        pageLength}, this.ProductVendorProvider_GetByUnitMeasureCodeOperationCompleted, userState);
        }
        
        private void OnProductVendorProvider_GetByUnitMeasureCodeOperationCompleted(object arg) {
            if ((this.ProductVendorProvider_GetByUnitMeasureCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductVendorProvider_GetByUnitMeasureCodeCompleted(this, new ProductVendorProvider_GetByUnitMeasureCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductVendorProvider_GetByVendorId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductVendor[] ProductVendorProvider_GetByVendorId(int _vendorId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductVendorProvider_GetByVendorId", new object[] {
                        _vendorId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductVendor[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductVendorProvider_GetByVendorIdAsync(int _vendorId, int start, int pageLength) {
            this.ProductVendorProvider_GetByVendorIdAsync(_vendorId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductVendorProvider_GetByVendorIdAsync(int _vendorId, int start, int pageLength, object userState) {
            if ((this.ProductVendorProvider_GetByVendorIdOperationCompleted == null)) {
                this.ProductVendorProvider_GetByVendorIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductVendorProvider_GetByVendorIdOperationCompleted);
            }
            this.InvokeAsync("ProductVendorProvider_GetByVendorId", new object[] {
                        _vendorId,
                        start,
                        pageLength}, this.ProductVendorProvider_GetByVendorIdOperationCompleted, userState);
        }
        
        private void OnProductVendorProvider_GetByVendorIdOperationCompleted(object arg) {
            if ((this.ProductVendorProvider_GetByVendorIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductVendorProvider_GetByVendorIdCompleted(this, new ProductVendorProvider_GetByVendorIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductVendorProvider_GetByProductIdVendo" +
            "rId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductVendor ProductVendorProvider_GetByProductIdVendorId(int _productId, int _vendorId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductVendorProvider_GetByProductIdVendorId", new object[] {
                        _productId,
                        _vendorId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductVendor)(results[0]));
        }
        
        /// <remarks/>
        public void ProductVendorProvider_GetByProductIdVendorIdAsync(int _productId, int _vendorId, int start, int pageLength) {
            this.ProductVendorProvider_GetByProductIdVendorIdAsync(_productId, _vendorId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductVendorProvider_GetByProductIdVendorIdAsync(int _productId, int _vendorId, int start, int pageLength, object userState) {
            if ((this.ProductVendorProvider_GetByProductIdVendorIdOperationCompleted == null)) {
                this.ProductVendorProvider_GetByProductIdVendorIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductVendorProvider_GetByProductIdVendorIdOperationCompleted);
            }
            this.InvokeAsync("ProductVendorProvider_GetByProductIdVendorId", new object[] {
                        _productId,
                        _vendorId,
                        start,
                        pageLength}, this.ProductVendorProvider_GetByProductIdVendorIdOperationCompleted, userState);
        }
        
        private void OnProductVendorProvider_GetByProductIdVendorIdOperationCompleted(object arg) {
            if ((this.ProductVendorProvider_GetByProductIdVendorIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductVendorProvider_GetByProductIdVendorIdCompleted(this, new ProductVendorProvider_GetByProductIdVendorIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductVendorProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductVendor ProductVendorProvider_Insert(ProductVendor entity) {
            object[] results = this.Invoke("ProductVendorProvider_Insert", new object[] {
                        entity});
            return ((ProductVendor)(results[0]));
        }
        
        /// <remarks/>
        public void ProductVendorProvider_InsertAsync(ProductVendor entity) {
            this.ProductVendorProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void ProductVendorProvider_InsertAsync(ProductVendor entity, object userState) {
            if ((this.ProductVendorProvider_InsertOperationCompleted == null)) {
                this.ProductVendorProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductVendorProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("ProductVendorProvider_Insert", new object[] {
                        entity}, this.ProductVendorProvider_InsertOperationCompleted, userState);
        }
        
        private void OnProductVendorProvider_InsertOperationCompleted(object arg) {
            if ((this.ProductVendorProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductVendorProvider_InsertCompleted(this, new ProductVendorProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductVendorProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ProductVendorProvider_BulkInsert(ProductVendor[] entityList) {
            this.Invoke("ProductVendorProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void ProductVendorProvider_BulkInsertAsync(ProductVendor[] entityList) {
            this.ProductVendorProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void ProductVendorProvider_BulkInsertAsync(ProductVendor[] entityList, object userState) {
            if ((this.ProductVendorProvider_BulkInsertOperationCompleted == null)) {
                this.ProductVendorProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductVendorProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("ProductVendorProvider_BulkInsert", new object[] {
                        entityList}, this.ProductVendorProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnProductVendorProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.ProductVendorProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductVendorProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductVendorProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductVendor ProductVendorProvider_Update(ProductVendor entity) {
            object[] results = this.Invoke("ProductVendorProvider_Update", new object[] {
                        entity});
            return ((ProductVendor)(results[0]));
        }
        
        /// <remarks/>
        public void ProductVendorProvider_UpdateAsync(ProductVendor entity) {
            this.ProductVendorProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void ProductVendorProvider_UpdateAsync(ProductVendor entity, object userState) {
            if ((this.ProductVendorProvider_UpdateOperationCompleted == null)) {
                this.ProductVendorProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductVendorProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("ProductVendorProvider_Update", new object[] {
                        entity}, this.ProductVendorProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnProductVendorProvider_UpdateOperationCompleted(object arg) {
            if ((this.ProductVendorProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductVendorProvider_UpdateCompleted(this, new ProductVendorProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/PurchaseOrderHeaderProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PurchaseOrderHeaderProvider_Delete(int _purchaseOrderId) {
            object[] results = this.Invoke("PurchaseOrderHeaderProvider_Delete", new object[] {
                        _purchaseOrderId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PurchaseOrderHeaderProvider_DeleteAsync(int _purchaseOrderId) {
            this.PurchaseOrderHeaderProvider_DeleteAsync(_purchaseOrderId, null);
        }
        
        /// <remarks/>
        public void PurchaseOrderHeaderProvider_DeleteAsync(int _purchaseOrderId, object userState) {
            if ((this.PurchaseOrderHeaderProvider_DeleteOperationCompleted == null)) {
                this.PurchaseOrderHeaderProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurchaseOrderHeaderProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("PurchaseOrderHeaderProvider_Delete", new object[] {
                        _purchaseOrderId}, this.PurchaseOrderHeaderProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnPurchaseOrderHeaderProvider_DeleteOperationCompleted(object arg) {
            if ((this.PurchaseOrderHeaderProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurchaseOrderHeaderProvider_DeleteCompleted(this, new PurchaseOrderHeaderProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/PurchaseOrderHeaderProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PurchaseOrderHeader[] PurchaseOrderHeaderProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("PurchaseOrderHeaderProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((PurchaseOrderHeader[])(results[0]));
        }
        
        /// <remarks/>
        public void PurchaseOrderHeaderProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.PurchaseOrderHeaderProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void PurchaseOrderHeaderProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.PurchaseOrderHeaderProvider_FindOperationCompleted == null)) {
                this.PurchaseOrderHeaderProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurchaseOrderHeaderProvider_FindOperationCompleted);
            }
            this.InvokeAsync("PurchaseOrderHeaderProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.PurchaseOrderHeaderProvider_FindOperationCompleted, userState);
        }
        
        private void OnPurchaseOrderHeaderProvider_FindOperationCompleted(object arg) {
            if ((this.PurchaseOrderHeaderProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurchaseOrderHeaderProvider_FindCompleted(this, new PurchaseOrderHeaderProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/PurchaseOrderHeaderProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PurchaseOrderHeader[] PurchaseOrderHeaderProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("PurchaseOrderHeaderProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((PurchaseOrderHeader[])(results[0]));
        }
        
        /// <remarks/>
        public void PurchaseOrderHeaderProvider_GetAllAsync(int start, int pageLength) {
            this.PurchaseOrderHeaderProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void PurchaseOrderHeaderProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.PurchaseOrderHeaderProvider_GetAllOperationCompleted == null)) {
                this.PurchaseOrderHeaderProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurchaseOrderHeaderProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("PurchaseOrderHeaderProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.PurchaseOrderHeaderProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnPurchaseOrderHeaderProvider_GetAllOperationCompleted(object arg) {
            if ((this.PurchaseOrderHeaderProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurchaseOrderHeaderProvider_GetAllCompleted(this, new PurchaseOrderHeaderProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/PurchaseOrderHeaderProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PurchaseOrderHeader[] PurchaseOrderHeaderProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("PurchaseOrderHeaderProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((PurchaseOrderHeader[])(results[0]));
        }
        
        /// <remarks/>
        public void PurchaseOrderHeaderProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.PurchaseOrderHeaderProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void PurchaseOrderHeaderProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.PurchaseOrderHeaderProvider_GetPagedOperationCompleted == null)) {
                this.PurchaseOrderHeaderProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurchaseOrderHeaderProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("PurchaseOrderHeaderProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.PurchaseOrderHeaderProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnPurchaseOrderHeaderProvider_GetPagedOperationCompleted(object arg) {
            if ((this.PurchaseOrderHeaderProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurchaseOrderHeaderProvider_GetPagedCompleted(this, new PurchaseOrderHeaderProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/PurchaseOrderHeaderProvider_GetByShipMeth" +
            "odId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PurchaseOrderHeader[] PurchaseOrderHeaderProvider_GetByShipMethodId(int _shipMethodId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("PurchaseOrderHeaderProvider_GetByShipMethodId", new object[] {
                        _shipMethodId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((PurchaseOrderHeader[])(results[0]));
        }
        
        /// <remarks/>
        public void PurchaseOrderHeaderProvider_GetByShipMethodIdAsync(int _shipMethodId, int start, int pageLength) {
            this.PurchaseOrderHeaderProvider_GetByShipMethodIdAsync(_shipMethodId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void PurchaseOrderHeaderProvider_GetByShipMethodIdAsync(int _shipMethodId, int start, int pageLength, object userState) {
            if ((this.PurchaseOrderHeaderProvider_GetByShipMethodIdOperationCompleted == null)) {
                this.PurchaseOrderHeaderProvider_GetByShipMethodIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurchaseOrderHeaderProvider_GetByShipMethodIdOperationCompleted);
            }
            this.InvokeAsync("PurchaseOrderHeaderProvider_GetByShipMethodId", new object[] {
                        _shipMethodId,
                        start,
                        pageLength}, this.PurchaseOrderHeaderProvider_GetByShipMethodIdOperationCompleted, userState);
        }
        
        private void OnPurchaseOrderHeaderProvider_GetByShipMethodIdOperationCompleted(object arg) {
            if ((this.PurchaseOrderHeaderProvider_GetByShipMethodIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurchaseOrderHeaderProvider_GetByShipMethodIdCompleted(this, new PurchaseOrderHeaderProvider_GetByShipMethodIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/PurchaseOrderHeaderProvider_GetByEmployee" +
            "Id", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PurchaseOrderHeader[] PurchaseOrderHeaderProvider_GetByEmployeeId(int _employeeId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("PurchaseOrderHeaderProvider_GetByEmployeeId", new object[] {
                        _employeeId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((PurchaseOrderHeader[])(results[0]));
        }
        
        /// <remarks/>
        public void PurchaseOrderHeaderProvider_GetByEmployeeIdAsync(int _employeeId, int start, int pageLength) {
            this.PurchaseOrderHeaderProvider_GetByEmployeeIdAsync(_employeeId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void PurchaseOrderHeaderProvider_GetByEmployeeIdAsync(int _employeeId, int start, int pageLength, object userState) {
            if ((this.PurchaseOrderHeaderProvider_GetByEmployeeIdOperationCompleted == null)) {
                this.PurchaseOrderHeaderProvider_GetByEmployeeIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurchaseOrderHeaderProvider_GetByEmployeeIdOperationCompleted);
            }
            this.InvokeAsync("PurchaseOrderHeaderProvider_GetByEmployeeId", new object[] {
                        _employeeId,
                        start,
                        pageLength}, this.PurchaseOrderHeaderProvider_GetByEmployeeIdOperationCompleted, userState);
        }
        
        private void OnPurchaseOrderHeaderProvider_GetByEmployeeIdOperationCompleted(object arg) {
            if ((this.PurchaseOrderHeaderProvider_GetByEmployeeIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurchaseOrderHeaderProvider_GetByEmployeeIdCompleted(this, new PurchaseOrderHeaderProvider_GetByEmployeeIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/PurchaseOrderHeaderProvider_GetByVendorId" +
            "", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PurchaseOrderHeader[] PurchaseOrderHeaderProvider_GetByVendorId(int _vendorId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("PurchaseOrderHeaderProvider_GetByVendorId", new object[] {
                        _vendorId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((PurchaseOrderHeader[])(results[0]));
        }
        
        /// <remarks/>
        public void PurchaseOrderHeaderProvider_GetByVendorIdAsync(int _vendorId, int start, int pageLength) {
            this.PurchaseOrderHeaderProvider_GetByVendorIdAsync(_vendorId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void PurchaseOrderHeaderProvider_GetByVendorIdAsync(int _vendorId, int start, int pageLength, object userState) {
            if ((this.PurchaseOrderHeaderProvider_GetByVendorIdOperationCompleted == null)) {
                this.PurchaseOrderHeaderProvider_GetByVendorIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurchaseOrderHeaderProvider_GetByVendorIdOperationCompleted);
            }
            this.InvokeAsync("PurchaseOrderHeaderProvider_GetByVendorId", new object[] {
                        _vendorId,
                        start,
                        pageLength}, this.PurchaseOrderHeaderProvider_GetByVendorIdOperationCompleted, userState);
        }
        
        private void OnPurchaseOrderHeaderProvider_GetByVendorIdOperationCompleted(object arg) {
            if ((this.PurchaseOrderHeaderProvider_GetByVendorIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurchaseOrderHeaderProvider_GetByVendorIdCompleted(this, new PurchaseOrderHeaderProvider_GetByVendorIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/PurchaseOrderHeaderProvider_GetByPurchase" +
            "OrderId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PurchaseOrderHeader PurchaseOrderHeaderProvider_GetByPurchaseOrderId(int _purchaseOrderId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("PurchaseOrderHeaderProvider_GetByPurchaseOrderId", new object[] {
                        _purchaseOrderId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((PurchaseOrderHeader)(results[0]));
        }
        
        /// <remarks/>
        public void PurchaseOrderHeaderProvider_GetByPurchaseOrderIdAsync(int _purchaseOrderId, int start, int pageLength) {
            this.PurchaseOrderHeaderProvider_GetByPurchaseOrderIdAsync(_purchaseOrderId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void PurchaseOrderHeaderProvider_GetByPurchaseOrderIdAsync(int _purchaseOrderId, int start, int pageLength, object userState) {
            if ((this.PurchaseOrderHeaderProvider_GetByPurchaseOrderIdOperationCompleted == null)) {
                this.PurchaseOrderHeaderProvider_GetByPurchaseOrderIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurchaseOrderHeaderProvider_GetByPurchaseOrderIdOperationCompleted);
            }
            this.InvokeAsync("PurchaseOrderHeaderProvider_GetByPurchaseOrderId", new object[] {
                        _purchaseOrderId,
                        start,
                        pageLength}, this.PurchaseOrderHeaderProvider_GetByPurchaseOrderIdOperationCompleted, userState);
        }
        
        private void OnPurchaseOrderHeaderProvider_GetByPurchaseOrderIdOperationCompleted(object arg) {
            if ((this.PurchaseOrderHeaderProvider_GetByPurchaseOrderIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurchaseOrderHeaderProvider_GetByPurchaseOrderIdCompleted(this, new PurchaseOrderHeaderProvider_GetByPurchaseOrderIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/PurchaseOrderHeaderProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PurchaseOrderHeader PurchaseOrderHeaderProvider_Insert(PurchaseOrderHeader entity) {
            object[] results = this.Invoke("PurchaseOrderHeaderProvider_Insert", new object[] {
                        entity});
            return ((PurchaseOrderHeader)(results[0]));
        }
        
        /// <remarks/>
        public void PurchaseOrderHeaderProvider_InsertAsync(PurchaseOrderHeader entity) {
            this.PurchaseOrderHeaderProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void PurchaseOrderHeaderProvider_InsertAsync(PurchaseOrderHeader entity, object userState) {
            if ((this.PurchaseOrderHeaderProvider_InsertOperationCompleted == null)) {
                this.PurchaseOrderHeaderProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurchaseOrderHeaderProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("PurchaseOrderHeaderProvider_Insert", new object[] {
                        entity}, this.PurchaseOrderHeaderProvider_InsertOperationCompleted, userState);
        }
        
        private void OnPurchaseOrderHeaderProvider_InsertOperationCompleted(object arg) {
            if ((this.PurchaseOrderHeaderProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurchaseOrderHeaderProvider_InsertCompleted(this, new PurchaseOrderHeaderProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/PurchaseOrderHeaderProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PurchaseOrderHeaderProvider_BulkInsert(PurchaseOrderHeader[] entityList) {
            this.Invoke("PurchaseOrderHeaderProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void PurchaseOrderHeaderProvider_BulkInsertAsync(PurchaseOrderHeader[] entityList) {
            this.PurchaseOrderHeaderProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void PurchaseOrderHeaderProvider_BulkInsertAsync(PurchaseOrderHeader[] entityList, object userState) {
            if ((this.PurchaseOrderHeaderProvider_BulkInsertOperationCompleted == null)) {
                this.PurchaseOrderHeaderProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurchaseOrderHeaderProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("PurchaseOrderHeaderProvider_BulkInsert", new object[] {
                        entityList}, this.PurchaseOrderHeaderProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnPurchaseOrderHeaderProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.PurchaseOrderHeaderProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurchaseOrderHeaderProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/PurchaseOrderHeaderProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PurchaseOrderHeader PurchaseOrderHeaderProvider_Update(PurchaseOrderHeader entity) {
            object[] results = this.Invoke("PurchaseOrderHeaderProvider_Update", new object[] {
                        entity});
            return ((PurchaseOrderHeader)(results[0]));
        }
        
        /// <remarks/>
        public void PurchaseOrderHeaderProvider_UpdateAsync(PurchaseOrderHeader entity) {
            this.PurchaseOrderHeaderProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void PurchaseOrderHeaderProvider_UpdateAsync(PurchaseOrderHeader entity, object userState) {
            if ((this.PurchaseOrderHeaderProvider_UpdateOperationCompleted == null)) {
                this.PurchaseOrderHeaderProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurchaseOrderHeaderProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("PurchaseOrderHeaderProvider_Update", new object[] {
                        entity}, this.PurchaseOrderHeaderProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnPurchaseOrderHeaderProvider_UpdateOperationCompleted(object arg) {
            if ((this.PurchaseOrderHeaderProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurchaseOrderHeaderProvider_UpdateCompleted(this, new PurchaseOrderHeaderProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/AddressTypeProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddressTypeProvider_Delete(int _addressTypeId) {
            object[] results = this.Invoke("AddressTypeProvider_Delete", new object[] {
                        _addressTypeId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddressTypeProvider_DeleteAsync(int _addressTypeId) {
            this.AddressTypeProvider_DeleteAsync(_addressTypeId, null);
        }
        
        /// <remarks/>
        public void AddressTypeProvider_DeleteAsync(int _addressTypeId, object userState) {
            if ((this.AddressTypeProvider_DeleteOperationCompleted == null)) {
                this.AddressTypeProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddressTypeProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("AddressTypeProvider_Delete", new object[] {
                        _addressTypeId}, this.AddressTypeProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnAddressTypeProvider_DeleteOperationCompleted(object arg) {
            if ((this.AddressTypeProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddressTypeProvider_DeleteCompleted(this, new AddressTypeProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/AddressTypeProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AddressType[] AddressTypeProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("AddressTypeProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((AddressType[])(results[0]));
        }
        
        /// <remarks/>
        public void AddressTypeProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.AddressTypeProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void AddressTypeProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.AddressTypeProvider_FindOperationCompleted == null)) {
                this.AddressTypeProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddressTypeProvider_FindOperationCompleted);
            }
            this.InvokeAsync("AddressTypeProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.AddressTypeProvider_FindOperationCompleted, userState);
        }
        
        private void OnAddressTypeProvider_FindOperationCompleted(object arg) {
            if ((this.AddressTypeProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddressTypeProvider_FindCompleted(this, new AddressTypeProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/AddressTypeProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AddressType[] AddressTypeProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("AddressTypeProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((AddressType[])(results[0]));
        }
        
        /// <remarks/>
        public void AddressTypeProvider_GetAllAsync(int start, int pageLength) {
            this.AddressTypeProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void AddressTypeProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.AddressTypeProvider_GetAllOperationCompleted == null)) {
                this.AddressTypeProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddressTypeProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("AddressTypeProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.AddressTypeProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnAddressTypeProvider_GetAllOperationCompleted(object arg) {
            if ((this.AddressTypeProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddressTypeProvider_GetAllCompleted(this, new AddressTypeProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/AddressTypeProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AddressType[] AddressTypeProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("AddressTypeProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((AddressType[])(results[0]));
        }
        
        /// <remarks/>
        public void AddressTypeProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.AddressTypeProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void AddressTypeProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.AddressTypeProvider_GetPagedOperationCompleted == null)) {
                this.AddressTypeProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddressTypeProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("AddressTypeProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.AddressTypeProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnAddressTypeProvider_GetPagedOperationCompleted(object arg) {
            if ((this.AddressTypeProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddressTypeProvider_GetPagedCompleted(this, new AddressTypeProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/AddressTypeProvider_GetByName", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AddressType AddressTypeProvider_GetByName(string _name, int start, int pageLength, out int count) {
            object[] results = this.Invoke("AddressTypeProvider_GetByName", new object[] {
                        _name,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((AddressType)(results[0]));
        }
        
        /// <remarks/>
        public void AddressTypeProvider_GetByNameAsync(string _name, int start, int pageLength) {
            this.AddressTypeProvider_GetByNameAsync(_name, start, pageLength, null);
        }
        
        /// <remarks/>
        public void AddressTypeProvider_GetByNameAsync(string _name, int start, int pageLength, object userState) {
            if ((this.AddressTypeProvider_GetByNameOperationCompleted == null)) {
                this.AddressTypeProvider_GetByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddressTypeProvider_GetByNameOperationCompleted);
            }
            this.InvokeAsync("AddressTypeProvider_GetByName", new object[] {
                        _name,
                        start,
                        pageLength}, this.AddressTypeProvider_GetByNameOperationCompleted, userState);
        }
        
        private void OnAddressTypeProvider_GetByNameOperationCompleted(object arg) {
            if ((this.AddressTypeProvider_GetByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddressTypeProvider_GetByNameCompleted(this, new AddressTypeProvider_GetByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/AddressTypeProvider_GetByRowguid", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AddressType AddressTypeProvider_GetByRowguid(System.Guid _rowguid, int start, int pageLength, out int count) {
            object[] results = this.Invoke("AddressTypeProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((AddressType)(results[0]));
        }
        
        /// <remarks/>
        public void AddressTypeProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength) {
            this.AddressTypeProvider_GetByRowguidAsync(_rowguid, start, pageLength, null);
        }
        
        /// <remarks/>
        public void AddressTypeProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength, object userState) {
            if ((this.AddressTypeProvider_GetByRowguidOperationCompleted == null)) {
                this.AddressTypeProvider_GetByRowguidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddressTypeProvider_GetByRowguidOperationCompleted);
            }
            this.InvokeAsync("AddressTypeProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength}, this.AddressTypeProvider_GetByRowguidOperationCompleted, userState);
        }
        
        private void OnAddressTypeProvider_GetByRowguidOperationCompleted(object arg) {
            if ((this.AddressTypeProvider_GetByRowguidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddressTypeProvider_GetByRowguidCompleted(this, new AddressTypeProvider_GetByRowguidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/AddressTypeProvider_GetByAddressTypeId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AddressType AddressTypeProvider_GetByAddressTypeId(int _addressTypeId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("AddressTypeProvider_GetByAddressTypeId", new object[] {
                        _addressTypeId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((AddressType)(results[0]));
        }
        
        /// <remarks/>
        public void AddressTypeProvider_GetByAddressTypeIdAsync(int _addressTypeId, int start, int pageLength) {
            this.AddressTypeProvider_GetByAddressTypeIdAsync(_addressTypeId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void AddressTypeProvider_GetByAddressTypeIdAsync(int _addressTypeId, int start, int pageLength, object userState) {
            if ((this.AddressTypeProvider_GetByAddressTypeIdOperationCompleted == null)) {
                this.AddressTypeProvider_GetByAddressTypeIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddressTypeProvider_GetByAddressTypeIdOperationCompleted);
            }
            this.InvokeAsync("AddressTypeProvider_GetByAddressTypeId", new object[] {
                        _addressTypeId,
                        start,
                        pageLength}, this.AddressTypeProvider_GetByAddressTypeIdOperationCompleted, userState);
        }
        
        private void OnAddressTypeProvider_GetByAddressTypeIdOperationCompleted(object arg) {
            if ((this.AddressTypeProvider_GetByAddressTypeIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddressTypeProvider_GetByAddressTypeIdCompleted(this, new AddressTypeProvider_GetByAddressTypeIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/AddressTypeProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AddressType AddressTypeProvider_Insert(AddressType entity) {
            object[] results = this.Invoke("AddressTypeProvider_Insert", new object[] {
                        entity});
            return ((AddressType)(results[0]));
        }
        
        /// <remarks/>
        public void AddressTypeProvider_InsertAsync(AddressType entity) {
            this.AddressTypeProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void AddressTypeProvider_InsertAsync(AddressType entity, object userState) {
            if ((this.AddressTypeProvider_InsertOperationCompleted == null)) {
                this.AddressTypeProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddressTypeProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("AddressTypeProvider_Insert", new object[] {
                        entity}, this.AddressTypeProvider_InsertOperationCompleted, userState);
        }
        
        private void OnAddressTypeProvider_InsertOperationCompleted(object arg) {
            if ((this.AddressTypeProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddressTypeProvider_InsertCompleted(this, new AddressTypeProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/AddressTypeProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddressTypeProvider_BulkInsert(AddressType[] entityList) {
            this.Invoke("AddressTypeProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void AddressTypeProvider_BulkInsertAsync(AddressType[] entityList) {
            this.AddressTypeProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void AddressTypeProvider_BulkInsertAsync(AddressType[] entityList, object userState) {
            if ((this.AddressTypeProvider_BulkInsertOperationCompleted == null)) {
                this.AddressTypeProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddressTypeProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("AddressTypeProvider_BulkInsert", new object[] {
                        entityList}, this.AddressTypeProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnAddressTypeProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.AddressTypeProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddressTypeProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/AddressTypeProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AddressType AddressTypeProvider_Update(AddressType entity) {
            object[] results = this.Invoke("AddressTypeProvider_Update", new object[] {
                        entity});
            return ((AddressType)(results[0]));
        }
        
        /// <remarks/>
        public void AddressTypeProvider_UpdateAsync(AddressType entity) {
            this.AddressTypeProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void AddressTypeProvider_UpdateAsync(AddressType entity, object userState) {
            if ((this.AddressTypeProvider_UpdateOperationCompleted == null)) {
                this.AddressTypeProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddressTypeProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("AddressTypeProvider_Update", new object[] {
                        entity}, this.AddressTypeProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnAddressTypeProvider_UpdateOperationCompleted(object arg) {
            if ((this.AddressTypeProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddressTypeProvider_UpdateCompleted(this, new AddressTypeProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/WorkOrderRoutingProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool WorkOrderRoutingProvider_Delete(int _workOrderId, int _productId, short _operationSequence) {
            object[] results = this.Invoke("WorkOrderRoutingProvider_Delete", new object[] {
                        _workOrderId,
                        _productId,
                        _operationSequence});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WorkOrderRoutingProvider_DeleteAsync(int _workOrderId, int _productId, short _operationSequence) {
            this.WorkOrderRoutingProvider_DeleteAsync(_workOrderId, _productId, _operationSequence, null);
        }
        
        /// <remarks/>
        public void WorkOrderRoutingProvider_DeleteAsync(int _workOrderId, int _productId, short _operationSequence, object userState) {
            if ((this.WorkOrderRoutingProvider_DeleteOperationCompleted == null)) {
                this.WorkOrderRoutingProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkOrderRoutingProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("WorkOrderRoutingProvider_Delete", new object[] {
                        _workOrderId,
                        _productId,
                        _operationSequence}, this.WorkOrderRoutingProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnWorkOrderRoutingProvider_DeleteOperationCompleted(object arg) {
            if ((this.WorkOrderRoutingProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkOrderRoutingProvider_DeleteCompleted(this, new WorkOrderRoutingProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/WorkOrderRoutingProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WorkOrderRouting[] WorkOrderRoutingProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("WorkOrderRoutingProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((WorkOrderRouting[])(results[0]));
        }
        
        /// <remarks/>
        public void WorkOrderRoutingProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.WorkOrderRoutingProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void WorkOrderRoutingProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.WorkOrderRoutingProvider_FindOperationCompleted == null)) {
                this.WorkOrderRoutingProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkOrderRoutingProvider_FindOperationCompleted);
            }
            this.InvokeAsync("WorkOrderRoutingProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.WorkOrderRoutingProvider_FindOperationCompleted, userState);
        }
        
        private void OnWorkOrderRoutingProvider_FindOperationCompleted(object arg) {
            if ((this.WorkOrderRoutingProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkOrderRoutingProvider_FindCompleted(this, new WorkOrderRoutingProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/WorkOrderRoutingProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WorkOrderRouting[] WorkOrderRoutingProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("WorkOrderRoutingProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((WorkOrderRouting[])(results[0]));
        }
        
        /// <remarks/>
        public void WorkOrderRoutingProvider_GetAllAsync(int start, int pageLength) {
            this.WorkOrderRoutingProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void WorkOrderRoutingProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.WorkOrderRoutingProvider_GetAllOperationCompleted == null)) {
                this.WorkOrderRoutingProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkOrderRoutingProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("WorkOrderRoutingProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.WorkOrderRoutingProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnWorkOrderRoutingProvider_GetAllOperationCompleted(object arg) {
            if ((this.WorkOrderRoutingProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkOrderRoutingProvider_GetAllCompleted(this, new WorkOrderRoutingProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/WorkOrderRoutingProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WorkOrderRouting[] WorkOrderRoutingProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("WorkOrderRoutingProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((WorkOrderRouting[])(results[0]));
        }
        
        /// <remarks/>
        public void WorkOrderRoutingProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.WorkOrderRoutingProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void WorkOrderRoutingProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.WorkOrderRoutingProvider_GetPagedOperationCompleted == null)) {
                this.WorkOrderRoutingProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkOrderRoutingProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("WorkOrderRoutingProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.WorkOrderRoutingProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnWorkOrderRoutingProvider_GetPagedOperationCompleted(object arg) {
            if ((this.WorkOrderRoutingProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkOrderRoutingProvider_GetPagedCompleted(this, new WorkOrderRoutingProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/WorkOrderRoutingProvider_GetByLocationId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WorkOrderRouting[] WorkOrderRoutingProvider_GetByLocationId(short _locationId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("WorkOrderRoutingProvider_GetByLocationId", new object[] {
                        _locationId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((WorkOrderRouting[])(results[0]));
        }
        
        /// <remarks/>
        public void WorkOrderRoutingProvider_GetByLocationIdAsync(short _locationId, int start, int pageLength) {
            this.WorkOrderRoutingProvider_GetByLocationIdAsync(_locationId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void WorkOrderRoutingProvider_GetByLocationIdAsync(short _locationId, int start, int pageLength, object userState) {
            if ((this.WorkOrderRoutingProvider_GetByLocationIdOperationCompleted == null)) {
                this.WorkOrderRoutingProvider_GetByLocationIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkOrderRoutingProvider_GetByLocationIdOperationCompleted);
            }
            this.InvokeAsync("WorkOrderRoutingProvider_GetByLocationId", new object[] {
                        _locationId,
                        start,
                        pageLength}, this.WorkOrderRoutingProvider_GetByLocationIdOperationCompleted, userState);
        }
        
        private void OnWorkOrderRoutingProvider_GetByLocationIdOperationCompleted(object arg) {
            if ((this.WorkOrderRoutingProvider_GetByLocationIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkOrderRoutingProvider_GetByLocationIdCompleted(this, new WorkOrderRoutingProvider_GetByLocationIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/WorkOrderRoutingProvider_GetByWorkOrderId" +
            "", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WorkOrderRouting[] WorkOrderRoutingProvider_GetByWorkOrderId(int _workOrderId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("WorkOrderRoutingProvider_GetByWorkOrderId", new object[] {
                        _workOrderId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((WorkOrderRouting[])(results[0]));
        }
        
        /// <remarks/>
        public void WorkOrderRoutingProvider_GetByWorkOrderIdAsync(int _workOrderId, int start, int pageLength) {
            this.WorkOrderRoutingProvider_GetByWorkOrderIdAsync(_workOrderId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void WorkOrderRoutingProvider_GetByWorkOrderIdAsync(int _workOrderId, int start, int pageLength, object userState) {
            if ((this.WorkOrderRoutingProvider_GetByWorkOrderIdOperationCompleted == null)) {
                this.WorkOrderRoutingProvider_GetByWorkOrderIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkOrderRoutingProvider_GetByWorkOrderIdOperationCompleted);
            }
            this.InvokeAsync("WorkOrderRoutingProvider_GetByWorkOrderId", new object[] {
                        _workOrderId,
                        start,
                        pageLength}, this.WorkOrderRoutingProvider_GetByWorkOrderIdOperationCompleted, userState);
        }
        
        private void OnWorkOrderRoutingProvider_GetByWorkOrderIdOperationCompleted(object arg) {
            if ((this.WorkOrderRoutingProvider_GetByWorkOrderIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkOrderRoutingProvider_GetByWorkOrderIdCompleted(this, new WorkOrderRoutingProvider_GetByWorkOrderIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/WorkOrderRoutingProvider_GetByProductId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WorkOrderRouting[] WorkOrderRoutingProvider_GetByProductId(int _productId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("WorkOrderRoutingProvider_GetByProductId", new object[] {
                        _productId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((WorkOrderRouting[])(results[0]));
        }
        
        /// <remarks/>
        public void WorkOrderRoutingProvider_GetByProductIdAsync(int _productId, int start, int pageLength) {
            this.WorkOrderRoutingProvider_GetByProductIdAsync(_productId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void WorkOrderRoutingProvider_GetByProductIdAsync(int _productId, int start, int pageLength, object userState) {
            if ((this.WorkOrderRoutingProvider_GetByProductIdOperationCompleted == null)) {
                this.WorkOrderRoutingProvider_GetByProductIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkOrderRoutingProvider_GetByProductIdOperationCompleted);
            }
            this.InvokeAsync("WorkOrderRoutingProvider_GetByProductId", new object[] {
                        _productId,
                        start,
                        pageLength}, this.WorkOrderRoutingProvider_GetByProductIdOperationCompleted, userState);
        }
        
        private void OnWorkOrderRoutingProvider_GetByProductIdOperationCompleted(object arg) {
            if ((this.WorkOrderRoutingProvider_GetByProductIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkOrderRoutingProvider_GetByProductIdCompleted(this, new WorkOrderRoutingProvider_GetByProductIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/WorkOrderRoutingProvider_GetByWorkOrderId" +
            "ProductIdOperationSequence", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WorkOrderRouting WorkOrderRoutingProvider_GetByWorkOrderIdProductIdOperationSequence(int _workOrderId, int _productId, short _operationSequence, int start, int pageLength, out int count) {
            object[] results = this.Invoke("WorkOrderRoutingProvider_GetByWorkOrderIdProductIdOperationSequence", new object[] {
                        _workOrderId,
                        _productId,
                        _operationSequence,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((WorkOrderRouting)(results[0]));
        }
        
        /// <remarks/>
        public void WorkOrderRoutingProvider_GetByWorkOrderIdProductIdOperationSequenceAsync(int _workOrderId, int _productId, short _operationSequence, int start, int pageLength) {
            this.WorkOrderRoutingProvider_GetByWorkOrderIdProductIdOperationSequenceAsync(_workOrderId, _productId, _operationSequence, start, pageLength, null);
        }
        
        /// <remarks/>
        public void WorkOrderRoutingProvider_GetByWorkOrderIdProductIdOperationSequenceAsync(int _workOrderId, int _productId, short _operationSequence, int start, int pageLength, object userState) {
            if ((this.WorkOrderRoutingProvider_GetByWorkOrderIdProductIdOperationSequenceOperationCompleted == null)) {
                this.WorkOrderRoutingProvider_GetByWorkOrderIdProductIdOperationSequenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkOrderRoutingProvider_GetByWorkOrderIdProductIdOperationSequenceOperationCompleted);
            }
            this.InvokeAsync("WorkOrderRoutingProvider_GetByWorkOrderIdProductIdOperationSequence", new object[] {
                        _workOrderId,
                        _productId,
                        _operationSequence,
                        start,
                        pageLength}, this.WorkOrderRoutingProvider_GetByWorkOrderIdProductIdOperationSequenceOperationCompleted, userState);
        }
        
        private void OnWorkOrderRoutingProvider_GetByWorkOrderIdProductIdOperationSequenceOperationCompleted(object arg) {
            if ((this.WorkOrderRoutingProvider_GetByWorkOrderIdProductIdOperationSequenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkOrderRoutingProvider_GetByWorkOrderIdProductIdOperationSequenceCompleted(this, new WorkOrderRoutingProvider_GetByWorkOrderIdProductIdOperationSequenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/WorkOrderRoutingProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WorkOrderRouting WorkOrderRoutingProvider_Insert(WorkOrderRouting entity) {
            object[] results = this.Invoke("WorkOrderRoutingProvider_Insert", new object[] {
                        entity});
            return ((WorkOrderRouting)(results[0]));
        }
        
        /// <remarks/>
        public void WorkOrderRoutingProvider_InsertAsync(WorkOrderRouting entity) {
            this.WorkOrderRoutingProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void WorkOrderRoutingProvider_InsertAsync(WorkOrderRouting entity, object userState) {
            if ((this.WorkOrderRoutingProvider_InsertOperationCompleted == null)) {
                this.WorkOrderRoutingProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkOrderRoutingProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("WorkOrderRoutingProvider_Insert", new object[] {
                        entity}, this.WorkOrderRoutingProvider_InsertOperationCompleted, userState);
        }
        
        private void OnWorkOrderRoutingProvider_InsertOperationCompleted(object arg) {
            if ((this.WorkOrderRoutingProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkOrderRoutingProvider_InsertCompleted(this, new WorkOrderRoutingProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/WorkOrderRoutingProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WorkOrderRoutingProvider_BulkInsert(WorkOrderRouting[] entityList) {
            this.Invoke("WorkOrderRoutingProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void WorkOrderRoutingProvider_BulkInsertAsync(WorkOrderRouting[] entityList) {
            this.WorkOrderRoutingProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void WorkOrderRoutingProvider_BulkInsertAsync(WorkOrderRouting[] entityList, object userState) {
            if ((this.WorkOrderRoutingProvider_BulkInsertOperationCompleted == null)) {
                this.WorkOrderRoutingProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkOrderRoutingProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("WorkOrderRoutingProvider_BulkInsert", new object[] {
                        entityList}, this.WorkOrderRoutingProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnWorkOrderRoutingProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.WorkOrderRoutingProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkOrderRoutingProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/WorkOrderRoutingProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WorkOrderRouting WorkOrderRoutingProvider_Update(WorkOrderRouting entity) {
            object[] results = this.Invoke("WorkOrderRoutingProvider_Update", new object[] {
                        entity});
            return ((WorkOrderRouting)(results[0]));
        }
        
        /// <remarks/>
        public void WorkOrderRoutingProvider_UpdateAsync(WorkOrderRouting entity) {
            this.WorkOrderRoutingProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void WorkOrderRoutingProvider_UpdateAsync(WorkOrderRouting entity, object userState) {
            if ((this.WorkOrderRoutingProvider_UpdateOperationCompleted == null)) {
                this.WorkOrderRoutingProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkOrderRoutingProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("WorkOrderRoutingProvider_Update", new object[] {
                        entity}, this.WorkOrderRoutingProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnWorkOrderRoutingProvider_UpdateOperationCompleted(object arg) {
            if ((this.WorkOrderRoutingProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkOrderRoutingProvider_UpdateCompleted(this, new WorkOrderRoutingProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VendorProvider_GetByProductIdFromProductV" +
            "endor", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Vendor[] VendorProvider_GetByProductIdFromProductVendor(int _productId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VendorProvider_GetByProductIdFromProductVendor", new object[] {
                        _productId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Vendor[])(results[0]));
        }
        
        /// <remarks/>
        public void VendorProvider_GetByProductIdFromProductVendorAsync(int _productId, int start, int pageLength) {
            this.VendorProvider_GetByProductIdFromProductVendorAsync(_productId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VendorProvider_GetByProductIdFromProductVendorAsync(int _productId, int start, int pageLength, object userState) {
            if ((this.VendorProvider_GetByProductIdFromProductVendorOperationCompleted == null)) {
                this.VendorProvider_GetByProductIdFromProductVendorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorProvider_GetByProductIdFromProductVendorOperationCompleted);
            }
            this.InvokeAsync("VendorProvider_GetByProductIdFromProductVendor", new object[] {
                        _productId,
                        start,
                        pageLength}, this.VendorProvider_GetByProductIdFromProductVendorOperationCompleted, userState);
        }
        
        private void OnVendorProvider_GetByProductIdFromProductVendorOperationCompleted(object arg) {
            if ((this.VendorProvider_GetByProductIdFromProductVendorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorProvider_GetByProductIdFromProductVendorCompleted(this, new VendorProvider_GetByProductIdFromProductVendorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VendorProvider_GetByAddressIdFromVendorAd" +
            "dress", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Vendor[] VendorProvider_GetByAddressIdFromVendorAddress(int _addressId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VendorProvider_GetByAddressIdFromVendorAddress", new object[] {
                        _addressId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Vendor[])(results[0]));
        }
        
        /// <remarks/>
        public void VendorProvider_GetByAddressIdFromVendorAddressAsync(int _addressId, int start, int pageLength) {
            this.VendorProvider_GetByAddressIdFromVendorAddressAsync(_addressId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VendorProvider_GetByAddressIdFromVendorAddressAsync(int _addressId, int start, int pageLength, object userState) {
            if ((this.VendorProvider_GetByAddressIdFromVendorAddressOperationCompleted == null)) {
                this.VendorProvider_GetByAddressIdFromVendorAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorProvider_GetByAddressIdFromVendorAddressOperationCompleted);
            }
            this.InvokeAsync("VendorProvider_GetByAddressIdFromVendorAddress", new object[] {
                        _addressId,
                        start,
                        pageLength}, this.VendorProvider_GetByAddressIdFromVendorAddressOperationCompleted, userState);
        }
        
        private void OnVendorProvider_GetByAddressIdFromVendorAddressOperationCompleted(object arg) {
            if ((this.VendorProvider_GetByAddressIdFromVendorAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorProvider_GetByAddressIdFromVendorAddressCompleted(this, new VendorProvider_GetByAddressIdFromVendorAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VendorProvider_GetByContactIdFromVendorCo" +
            "ntact", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Vendor[] VendorProvider_GetByContactIdFromVendorContact(int _contactId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VendorProvider_GetByContactIdFromVendorContact", new object[] {
                        _contactId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Vendor[])(results[0]));
        }
        
        /// <remarks/>
        public void VendorProvider_GetByContactIdFromVendorContactAsync(int _contactId, int start, int pageLength) {
            this.VendorProvider_GetByContactIdFromVendorContactAsync(_contactId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VendorProvider_GetByContactIdFromVendorContactAsync(int _contactId, int start, int pageLength, object userState) {
            if ((this.VendorProvider_GetByContactIdFromVendorContactOperationCompleted == null)) {
                this.VendorProvider_GetByContactIdFromVendorContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorProvider_GetByContactIdFromVendorContactOperationCompleted);
            }
            this.InvokeAsync("VendorProvider_GetByContactIdFromVendorContact", new object[] {
                        _contactId,
                        start,
                        pageLength}, this.VendorProvider_GetByContactIdFromVendorContactOperationCompleted, userState);
        }
        
        private void OnVendorProvider_GetByContactIdFromVendorContactOperationCompleted(object arg) {
            if ((this.VendorProvider_GetByContactIdFromVendorContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorProvider_GetByContactIdFromVendorContactCompleted(this, new VendorProvider_GetByContactIdFromVendorContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VendorProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool VendorProvider_Delete(int _vendorId) {
            object[] results = this.Invoke("VendorProvider_Delete", new object[] {
                        _vendorId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void VendorProvider_DeleteAsync(int _vendorId) {
            this.VendorProvider_DeleteAsync(_vendorId, null);
        }
        
        /// <remarks/>
        public void VendorProvider_DeleteAsync(int _vendorId, object userState) {
            if ((this.VendorProvider_DeleteOperationCompleted == null)) {
                this.VendorProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("VendorProvider_Delete", new object[] {
                        _vendorId}, this.VendorProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnVendorProvider_DeleteOperationCompleted(object arg) {
            if ((this.VendorProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorProvider_DeleteCompleted(this, new VendorProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VendorProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Vendor[] VendorProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VendorProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Vendor[])(results[0]));
        }
        
        /// <remarks/>
        public void VendorProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.VendorProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VendorProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.VendorProvider_FindOperationCompleted == null)) {
                this.VendorProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorProvider_FindOperationCompleted);
            }
            this.InvokeAsync("VendorProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.VendorProvider_FindOperationCompleted, userState);
        }
        
        private void OnVendorProvider_FindOperationCompleted(object arg) {
            if ((this.VendorProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorProvider_FindCompleted(this, new VendorProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VendorProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Vendor[] VendorProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("VendorProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Vendor[])(results[0]));
        }
        
        /// <remarks/>
        public void VendorProvider_GetAllAsync(int start, int pageLength) {
            this.VendorProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void VendorProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.VendorProvider_GetAllOperationCompleted == null)) {
                this.VendorProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("VendorProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.VendorProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnVendorProvider_GetAllOperationCompleted(object arg) {
            if ((this.VendorProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorProvider_GetAllCompleted(this, new VendorProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VendorProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Vendor[] VendorProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VendorProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Vendor[])(results[0]));
        }
        
        /// <remarks/>
        public void VendorProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.VendorProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VendorProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.VendorProvider_GetPagedOperationCompleted == null)) {
                this.VendorProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("VendorProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.VendorProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnVendorProvider_GetPagedOperationCompleted(object arg) {
            if ((this.VendorProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorProvider_GetPagedCompleted(this, new VendorProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VendorProvider_GetByAccountNumber", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Vendor VendorProvider_GetByAccountNumber(string _accountNumber, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VendorProvider_GetByAccountNumber", new object[] {
                        _accountNumber,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Vendor)(results[0]));
        }
        
        /// <remarks/>
        public void VendorProvider_GetByAccountNumberAsync(string _accountNumber, int start, int pageLength) {
            this.VendorProvider_GetByAccountNumberAsync(_accountNumber, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VendorProvider_GetByAccountNumberAsync(string _accountNumber, int start, int pageLength, object userState) {
            if ((this.VendorProvider_GetByAccountNumberOperationCompleted == null)) {
                this.VendorProvider_GetByAccountNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorProvider_GetByAccountNumberOperationCompleted);
            }
            this.InvokeAsync("VendorProvider_GetByAccountNumber", new object[] {
                        _accountNumber,
                        start,
                        pageLength}, this.VendorProvider_GetByAccountNumberOperationCompleted, userState);
        }
        
        private void OnVendorProvider_GetByAccountNumberOperationCompleted(object arg) {
            if ((this.VendorProvider_GetByAccountNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorProvider_GetByAccountNumberCompleted(this, new VendorProvider_GetByAccountNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VendorProvider_GetByVendorId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Vendor VendorProvider_GetByVendorId(int _vendorId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VendorProvider_GetByVendorId", new object[] {
                        _vendorId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Vendor)(results[0]));
        }
        
        /// <remarks/>
        public void VendorProvider_GetByVendorIdAsync(int _vendorId, int start, int pageLength) {
            this.VendorProvider_GetByVendorIdAsync(_vendorId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VendorProvider_GetByVendorIdAsync(int _vendorId, int start, int pageLength, object userState) {
            if ((this.VendorProvider_GetByVendorIdOperationCompleted == null)) {
                this.VendorProvider_GetByVendorIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorProvider_GetByVendorIdOperationCompleted);
            }
            this.InvokeAsync("VendorProvider_GetByVendorId", new object[] {
                        _vendorId,
                        start,
                        pageLength}, this.VendorProvider_GetByVendorIdOperationCompleted, userState);
        }
        
        private void OnVendorProvider_GetByVendorIdOperationCompleted(object arg) {
            if ((this.VendorProvider_GetByVendorIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorProvider_GetByVendorIdCompleted(this, new VendorProvider_GetByVendorIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VendorProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Vendor VendorProvider_Insert(Vendor entity) {
            object[] results = this.Invoke("VendorProvider_Insert", new object[] {
                        entity});
            return ((Vendor)(results[0]));
        }
        
        /// <remarks/>
        public void VendorProvider_InsertAsync(Vendor entity) {
            this.VendorProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void VendorProvider_InsertAsync(Vendor entity, object userState) {
            if ((this.VendorProvider_InsertOperationCompleted == null)) {
                this.VendorProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("VendorProvider_Insert", new object[] {
                        entity}, this.VendorProvider_InsertOperationCompleted, userState);
        }
        
        private void OnVendorProvider_InsertOperationCompleted(object arg) {
            if ((this.VendorProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorProvider_InsertCompleted(this, new VendorProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VendorProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void VendorProvider_BulkInsert(Vendor[] entityList) {
            this.Invoke("VendorProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void VendorProvider_BulkInsertAsync(Vendor[] entityList) {
            this.VendorProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void VendorProvider_BulkInsertAsync(Vendor[] entityList, object userState) {
            if ((this.VendorProvider_BulkInsertOperationCompleted == null)) {
                this.VendorProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("VendorProvider_BulkInsert", new object[] {
                        entityList}, this.VendorProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnVendorProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.VendorProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VendorProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Vendor VendorProvider_Update(Vendor entity) {
            object[] results = this.Invoke("VendorProvider_Update", new object[] {
                        entity});
            return ((Vendor)(results[0]));
        }
        
        /// <remarks/>
        public void VendorProvider_UpdateAsync(Vendor entity) {
            this.VendorProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void VendorProvider_UpdateAsync(Vendor entity, object userState) {
            if ((this.VendorProvider_UpdateOperationCompleted == null)) {
                this.VendorProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("VendorProvider_Update", new object[] {
                        entity}, this.VendorProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnVendorProvider_UpdateOperationCompleted(object arg) {
            if ((this.VendorProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorProvider_UpdateCompleted(this, new VendorProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VendorAddressProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool VendorAddressProvider_Delete(int _vendorId, int _addressId) {
            object[] results = this.Invoke("VendorAddressProvider_Delete", new object[] {
                        _vendorId,
                        _addressId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void VendorAddressProvider_DeleteAsync(int _vendorId, int _addressId) {
            this.VendorAddressProvider_DeleteAsync(_vendorId, _addressId, null);
        }
        
        /// <remarks/>
        public void VendorAddressProvider_DeleteAsync(int _vendorId, int _addressId, object userState) {
            if ((this.VendorAddressProvider_DeleteOperationCompleted == null)) {
                this.VendorAddressProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorAddressProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("VendorAddressProvider_Delete", new object[] {
                        _vendorId,
                        _addressId}, this.VendorAddressProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnVendorAddressProvider_DeleteOperationCompleted(object arg) {
            if ((this.VendorAddressProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorAddressProvider_DeleteCompleted(this, new VendorAddressProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VendorAddressProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VendorAddress[] VendorAddressProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VendorAddressProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((VendorAddress[])(results[0]));
        }
        
        /// <remarks/>
        public void VendorAddressProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.VendorAddressProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VendorAddressProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.VendorAddressProvider_FindOperationCompleted == null)) {
                this.VendorAddressProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorAddressProvider_FindOperationCompleted);
            }
            this.InvokeAsync("VendorAddressProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.VendorAddressProvider_FindOperationCompleted, userState);
        }
        
        private void OnVendorAddressProvider_FindOperationCompleted(object arg) {
            if ((this.VendorAddressProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorAddressProvider_FindCompleted(this, new VendorAddressProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VendorAddressProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VendorAddress[] VendorAddressProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("VendorAddressProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((VendorAddress[])(results[0]));
        }
        
        /// <remarks/>
        public void VendorAddressProvider_GetAllAsync(int start, int pageLength) {
            this.VendorAddressProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void VendorAddressProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.VendorAddressProvider_GetAllOperationCompleted == null)) {
                this.VendorAddressProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorAddressProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("VendorAddressProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.VendorAddressProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnVendorAddressProvider_GetAllOperationCompleted(object arg) {
            if ((this.VendorAddressProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorAddressProvider_GetAllCompleted(this, new VendorAddressProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VendorAddressProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VendorAddress[] VendorAddressProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VendorAddressProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((VendorAddress[])(results[0]));
        }
        
        /// <remarks/>
        public void VendorAddressProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.VendorAddressProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VendorAddressProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.VendorAddressProvider_GetPagedOperationCompleted == null)) {
                this.VendorAddressProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorAddressProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("VendorAddressProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.VendorAddressProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnVendorAddressProvider_GetPagedOperationCompleted(object arg) {
            if ((this.VendorAddressProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorAddressProvider_GetPagedCompleted(this, new VendorAddressProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VendorAddressProvider_GetByAddressTypeId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VendorAddress[] VendorAddressProvider_GetByAddressTypeId(int _addressTypeId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VendorAddressProvider_GetByAddressTypeId", new object[] {
                        _addressTypeId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((VendorAddress[])(results[0]));
        }
        
        /// <remarks/>
        public void VendorAddressProvider_GetByAddressTypeIdAsync(int _addressTypeId, int start, int pageLength) {
            this.VendorAddressProvider_GetByAddressTypeIdAsync(_addressTypeId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VendorAddressProvider_GetByAddressTypeIdAsync(int _addressTypeId, int start, int pageLength, object userState) {
            if ((this.VendorAddressProvider_GetByAddressTypeIdOperationCompleted == null)) {
                this.VendorAddressProvider_GetByAddressTypeIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorAddressProvider_GetByAddressTypeIdOperationCompleted);
            }
            this.InvokeAsync("VendorAddressProvider_GetByAddressTypeId", new object[] {
                        _addressTypeId,
                        start,
                        pageLength}, this.VendorAddressProvider_GetByAddressTypeIdOperationCompleted, userState);
        }
        
        private void OnVendorAddressProvider_GetByAddressTypeIdOperationCompleted(object arg) {
            if ((this.VendorAddressProvider_GetByAddressTypeIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorAddressProvider_GetByAddressTypeIdCompleted(this, new VendorAddressProvider_GetByAddressTypeIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VendorAddressProvider_GetByVendorId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VendorAddress[] VendorAddressProvider_GetByVendorId(int _vendorId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VendorAddressProvider_GetByVendorId", new object[] {
                        _vendorId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((VendorAddress[])(results[0]));
        }
        
        /// <remarks/>
        public void VendorAddressProvider_GetByVendorIdAsync(int _vendorId, int start, int pageLength) {
            this.VendorAddressProvider_GetByVendorIdAsync(_vendorId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VendorAddressProvider_GetByVendorIdAsync(int _vendorId, int start, int pageLength, object userState) {
            if ((this.VendorAddressProvider_GetByVendorIdOperationCompleted == null)) {
                this.VendorAddressProvider_GetByVendorIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorAddressProvider_GetByVendorIdOperationCompleted);
            }
            this.InvokeAsync("VendorAddressProvider_GetByVendorId", new object[] {
                        _vendorId,
                        start,
                        pageLength}, this.VendorAddressProvider_GetByVendorIdOperationCompleted, userState);
        }
        
        private void OnVendorAddressProvider_GetByVendorIdOperationCompleted(object arg) {
            if ((this.VendorAddressProvider_GetByVendorIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorAddressProvider_GetByVendorIdCompleted(this, new VendorAddressProvider_GetByVendorIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VendorAddressProvider_GetByAddressId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VendorAddress[] VendorAddressProvider_GetByAddressId(int _addressId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VendorAddressProvider_GetByAddressId", new object[] {
                        _addressId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((VendorAddress[])(results[0]));
        }
        
        /// <remarks/>
        public void VendorAddressProvider_GetByAddressIdAsync(int _addressId, int start, int pageLength) {
            this.VendorAddressProvider_GetByAddressIdAsync(_addressId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VendorAddressProvider_GetByAddressIdAsync(int _addressId, int start, int pageLength, object userState) {
            if ((this.VendorAddressProvider_GetByAddressIdOperationCompleted == null)) {
                this.VendorAddressProvider_GetByAddressIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorAddressProvider_GetByAddressIdOperationCompleted);
            }
            this.InvokeAsync("VendorAddressProvider_GetByAddressId", new object[] {
                        _addressId,
                        start,
                        pageLength}, this.VendorAddressProvider_GetByAddressIdOperationCompleted, userState);
        }
        
        private void OnVendorAddressProvider_GetByAddressIdOperationCompleted(object arg) {
            if ((this.VendorAddressProvider_GetByAddressIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorAddressProvider_GetByAddressIdCompleted(this, new VendorAddressProvider_GetByAddressIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VendorAddressProvider_GetByVendorIdAddres" +
            "sId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VendorAddress VendorAddressProvider_GetByVendorIdAddressId(int _vendorId, int _addressId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("VendorAddressProvider_GetByVendorIdAddressId", new object[] {
                        _vendorId,
                        _addressId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((VendorAddress)(results[0]));
        }
        
        /// <remarks/>
        public void VendorAddressProvider_GetByVendorIdAddressIdAsync(int _vendorId, int _addressId, int start, int pageLength) {
            this.VendorAddressProvider_GetByVendorIdAddressIdAsync(_vendorId, _addressId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void VendorAddressProvider_GetByVendorIdAddressIdAsync(int _vendorId, int _addressId, int start, int pageLength, object userState) {
            if ((this.VendorAddressProvider_GetByVendorIdAddressIdOperationCompleted == null)) {
                this.VendorAddressProvider_GetByVendorIdAddressIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorAddressProvider_GetByVendorIdAddressIdOperationCompleted);
            }
            this.InvokeAsync("VendorAddressProvider_GetByVendorIdAddressId", new object[] {
                        _vendorId,
                        _addressId,
                        start,
                        pageLength}, this.VendorAddressProvider_GetByVendorIdAddressIdOperationCompleted, userState);
        }
        
        private void OnVendorAddressProvider_GetByVendorIdAddressIdOperationCompleted(object arg) {
            if ((this.VendorAddressProvider_GetByVendorIdAddressIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorAddressProvider_GetByVendorIdAddressIdCompleted(this, new VendorAddressProvider_GetByVendorIdAddressIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VendorAddressProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VendorAddress VendorAddressProvider_Insert(VendorAddress entity) {
            object[] results = this.Invoke("VendorAddressProvider_Insert", new object[] {
                        entity});
            return ((VendorAddress)(results[0]));
        }
        
        /// <remarks/>
        public void VendorAddressProvider_InsertAsync(VendorAddress entity) {
            this.VendorAddressProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void VendorAddressProvider_InsertAsync(VendorAddress entity, object userState) {
            if ((this.VendorAddressProvider_InsertOperationCompleted == null)) {
                this.VendorAddressProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorAddressProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("VendorAddressProvider_Insert", new object[] {
                        entity}, this.VendorAddressProvider_InsertOperationCompleted, userState);
        }
        
        private void OnVendorAddressProvider_InsertOperationCompleted(object arg) {
            if ((this.VendorAddressProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorAddressProvider_InsertCompleted(this, new VendorAddressProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VendorAddressProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void VendorAddressProvider_BulkInsert(VendorAddress[] entityList) {
            this.Invoke("VendorAddressProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void VendorAddressProvider_BulkInsertAsync(VendorAddress[] entityList) {
            this.VendorAddressProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void VendorAddressProvider_BulkInsertAsync(VendorAddress[] entityList, object userState) {
            if ((this.VendorAddressProvider_BulkInsertOperationCompleted == null)) {
                this.VendorAddressProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorAddressProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("VendorAddressProvider_BulkInsert", new object[] {
                        entityList}, this.VendorAddressProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnVendorAddressProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.VendorAddressProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorAddressProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/VendorAddressProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VendorAddress VendorAddressProvider_Update(VendorAddress entity) {
            object[] results = this.Invoke("VendorAddressProvider_Update", new object[] {
                        entity});
            return ((VendorAddress)(results[0]));
        }
        
        /// <remarks/>
        public void VendorAddressProvider_UpdateAsync(VendorAddress entity) {
            this.VendorAddressProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void VendorAddressProvider_UpdateAsync(VendorAddress entity, object userState) {
            if ((this.VendorAddressProvider_UpdateOperationCompleted == null)) {
                this.VendorAddressProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVendorAddressProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("VendorAddressProvider_Update", new object[] {
                        entity}, this.VendorAddressProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnVendorAddressProvider_UpdateOperationCompleted(object arg) {
            if ((this.VendorAddressProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VendorAddressProvider_UpdateCompleted(this, new VendorAddressProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/PurchaseOrderDetailProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PurchaseOrderDetailProvider_Delete(int _purchaseOrderId, int _purchaseOrderDetailId) {
            object[] results = this.Invoke("PurchaseOrderDetailProvider_Delete", new object[] {
                        _purchaseOrderId,
                        _purchaseOrderDetailId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PurchaseOrderDetailProvider_DeleteAsync(int _purchaseOrderId, int _purchaseOrderDetailId) {
            this.PurchaseOrderDetailProvider_DeleteAsync(_purchaseOrderId, _purchaseOrderDetailId, null);
        }
        
        /// <remarks/>
        public void PurchaseOrderDetailProvider_DeleteAsync(int _purchaseOrderId, int _purchaseOrderDetailId, object userState) {
            if ((this.PurchaseOrderDetailProvider_DeleteOperationCompleted == null)) {
                this.PurchaseOrderDetailProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurchaseOrderDetailProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("PurchaseOrderDetailProvider_Delete", new object[] {
                        _purchaseOrderId,
                        _purchaseOrderDetailId}, this.PurchaseOrderDetailProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnPurchaseOrderDetailProvider_DeleteOperationCompleted(object arg) {
            if ((this.PurchaseOrderDetailProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurchaseOrderDetailProvider_DeleteCompleted(this, new PurchaseOrderDetailProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/PurchaseOrderDetailProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PurchaseOrderDetail[] PurchaseOrderDetailProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("PurchaseOrderDetailProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((PurchaseOrderDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void PurchaseOrderDetailProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.PurchaseOrderDetailProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void PurchaseOrderDetailProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.PurchaseOrderDetailProvider_FindOperationCompleted == null)) {
                this.PurchaseOrderDetailProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurchaseOrderDetailProvider_FindOperationCompleted);
            }
            this.InvokeAsync("PurchaseOrderDetailProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.PurchaseOrderDetailProvider_FindOperationCompleted, userState);
        }
        
        private void OnPurchaseOrderDetailProvider_FindOperationCompleted(object arg) {
            if ((this.PurchaseOrderDetailProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurchaseOrderDetailProvider_FindCompleted(this, new PurchaseOrderDetailProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/PurchaseOrderDetailProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PurchaseOrderDetail[] PurchaseOrderDetailProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("PurchaseOrderDetailProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((PurchaseOrderDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void PurchaseOrderDetailProvider_GetAllAsync(int start, int pageLength) {
            this.PurchaseOrderDetailProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void PurchaseOrderDetailProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.PurchaseOrderDetailProvider_GetAllOperationCompleted == null)) {
                this.PurchaseOrderDetailProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurchaseOrderDetailProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("PurchaseOrderDetailProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.PurchaseOrderDetailProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnPurchaseOrderDetailProvider_GetAllOperationCompleted(object arg) {
            if ((this.PurchaseOrderDetailProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurchaseOrderDetailProvider_GetAllCompleted(this, new PurchaseOrderDetailProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/PurchaseOrderDetailProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PurchaseOrderDetail[] PurchaseOrderDetailProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("PurchaseOrderDetailProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((PurchaseOrderDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void PurchaseOrderDetailProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.PurchaseOrderDetailProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void PurchaseOrderDetailProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.PurchaseOrderDetailProvider_GetPagedOperationCompleted == null)) {
                this.PurchaseOrderDetailProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurchaseOrderDetailProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("PurchaseOrderDetailProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.PurchaseOrderDetailProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnPurchaseOrderDetailProvider_GetPagedOperationCompleted(object arg) {
            if ((this.PurchaseOrderDetailProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurchaseOrderDetailProvider_GetPagedCompleted(this, new PurchaseOrderDetailProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/PurchaseOrderDetailProvider_GetByPurchase" +
            "OrderId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PurchaseOrderDetail[] PurchaseOrderDetailProvider_GetByPurchaseOrderId(int _purchaseOrderId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("PurchaseOrderDetailProvider_GetByPurchaseOrderId", new object[] {
                        _purchaseOrderId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((PurchaseOrderDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void PurchaseOrderDetailProvider_GetByPurchaseOrderIdAsync(int _purchaseOrderId, int start, int pageLength) {
            this.PurchaseOrderDetailProvider_GetByPurchaseOrderIdAsync(_purchaseOrderId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void PurchaseOrderDetailProvider_GetByPurchaseOrderIdAsync(int _purchaseOrderId, int start, int pageLength, object userState) {
            if ((this.PurchaseOrderDetailProvider_GetByPurchaseOrderIdOperationCompleted == null)) {
                this.PurchaseOrderDetailProvider_GetByPurchaseOrderIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurchaseOrderDetailProvider_GetByPurchaseOrderIdOperationCompleted);
            }
            this.InvokeAsync("PurchaseOrderDetailProvider_GetByPurchaseOrderId", new object[] {
                        _purchaseOrderId,
                        start,
                        pageLength}, this.PurchaseOrderDetailProvider_GetByPurchaseOrderIdOperationCompleted, userState);
        }
        
        private void OnPurchaseOrderDetailProvider_GetByPurchaseOrderIdOperationCompleted(object arg) {
            if ((this.PurchaseOrderDetailProvider_GetByPurchaseOrderIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurchaseOrderDetailProvider_GetByPurchaseOrderIdCompleted(this, new PurchaseOrderDetailProvider_GetByPurchaseOrderIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/PurchaseOrderDetailProvider_GetByProductI" +
            "d", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PurchaseOrderDetail[] PurchaseOrderDetailProvider_GetByProductId(int _productId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("PurchaseOrderDetailProvider_GetByProductId", new object[] {
                        _productId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((PurchaseOrderDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void PurchaseOrderDetailProvider_GetByProductIdAsync(int _productId, int start, int pageLength) {
            this.PurchaseOrderDetailProvider_GetByProductIdAsync(_productId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void PurchaseOrderDetailProvider_GetByProductIdAsync(int _productId, int start, int pageLength, object userState) {
            if ((this.PurchaseOrderDetailProvider_GetByProductIdOperationCompleted == null)) {
                this.PurchaseOrderDetailProvider_GetByProductIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurchaseOrderDetailProvider_GetByProductIdOperationCompleted);
            }
            this.InvokeAsync("PurchaseOrderDetailProvider_GetByProductId", new object[] {
                        _productId,
                        start,
                        pageLength}, this.PurchaseOrderDetailProvider_GetByProductIdOperationCompleted, userState);
        }
        
        private void OnPurchaseOrderDetailProvider_GetByProductIdOperationCompleted(object arg) {
            if ((this.PurchaseOrderDetailProvider_GetByProductIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurchaseOrderDetailProvider_GetByProductIdCompleted(this, new PurchaseOrderDetailProvider_GetByProductIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/PurchaseOrderDetailProvider_GetByPurchase" +
            "OrderIdPurchaseOrderDetailId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PurchaseOrderDetail PurchaseOrderDetailProvider_GetByPurchaseOrderIdPurchaseOrderDetailId(int _purchaseOrderId, int _purchaseOrderDetailId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("PurchaseOrderDetailProvider_GetByPurchaseOrderIdPurchaseOrderDetailId", new object[] {
                        _purchaseOrderId,
                        _purchaseOrderDetailId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((PurchaseOrderDetail)(results[0]));
        }
        
        /// <remarks/>
        public void PurchaseOrderDetailProvider_GetByPurchaseOrderIdPurchaseOrderDetailIdAsync(int _purchaseOrderId, int _purchaseOrderDetailId, int start, int pageLength) {
            this.PurchaseOrderDetailProvider_GetByPurchaseOrderIdPurchaseOrderDetailIdAsync(_purchaseOrderId, _purchaseOrderDetailId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void PurchaseOrderDetailProvider_GetByPurchaseOrderIdPurchaseOrderDetailIdAsync(int _purchaseOrderId, int _purchaseOrderDetailId, int start, int pageLength, object userState) {
            if ((this.PurchaseOrderDetailProvider_GetByPurchaseOrderIdPurchaseOrderDetailIdOperationCompleted == null)) {
                this.PurchaseOrderDetailProvider_GetByPurchaseOrderIdPurchaseOrderDetailIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurchaseOrderDetailProvider_GetByPurchaseOrderIdPurchaseOrderDetailIdOperationCompleted);
            }
            this.InvokeAsync("PurchaseOrderDetailProvider_GetByPurchaseOrderIdPurchaseOrderDetailId", new object[] {
                        _purchaseOrderId,
                        _purchaseOrderDetailId,
                        start,
                        pageLength}, this.PurchaseOrderDetailProvider_GetByPurchaseOrderIdPurchaseOrderDetailIdOperationCompleted, userState);
        }
        
        private void OnPurchaseOrderDetailProvider_GetByPurchaseOrderIdPurchaseOrderDetailIdOperationCompleted(object arg) {
            if ((this.PurchaseOrderDetailProvider_GetByPurchaseOrderIdPurchaseOrderDetailIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurchaseOrderDetailProvider_GetByPurchaseOrderIdPurchaseOrderDetailIdCompleted(this, new PurchaseOrderDetailProvider_GetByPurchaseOrderIdPurchaseOrderDetailIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/PurchaseOrderDetailProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PurchaseOrderDetail PurchaseOrderDetailProvider_Insert(PurchaseOrderDetail entity) {
            object[] results = this.Invoke("PurchaseOrderDetailProvider_Insert", new object[] {
                        entity});
            return ((PurchaseOrderDetail)(results[0]));
        }
        
        /// <remarks/>
        public void PurchaseOrderDetailProvider_InsertAsync(PurchaseOrderDetail entity) {
            this.PurchaseOrderDetailProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void PurchaseOrderDetailProvider_InsertAsync(PurchaseOrderDetail entity, object userState) {
            if ((this.PurchaseOrderDetailProvider_InsertOperationCompleted == null)) {
                this.PurchaseOrderDetailProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurchaseOrderDetailProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("PurchaseOrderDetailProvider_Insert", new object[] {
                        entity}, this.PurchaseOrderDetailProvider_InsertOperationCompleted, userState);
        }
        
        private void OnPurchaseOrderDetailProvider_InsertOperationCompleted(object arg) {
            if ((this.PurchaseOrderDetailProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurchaseOrderDetailProvider_InsertCompleted(this, new PurchaseOrderDetailProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/PurchaseOrderDetailProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PurchaseOrderDetailProvider_BulkInsert(PurchaseOrderDetail[] entityList) {
            this.Invoke("PurchaseOrderDetailProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void PurchaseOrderDetailProvider_BulkInsertAsync(PurchaseOrderDetail[] entityList) {
            this.PurchaseOrderDetailProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void PurchaseOrderDetailProvider_BulkInsertAsync(PurchaseOrderDetail[] entityList, object userState) {
            if ((this.PurchaseOrderDetailProvider_BulkInsertOperationCompleted == null)) {
                this.PurchaseOrderDetailProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurchaseOrderDetailProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("PurchaseOrderDetailProvider_BulkInsert", new object[] {
                        entityList}, this.PurchaseOrderDetailProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnPurchaseOrderDetailProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.PurchaseOrderDetailProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurchaseOrderDetailProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/PurchaseOrderDetailProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PurchaseOrderDetail PurchaseOrderDetailProvider_Update(PurchaseOrderDetail entity) {
            object[] results = this.Invoke("PurchaseOrderDetailProvider_Update", new object[] {
                        entity});
            return ((PurchaseOrderDetail)(results[0]));
        }
        
        /// <remarks/>
        public void PurchaseOrderDetailProvider_UpdateAsync(PurchaseOrderDetail entity) {
            this.PurchaseOrderDetailProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void PurchaseOrderDetailProvider_UpdateAsync(PurchaseOrderDetail entity, object userState) {
            if ((this.PurchaseOrderDetailProvider_UpdateOperationCompleted == null)) {
                this.PurchaseOrderDetailProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurchaseOrderDetailProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("PurchaseOrderDetailProvider_Update", new object[] {
                        entity}, this.PurchaseOrderDetailProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnPurchaseOrderDetailProvider_UpdateOperationCompleted(object arg) {
            if ((this.PurchaseOrderDetailProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurchaseOrderDetailProvider_UpdateCompleted(this, new PurchaseOrderDetailProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/LocationProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool LocationProvider_Delete(short _locationId) {
            object[] results = this.Invoke("LocationProvider_Delete", new object[] {
                        _locationId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LocationProvider_DeleteAsync(short _locationId) {
            this.LocationProvider_DeleteAsync(_locationId, null);
        }
        
        /// <remarks/>
        public void LocationProvider_DeleteAsync(short _locationId, object userState) {
            if ((this.LocationProvider_DeleteOperationCompleted == null)) {
                this.LocationProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLocationProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("LocationProvider_Delete", new object[] {
                        _locationId}, this.LocationProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnLocationProvider_DeleteOperationCompleted(object arg) {
            if ((this.LocationProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LocationProvider_DeleteCompleted(this, new LocationProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/LocationProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Location[] LocationProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("LocationProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Location[])(results[0]));
        }
        
        /// <remarks/>
        public void LocationProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.LocationProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void LocationProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.LocationProvider_FindOperationCompleted == null)) {
                this.LocationProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLocationProvider_FindOperationCompleted);
            }
            this.InvokeAsync("LocationProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.LocationProvider_FindOperationCompleted, userState);
        }
        
        private void OnLocationProvider_FindOperationCompleted(object arg) {
            if ((this.LocationProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LocationProvider_FindCompleted(this, new LocationProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/LocationProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Location[] LocationProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("LocationProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Location[])(results[0]));
        }
        
        /// <remarks/>
        public void LocationProvider_GetAllAsync(int start, int pageLength) {
            this.LocationProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void LocationProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.LocationProvider_GetAllOperationCompleted == null)) {
                this.LocationProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLocationProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("LocationProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.LocationProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnLocationProvider_GetAllOperationCompleted(object arg) {
            if ((this.LocationProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LocationProvider_GetAllCompleted(this, new LocationProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/LocationProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Location[] LocationProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("LocationProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Location[])(results[0]));
        }
        
        /// <remarks/>
        public void LocationProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.LocationProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void LocationProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.LocationProvider_GetPagedOperationCompleted == null)) {
                this.LocationProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLocationProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("LocationProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.LocationProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnLocationProvider_GetPagedOperationCompleted(object arg) {
            if ((this.LocationProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LocationProvider_GetPagedCompleted(this, new LocationProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/LocationProvider_GetByName", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Location LocationProvider_GetByName(string _name, int start, int pageLength, out int count) {
            object[] results = this.Invoke("LocationProvider_GetByName", new object[] {
                        _name,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Location)(results[0]));
        }
        
        /// <remarks/>
        public void LocationProvider_GetByNameAsync(string _name, int start, int pageLength) {
            this.LocationProvider_GetByNameAsync(_name, start, pageLength, null);
        }
        
        /// <remarks/>
        public void LocationProvider_GetByNameAsync(string _name, int start, int pageLength, object userState) {
            if ((this.LocationProvider_GetByNameOperationCompleted == null)) {
                this.LocationProvider_GetByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLocationProvider_GetByNameOperationCompleted);
            }
            this.InvokeAsync("LocationProvider_GetByName", new object[] {
                        _name,
                        start,
                        pageLength}, this.LocationProvider_GetByNameOperationCompleted, userState);
        }
        
        private void OnLocationProvider_GetByNameOperationCompleted(object arg) {
            if ((this.LocationProvider_GetByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LocationProvider_GetByNameCompleted(this, new LocationProvider_GetByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/LocationProvider_GetByLocationId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Location LocationProvider_GetByLocationId(short _locationId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("LocationProvider_GetByLocationId", new object[] {
                        _locationId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Location)(results[0]));
        }
        
        /// <remarks/>
        public void LocationProvider_GetByLocationIdAsync(short _locationId, int start, int pageLength) {
            this.LocationProvider_GetByLocationIdAsync(_locationId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void LocationProvider_GetByLocationIdAsync(short _locationId, int start, int pageLength, object userState) {
            if ((this.LocationProvider_GetByLocationIdOperationCompleted == null)) {
                this.LocationProvider_GetByLocationIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLocationProvider_GetByLocationIdOperationCompleted);
            }
            this.InvokeAsync("LocationProvider_GetByLocationId", new object[] {
                        _locationId,
                        start,
                        pageLength}, this.LocationProvider_GetByLocationIdOperationCompleted, userState);
        }
        
        private void OnLocationProvider_GetByLocationIdOperationCompleted(object arg) {
            if ((this.LocationProvider_GetByLocationIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LocationProvider_GetByLocationIdCompleted(this, new LocationProvider_GetByLocationIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/LocationProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Location LocationProvider_Insert(Location entity) {
            object[] results = this.Invoke("LocationProvider_Insert", new object[] {
                        entity});
            return ((Location)(results[0]));
        }
        
        /// <remarks/>
        public void LocationProvider_InsertAsync(Location entity) {
            this.LocationProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void LocationProvider_InsertAsync(Location entity, object userState) {
            if ((this.LocationProvider_InsertOperationCompleted == null)) {
                this.LocationProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLocationProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("LocationProvider_Insert", new object[] {
                        entity}, this.LocationProvider_InsertOperationCompleted, userState);
        }
        
        private void OnLocationProvider_InsertOperationCompleted(object arg) {
            if ((this.LocationProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LocationProvider_InsertCompleted(this, new LocationProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/LocationProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LocationProvider_BulkInsert(Location[] entityList) {
            this.Invoke("LocationProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void LocationProvider_BulkInsertAsync(Location[] entityList) {
            this.LocationProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void LocationProvider_BulkInsertAsync(Location[] entityList, object userState) {
            if ((this.LocationProvider_BulkInsertOperationCompleted == null)) {
                this.LocationProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLocationProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("LocationProvider_BulkInsert", new object[] {
                        entityList}, this.LocationProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnLocationProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.LocationProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LocationProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/LocationProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Location LocationProvider_Update(Location entity) {
            object[] results = this.Invoke("LocationProvider_Update", new object[] {
                        entity});
            return ((Location)(results[0]));
        }
        
        /// <remarks/>
        public void LocationProvider_UpdateAsync(Location entity) {
            this.LocationProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void LocationProvider_UpdateAsync(Location entity, object userState) {
            if ((this.LocationProvider_UpdateOperationCompleted == null)) {
                this.LocationProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLocationProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("LocationProvider_Update", new object[] {
                        entity}, this.LocationProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnLocationProvider_UpdateOperationCompleted(object arg) {
            if ((this.LocationProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LocationProvider_UpdateCompleted(this, new LocationProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CurrencyProvider_GetByCountryRegionCodeFr" +
            "omCountryRegionCurrency", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Currency[] CurrencyProvider_GetByCountryRegionCodeFromCountryRegionCurrency(string _countryRegionCode, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CurrencyProvider_GetByCountryRegionCodeFromCountryRegionCurrency", new object[] {
                        _countryRegionCode,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Currency[])(results[0]));
        }
        
        /// <remarks/>
        public void CurrencyProvider_GetByCountryRegionCodeFromCountryRegionCurrencyAsync(string _countryRegionCode, int start, int pageLength) {
            this.CurrencyProvider_GetByCountryRegionCodeFromCountryRegionCurrencyAsync(_countryRegionCode, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CurrencyProvider_GetByCountryRegionCodeFromCountryRegionCurrencyAsync(string _countryRegionCode, int start, int pageLength, object userState) {
            if ((this.CurrencyProvider_GetByCountryRegionCodeFromCountryRegionCurrencyOperationCompleted == null)) {
                this.CurrencyProvider_GetByCountryRegionCodeFromCountryRegionCurrencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrencyProvider_GetByCountryRegionCodeFromCountryRegionCurrencyOperationCompleted);
            }
            this.InvokeAsync("CurrencyProvider_GetByCountryRegionCodeFromCountryRegionCurrency", new object[] {
                        _countryRegionCode,
                        start,
                        pageLength}, this.CurrencyProvider_GetByCountryRegionCodeFromCountryRegionCurrencyOperationCompleted, userState);
        }
        
        private void OnCurrencyProvider_GetByCountryRegionCodeFromCountryRegionCurrencyOperationCompleted(object arg) {
            if ((this.CurrencyProvider_GetByCountryRegionCodeFromCountryRegionCurrencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrencyProvider_GetByCountryRegionCodeFromCountryRegionCurrencyCompleted(this, new CurrencyProvider_GetByCountryRegionCodeFromCountryRegionCurrencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CurrencyProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CurrencyProvider_Delete(string _currencyCode) {
            object[] results = this.Invoke("CurrencyProvider_Delete", new object[] {
                        _currencyCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CurrencyProvider_DeleteAsync(string _currencyCode) {
            this.CurrencyProvider_DeleteAsync(_currencyCode, null);
        }
        
        /// <remarks/>
        public void CurrencyProvider_DeleteAsync(string _currencyCode, object userState) {
            if ((this.CurrencyProvider_DeleteOperationCompleted == null)) {
                this.CurrencyProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrencyProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("CurrencyProvider_Delete", new object[] {
                        _currencyCode}, this.CurrencyProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnCurrencyProvider_DeleteOperationCompleted(object arg) {
            if ((this.CurrencyProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrencyProvider_DeleteCompleted(this, new CurrencyProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CurrencyProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Currency[] CurrencyProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CurrencyProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Currency[])(results[0]));
        }
        
        /// <remarks/>
        public void CurrencyProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.CurrencyProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CurrencyProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.CurrencyProvider_FindOperationCompleted == null)) {
                this.CurrencyProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrencyProvider_FindOperationCompleted);
            }
            this.InvokeAsync("CurrencyProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.CurrencyProvider_FindOperationCompleted, userState);
        }
        
        private void OnCurrencyProvider_FindOperationCompleted(object arg) {
            if ((this.CurrencyProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrencyProvider_FindCompleted(this, new CurrencyProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CurrencyProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Currency[] CurrencyProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("CurrencyProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Currency[])(results[0]));
        }
        
        /// <remarks/>
        public void CurrencyProvider_GetAllAsync(int start, int pageLength) {
            this.CurrencyProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void CurrencyProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.CurrencyProvider_GetAllOperationCompleted == null)) {
                this.CurrencyProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrencyProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("CurrencyProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.CurrencyProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnCurrencyProvider_GetAllOperationCompleted(object arg) {
            if ((this.CurrencyProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrencyProvider_GetAllCompleted(this, new CurrencyProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CurrencyProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Currency[] CurrencyProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CurrencyProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Currency[])(results[0]));
        }
        
        /// <remarks/>
        public void CurrencyProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.CurrencyProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CurrencyProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.CurrencyProvider_GetPagedOperationCompleted == null)) {
                this.CurrencyProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrencyProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("CurrencyProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.CurrencyProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnCurrencyProvider_GetPagedOperationCompleted(object arg) {
            if ((this.CurrencyProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrencyProvider_GetPagedCompleted(this, new CurrencyProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CurrencyProvider_GetByName", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Currency CurrencyProvider_GetByName(string _name, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CurrencyProvider_GetByName", new object[] {
                        _name,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Currency)(results[0]));
        }
        
        /// <remarks/>
        public void CurrencyProvider_GetByNameAsync(string _name, int start, int pageLength) {
            this.CurrencyProvider_GetByNameAsync(_name, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CurrencyProvider_GetByNameAsync(string _name, int start, int pageLength, object userState) {
            if ((this.CurrencyProvider_GetByNameOperationCompleted == null)) {
                this.CurrencyProvider_GetByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrencyProvider_GetByNameOperationCompleted);
            }
            this.InvokeAsync("CurrencyProvider_GetByName", new object[] {
                        _name,
                        start,
                        pageLength}, this.CurrencyProvider_GetByNameOperationCompleted, userState);
        }
        
        private void OnCurrencyProvider_GetByNameOperationCompleted(object arg) {
            if ((this.CurrencyProvider_GetByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrencyProvider_GetByNameCompleted(this, new CurrencyProvider_GetByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CurrencyProvider_GetByCurrencyCode", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Currency CurrencyProvider_GetByCurrencyCode(string _currencyCode, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CurrencyProvider_GetByCurrencyCode", new object[] {
                        _currencyCode,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Currency)(results[0]));
        }
        
        /// <remarks/>
        public void CurrencyProvider_GetByCurrencyCodeAsync(string _currencyCode, int start, int pageLength) {
            this.CurrencyProvider_GetByCurrencyCodeAsync(_currencyCode, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CurrencyProvider_GetByCurrencyCodeAsync(string _currencyCode, int start, int pageLength, object userState) {
            if ((this.CurrencyProvider_GetByCurrencyCodeOperationCompleted == null)) {
                this.CurrencyProvider_GetByCurrencyCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrencyProvider_GetByCurrencyCodeOperationCompleted);
            }
            this.InvokeAsync("CurrencyProvider_GetByCurrencyCode", new object[] {
                        _currencyCode,
                        start,
                        pageLength}, this.CurrencyProvider_GetByCurrencyCodeOperationCompleted, userState);
        }
        
        private void OnCurrencyProvider_GetByCurrencyCodeOperationCompleted(object arg) {
            if ((this.CurrencyProvider_GetByCurrencyCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrencyProvider_GetByCurrencyCodeCompleted(this, new CurrencyProvider_GetByCurrencyCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CurrencyProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Currency CurrencyProvider_Insert(Currency entity) {
            object[] results = this.Invoke("CurrencyProvider_Insert", new object[] {
                        entity});
            return ((Currency)(results[0]));
        }
        
        /// <remarks/>
        public void CurrencyProvider_InsertAsync(Currency entity) {
            this.CurrencyProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void CurrencyProvider_InsertAsync(Currency entity, object userState) {
            if ((this.CurrencyProvider_InsertOperationCompleted == null)) {
                this.CurrencyProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrencyProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("CurrencyProvider_Insert", new object[] {
                        entity}, this.CurrencyProvider_InsertOperationCompleted, userState);
        }
        
        private void OnCurrencyProvider_InsertOperationCompleted(object arg) {
            if ((this.CurrencyProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrencyProvider_InsertCompleted(this, new CurrencyProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CurrencyProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CurrencyProvider_BulkInsert(Currency[] entityList) {
            this.Invoke("CurrencyProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void CurrencyProvider_BulkInsertAsync(Currency[] entityList) {
            this.CurrencyProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void CurrencyProvider_BulkInsertAsync(Currency[] entityList, object userState) {
            if ((this.CurrencyProvider_BulkInsertOperationCompleted == null)) {
                this.CurrencyProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrencyProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("CurrencyProvider_BulkInsert", new object[] {
                        entityList}, this.CurrencyProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnCurrencyProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.CurrencyProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrencyProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CurrencyProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Currency CurrencyProvider_Update(Currency entity) {
            object[] results = this.Invoke("CurrencyProvider_Update", new object[] {
                        entity});
            return ((Currency)(results[0]));
        }
        
        /// <remarks/>
        public void CurrencyProvider_UpdateAsync(Currency entity) {
            this.CurrencyProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void CurrencyProvider_UpdateAsync(Currency entity, object userState) {
            if ((this.CurrencyProvider_UpdateOperationCompleted == null)) {
                this.CurrencyProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrencyProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("CurrencyProvider_Update", new object[] {
                        entity}, this.CurrencyProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnCurrencyProvider_UpdateOperationCompleted(object arg) {
            if ((this.CurrencyProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrencyProvider_UpdateCompleted(this, new CurrencyProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CreditCardProvider_GetByContactIdFromCont" +
            "actCreditCard", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CreditCard[] CreditCardProvider_GetByContactIdFromContactCreditCard(int _contactId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CreditCardProvider_GetByContactIdFromContactCreditCard", new object[] {
                        _contactId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((CreditCard[])(results[0]));
        }
        
        /// <remarks/>
        public void CreditCardProvider_GetByContactIdFromContactCreditCardAsync(int _contactId, int start, int pageLength) {
            this.CreditCardProvider_GetByContactIdFromContactCreditCardAsync(_contactId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CreditCardProvider_GetByContactIdFromContactCreditCardAsync(int _contactId, int start, int pageLength, object userState) {
            if ((this.CreditCardProvider_GetByContactIdFromContactCreditCardOperationCompleted == null)) {
                this.CreditCardProvider_GetByContactIdFromContactCreditCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreditCardProvider_GetByContactIdFromContactCreditCardOperationCompleted);
            }
            this.InvokeAsync("CreditCardProvider_GetByContactIdFromContactCreditCard", new object[] {
                        _contactId,
                        start,
                        pageLength}, this.CreditCardProvider_GetByContactIdFromContactCreditCardOperationCompleted, userState);
        }
        
        private void OnCreditCardProvider_GetByContactIdFromContactCreditCardOperationCompleted(object arg) {
            if ((this.CreditCardProvider_GetByContactIdFromContactCreditCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreditCardProvider_GetByContactIdFromContactCreditCardCompleted(this, new CreditCardProvider_GetByContactIdFromContactCreditCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CreditCardProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreditCardProvider_Delete(int _creditCardId) {
            object[] results = this.Invoke("CreditCardProvider_Delete", new object[] {
                        _creditCardId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreditCardProvider_DeleteAsync(int _creditCardId) {
            this.CreditCardProvider_DeleteAsync(_creditCardId, null);
        }
        
        /// <remarks/>
        public void CreditCardProvider_DeleteAsync(int _creditCardId, object userState) {
            if ((this.CreditCardProvider_DeleteOperationCompleted == null)) {
                this.CreditCardProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreditCardProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("CreditCardProvider_Delete", new object[] {
                        _creditCardId}, this.CreditCardProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnCreditCardProvider_DeleteOperationCompleted(object arg) {
            if ((this.CreditCardProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreditCardProvider_DeleteCompleted(this, new CreditCardProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CreditCardProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CreditCard[] CreditCardProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CreditCardProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((CreditCard[])(results[0]));
        }
        
        /// <remarks/>
        public void CreditCardProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.CreditCardProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CreditCardProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.CreditCardProvider_FindOperationCompleted == null)) {
                this.CreditCardProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreditCardProvider_FindOperationCompleted);
            }
            this.InvokeAsync("CreditCardProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.CreditCardProvider_FindOperationCompleted, userState);
        }
        
        private void OnCreditCardProvider_FindOperationCompleted(object arg) {
            if ((this.CreditCardProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreditCardProvider_FindCompleted(this, new CreditCardProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CreditCardProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CreditCard[] CreditCardProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("CreditCardProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((CreditCard[])(results[0]));
        }
        
        /// <remarks/>
        public void CreditCardProvider_GetAllAsync(int start, int pageLength) {
            this.CreditCardProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void CreditCardProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.CreditCardProvider_GetAllOperationCompleted == null)) {
                this.CreditCardProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreditCardProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("CreditCardProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.CreditCardProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnCreditCardProvider_GetAllOperationCompleted(object arg) {
            if ((this.CreditCardProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreditCardProvider_GetAllCompleted(this, new CreditCardProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CreditCardProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CreditCard[] CreditCardProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CreditCardProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((CreditCard[])(results[0]));
        }
        
        /// <remarks/>
        public void CreditCardProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.CreditCardProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CreditCardProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.CreditCardProvider_GetPagedOperationCompleted == null)) {
                this.CreditCardProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreditCardProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("CreditCardProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.CreditCardProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnCreditCardProvider_GetPagedOperationCompleted(object arg) {
            if ((this.CreditCardProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreditCardProvider_GetPagedCompleted(this, new CreditCardProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CreditCardProvider_GetByCardNumber", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CreditCard CreditCardProvider_GetByCardNumber(string _cardNumber, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CreditCardProvider_GetByCardNumber", new object[] {
                        _cardNumber,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((CreditCard)(results[0]));
        }
        
        /// <remarks/>
        public void CreditCardProvider_GetByCardNumberAsync(string _cardNumber, int start, int pageLength) {
            this.CreditCardProvider_GetByCardNumberAsync(_cardNumber, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CreditCardProvider_GetByCardNumberAsync(string _cardNumber, int start, int pageLength, object userState) {
            if ((this.CreditCardProvider_GetByCardNumberOperationCompleted == null)) {
                this.CreditCardProvider_GetByCardNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreditCardProvider_GetByCardNumberOperationCompleted);
            }
            this.InvokeAsync("CreditCardProvider_GetByCardNumber", new object[] {
                        _cardNumber,
                        start,
                        pageLength}, this.CreditCardProvider_GetByCardNumberOperationCompleted, userState);
        }
        
        private void OnCreditCardProvider_GetByCardNumberOperationCompleted(object arg) {
            if ((this.CreditCardProvider_GetByCardNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreditCardProvider_GetByCardNumberCompleted(this, new CreditCardProvider_GetByCardNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CreditCardProvider_GetByCreditCardId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CreditCard CreditCardProvider_GetByCreditCardId(int _creditCardId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CreditCardProvider_GetByCreditCardId", new object[] {
                        _creditCardId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((CreditCard)(results[0]));
        }
        
        /// <remarks/>
        public void CreditCardProvider_GetByCreditCardIdAsync(int _creditCardId, int start, int pageLength) {
            this.CreditCardProvider_GetByCreditCardIdAsync(_creditCardId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CreditCardProvider_GetByCreditCardIdAsync(int _creditCardId, int start, int pageLength, object userState) {
            if ((this.CreditCardProvider_GetByCreditCardIdOperationCompleted == null)) {
                this.CreditCardProvider_GetByCreditCardIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreditCardProvider_GetByCreditCardIdOperationCompleted);
            }
            this.InvokeAsync("CreditCardProvider_GetByCreditCardId", new object[] {
                        _creditCardId,
                        start,
                        pageLength}, this.CreditCardProvider_GetByCreditCardIdOperationCompleted, userState);
        }
        
        private void OnCreditCardProvider_GetByCreditCardIdOperationCompleted(object arg) {
            if ((this.CreditCardProvider_GetByCreditCardIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreditCardProvider_GetByCreditCardIdCompleted(this, new CreditCardProvider_GetByCreditCardIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CreditCardProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CreditCard CreditCardProvider_Insert(CreditCard entity) {
            object[] results = this.Invoke("CreditCardProvider_Insert", new object[] {
                        entity});
            return ((CreditCard)(results[0]));
        }
        
        /// <remarks/>
        public void CreditCardProvider_InsertAsync(CreditCard entity) {
            this.CreditCardProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void CreditCardProvider_InsertAsync(CreditCard entity, object userState) {
            if ((this.CreditCardProvider_InsertOperationCompleted == null)) {
                this.CreditCardProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreditCardProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("CreditCardProvider_Insert", new object[] {
                        entity}, this.CreditCardProvider_InsertOperationCompleted, userState);
        }
        
        private void OnCreditCardProvider_InsertOperationCompleted(object arg) {
            if ((this.CreditCardProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreditCardProvider_InsertCompleted(this, new CreditCardProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CreditCardProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreditCardProvider_BulkInsert(CreditCard[] entityList) {
            this.Invoke("CreditCardProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void CreditCardProvider_BulkInsertAsync(CreditCard[] entityList) {
            this.CreditCardProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void CreditCardProvider_BulkInsertAsync(CreditCard[] entityList, object userState) {
            if ((this.CreditCardProvider_BulkInsertOperationCompleted == null)) {
                this.CreditCardProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreditCardProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("CreditCardProvider_BulkInsert", new object[] {
                        entityList}, this.CreditCardProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnCreditCardProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.CreditCardProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreditCardProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CreditCardProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CreditCard CreditCardProvider_Update(CreditCard entity) {
            object[] results = this.Invoke("CreditCardProvider_Update", new object[] {
                        entity});
            return ((CreditCard)(results[0]));
        }
        
        /// <remarks/>
        public void CreditCardProvider_UpdateAsync(CreditCard entity) {
            this.CreditCardProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void CreditCardProvider_UpdateAsync(CreditCard entity, object userState) {
            if ((this.CreditCardProvider_UpdateOperationCompleted == null)) {
                this.CreditCardProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreditCardProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("CreditCardProvider_Update", new object[] {
                        entity}, this.CreditCardProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnCreditCardProvider_UpdateOperationCompleted(object arg) {
            if ((this.CreditCardProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreditCardProvider_UpdateCompleted(this, new CreditCardProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductCostHistoryProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ProductCostHistoryProvider_Delete(int _productId, System.DateTime _startDate) {
            object[] results = this.Invoke("ProductCostHistoryProvider_Delete", new object[] {
                        _productId,
                        _startDate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ProductCostHistoryProvider_DeleteAsync(int _productId, System.DateTime _startDate) {
            this.ProductCostHistoryProvider_DeleteAsync(_productId, _startDate, null);
        }
        
        /// <remarks/>
        public void ProductCostHistoryProvider_DeleteAsync(int _productId, System.DateTime _startDate, object userState) {
            if ((this.ProductCostHistoryProvider_DeleteOperationCompleted == null)) {
                this.ProductCostHistoryProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductCostHistoryProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("ProductCostHistoryProvider_Delete", new object[] {
                        _productId,
                        _startDate}, this.ProductCostHistoryProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnProductCostHistoryProvider_DeleteOperationCompleted(object arg) {
            if ((this.ProductCostHistoryProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductCostHistoryProvider_DeleteCompleted(this, new ProductCostHistoryProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductCostHistoryProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductCostHistory[] ProductCostHistoryProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductCostHistoryProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductCostHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductCostHistoryProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.ProductCostHistoryProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductCostHistoryProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.ProductCostHistoryProvider_FindOperationCompleted == null)) {
                this.ProductCostHistoryProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductCostHistoryProvider_FindOperationCompleted);
            }
            this.InvokeAsync("ProductCostHistoryProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.ProductCostHistoryProvider_FindOperationCompleted, userState);
        }
        
        private void OnProductCostHistoryProvider_FindOperationCompleted(object arg) {
            if ((this.ProductCostHistoryProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductCostHistoryProvider_FindCompleted(this, new ProductCostHistoryProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductCostHistoryProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductCostHistory[] ProductCostHistoryProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductCostHistoryProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductCostHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductCostHistoryProvider_GetAllAsync(int start, int pageLength) {
            this.ProductCostHistoryProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductCostHistoryProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.ProductCostHistoryProvider_GetAllOperationCompleted == null)) {
                this.ProductCostHistoryProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductCostHistoryProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("ProductCostHistoryProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.ProductCostHistoryProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnProductCostHistoryProvider_GetAllOperationCompleted(object arg) {
            if ((this.ProductCostHistoryProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductCostHistoryProvider_GetAllCompleted(this, new ProductCostHistoryProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductCostHistoryProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductCostHistory[] ProductCostHistoryProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductCostHistoryProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductCostHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductCostHistoryProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.ProductCostHistoryProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductCostHistoryProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.ProductCostHistoryProvider_GetPagedOperationCompleted == null)) {
                this.ProductCostHistoryProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductCostHistoryProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("ProductCostHistoryProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.ProductCostHistoryProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnProductCostHistoryProvider_GetPagedOperationCompleted(object arg) {
            if ((this.ProductCostHistoryProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductCostHistoryProvider_GetPagedCompleted(this, new ProductCostHistoryProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductCostHistoryProvider_GetByProductId" +
            "", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductCostHistory[] ProductCostHistoryProvider_GetByProductId(int _productId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductCostHistoryProvider_GetByProductId", new object[] {
                        _productId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductCostHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductCostHistoryProvider_GetByProductIdAsync(int _productId, int start, int pageLength) {
            this.ProductCostHistoryProvider_GetByProductIdAsync(_productId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductCostHistoryProvider_GetByProductIdAsync(int _productId, int start, int pageLength, object userState) {
            if ((this.ProductCostHistoryProvider_GetByProductIdOperationCompleted == null)) {
                this.ProductCostHistoryProvider_GetByProductIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductCostHistoryProvider_GetByProductIdOperationCompleted);
            }
            this.InvokeAsync("ProductCostHistoryProvider_GetByProductId", new object[] {
                        _productId,
                        start,
                        pageLength}, this.ProductCostHistoryProvider_GetByProductIdOperationCompleted, userState);
        }
        
        private void OnProductCostHistoryProvider_GetByProductIdOperationCompleted(object arg) {
            if ((this.ProductCostHistoryProvider_GetByProductIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductCostHistoryProvider_GetByProductIdCompleted(this, new ProductCostHistoryProvider_GetByProductIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductCostHistoryProvider_GetByProductId" +
            "StartDate", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductCostHistory ProductCostHistoryProvider_GetByProductIdStartDate(int _productId, System.DateTime _startDate, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductCostHistoryProvider_GetByProductIdStartDate", new object[] {
                        _productId,
                        _startDate,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductCostHistory)(results[0]));
        }
        
        /// <remarks/>
        public void ProductCostHistoryProvider_GetByProductIdStartDateAsync(int _productId, System.DateTime _startDate, int start, int pageLength) {
            this.ProductCostHistoryProvider_GetByProductIdStartDateAsync(_productId, _startDate, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductCostHistoryProvider_GetByProductIdStartDateAsync(int _productId, System.DateTime _startDate, int start, int pageLength, object userState) {
            if ((this.ProductCostHistoryProvider_GetByProductIdStartDateOperationCompleted == null)) {
                this.ProductCostHistoryProvider_GetByProductIdStartDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductCostHistoryProvider_GetByProductIdStartDateOperationCompleted);
            }
            this.InvokeAsync("ProductCostHistoryProvider_GetByProductIdStartDate", new object[] {
                        _productId,
                        _startDate,
                        start,
                        pageLength}, this.ProductCostHistoryProvider_GetByProductIdStartDateOperationCompleted, userState);
        }
        
        private void OnProductCostHistoryProvider_GetByProductIdStartDateOperationCompleted(object arg) {
            if ((this.ProductCostHistoryProvider_GetByProductIdStartDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductCostHistoryProvider_GetByProductIdStartDateCompleted(this, new ProductCostHistoryProvider_GetByProductIdStartDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductCostHistoryProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductCostHistory ProductCostHistoryProvider_Insert(ProductCostHistory entity) {
            object[] results = this.Invoke("ProductCostHistoryProvider_Insert", new object[] {
                        entity});
            return ((ProductCostHistory)(results[0]));
        }
        
        /// <remarks/>
        public void ProductCostHistoryProvider_InsertAsync(ProductCostHistory entity) {
            this.ProductCostHistoryProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void ProductCostHistoryProvider_InsertAsync(ProductCostHistory entity, object userState) {
            if ((this.ProductCostHistoryProvider_InsertOperationCompleted == null)) {
                this.ProductCostHistoryProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductCostHistoryProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("ProductCostHistoryProvider_Insert", new object[] {
                        entity}, this.ProductCostHistoryProvider_InsertOperationCompleted, userState);
        }
        
        private void OnProductCostHistoryProvider_InsertOperationCompleted(object arg) {
            if ((this.ProductCostHistoryProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductCostHistoryProvider_InsertCompleted(this, new ProductCostHistoryProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductCostHistoryProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ProductCostHistoryProvider_BulkInsert(ProductCostHistory[] entityList) {
            this.Invoke("ProductCostHistoryProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void ProductCostHistoryProvider_BulkInsertAsync(ProductCostHistory[] entityList) {
            this.ProductCostHistoryProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void ProductCostHistoryProvider_BulkInsertAsync(ProductCostHistory[] entityList, object userState) {
            if ((this.ProductCostHistoryProvider_BulkInsertOperationCompleted == null)) {
                this.ProductCostHistoryProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductCostHistoryProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("ProductCostHistoryProvider_BulkInsert", new object[] {
                        entityList}, this.ProductCostHistoryProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnProductCostHistoryProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.ProductCostHistoryProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductCostHistoryProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductCostHistoryProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductCostHistory ProductCostHistoryProvider_Update(ProductCostHistory entity) {
            object[] results = this.Invoke("ProductCostHistoryProvider_Update", new object[] {
                        entity});
            return ((ProductCostHistory)(results[0]));
        }
        
        /// <remarks/>
        public void ProductCostHistoryProvider_UpdateAsync(ProductCostHistory entity) {
            this.ProductCostHistoryProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void ProductCostHistoryProvider_UpdateAsync(ProductCostHistory entity, object userState) {
            if ((this.ProductCostHistoryProvider_UpdateOperationCompleted == null)) {
                this.ProductCostHistoryProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductCostHistoryProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("ProductCostHistoryProvider_Update", new object[] {
                        entity}, this.ProductCostHistoryProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnProductCostHistoryProvider_UpdateOperationCompleted(object arg) {
            if ((this.ProductCostHistoryProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductCostHistoryProvider_UpdateCompleted(this, new ProductCostHistoryProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TimestampPkProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TimestampPkProvider_Delete([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] _timestampPk) {
            object[] results = this.Invoke("TimestampPkProvider_Delete", new object[] {
                        _timestampPk});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TimestampPkProvider_DeleteAsync(byte[] _timestampPk) {
            this.TimestampPkProvider_DeleteAsync(_timestampPk, null);
        }
        
        /// <remarks/>
        public void TimestampPkProvider_DeleteAsync(byte[] _timestampPk, object userState) {
            if ((this.TimestampPkProvider_DeleteOperationCompleted == null)) {
                this.TimestampPkProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTimestampPkProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("TimestampPkProvider_Delete", new object[] {
                        _timestampPk}, this.TimestampPkProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnTimestampPkProvider_DeleteOperationCompleted(object arg) {
            if ((this.TimestampPkProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TimestampPkProvider_DeleteCompleted(this, new TimestampPkProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TimestampPkProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TimestampPk[] TimestampPkProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("TimestampPkProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((TimestampPk[])(results[0]));
        }
        
        /// <remarks/>
        public void TimestampPkProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.TimestampPkProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void TimestampPkProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.TimestampPkProvider_FindOperationCompleted == null)) {
                this.TimestampPkProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTimestampPkProvider_FindOperationCompleted);
            }
            this.InvokeAsync("TimestampPkProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.TimestampPkProvider_FindOperationCompleted, userState);
        }
        
        private void OnTimestampPkProvider_FindOperationCompleted(object arg) {
            if ((this.TimestampPkProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TimestampPkProvider_FindCompleted(this, new TimestampPkProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TimestampPkProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TimestampPk[] TimestampPkProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("TimestampPkProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((TimestampPk[])(results[0]));
        }
        
        /// <remarks/>
        public void TimestampPkProvider_GetAllAsync(int start, int pageLength) {
            this.TimestampPkProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void TimestampPkProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.TimestampPkProvider_GetAllOperationCompleted == null)) {
                this.TimestampPkProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTimestampPkProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("TimestampPkProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.TimestampPkProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnTimestampPkProvider_GetAllOperationCompleted(object arg) {
            if ((this.TimestampPkProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TimestampPkProvider_GetAllCompleted(this, new TimestampPkProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TimestampPkProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TimestampPk[] TimestampPkProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("TimestampPkProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((TimestampPk[])(results[0]));
        }
        
        /// <remarks/>
        public void TimestampPkProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.TimestampPkProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void TimestampPkProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.TimestampPkProvider_GetPagedOperationCompleted == null)) {
                this.TimestampPkProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTimestampPkProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("TimestampPkProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.TimestampPkProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnTimestampPkProvider_GetPagedOperationCompleted(object arg) {
            if ((this.TimestampPkProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TimestampPkProvider_GetPagedCompleted(this, new TimestampPkProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TimestampPkProvider_GetByTimestampPk", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TimestampPk TimestampPkProvider_GetByTimestampPk([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] _timestampPk, int start, int pageLength, out int count) {
            object[] results = this.Invoke("TimestampPkProvider_GetByTimestampPk", new object[] {
                        _timestampPk,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((TimestampPk)(results[0]));
        }
        
        /// <remarks/>
        public void TimestampPkProvider_GetByTimestampPkAsync(byte[] _timestampPk, int start, int pageLength) {
            this.TimestampPkProvider_GetByTimestampPkAsync(_timestampPk, start, pageLength, null);
        }
        
        /// <remarks/>
        public void TimestampPkProvider_GetByTimestampPkAsync(byte[] _timestampPk, int start, int pageLength, object userState) {
            if ((this.TimestampPkProvider_GetByTimestampPkOperationCompleted == null)) {
                this.TimestampPkProvider_GetByTimestampPkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTimestampPkProvider_GetByTimestampPkOperationCompleted);
            }
            this.InvokeAsync("TimestampPkProvider_GetByTimestampPk", new object[] {
                        _timestampPk,
                        start,
                        pageLength}, this.TimestampPkProvider_GetByTimestampPkOperationCompleted, userState);
        }
        
        private void OnTimestampPkProvider_GetByTimestampPkOperationCompleted(object arg) {
            if ((this.TimestampPkProvider_GetByTimestampPkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TimestampPkProvider_GetByTimestampPkCompleted(this, new TimestampPkProvider_GetByTimestampPkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TimestampPkProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TimestampPk TimestampPkProvider_Insert(TimestampPk entity) {
            object[] results = this.Invoke("TimestampPkProvider_Insert", new object[] {
                        entity});
            return ((TimestampPk)(results[0]));
        }
        
        /// <remarks/>
        public void TimestampPkProvider_InsertAsync(TimestampPk entity) {
            this.TimestampPkProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void TimestampPkProvider_InsertAsync(TimestampPk entity, object userState) {
            if ((this.TimestampPkProvider_InsertOperationCompleted == null)) {
                this.TimestampPkProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTimestampPkProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("TimestampPkProvider_Insert", new object[] {
                        entity}, this.TimestampPkProvider_InsertOperationCompleted, userState);
        }
        
        private void OnTimestampPkProvider_InsertOperationCompleted(object arg) {
            if ((this.TimestampPkProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TimestampPkProvider_InsertCompleted(this, new TimestampPkProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TimestampPkProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TimestampPkProvider_BulkInsert(TimestampPk[] entityList) {
            this.Invoke("TimestampPkProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void TimestampPkProvider_BulkInsertAsync(TimestampPk[] entityList) {
            this.TimestampPkProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void TimestampPkProvider_BulkInsertAsync(TimestampPk[] entityList, object userState) {
            if ((this.TimestampPkProvider_BulkInsertOperationCompleted == null)) {
                this.TimestampPkProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTimestampPkProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("TimestampPkProvider_BulkInsert", new object[] {
                        entityList}, this.TimestampPkProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnTimestampPkProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.TimestampPkProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TimestampPkProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TimestampPkProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TimestampPk TimestampPkProvider_Update(TimestampPk entity) {
            object[] results = this.Invoke("TimestampPkProvider_Update", new object[] {
                        entity});
            return ((TimestampPk)(results[0]));
        }
        
        /// <remarks/>
        public void TimestampPkProvider_UpdateAsync(TimestampPk entity) {
            this.TimestampPkProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void TimestampPkProvider_UpdateAsync(TimestampPk entity, object userState) {
            if ((this.TimestampPkProvider_UpdateOperationCompleted == null)) {
                this.TimestampPkProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTimestampPkProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("TimestampPkProvider_Update", new object[] {
                        entity}, this.TimestampPkProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnTimestampPkProvider_UpdateOperationCompleted(object arg) {
            if ((this.TimestampPkProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TimestampPkProvider_UpdateCompleted(this, new TimestampPkProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductInventoryProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ProductInventoryProvider_Delete(int _productId, short _locationId) {
            object[] results = this.Invoke("ProductInventoryProvider_Delete", new object[] {
                        _productId,
                        _locationId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ProductInventoryProvider_DeleteAsync(int _productId, short _locationId) {
            this.ProductInventoryProvider_DeleteAsync(_productId, _locationId, null);
        }
        
        /// <remarks/>
        public void ProductInventoryProvider_DeleteAsync(int _productId, short _locationId, object userState) {
            if ((this.ProductInventoryProvider_DeleteOperationCompleted == null)) {
                this.ProductInventoryProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductInventoryProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("ProductInventoryProvider_Delete", new object[] {
                        _productId,
                        _locationId}, this.ProductInventoryProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnProductInventoryProvider_DeleteOperationCompleted(object arg) {
            if ((this.ProductInventoryProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductInventoryProvider_DeleteCompleted(this, new ProductInventoryProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductInventoryProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductInventory[] ProductInventoryProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductInventoryProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductInventory[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductInventoryProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.ProductInventoryProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductInventoryProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.ProductInventoryProvider_FindOperationCompleted == null)) {
                this.ProductInventoryProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductInventoryProvider_FindOperationCompleted);
            }
            this.InvokeAsync("ProductInventoryProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.ProductInventoryProvider_FindOperationCompleted, userState);
        }
        
        private void OnProductInventoryProvider_FindOperationCompleted(object arg) {
            if ((this.ProductInventoryProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductInventoryProvider_FindCompleted(this, new ProductInventoryProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductInventoryProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductInventory[] ProductInventoryProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductInventoryProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductInventory[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductInventoryProvider_GetAllAsync(int start, int pageLength) {
            this.ProductInventoryProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductInventoryProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.ProductInventoryProvider_GetAllOperationCompleted == null)) {
                this.ProductInventoryProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductInventoryProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("ProductInventoryProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.ProductInventoryProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnProductInventoryProvider_GetAllOperationCompleted(object arg) {
            if ((this.ProductInventoryProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductInventoryProvider_GetAllCompleted(this, new ProductInventoryProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductInventoryProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductInventory[] ProductInventoryProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductInventoryProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductInventory[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductInventoryProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.ProductInventoryProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductInventoryProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.ProductInventoryProvider_GetPagedOperationCompleted == null)) {
                this.ProductInventoryProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductInventoryProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("ProductInventoryProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.ProductInventoryProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnProductInventoryProvider_GetPagedOperationCompleted(object arg) {
            if ((this.ProductInventoryProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductInventoryProvider_GetPagedCompleted(this, new ProductInventoryProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductInventoryProvider_GetByLocationId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductInventory[] ProductInventoryProvider_GetByLocationId(short _locationId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductInventoryProvider_GetByLocationId", new object[] {
                        _locationId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductInventory[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductInventoryProvider_GetByLocationIdAsync(short _locationId, int start, int pageLength) {
            this.ProductInventoryProvider_GetByLocationIdAsync(_locationId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductInventoryProvider_GetByLocationIdAsync(short _locationId, int start, int pageLength, object userState) {
            if ((this.ProductInventoryProvider_GetByLocationIdOperationCompleted == null)) {
                this.ProductInventoryProvider_GetByLocationIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductInventoryProvider_GetByLocationIdOperationCompleted);
            }
            this.InvokeAsync("ProductInventoryProvider_GetByLocationId", new object[] {
                        _locationId,
                        start,
                        pageLength}, this.ProductInventoryProvider_GetByLocationIdOperationCompleted, userState);
        }
        
        private void OnProductInventoryProvider_GetByLocationIdOperationCompleted(object arg) {
            if ((this.ProductInventoryProvider_GetByLocationIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductInventoryProvider_GetByLocationIdCompleted(this, new ProductInventoryProvider_GetByLocationIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductInventoryProvider_GetByProductId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductInventory[] ProductInventoryProvider_GetByProductId(int _productId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductInventoryProvider_GetByProductId", new object[] {
                        _productId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductInventory[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductInventoryProvider_GetByProductIdAsync(int _productId, int start, int pageLength) {
            this.ProductInventoryProvider_GetByProductIdAsync(_productId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductInventoryProvider_GetByProductIdAsync(int _productId, int start, int pageLength, object userState) {
            if ((this.ProductInventoryProvider_GetByProductIdOperationCompleted == null)) {
                this.ProductInventoryProvider_GetByProductIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductInventoryProvider_GetByProductIdOperationCompleted);
            }
            this.InvokeAsync("ProductInventoryProvider_GetByProductId", new object[] {
                        _productId,
                        start,
                        pageLength}, this.ProductInventoryProvider_GetByProductIdOperationCompleted, userState);
        }
        
        private void OnProductInventoryProvider_GetByProductIdOperationCompleted(object arg) {
            if ((this.ProductInventoryProvider_GetByProductIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductInventoryProvider_GetByProductIdCompleted(this, new ProductInventoryProvider_GetByProductIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductInventoryProvider_GetByProductIdLo" +
            "cationId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductInventory ProductInventoryProvider_GetByProductIdLocationId(int _productId, short _locationId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductInventoryProvider_GetByProductIdLocationId", new object[] {
                        _productId,
                        _locationId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductInventory)(results[0]));
        }
        
        /// <remarks/>
        public void ProductInventoryProvider_GetByProductIdLocationIdAsync(int _productId, short _locationId, int start, int pageLength) {
            this.ProductInventoryProvider_GetByProductIdLocationIdAsync(_productId, _locationId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductInventoryProvider_GetByProductIdLocationIdAsync(int _productId, short _locationId, int start, int pageLength, object userState) {
            if ((this.ProductInventoryProvider_GetByProductIdLocationIdOperationCompleted == null)) {
                this.ProductInventoryProvider_GetByProductIdLocationIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductInventoryProvider_GetByProductIdLocationIdOperationCompleted);
            }
            this.InvokeAsync("ProductInventoryProvider_GetByProductIdLocationId", new object[] {
                        _productId,
                        _locationId,
                        start,
                        pageLength}, this.ProductInventoryProvider_GetByProductIdLocationIdOperationCompleted, userState);
        }
        
        private void OnProductInventoryProvider_GetByProductIdLocationIdOperationCompleted(object arg) {
            if ((this.ProductInventoryProvider_GetByProductIdLocationIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductInventoryProvider_GetByProductIdLocationIdCompleted(this, new ProductInventoryProvider_GetByProductIdLocationIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductInventoryProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductInventory ProductInventoryProvider_Insert(ProductInventory entity) {
            object[] results = this.Invoke("ProductInventoryProvider_Insert", new object[] {
                        entity});
            return ((ProductInventory)(results[0]));
        }
        
        /// <remarks/>
        public void ProductInventoryProvider_InsertAsync(ProductInventory entity) {
            this.ProductInventoryProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void ProductInventoryProvider_InsertAsync(ProductInventory entity, object userState) {
            if ((this.ProductInventoryProvider_InsertOperationCompleted == null)) {
                this.ProductInventoryProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductInventoryProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("ProductInventoryProvider_Insert", new object[] {
                        entity}, this.ProductInventoryProvider_InsertOperationCompleted, userState);
        }
        
        private void OnProductInventoryProvider_InsertOperationCompleted(object arg) {
            if ((this.ProductInventoryProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductInventoryProvider_InsertCompleted(this, new ProductInventoryProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductInventoryProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ProductInventoryProvider_BulkInsert(ProductInventory[] entityList) {
            this.Invoke("ProductInventoryProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void ProductInventoryProvider_BulkInsertAsync(ProductInventory[] entityList) {
            this.ProductInventoryProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void ProductInventoryProvider_BulkInsertAsync(ProductInventory[] entityList, object userState) {
            if ((this.ProductInventoryProvider_BulkInsertOperationCompleted == null)) {
                this.ProductInventoryProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductInventoryProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("ProductInventoryProvider_BulkInsert", new object[] {
                        entityList}, this.ProductInventoryProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnProductInventoryProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.ProductInventoryProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductInventoryProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductInventoryProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductInventory ProductInventoryProvider_Update(ProductInventory entity) {
            object[] results = this.Invoke("ProductInventoryProvider_Update", new object[] {
                        entity});
            return ((ProductInventory)(results[0]));
        }
        
        /// <remarks/>
        public void ProductInventoryProvider_UpdateAsync(ProductInventory entity) {
            this.ProductInventoryProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void ProductInventoryProvider_UpdateAsync(ProductInventory entity, object userState) {
            if ((this.ProductInventoryProvider_UpdateOperationCompleted == null)) {
                this.ProductInventoryProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductInventoryProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("ProductInventoryProvider_Update", new object[] {
                        entity}, this.ProductInventoryProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnProductInventoryProvider_UpdateOperationCompleted(object arg) {
            if ((this.ProductInventoryProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductInventoryProvider_UpdateCompleted(this, new ProductInventoryProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CurrencyRateProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CurrencyRateProvider_Delete(int _currencyRateId) {
            object[] results = this.Invoke("CurrencyRateProvider_Delete", new object[] {
                        _currencyRateId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CurrencyRateProvider_DeleteAsync(int _currencyRateId) {
            this.CurrencyRateProvider_DeleteAsync(_currencyRateId, null);
        }
        
        /// <remarks/>
        public void CurrencyRateProvider_DeleteAsync(int _currencyRateId, object userState) {
            if ((this.CurrencyRateProvider_DeleteOperationCompleted == null)) {
                this.CurrencyRateProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrencyRateProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("CurrencyRateProvider_Delete", new object[] {
                        _currencyRateId}, this.CurrencyRateProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnCurrencyRateProvider_DeleteOperationCompleted(object arg) {
            if ((this.CurrencyRateProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrencyRateProvider_DeleteCompleted(this, new CurrencyRateProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CurrencyRateProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CurrencyRate[] CurrencyRateProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CurrencyRateProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((CurrencyRate[])(results[0]));
        }
        
        /// <remarks/>
        public void CurrencyRateProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.CurrencyRateProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CurrencyRateProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.CurrencyRateProvider_FindOperationCompleted == null)) {
                this.CurrencyRateProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrencyRateProvider_FindOperationCompleted);
            }
            this.InvokeAsync("CurrencyRateProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.CurrencyRateProvider_FindOperationCompleted, userState);
        }
        
        private void OnCurrencyRateProvider_FindOperationCompleted(object arg) {
            if ((this.CurrencyRateProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrencyRateProvider_FindCompleted(this, new CurrencyRateProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CurrencyRateProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CurrencyRate[] CurrencyRateProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("CurrencyRateProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((CurrencyRate[])(results[0]));
        }
        
        /// <remarks/>
        public void CurrencyRateProvider_GetAllAsync(int start, int pageLength) {
            this.CurrencyRateProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void CurrencyRateProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.CurrencyRateProvider_GetAllOperationCompleted == null)) {
                this.CurrencyRateProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrencyRateProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("CurrencyRateProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.CurrencyRateProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnCurrencyRateProvider_GetAllOperationCompleted(object arg) {
            if ((this.CurrencyRateProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrencyRateProvider_GetAllCompleted(this, new CurrencyRateProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CurrencyRateProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CurrencyRate[] CurrencyRateProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CurrencyRateProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((CurrencyRate[])(results[0]));
        }
        
        /// <remarks/>
        public void CurrencyRateProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.CurrencyRateProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CurrencyRateProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.CurrencyRateProvider_GetPagedOperationCompleted == null)) {
                this.CurrencyRateProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrencyRateProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("CurrencyRateProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.CurrencyRateProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnCurrencyRateProvider_GetPagedOperationCompleted(object arg) {
            if ((this.CurrencyRateProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrencyRateProvider_GetPagedCompleted(this, new CurrencyRateProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CurrencyRateProvider_GetByFromCurrencyCod" +
            "e", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CurrencyRate[] CurrencyRateProvider_GetByFromCurrencyCode(string _fromCurrencyCode, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CurrencyRateProvider_GetByFromCurrencyCode", new object[] {
                        _fromCurrencyCode,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((CurrencyRate[])(results[0]));
        }
        
        /// <remarks/>
        public void CurrencyRateProvider_GetByFromCurrencyCodeAsync(string _fromCurrencyCode, int start, int pageLength) {
            this.CurrencyRateProvider_GetByFromCurrencyCodeAsync(_fromCurrencyCode, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CurrencyRateProvider_GetByFromCurrencyCodeAsync(string _fromCurrencyCode, int start, int pageLength, object userState) {
            if ((this.CurrencyRateProvider_GetByFromCurrencyCodeOperationCompleted == null)) {
                this.CurrencyRateProvider_GetByFromCurrencyCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrencyRateProvider_GetByFromCurrencyCodeOperationCompleted);
            }
            this.InvokeAsync("CurrencyRateProvider_GetByFromCurrencyCode", new object[] {
                        _fromCurrencyCode,
                        start,
                        pageLength}, this.CurrencyRateProvider_GetByFromCurrencyCodeOperationCompleted, userState);
        }
        
        private void OnCurrencyRateProvider_GetByFromCurrencyCodeOperationCompleted(object arg) {
            if ((this.CurrencyRateProvider_GetByFromCurrencyCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrencyRateProvider_GetByFromCurrencyCodeCompleted(this, new CurrencyRateProvider_GetByFromCurrencyCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CurrencyRateProvider_GetByToCurrencyCode", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CurrencyRate[] CurrencyRateProvider_GetByToCurrencyCode(string _toCurrencyCode, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CurrencyRateProvider_GetByToCurrencyCode", new object[] {
                        _toCurrencyCode,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((CurrencyRate[])(results[0]));
        }
        
        /// <remarks/>
        public void CurrencyRateProvider_GetByToCurrencyCodeAsync(string _toCurrencyCode, int start, int pageLength) {
            this.CurrencyRateProvider_GetByToCurrencyCodeAsync(_toCurrencyCode, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CurrencyRateProvider_GetByToCurrencyCodeAsync(string _toCurrencyCode, int start, int pageLength, object userState) {
            if ((this.CurrencyRateProvider_GetByToCurrencyCodeOperationCompleted == null)) {
                this.CurrencyRateProvider_GetByToCurrencyCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrencyRateProvider_GetByToCurrencyCodeOperationCompleted);
            }
            this.InvokeAsync("CurrencyRateProvider_GetByToCurrencyCode", new object[] {
                        _toCurrencyCode,
                        start,
                        pageLength}, this.CurrencyRateProvider_GetByToCurrencyCodeOperationCompleted, userState);
        }
        
        private void OnCurrencyRateProvider_GetByToCurrencyCodeOperationCompleted(object arg) {
            if ((this.CurrencyRateProvider_GetByToCurrencyCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrencyRateProvider_GetByToCurrencyCodeCompleted(this, new CurrencyRateProvider_GetByToCurrencyCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CurrencyRateProvider_GetByCurrencyRateDat" +
            "eFromCurrencyCodeToCurrencyCode", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CurrencyRate CurrencyRateProvider_GetByCurrencyRateDateFromCurrencyCodeToCurrencyCode(System.DateTime _currencyRateDate, string _fromCurrencyCode, string _toCurrencyCode, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CurrencyRateProvider_GetByCurrencyRateDateFromCurrencyCodeToCurrencyCode", new object[] {
                        _currencyRateDate,
                        _fromCurrencyCode,
                        _toCurrencyCode,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((CurrencyRate)(results[0]));
        }
        
        /// <remarks/>
        public void CurrencyRateProvider_GetByCurrencyRateDateFromCurrencyCodeToCurrencyCodeAsync(System.DateTime _currencyRateDate, string _fromCurrencyCode, string _toCurrencyCode, int start, int pageLength) {
            this.CurrencyRateProvider_GetByCurrencyRateDateFromCurrencyCodeToCurrencyCodeAsync(_currencyRateDate, _fromCurrencyCode, _toCurrencyCode, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CurrencyRateProvider_GetByCurrencyRateDateFromCurrencyCodeToCurrencyCodeAsync(System.DateTime _currencyRateDate, string _fromCurrencyCode, string _toCurrencyCode, int start, int pageLength, object userState) {
            if ((this.CurrencyRateProvider_GetByCurrencyRateDateFromCurrencyCodeToCurrencyCodeOperationCompleted == null)) {
                this.CurrencyRateProvider_GetByCurrencyRateDateFromCurrencyCodeToCurrencyCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrencyRateProvider_GetByCurrencyRateDateFromCurrencyCodeToCurrencyCodeOperationCompleted);
            }
            this.InvokeAsync("CurrencyRateProvider_GetByCurrencyRateDateFromCurrencyCodeToCurrencyCode", new object[] {
                        _currencyRateDate,
                        _fromCurrencyCode,
                        _toCurrencyCode,
                        start,
                        pageLength}, this.CurrencyRateProvider_GetByCurrencyRateDateFromCurrencyCodeToCurrencyCodeOperationCompleted, userState);
        }
        
        private void OnCurrencyRateProvider_GetByCurrencyRateDateFromCurrencyCodeToCurrencyCodeOperationCompleted(object arg) {
            if ((this.CurrencyRateProvider_GetByCurrencyRateDateFromCurrencyCodeToCurrencyCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrencyRateProvider_GetByCurrencyRateDateFromCurrencyCodeToCurrencyCodeCompleted(this, new CurrencyRateProvider_GetByCurrencyRateDateFromCurrencyCodeToCurrencyCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CurrencyRateProvider_GetByCurrencyRateId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CurrencyRate CurrencyRateProvider_GetByCurrencyRateId(int _currencyRateId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CurrencyRateProvider_GetByCurrencyRateId", new object[] {
                        _currencyRateId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((CurrencyRate)(results[0]));
        }
        
        /// <remarks/>
        public void CurrencyRateProvider_GetByCurrencyRateIdAsync(int _currencyRateId, int start, int pageLength) {
            this.CurrencyRateProvider_GetByCurrencyRateIdAsync(_currencyRateId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CurrencyRateProvider_GetByCurrencyRateIdAsync(int _currencyRateId, int start, int pageLength, object userState) {
            if ((this.CurrencyRateProvider_GetByCurrencyRateIdOperationCompleted == null)) {
                this.CurrencyRateProvider_GetByCurrencyRateIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrencyRateProvider_GetByCurrencyRateIdOperationCompleted);
            }
            this.InvokeAsync("CurrencyRateProvider_GetByCurrencyRateId", new object[] {
                        _currencyRateId,
                        start,
                        pageLength}, this.CurrencyRateProvider_GetByCurrencyRateIdOperationCompleted, userState);
        }
        
        private void OnCurrencyRateProvider_GetByCurrencyRateIdOperationCompleted(object arg) {
            if ((this.CurrencyRateProvider_GetByCurrencyRateIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrencyRateProvider_GetByCurrencyRateIdCompleted(this, new CurrencyRateProvider_GetByCurrencyRateIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CurrencyRateProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CurrencyRate CurrencyRateProvider_Insert(CurrencyRate entity) {
            object[] results = this.Invoke("CurrencyRateProvider_Insert", new object[] {
                        entity});
            return ((CurrencyRate)(results[0]));
        }
        
        /// <remarks/>
        public void CurrencyRateProvider_InsertAsync(CurrencyRate entity) {
            this.CurrencyRateProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void CurrencyRateProvider_InsertAsync(CurrencyRate entity, object userState) {
            if ((this.CurrencyRateProvider_InsertOperationCompleted == null)) {
                this.CurrencyRateProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrencyRateProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("CurrencyRateProvider_Insert", new object[] {
                        entity}, this.CurrencyRateProvider_InsertOperationCompleted, userState);
        }
        
        private void OnCurrencyRateProvider_InsertOperationCompleted(object arg) {
            if ((this.CurrencyRateProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrencyRateProvider_InsertCompleted(this, new CurrencyRateProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CurrencyRateProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CurrencyRateProvider_BulkInsert(CurrencyRate[] entityList) {
            this.Invoke("CurrencyRateProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void CurrencyRateProvider_BulkInsertAsync(CurrencyRate[] entityList) {
            this.CurrencyRateProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void CurrencyRateProvider_BulkInsertAsync(CurrencyRate[] entityList, object userState) {
            if ((this.CurrencyRateProvider_BulkInsertOperationCompleted == null)) {
                this.CurrencyRateProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrencyRateProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("CurrencyRateProvider_BulkInsert", new object[] {
                        entityList}, this.CurrencyRateProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnCurrencyRateProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.CurrencyRateProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrencyRateProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CurrencyRateProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CurrencyRate CurrencyRateProvider_Update(CurrencyRate entity) {
            object[] results = this.Invoke("CurrencyRateProvider_Update", new object[] {
                        entity});
            return ((CurrencyRate)(results[0]));
        }
        
        /// <remarks/>
        public void CurrencyRateProvider_UpdateAsync(CurrencyRate entity) {
            this.CurrencyRateProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void CurrencyRateProvider_UpdateAsync(CurrencyRate entity, object userState) {
            if ((this.CurrencyRateProvider_UpdateOperationCompleted == null)) {
                this.CurrencyRateProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrencyRateProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("CurrencyRateProvider_Update", new object[] {
                        entity}, this.CurrencyRateProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnCurrencyRateProvider_UpdateOperationCompleted(object arg) {
            if ((this.CurrencyRateProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrencyRateProvider_UpdateCompleted(this, new CurrencyRateProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesTerritoryProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SalesTerritoryProvider_Delete(int _territoryId) {
            object[] results = this.Invoke("SalesTerritoryProvider_Delete", new object[] {
                        _territoryId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SalesTerritoryProvider_DeleteAsync(int _territoryId) {
            this.SalesTerritoryProvider_DeleteAsync(_territoryId, null);
        }
        
        /// <remarks/>
        public void SalesTerritoryProvider_DeleteAsync(int _territoryId, object userState) {
            if ((this.SalesTerritoryProvider_DeleteOperationCompleted == null)) {
                this.SalesTerritoryProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesTerritoryProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("SalesTerritoryProvider_Delete", new object[] {
                        _territoryId}, this.SalesTerritoryProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnSalesTerritoryProvider_DeleteOperationCompleted(object arg) {
            if ((this.SalesTerritoryProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesTerritoryProvider_DeleteCompleted(this, new SalesTerritoryProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesTerritoryProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesTerritory[] SalesTerritoryProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesTerritoryProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesTerritory[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesTerritoryProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.SalesTerritoryProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesTerritoryProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.SalesTerritoryProvider_FindOperationCompleted == null)) {
                this.SalesTerritoryProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesTerritoryProvider_FindOperationCompleted);
            }
            this.InvokeAsync("SalesTerritoryProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.SalesTerritoryProvider_FindOperationCompleted, userState);
        }
        
        private void OnSalesTerritoryProvider_FindOperationCompleted(object arg) {
            if ((this.SalesTerritoryProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesTerritoryProvider_FindCompleted(this, new SalesTerritoryProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesTerritoryProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesTerritory[] SalesTerritoryProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesTerritoryProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesTerritory[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesTerritoryProvider_GetAllAsync(int start, int pageLength) {
            this.SalesTerritoryProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesTerritoryProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.SalesTerritoryProvider_GetAllOperationCompleted == null)) {
                this.SalesTerritoryProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesTerritoryProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("SalesTerritoryProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.SalesTerritoryProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnSalesTerritoryProvider_GetAllOperationCompleted(object arg) {
            if ((this.SalesTerritoryProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesTerritoryProvider_GetAllCompleted(this, new SalesTerritoryProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesTerritoryProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesTerritory[] SalesTerritoryProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesTerritoryProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesTerritory[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesTerritoryProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.SalesTerritoryProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesTerritoryProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.SalesTerritoryProvider_GetPagedOperationCompleted == null)) {
                this.SalesTerritoryProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesTerritoryProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("SalesTerritoryProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.SalesTerritoryProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnSalesTerritoryProvider_GetPagedOperationCompleted(object arg) {
            if ((this.SalesTerritoryProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesTerritoryProvider_GetPagedCompleted(this, new SalesTerritoryProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesTerritoryProvider_GetByName", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesTerritory SalesTerritoryProvider_GetByName(string _name, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesTerritoryProvider_GetByName", new object[] {
                        _name,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesTerritory)(results[0]));
        }
        
        /// <remarks/>
        public void SalesTerritoryProvider_GetByNameAsync(string _name, int start, int pageLength) {
            this.SalesTerritoryProvider_GetByNameAsync(_name, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesTerritoryProvider_GetByNameAsync(string _name, int start, int pageLength, object userState) {
            if ((this.SalesTerritoryProvider_GetByNameOperationCompleted == null)) {
                this.SalesTerritoryProvider_GetByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesTerritoryProvider_GetByNameOperationCompleted);
            }
            this.InvokeAsync("SalesTerritoryProvider_GetByName", new object[] {
                        _name,
                        start,
                        pageLength}, this.SalesTerritoryProvider_GetByNameOperationCompleted, userState);
        }
        
        private void OnSalesTerritoryProvider_GetByNameOperationCompleted(object arg) {
            if ((this.SalesTerritoryProvider_GetByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesTerritoryProvider_GetByNameCompleted(this, new SalesTerritoryProvider_GetByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesTerritoryProvider_GetByRowguid", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesTerritory SalesTerritoryProvider_GetByRowguid(System.Guid _rowguid, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesTerritoryProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesTerritory)(results[0]));
        }
        
        /// <remarks/>
        public void SalesTerritoryProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength) {
            this.SalesTerritoryProvider_GetByRowguidAsync(_rowguid, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesTerritoryProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength, object userState) {
            if ((this.SalesTerritoryProvider_GetByRowguidOperationCompleted == null)) {
                this.SalesTerritoryProvider_GetByRowguidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesTerritoryProvider_GetByRowguidOperationCompleted);
            }
            this.InvokeAsync("SalesTerritoryProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength}, this.SalesTerritoryProvider_GetByRowguidOperationCompleted, userState);
        }
        
        private void OnSalesTerritoryProvider_GetByRowguidOperationCompleted(object arg) {
            if ((this.SalesTerritoryProvider_GetByRowguidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesTerritoryProvider_GetByRowguidCompleted(this, new SalesTerritoryProvider_GetByRowguidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesTerritoryProvider_GetByTerritoryId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesTerritory SalesTerritoryProvider_GetByTerritoryId(int _territoryId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesTerritoryProvider_GetByTerritoryId", new object[] {
                        _territoryId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesTerritory)(results[0]));
        }
        
        /// <remarks/>
        public void SalesTerritoryProvider_GetByTerritoryIdAsync(int _territoryId, int start, int pageLength) {
            this.SalesTerritoryProvider_GetByTerritoryIdAsync(_territoryId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesTerritoryProvider_GetByTerritoryIdAsync(int _territoryId, int start, int pageLength, object userState) {
            if ((this.SalesTerritoryProvider_GetByTerritoryIdOperationCompleted == null)) {
                this.SalesTerritoryProvider_GetByTerritoryIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesTerritoryProvider_GetByTerritoryIdOperationCompleted);
            }
            this.InvokeAsync("SalesTerritoryProvider_GetByTerritoryId", new object[] {
                        _territoryId,
                        start,
                        pageLength}, this.SalesTerritoryProvider_GetByTerritoryIdOperationCompleted, userState);
        }
        
        private void OnSalesTerritoryProvider_GetByTerritoryIdOperationCompleted(object arg) {
            if ((this.SalesTerritoryProvider_GetByTerritoryIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesTerritoryProvider_GetByTerritoryIdCompleted(this, new SalesTerritoryProvider_GetByTerritoryIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesTerritoryProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesTerritory SalesTerritoryProvider_Insert(SalesTerritory entity) {
            object[] results = this.Invoke("SalesTerritoryProvider_Insert", new object[] {
                        entity});
            return ((SalesTerritory)(results[0]));
        }
        
        /// <remarks/>
        public void SalesTerritoryProvider_InsertAsync(SalesTerritory entity) {
            this.SalesTerritoryProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void SalesTerritoryProvider_InsertAsync(SalesTerritory entity, object userState) {
            if ((this.SalesTerritoryProvider_InsertOperationCompleted == null)) {
                this.SalesTerritoryProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesTerritoryProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("SalesTerritoryProvider_Insert", new object[] {
                        entity}, this.SalesTerritoryProvider_InsertOperationCompleted, userState);
        }
        
        private void OnSalesTerritoryProvider_InsertOperationCompleted(object arg) {
            if ((this.SalesTerritoryProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesTerritoryProvider_InsertCompleted(this, new SalesTerritoryProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesTerritoryProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SalesTerritoryProvider_BulkInsert(SalesTerritory[] entityList) {
            this.Invoke("SalesTerritoryProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void SalesTerritoryProvider_BulkInsertAsync(SalesTerritory[] entityList) {
            this.SalesTerritoryProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void SalesTerritoryProvider_BulkInsertAsync(SalesTerritory[] entityList, object userState) {
            if ((this.SalesTerritoryProvider_BulkInsertOperationCompleted == null)) {
                this.SalesTerritoryProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesTerritoryProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("SalesTerritoryProvider_BulkInsert", new object[] {
                        entityList}, this.SalesTerritoryProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnSalesTerritoryProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.SalesTerritoryProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesTerritoryProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesTerritoryProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesTerritory SalesTerritoryProvider_Update(SalesTerritory entity) {
            object[] results = this.Invoke("SalesTerritoryProvider_Update", new object[] {
                        entity});
            return ((SalesTerritory)(results[0]));
        }
        
        /// <remarks/>
        public void SalesTerritoryProvider_UpdateAsync(SalesTerritory entity) {
            this.SalesTerritoryProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void SalesTerritoryProvider_UpdateAsync(SalesTerritory entity, object userState) {
            if ((this.SalesTerritoryProvider_UpdateOperationCompleted == null)) {
                this.SalesTerritoryProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesTerritoryProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("SalesTerritoryProvider_Update", new object[] {
                        entity}, this.SalesTerritoryProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnSalesTerritoryProvider_UpdateOperationCompleted(object arg) {
            if ((this.SalesTerritoryProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesTerritoryProvider_UpdateCompleted(this, new SalesTerritoryProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TransactionHistoryProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TransactionHistoryProvider_Delete(int _transactionId) {
            object[] results = this.Invoke("TransactionHistoryProvider_Delete", new object[] {
                        _transactionId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TransactionHistoryProvider_DeleteAsync(int _transactionId) {
            this.TransactionHistoryProvider_DeleteAsync(_transactionId, null);
        }
        
        /// <remarks/>
        public void TransactionHistoryProvider_DeleteAsync(int _transactionId, object userState) {
            if ((this.TransactionHistoryProvider_DeleteOperationCompleted == null)) {
                this.TransactionHistoryProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransactionHistoryProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("TransactionHistoryProvider_Delete", new object[] {
                        _transactionId}, this.TransactionHistoryProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnTransactionHistoryProvider_DeleteOperationCompleted(object arg) {
            if ((this.TransactionHistoryProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransactionHistoryProvider_DeleteCompleted(this, new TransactionHistoryProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TransactionHistoryProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionHistory[] TransactionHistoryProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("TransactionHistoryProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((TransactionHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void TransactionHistoryProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.TransactionHistoryProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void TransactionHistoryProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.TransactionHistoryProvider_FindOperationCompleted == null)) {
                this.TransactionHistoryProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransactionHistoryProvider_FindOperationCompleted);
            }
            this.InvokeAsync("TransactionHistoryProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.TransactionHistoryProvider_FindOperationCompleted, userState);
        }
        
        private void OnTransactionHistoryProvider_FindOperationCompleted(object arg) {
            if ((this.TransactionHistoryProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransactionHistoryProvider_FindCompleted(this, new TransactionHistoryProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TransactionHistoryProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionHistory[] TransactionHistoryProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("TransactionHistoryProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((TransactionHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void TransactionHistoryProvider_GetAllAsync(int start, int pageLength) {
            this.TransactionHistoryProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void TransactionHistoryProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.TransactionHistoryProvider_GetAllOperationCompleted == null)) {
                this.TransactionHistoryProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransactionHistoryProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("TransactionHistoryProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.TransactionHistoryProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnTransactionHistoryProvider_GetAllOperationCompleted(object arg) {
            if ((this.TransactionHistoryProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransactionHistoryProvider_GetAllCompleted(this, new TransactionHistoryProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TransactionHistoryProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionHistory[] TransactionHistoryProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("TransactionHistoryProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((TransactionHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void TransactionHistoryProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.TransactionHistoryProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void TransactionHistoryProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.TransactionHistoryProvider_GetPagedOperationCompleted == null)) {
                this.TransactionHistoryProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransactionHistoryProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("TransactionHistoryProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.TransactionHistoryProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnTransactionHistoryProvider_GetPagedOperationCompleted(object arg) {
            if ((this.TransactionHistoryProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransactionHistoryProvider_GetPagedCompleted(this, new TransactionHistoryProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TransactionHistoryProvider_GetByProductId" +
            "", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionHistory[] TransactionHistoryProvider_GetByProductId(int _productId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("TransactionHistoryProvider_GetByProductId", new object[] {
                        _productId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((TransactionHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void TransactionHistoryProvider_GetByProductIdAsync(int _productId, int start, int pageLength) {
            this.TransactionHistoryProvider_GetByProductIdAsync(_productId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void TransactionHistoryProvider_GetByProductIdAsync(int _productId, int start, int pageLength, object userState) {
            if ((this.TransactionHistoryProvider_GetByProductIdOperationCompleted == null)) {
                this.TransactionHistoryProvider_GetByProductIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransactionHistoryProvider_GetByProductIdOperationCompleted);
            }
            this.InvokeAsync("TransactionHistoryProvider_GetByProductId", new object[] {
                        _productId,
                        start,
                        pageLength}, this.TransactionHistoryProvider_GetByProductIdOperationCompleted, userState);
        }
        
        private void OnTransactionHistoryProvider_GetByProductIdOperationCompleted(object arg) {
            if ((this.TransactionHistoryProvider_GetByProductIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransactionHistoryProvider_GetByProductIdCompleted(this, new TransactionHistoryProvider_GetByProductIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TransactionHistoryProvider_GetByReference" +
            "OrderIdReferenceOrderLineId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionHistory[] TransactionHistoryProvider_GetByReferenceOrderIdReferenceOrderLineId(int _referenceOrderId, int _referenceOrderLineId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("TransactionHistoryProvider_GetByReferenceOrderIdReferenceOrderLineId", new object[] {
                        _referenceOrderId,
                        _referenceOrderLineId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((TransactionHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void TransactionHistoryProvider_GetByReferenceOrderIdReferenceOrderLineIdAsync(int _referenceOrderId, int _referenceOrderLineId, int start, int pageLength) {
            this.TransactionHistoryProvider_GetByReferenceOrderIdReferenceOrderLineIdAsync(_referenceOrderId, _referenceOrderLineId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void TransactionHistoryProvider_GetByReferenceOrderIdReferenceOrderLineIdAsync(int _referenceOrderId, int _referenceOrderLineId, int start, int pageLength, object userState) {
            if ((this.TransactionHistoryProvider_GetByReferenceOrderIdReferenceOrderLineIdOperationCompleted == null)) {
                this.TransactionHistoryProvider_GetByReferenceOrderIdReferenceOrderLineIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransactionHistoryProvider_GetByReferenceOrderIdReferenceOrderLineIdOperationCompleted);
            }
            this.InvokeAsync("TransactionHistoryProvider_GetByReferenceOrderIdReferenceOrderLineId", new object[] {
                        _referenceOrderId,
                        _referenceOrderLineId,
                        start,
                        pageLength}, this.TransactionHistoryProvider_GetByReferenceOrderIdReferenceOrderLineIdOperationCompleted, userState);
        }
        
        private void OnTransactionHistoryProvider_GetByReferenceOrderIdReferenceOrderLineIdOperationCompleted(object arg) {
            if ((this.TransactionHistoryProvider_GetByReferenceOrderIdReferenceOrderLineIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransactionHistoryProvider_GetByReferenceOrderIdReferenceOrderLineIdCompleted(this, new TransactionHistoryProvider_GetByReferenceOrderIdReferenceOrderLineIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TransactionHistoryProvider_GetByTransacti" +
            "onId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionHistory TransactionHistoryProvider_GetByTransactionId(int _transactionId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("TransactionHistoryProvider_GetByTransactionId", new object[] {
                        _transactionId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((TransactionHistory)(results[0]));
        }
        
        /// <remarks/>
        public void TransactionHistoryProvider_GetByTransactionIdAsync(int _transactionId, int start, int pageLength) {
            this.TransactionHistoryProvider_GetByTransactionIdAsync(_transactionId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void TransactionHistoryProvider_GetByTransactionIdAsync(int _transactionId, int start, int pageLength, object userState) {
            if ((this.TransactionHistoryProvider_GetByTransactionIdOperationCompleted == null)) {
                this.TransactionHistoryProvider_GetByTransactionIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransactionHistoryProvider_GetByTransactionIdOperationCompleted);
            }
            this.InvokeAsync("TransactionHistoryProvider_GetByTransactionId", new object[] {
                        _transactionId,
                        start,
                        pageLength}, this.TransactionHistoryProvider_GetByTransactionIdOperationCompleted, userState);
        }
        
        private void OnTransactionHistoryProvider_GetByTransactionIdOperationCompleted(object arg) {
            if ((this.TransactionHistoryProvider_GetByTransactionIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransactionHistoryProvider_GetByTransactionIdCompleted(this, new TransactionHistoryProvider_GetByTransactionIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TransactionHistoryProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionHistory TransactionHistoryProvider_Insert(TransactionHistory entity) {
            object[] results = this.Invoke("TransactionHistoryProvider_Insert", new object[] {
                        entity});
            return ((TransactionHistory)(results[0]));
        }
        
        /// <remarks/>
        public void TransactionHistoryProvider_InsertAsync(TransactionHistory entity) {
            this.TransactionHistoryProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void TransactionHistoryProvider_InsertAsync(TransactionHistory entity, object userState) {
            if ((this.TransactionHistoryProvider_InsertOperationCompleted == null)) {
                this.TransactionHistoryProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransactionHistoryProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("TransactionHistoryProvider_Insert", new object[] {
                        entity}, this.TransactionHistoryProvider_InsertOperationCompleted, userState);
        }
        
        private void OnTransactionHistoryProvider_InsertOperationCompleted(object arg) {
            if ((this.TransactionHistoryProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransactionHistoryProvider_InsertCompleted(this, new TransactionHistoryProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TransactionHistoryProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TransactionHistoryProvider_BulkInsert(TransactionHistory[] entityList) {
            this.Invoke("TransactionHistoryProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void TransactionHistoryProvider_BulkInsertAsync(TransactionHistory[] entityList) {
            this.TransactionHistoryProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void TransactionHistoryProvider_BulkInsertAsync(TransactionHistory[] entityList, object userState) {
            if ((this.TransactionHistoryProvider_BulkInsertOperationCompleted == null)) {
                this.TransactionHistoryProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransactionHistoryProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("TransactionHistoryProvider_BulkInsert", new object[] {
                        entityList}, this.TransactionHistoryProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnTransactionHistoryProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.TransactionHistoryProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransactionHistoryProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/TransactionHistoryProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionHistory TransactionHistoryProvider_Update(TransactionHistory entity) {
            object[] results = this.Invoke("TransactionHistoryProvider_Update", new object[] {
                        entity});
            return ((TransactionHistory)(results[0]));
        }
        
        /// <remarks/>
        public void TransactionHistoryProvider_UpdateAsync(TransactionHistory entity) {
            this.TransactionHistoryProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void TransactionHistoryProvider_UpdateAsync(TransactionHistory entity, object userState) {
            if ((this.TransactionHistoryProvider_UpdateOperationCompleted == null)) {
                this.TransactionHistoryProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransactionHistoryProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("TransactionHistoryProvider_Update", new object[] {
                        entity}, this.TransactionHistoryProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnTransactionHistoryProvider_UpdateOperationCompleted(object arg) {
            if ((this.TransactionHistoryProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransactionHistoryProvider_UpdateCompleted(this, new TransactionHistoryProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/IllustrationProvider_GetByProductModelIdF" +
            "romProductModelIllustration", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Illustration[] IllustrationProvider_GetByProductModelIdFromProductModelIllustration(int _productModelId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("IllustrationProvider_GetByProductModelIdFromProductModelIllustration", new object[] {
                        _productModelId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Illustration[])(results[0]));
        }
        
        /// <remarks/>
        public void IllustrationProvider_GetByProductModelIdFromProductModelIllustrationAsync(int _productModelId, int start, int pageLength) {
            this.IllustrationProvider_GetByProductModelIdFromProductModelIllustrationAsync(_productModelId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void IllustrationProvider_GetByProductModelIdFromProductModelIllustrationAsync(int _productModelId, int start, int pageLength, object userState) {
            if ((this.IllustrationProvider_GetByProductModelIdFromProductModelIllustrationOperationCompleted == null)) {
                this.IllustrationProvider_GetByProductModelIdFromProductModelIllustrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIllustrationProvider_GetByProductModelIdFromProductModelIllustrationOperationCompleted);
            }
            this.InvokeAsync("IllustrationProvider_GetByProductModelIdFromProductModelIllustration", new object[] {
                        _productModelId,
                        start,
                        pageLength}, this.IllustrationProvider_GetByProductModelIdFromProductModelIllustrationOperationCompleted, userState);
        }
        
        private void OnIllustrationProvider_GetByProductModelIdFromProductModelIllustrationOperationCompleted(object arg) {
            if ((this.IllustrationProvider_GetByProductModelIdFromProductModelIllustrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IllustrationProvider_GetByProductModelIdFromProductModelIllustrationCompleted(this, new IllustrationProvider_GetByProductModelIdFromProductModelIllustrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/IllustrationProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IllustrationProvider_Delete(int _illustrationId) {
            object[] results = this.Invoke("IllustrationProvider_Delete", new object[] {
                        _illustrationId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IllustrationProvider_DeleteAsync(int _illustrationId) {
            this.IllustrationProvider_DeleteAsync(_illustrationId, null);
        }
        
        /// <remarks/>
        public void IllustrationProvider_DeleteAsync(int _illustrationId, object userState) {
            if ((this.IllustrationProvider_DeleteOperationCompleted == null)) {
                this.IllustrationProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIllustrationProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("IllustrationProvider_Delete", new object[] {
                        _illustrationId}, this.IllustrationProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnIllustrationProvider_DeleteOperationCompleted(object arg) {
            if ((this.IllustrationProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IllustrationProvider_DeleteCompleted(this, new IllustrationProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/IllustrationProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Illustration[] IllustrationProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("IllustrationProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Illustration[])(results[0]));
        }
        
        /// <remarks/>
        public void IllustrationProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.IllustrationProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void IllustrationProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.IllustrationProvider_FindOperationCompleted == null)) {
                this.IllustrationProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIllustrationProvider_FindOperationCompleted);
            }
            this.InvokeAsync("IllustrationProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.IllustrationProvider_FindOperationCompleted, userState);
        }
        
        private void OnIllustrationProvider_FindOperationCompleted(object arg) {
            if ((this.IllustrationProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IllustrationProvider_FindCompleted(this, new IllustrationProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/IllustrationProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Illustration[] IllustrationProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("IllustrationProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Illustration[])(results[0]));
        }
        
        /// <remarks/>
        public void IllustrationProvider_GetAllAsync(int start, int pageLength) {
            this.IllustrationProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void IllustrationProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.IllustrationProvider_GetAllOperationCompleted == null)) {
                this.IllustrationProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIllustrationProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("IllustrationProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.IllustrationProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnIllustrationProvider_GetAllOperationCompleted(object arg) {
            if ((this.IllustrationProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IllustrationProvider_GetAllCompleted(this, new IllustrationProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/IllustrationProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Illustration[] IllustrationProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("IllustrationProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Illustration[])(results[0]));
        }
        
        /// <remarks/>
        public void IllustrationProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.IllustrationProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void IllustrationProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.IllustrationProvider_GetPagedOperationCompleted == null)) {
                this.IllustrationProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIllustrationProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("IllustrationProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.IllustrationProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnIllustrationProvider_GetPagedOperationCompleted(object arg) {
            if ((this.IllustrationProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IllustrationProvider_GetPagedCompleted(this, new IllustrationProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/IllustrationProvider_GetByIllustrationId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Illustration IllustrationProvider_GetByIllustrationId(int _illustrationId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("IllustrationProvider_GetByIllustrationId", new object[] {
                        _illustrationId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Illustration)(results[0]));
        }
        
        /// <remarks/>
        public void IllustrationProvider_GetByIllustrationIdAsync(int _illustrationId, int start, int pageLength) {
            this.IllustrationProvider_GetByIllustrationIdAsync(_illustrationId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void IllustrationProvider_GetByIllustrationIdAsync(int _illustrationId, int start, int pageLength, object userState) {
            if ((this.IllustrationProvider_GetByIllustrationIdOperationCompleted == null)) {
                this.IllustrationProvider_GetByIllustrationIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIllustrationProvider_GetByIllustrationIdOperationCompleted);
            }
            this.InvokeAsync("IllustrationProvider_GetByIllustrationId", new object[] {
                        _illustrationId,
                        start,
                        pageLength}, this.IllustrationProvider_GetByIllustrationIdOperationCompleted, userState);
        }
        
        private void OnIllustrationProvider_GetByIllustrationIdOperationCompleted(object arg) {
            if ((this.IllustrationProvider_GetByIllustrationIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IllustrationProvider_GetByIllustrationIdCompleted(this, new IllustrationProvider_GetByIllustrationIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/IllustrationProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Illustration IllustrationProvider_Insert(Illustration entity) {
            object[] results = this.Invoke("IllustrationProvider_Insert", new object[] {
                        entity});
            return ((Illustration)(results[0]));
        }
        
        /// <remarks/>
        public void IllustrationProvider_InsertAsync(Illustration entity) {
            this.IllustrationProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void IllustrationProvider_InsertAsync(Illustration entity, object userState) {
            if ((this.IllustrationProvider_InsertOperationCompleted == null)) {
                this.IllustrationProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIllustrationProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("IllustrationProvider_Insert", new object[] {
                        entity}, this.IllustrationProvider_InsertOperationCompleted, userState);
        }
        
        private void OnIllustrationProvider_InsertOperationCompleted(object arg) {
            if ((this.IllustrationProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IllustrationProvider_InsertCompleted(this, new IllustrationProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/IllustrationProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IllustrationProvider_BulkInsert(Illustration[] entityList) {
            this.Invoke("IllustrationProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void IllustrationProvider_BulkInsertAsync(Illustration[] entityList) {
            this.IllustrationProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void IllustrationProvider_BulkInsertAsync(Illustration[] entityList, object userState) {
            if ((this.IllustrationProvider_BulkInsertOperationCompleted == null)) {
                this.IllustrationProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIllustrationProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("IllustrationProvider_BulkInsert", new object[] {
                        entityList}, this.IllustrationProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnIllustrationProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.IllustrationProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IllustrationProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/IllustrationProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Illustration IllustrationProvider_Update(Illustration entity) {
            object[] results = this.Invoke("IllustrationProvider_Update", new object[] {
                        entity});
            return ((Illustration)(results[0]));
        }
        
        /// <remarks/>
        public void IllustrationProvider_UpdateAsync(Illustration entity) {
            this.IllustrationProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void IllustrationProvider_UpdateAsync(Illustration entity, object userState) {
            if ((this.IllustrationProvider_UpdateOperationCompleted == null)) {
                this.IllustrationProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIllustrationProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("IllustrationProvider_Update", new object[] {
                        entity}, this.IllustrationProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnIllustrationProvider_UpdateOperationCompleted(object arg) {
            if ((this.IllustrationProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IllustrationProvider_UpdateCompleted(this, new IllustrationProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ShipMethodProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ShipMethodProvider_Delete(int _shipMethodId) {
            object[] results = this.Invoke("ShipMethodProvider_Delete", new object[] {
                        _shipMethodId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ShipMethodProvider_DeleteAsync(int _shipMethodId) {
            this.ShipMethodProvider_DeleteAsync(_shipMethodId, null);
        }
        
        /// <remarks/>
        public void ShipMethodProvider_DeleteAsync(int _shipMethodId, object userState) {
            if ((this.ShipMethodProvider_DeleteOperationCompleted == null)) {
                this.ShipMethodProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShipMethodProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("ShipMethodProvider_Delete", new object[] {
                        _shipMethodId}, this.ShipMethodProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnShipMethodProvider_DeleteOperationCompleted(object arg) {
            if ((this.ShipMethodProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShipMethodProvider_DeleteCompleted(this, new ShipMethodProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ShipMethodProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ShipMethod[] ShipMethodProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ShipMethodProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ShipMethod[])(results[0]));
        }
        
        /// <remarks/>
        public void ShipMethodProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.ShipMethodProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ShipMethodProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.ShipMethodProvider_FindOperationCompleted == null)) {
                this.ShipMethodProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShipMethodProvider_FindOperationCompleted);
            }
            this.InvokeAsync("ShipMethodProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.ShipMethodProvider_FindOperationCompleted, userState);
        }
        
        private void OnShipMethodProvider_FindOperationCompleted(object arg) {
            if ((this.ShipMethodProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShipMethodProvider_FindCompleted(this, new ShipMethodProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ShipMethodProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ShipMethod[] ShipMethodProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("ShipMethodProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ShipMethod[])(results[0]));
        }
        
        /// <remarks/>
        public void ShipMethodProvider_GetAllAsync(int start, int pageLength) {
            this.ShipMethodProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void ShipMethodProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.ShipMethodProvider_GetAllOperationCompleted == null)) {
                this.ShipMethodProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShipMethodProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("ShipMethodProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.ShipMethodProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnShipMethodProvider_GetAllOperationCompleted(object arg) {
            if ((this.ShipMethodProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShipMethodProvider_GetAllCompleted(this, new ShipMethodProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ShipMethodProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ShipMethod[] ShipMethodProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ShipMethodProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ShipMethod[])(results[0]));
        }
        
        /// <remarks/>
        public void ShipMethodProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.ShipMethodProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ShipMethodProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.ShipMethodProvider_GetPagedOperationCompleted == null)) {
                this.ShipMethodProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShipMethodProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("ShipMethodProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.ShipMethodProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnShipMethodProvider_GetPagedOperationCompleted(object arg) {
            if ((this.ShipMethodProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShipMethodProvider_GetPagedCompleted(this, new ShipMethodProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ShipMethodProvider_GetByName", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ShipMethod ShipMethodProvider_GetByName(string _name, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ShipMethodProvider_GetByName", new object[] {
                        _name,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ShipMethod)(results[0]));
        }
        
        /// <remarks/>
        public void ShipMethodProvider_GetByNameAsync(string _name, int start, int pageLength) {
            this.ShipMethodProvider_GetByNameAsync(_name, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ShipMethodProvider_GetByNameAsync(string _name, int start, int pageLength, object userState) {
            if ((this.ShipMethodProvider_GetByNameOperationCompleted == null)) {
                this.ShipMethodProvider_GetByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShipMethodProvider_GetByNameOperationCompleted);
            }
            this.InvokeAsync("ShipMethodProvider_GetByName", new object[] {
                        _name,
                        start,
                        pageLength}, this.ShipMethodProvider_GetByNameOperationCompleted, userState);
        }
        
        private void OnShipMethodProvider_GetByNameOperationCompleted(object arg) {
            if ((this.ShipMethodProvider_GetByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShipMethodProvider_GetByNameCompleted(this, new ShipMethodProvider_GetByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ShipMethodProvider_GetByRowguid", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ShipMethod ShipMethodProvider_GetByRowguid(System.Guid _rowguid, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ShipMethodProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ShipMethod)(results[0]));
        }
        
        /// <remarks/>
        public void ShipMethodProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength) {
            this.ShipMethodProvider_GetByRowguidAsync(_rowguid, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ShipMethodProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength, object userState) {
            if ((this.ShipMethodProvider_GetByRowguidOperationCompleted == null)) {
                this.ShipMethodProvider_GetByRowguidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShipMethodProvider_GetByRowguidOperationCompleted);
            }
            this.InvokeAsync("ShipMethodProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength}, this.ShipMethodProvider_GetByRowguidOperationCompleted, userState);
        }
        
        private void OnShipMethodProvider_GetByRowguidOperationCompleted(object arg) {
            if ((this.ShipMethodProvider_GetByRowguidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShipMethodProvider_GetByRowguidCompleted(this, new ShipMethodProvider_GetByRowguidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ShipMethodProvider_GetByShipMethodId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ShipMethod ShipMethodProvider_GetByShipMethodId(int _shipMethodId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ShipMethodProvider_GetByShipMethodId", new object[] {
                        _shipMethodId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ShipMethod)(results[0]));
        }
        
        /// <remarks/>
        public void ShipMethodProvider_GetByShipMethodIdAsync(int _shipMethodId, int start, int pageLength) {
            this.ShipMethodProvider_GetByShipMethodIdAsync(_shipMethodId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ShipMethodProvider_GetByShipMethodIdAsync(int _shipMethodId, int start, int pageLength, object userState) {
            if ((this.ShipMethodProvider_GetByShipMethodIdOperationCompleted == null)) {
                this.ShipMethodProvider_GetByShipMethodIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShipMethodProvider_GetByShipMethodIdOperationCompleted);
            }
            this.InvokeAsync("ShipMethodProvider_GetByShipMethodId", new object[] {
                        _shipMethodId,
                        start,
                        pageLength}, this.ShipMethodProvider_GetByShipMethodIdOperationCompleted, userState);
        }
        
        private void OnShipMethodProvider_GetByShipMethodIdOperationCompleted(object arg) {
            if ((this.ShipMethodProvider_GetByShipMethodIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShipMethodProvider_GetByShipMethodIdCompleted(this, new ShipMethodProvider_GetByShipMethodIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ShipMethodProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ShipMethod ShipMethodProvider_Insert(ShipMethod entity) {
            object[] results = this.Invoke("ShipMethodProvider_Insert", new object[] {
                        entity});
            return ((ShipMethod)(results[0]));
        }
        
        /// <remarks/>
        public void ShipMethodProvider_InsertAsync(ShipMethod entity) {
            this.ShipMethodProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void ShipMethodProvider_InsertAsync(ShipMethod entity, object userState) {
            if ((this.ShipMethodProvider_InsertOperationCompleted == null)) {
                this.ShipMethodProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShipMethodProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("ShipMethodProvider_Insert", new object[] {
                        entity}, this.ShipMethodProvider_InsertOperationCompleted, userState);
        }
        
        private void OnShipMethodProvider_InsertOperationCompleted(object arg) {
            if ((this.ShipMethodProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShipMethodProvider_InsertCompleted(this, new ShipMethodProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ShipMethodProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ShipMethodProvider_BulkInsert(ShipMethod[] entityList) {
            this.Invoke("ShipMethodProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void ShipMethodProvider_BulkInsertAsync(ShipMethod[] entityList) {
            this.ShipMethodProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void ShipMethodProvider_BulkInsertAsync(ShipMethod[] entityList, object userState) {
            if ((this.ShipMethodProvider_BulkInsertOperationCompleted == null)) {
                this.ShipMethodProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShipMethodProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("ShipMethodProvider_BulkInsert", new object[] {
                        entityList}, this.ShipMethodProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnShipMethodProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.ShipMethodProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShipMethodProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ShipMethodProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ShipMethod ShipMethodProvider_Update(ShipMethod entity) {
            object[] results = this.Invoke("ShipMethodProvider_Update", new object[] {
                        entity});
            return ((ShipMethod)(results[0]));
        }
        
        /// <remarks/>
        public void ShipMethodProvider_UpdateAsync(ShipMethod entity) {
            this.ShipMethodProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void ShipMethodProvider_UpdateAsync(ShipMethod entity, object userState) {
            if ((this.ShipMethodProvider_UpdateOperationCompleted == null)) {
                this.ShipMethodProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShipMethodProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("ShipMethodProvider_Update", new object[] {
                        entity}, this.ShipMethodProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnShipMethodProvider_UpdateOperationCompleted(object arg) {
            if ((this.ShipMethodProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShipMethodProvider_UpdateCompleted(this, new ShipMethodProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CustomerProvider_GetByAddressIdFromCustom" +
            "erAddress", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Customer[] CustomerProvider_GetByAddressIdFromCustomerAddress(int _addressId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CustomerProvider_GetByAddressIdFromCustomerAddress", new object[] {
                        _addressId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Customer[])(results[0]));
        }
        
        /// <remarks/>
        public void CustomerProvider_GetByAddressIdFromCustomerAddressAsync(int _addressId, int start, int pageLength) {
            this.CustomerProvider_GetByAddressIdFromCustomerAddressAsync(_addressId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CustomerProvider_GetByAddressIdFromCustomerAddressAsync(int _addressId, int start, int pageLength, object userState) {
            if ((this.CustomerProvider_GetByAddressIdFromCustomerAddressOperationCompleted == null)) {
                this.CustomerProvider_GetByAddressIdFromCustomerAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerProvider_GetByAddressIdFromCustomerAddressOperationCompleted);
            }
            this.InvokeAsync("CustomerProvider_GetByAddressIdFromCustomerAddress", new object[] {
                        _addressId,
                        start,
                        pageLength}, this.CustomerProvider_GetByAddressIdFromCustomerAddressOperationCompleted, userState);
        }
        
        private void OnCustomerProvider_GetByAddressIdFromCustomerAddressOperationCompleted(object arg) {
            if ((this.CustomerProvider_GetByAddressIdFromCustomerAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerProvider_GetByAddressIdFromCustomerAddressCompleted(this, new CustomerProvider_GetByAddressIdFromCustomerAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CustomerProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CustomerProvider_Delete(int _customerId) {
            object[] results = this.Invoke("CustomerProvider_Delete", new object[] {
                        _customerId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CustomerProvider_DeleteAsync(int _customerId) {
            this.CustomerProvider_DeleteAsync(_customerId, null);
        }
        
        /// <remarks/>
        public void CustomerProvider_DeleteAsync(int _customerId, object userState) {
            if ((this.CustomerProvider_DeleteOperationCompleted == null)) {
                this.CustomerProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("CustomerProvider_Delete", new object[] {
                        _customerId}, this.CustomerProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnCustomerProvider_DeleteOperationCompleted(object arg) {
            if ((this.CustomerProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerProvider_DeleteCompleted(this, new CustomerProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CustomerProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Customer[] CustomerProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CustomerProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Customer[])(results[0]));
        }
        
        /// <remarks/>
        public void CustomerProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.CustomerProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CustomerProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.CustomerProvider_FindOperationCompleted == null)) {
                this.CustomerProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerProvider_FindOperationCompleted);
            }
            this.InvokeAsync("CustomerProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.CustomerProvider_FindOperationCompleted, userState);
        }
        
        private void OnCustomerProvider_FindOperationCompleted(object arg) {
            if ((this.CustomerProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerProvider_FindCompleted(this, new CustomerProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CustomerProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Customer[] CustomerProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("CustomerProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Customer[])(results[0]));
        }
        
        /// <remarks/>
        public void CustomerProvider_GetAllAsync(int start, int pageLength) {
            this.CustomerProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void CustomerProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.CustomerProvider_GetAllOperationCompleted == null)) {
                this.CustomerProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("CustomerProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.CustomerProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnCustomerProvider_GetAllOperationCompleted(object arg) {
            if ((this.CustomerProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerProvider_GetAllCompleted(this, new CustomerProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CustomerProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Customer[] CustomerProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CustomerProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Customer[])(results[0]));
        }
        
        /// <remarks/>
        public void CustomerProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.CustomerProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CustomerProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.CustomerProvider_GetPagedOperationCompleted == null)) {
                this.CustomerProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("CustomerProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.CustomerProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnCustomerProvider_GetPagedOperationCompleted(object arg) {
            if ((this.CustomerProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerProvider_GetPagedCompleted(this, new CustomerProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CustomerProvider_GetByAccountNumber", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Customer CustomerProvider_GetByAccountNumber(string _accountNumber, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CustomerProvider_GetByAccountNumber", new object[] {
                        _accountNumber,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public void CustomerProvider_GetByAccountNumberAsync(string _accountNumber, int start, int pageLength) {
            this.CustomerProvider_GetByAccountNumberAsync(_accountNumber, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CustomerProvider_GetByAccountNumberAsync(string _accountNumber, int start, int pageLength, object userState) {
            if ((this.CustomerProvider_GetByAccountNumberOperationCompleted == null)) {
                this.CustomerProvider_GetByAccountNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerProvider_GetByAccountNumberOperationCompleted);
            }
            this.InvokeAsync("CustomerProvider_GetByAccountNumber", new object[] {
                        _accountNumber,
                        start,
                        pageLength}, this.CustomerProvider_GetByAccountNumberOperationCompleted, userState);
        }
        
        private void OnCustomerProvider_GetByAccountNumberOperationCompleted(object arg) {
            if ((this.CustomerProvider_GetByAccountNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerProvider_GetByAccountNumberCompleted(this, new CustomerProvider_GetByAccountNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CustomerProvider_GetByRowguid", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Customer CustomerProvider_GetByRowguid(System.Guid _rowguid, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CustomerProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public void CustomerProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength) {
            this.CustomerProvider_GetByRowguidAsync(_rowguid, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CustomerProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength, object userState) {
            if ((this.CustomerProvider_GetByRowguidOperationCompleted == null)) {
                this.CustomerProvider_GetByRowguidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerProvider_GetByRowguidOperationCompleted);
            }
            this.InvokeAsync("CustomerProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength}, this.CustomerProvider_GetByRowguidOperationCompleted, userState);
        }
        
        private void OnCustomerProvider_GetByRowguidOperationCompleted(object arg) {
            if ((this.CustomerProvider_GetByRowguidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerProvider_GetByRowguidCompleted(this, new CustomerProvider_GetByRowguidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CustomerProvider_GetByTerritoryId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Customer[] CustomerProvider_GetByTerritoryId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> _territoryId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CustomerProvider_GetByTerritoryId", new object[] {
                        _territoryId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Customer[])(results[0]));
        }
        
        /// <remarks/>
        public void CustomerProvider_GetByTerritoryIdAsync(System.Nullable<int> _territoryId, int start, int pageLength) {
            this.CustomerProvider_GetByTerritoryIdAsync(_territoryId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CustomerProvider_GetByTerritoryIdAsync(System.Nullable<int> _territoryId, int start, int pageLength, object userState) {
            if ((this.CustomerProvider_GetByTerritoryIdOperationCompleted == null)) {
                this.CustomerProvider_GetByTerritoryIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerProvider_GetByTerritoryIdOperationCompleted);
            }
            this.InvokeAsync("CustomerProvider_GetByTerritoryId", new object[] {
                        _territoryId,
                        start,
                        pageLength}, this.CustomerProvider_GetByTerritoryIdOperationCompleted, userState);
        }
        
        private void OnCustomerProvider_GetByTerritoryIdOperationCompleted(object arg) {
            if ((this.CustomerProvider_GetByTerritoryIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerProvider_GetByTerritoryIdCompleted(this, new CustomerProvider_GetByTerritoryIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CustomerProvider_GetByCustomerId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Customer CustomerProvider_GetByCustomerId(int _customerId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CustomerProvider_GetByCustomerId", new object[] {
                        _customerId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public void CustomerProvider_GetByCustomerIdAsync(int _customerId, int start, int pageLength) {
            this.CustomerProvider_GetByCustomerIdAsync(_customerId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CustomerProvider_GetByCustomerIdAsync(int _customerId, int start, int pageLength, object userState) {
            if ((this.CustomerProvider_GetByCustomerIdOperationCompleted == null)) {
                this.CustomerProvider_GetByCustomerIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerProvider_GetByCustomerIdOperationCompleted);
            }
            this.InvokeAsync("CustomerProvider_GetByCustomerId", new object[] {
                        _customerId,
                        start,
                        pageLength}, this.CustomerProvider_GetByCustomerIdOperationCompleted, userState);
        }
        
        private void OnCustomerProvider_GetByCustomerIdOperationCompleted(object arg) {
            if ((this.CustomerProvider_GetByCustomerIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerProvider_GetByCustomerIdCompleted(this, new CustomerProvider_GetByCustomerIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CustomerProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Customer CustomerProvider_Insert(Customer entity) {
            object[] results = this.Invoke("CustomerProvider_Insert", new object[] {
                        entity});
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public void CustomerProvider_InsertAsync(Customer entity) {
            this.CustomerProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void CustomerProvider_InsertAsync(Customer entity, object userState) {
            if ((this.CustomerProvider_InsertOperationCompleted == null)) {
                this.CustomerProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("CustomerProvider_Insert", new object[] {
                        entity}, this.CustomerProvider_InsertOperationCompleted, userState);
        }
        
        private void OnCustomerProvider_InsertOperationCompleted(object arg) {
            if ((this.CustomerProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerProvider_InsertCompleted(this, new CustomerProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CustomerProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CustomerProvider_BulkInsert(Customer[] entityList) {
            this.Invoke("CustomerProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void CustomerProvider_BulkInsertAsync(Customer[] entityList) {
            this.CustomerProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void CustomerProvider_BulkInsertAsync(Customer[] entityList, object userState) {
            if ((this.CustomerProvider_BulkInsertOperationCompleted == null)) {
                this.CustomerProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("CustomerProvider_BulkInsert", new object[] {
                        entityList}, this.CustomerProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnCustomerProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.CustomerProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CustomerProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Customer CustomerProvider_Update(Customer entity) {
            object[] results = this.Invoke("CustomerProvider_Update", new object[] {
                        entity});
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public void CustomerProvider_UpdateAsync(Customer entity) {
            this.CustomerProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void CustomerProvider_UpdateAsync(Customer entity, object userState) {
            if ((this.CustomerProvider_UpdateOperationCompleted == null)) {
                this.CustomerProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("CustomerProvider_Update", new object[] {
                        entity}, this.CustomerProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnCustomerProvider_UpdateOperationCompleted(object arg) {
            if ((this.CustomerProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerProvider_UpdateCompleted(this, new CustomerProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductReviewProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ProductReviewProvider_Delete(int _productReviewId) {
            object[] results = this.Invoke("ProductReviewProvider_Delete", new object[] {
                        _productReviewId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ProductReviewProvider_DeleteAsync(int _productReviewId) {
            this.ProductReviewProvider_DeleteAsync(_productReviewId, null);
        }
        
        /// <remarks/>
        public void ProductReviewProvider_DeleteAsync(int _productReviewId, object userState) {
            if ((this.ProductReviewProvider_DeleteOperationCompleted == null)) {
                this.ProductReviewProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductReviewProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("ProductReviewProvider_Delete", new object[] {
                        _productReviewId}, this.ProductReviewProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnProductReviewProvider_DeleteOperationCompleted(object arg) {
            if ((this.ProductReviewProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductReviewProvider_DeleteCompleted(this, new ProductReviewProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductReviewProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductReview[] ProductReviewProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductReviewProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductReview[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductReviewProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.ProductReviewProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductReviewProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.ProductReviewProvider_FindOperationCompleted == null)) {
                this.ProductReviewProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductReviewProvider_FindOperationCompleted);
            }
            this.InvokeAsync("ProductReviewProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.ProductReviewProvider_FindOperationCompleted, userState);
        }
        
        private void OnProductReviewProvider_FindOperationCompleted(object arg) {
            if ((this.ProductReviewProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductReviewProvider_FindCompleted(this, new ProductReviewProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductReviewProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductReview[] ProductReviewProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductReviewProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductReview[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductReviewProvider_GetAllAsync(int start, int pageLength) {
            this.ProductReviewProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductReviewProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.ProductReviewProvider_GetAllOperationCompleted == null)) {
                this.ProductReviewProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductReviewProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("ProductReviewProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.ProductReviewProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnProductReviewProvider_GetAllOperationCompleted(object arg) {
            if ((this.ProductReviewProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductReviewProvider_GetAllCompleted(this, new ProductReviewProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductReviewProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductReview[] ProductReviewProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductReviewProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductReview[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductReviewProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.ProductReviewProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductReviewProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.ProductReviewProvider_GetPagedOperationCompleted == null)) {
                this.ProductReviewProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductReviewProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("ProductReviewProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.ProductReviewProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnProductReviewProvider_GetPagedOperationCompleted(object arg) {
            if ((this.ProductReviewProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductReviewProvider_GetPagedCompleted(this, new ProductReviewProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductReviewProvider_GetByProductId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductReview[] ProductReviewProvider_GetByProductId(int _productId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductReviewProvider_GetByProductId", new object[] {
                        _productId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductReview[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductReviewProvider_GetByProductIdAsync(int _productId, int start, int pageLength) {
            this.ProductReviewProvider_GetByProductIdAsync(_productId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductReviewProvider_GetByProductIdAsync(int _productId, int start, int pageLength, object userState) {
            if ((this.ProductReviewProvider_GetByProductIdOperationCompleted == null)) {
                this.ProductReviewProvider_GetByProductIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductReviewProvider_GetByProductIdOperationCompleted);
            }
            this.InvokeAsync("ProductReviewProvider_GetByProductId", new object[] {
                        _productId,
                        start,
                        pageLength}, this.ProductReviewProvider_GetByProductIdOperationCompleted, userState);
        }
        
        private void OnProductReviewProvider_GetByProductIdOperationCompleted(object arg) {
            if ((this.ProductReviewProvider_GetByProductIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductReviewProvider_GetByProductIdCompleted(this, new ProductReviewProvider_GetByProductIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductReviewProvider_GetByProductIdRevie" +
            "werName", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductReview[] ProductReviewProvider_GetByProductIdReviewerName(int _productId, string _reviewerName, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductReviewProvider_GetByProductIdReviewerName", new object[] {
                        _productId,
                        _reviewerName,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductReview[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductReviewProvider_GetByProductIdReviewerNameAsync(int _productId, string _reviewerName, int start, int pageLength) {
            this.ProductReviewProvider_GetByProductIdReviewerNameAsync(_productId, _reviewerName, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductReviewProvider_GetByProductIdReviewerNameAsync(int _productId, string _reviewerName, int start, int pageLength, object userState) {
            if ((this.ProductReviewProvider_GetByProductIdReviewerNameOperationCompleted == null)) {
                this.ProductReviewProvider_GetByProductIdReviewerNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductReviewProvider_GetByProductIdReviewerNameOperationCompleted);
            }
            this.InvokeAsync("ProductReviewProvider_GetByProductIdReviewerName", new object[] {
                        _productId,
                        _reviewerName,
                        start,
                        pageLength}, this.ProductReviewProvider_GetByProductIdReviewerNameOperationCompleted, userState);
        }
        
        private void OnProductReviewProvider_GetByProductIdReviewerNameOperationCompleted(object arg) {
            if ((this.ProductReviewProvider_GetByProductIdReviewerNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductReviewProvider_GetByProductIdReviewerNameCompleted(this, new ProductReviewProvider_GetByProductIdReviewerNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductReviewProvider_GetByProductReviewI" +
            "d", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductReview ProductReviewProvider_GetByProductReviewId(int _productReviewId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductReviewProvider_GetByProductReviewId", new object[] {
                        _productReviewId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductReview)(results[0]));
        }
        
        /// <remarks/>
        public void ProductReviewProvider_GetByProductReviewIdAsync(int _productReviewId, int start, int pageLength) {
            this.ProductReviewProvider_GetByProductReviewIdAsync(_productReviewId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductReviewProvider_GetByProductReviewIdAsync(int _productReviewId, int start, int pageLength, object userState) {
            if ((this.ProductReviewProvider_GetByProductReviewIdOperationCompleted == null)) {
                this.ProductReviewProvider_GetByProductReviewIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductReviewProvider_GetByProductReviewIdOperationCompleted);
            }
            this.InvokeAsync("ProductReviewProvider_GetByProductReviewId", new object[] {
                        _productReviewId,
                        start,
                        pageLength}, this.ProductReviewProvider_GetByProductReviewIdOperationCompleted, userState);
        }
        
        private void OnProductReviewProvider_GetByProductReviewIdOperationCompleted(object arg) {
            if ((this.ProductReviewProvider_GetByProductReviewIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductReviewProvider_GetByProductReviewIdCompleted(this, new ProductReviewProvider_GetByProductReviewIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductReviewProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductReview ProductReviewProvider_Insert(ProductReview entity) {
            object[] results = this.Invoke("ProductReviewProvider_Insert", new object[] {
                        entity});
            return ((ProductReview)(results[0]));
        }
        
        /// <remarks/>
        public void ProductReviewProvider_InsertAsync(ProductReview entity) {
            this.ProductReviewProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void ProductReviewProvider_InsertAsync(ProductReview entity, object userState) {
            if ((this.ProductReviewProvider_InsertOperationCompleted == null)) {
                this.ProductReviewProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductReviewProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("ProductReviewProvider_Insert", new object[] {
                        entity}, this.ProductReviewProvider_InsertOperationCompleted, userState);
        }
        
        private void OnProductReviewProvider_InsertOperationCompleted(object arg) {
            if ((this.ProductReviewProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductReviewProvider_InsertCompleted(this, new ProductReviewProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductReviewProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ProductReviewProvider_BulkInsert(ProductReview[] entityList) {
            this.Invoke("ProductReviewProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void ProductReviewProvider_BulkInsertAsync(ProductReview[] entityList) {
            this.ProductReviewProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void ProductReviewProvider_BulkInsertAsync(ProductReview[] entityList, object userState) {
            if ((this.ProductReviewProvider_BulkInsertOperationCompleted == null)) {
                this.ProductReviewProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductReviewProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("ProductReviewProvider_BulkInsert", new object[] {
                        entityList}, this.ProductReviewProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnProductReviewProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.ProductReviewProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductReviewProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductReviewProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductReview ProductReviewProvider_Update(ProductReview entity) {
            object[] results = this.Invoke("ProductReviewProvider_Update", new object[] {
                        entity});
            return ((ProductReview)(results[0]));
        }
        
        /// <remarks/>
        public void ProductReviewProvider_UpdateAsync(ProductReview entity) {
            this.ProductReviewProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void ProductReviewProvider_UpdateAsync(ProductReview entity, object userState) {
            if ((this.ProductReviewProvider_UpdateOperationCompleted == null)) {
                this.ProductReviewProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductReviewProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("ProductReviewProvider_Update", new object[] {
                        entity}, this.ProductReviewProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnProductReviewProvider_UpdateOperationCompleted(object arg) {
            if ((this.ProductReviewProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductReviewProvider_UpdateCompleted(this, new ProductReviewProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CountryRegionProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CountryRegionProvider_Delete(string _countryRegionCode) {
            object[] results = this.Invoke("CountryRegionProvider_Delete", new object[] {
                        _countryRegionCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CountryRegionProvider_DeleteAsync(string _countryRegionCode) {
            this.CountryRegionProvider_DeleteAsync(_countryRegionCode, null);
        }
        
        /// <remarks/>
        public void CountryRegionProvider_DeleteAsync(string _countryRegionCode, object userState) {
            if ((this.CountryRegionProvider_DeleteOperationCompleted == null)) {
                this.CountryRegionProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountryRegionProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("CountryRegionProvider_Delete", new object[] {
                        _countryRegionCode}, this.CountryRegionProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnCountryRegionProvider_DeleteOperationCompleted(object arg) {
            if ((this.CountryRegionProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountryRegionProvider_DeleteCompleted(this, new CountryRegionProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CountryRegionProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CountryRegion[] CountryRegionProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CountryRegionProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((CountryRegion[])(results[0]));
        }
        
        /// <remarks/>
        public void CountryRegionProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.CountryRegionProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CountryRegionProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.CountryRegionProvider_FindOperationCompleted == null)) {
                this.CountryRegionProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountryRegionProvider_FindOperationCompleted);
            }
            this.InvokeAsync("CountryRegionProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.CountryRegionProvider_FindOperationCompleted, userState);
        }
        
        private void OnCountryRegionProvider_FindOperationCompleted(object arg) {
            if ((this.CountryRegionProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountryRegionProvider_FindCompleted(this, new CountryRegionProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CountryRegionProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CountryRegion[] CountryRegionProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("CountryRegionProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((CountryRegion[])(results[0]));
        }
        
        /// <remarks/>
        public void CountryRegionProvider_GetAllAsync(int start, int pageLength) {
            this.CountryRegionProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void CountryRegionProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.CountryRegionProvider_GetAllOperationCompleted == null)) {
                this.CountryRegionProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountryRegionProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("CountryRegionProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.CountryRegionProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnCountryRegionProvider_GetAllOperationCompleted(object arg) {
            if ((this.CountryRegionProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountryRegionProvider_GetAllCompleted(this, new CountryRegionProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CountryRegionProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CountryRegion[] CountryRegionProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CountryRegionProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((CountryRegion[])(results[0]));
        }
        
        /// <remarks/>
        public void CountryRegionProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.CountryRegionProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CountryRegionProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.CountryRegionProvider_GetPagedOperationCompleted == null)) {
                this.CountryRegionProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountryRegionProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("CountryRegionProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.CountryRegionProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnCountryRegionProvider_GetPagedOperationCompleted(object arg) {
            if ((this.CountryRegionProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountryRegionProvider_GetPagedCompleted(this, new CountryRegionProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CountryRegionProvider_GetByName", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CountryRegion CountryRegionProvider_GetByName(string _name, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CountryRegionProvider_GetByName", new object[] {
                        _name,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((CountryRegion)(results[0]));
        }
        
        /// <remarks/>
        public void CountryRegionProvider_GetByNameAsync(string _name, int start, int pageLength) {
            this.CountryRegionProvider_GetByNameAsync(_name, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CountryRegionProvider_GetByNameAsync(string _name, int start, int pageLength, object userState) {
            if ((this.CountryRegionProvider_GetByNameOperationCompleted == null)) {
                this.CountryRegionProvider_GetByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountryRegionProvider_GetByNameOperationCompleted);
            }
            this.InvokeAsync("CountryRegionProvider_GetByName", new object[] {
                        _name,
                        start,
                        pageLength}, this.CountryRegionProvider_GetByNameOperationCompleted, userState);
        }
        
        private void OnCountryRegionProvider_GetByNameOperationCompleted(object arg) {
            if ((this.CountryRegionProvider_GetByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountryRegionProvider_GetByNameCompleted(this, new CountryRegionProvider_GetByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CountryRegionProvider_GetByCountryRegionC" +
            "ode", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CountryRegion CountryRegionProvider_GetByCountryRegionCode(string _countryRegionCode, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CountryRegionProvider_GetByCountryRegionCode", new object[] {
                        _countryRegionCode,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((CountryRegion)(results[0]));
        }
        
        /// <remarks/>
        public void CountryRegionProvider_GetByCountryRegionCodeAsync(string _countryRegionCode, int start, int pageLength) {
            this.CountryRegionProvider_GetByCountryRegionCodeAsync(_countryRegionCode, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CountryRegionProvider_GetByCountryRegionCodeAsync(string _countryRegionCode, int start, int pageLength, object userState) {
            if ((this.CountryRegionProvider_GetByCountryRegionCodeOperationCompleted == null)) {
                this.CountryRegionProvider_GetByCountryRegionCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountryRegionProvider_GetByCountryRegionCodeOperationCompleted);
            }
            this.InvokeAsync("CountryRegionProvider_GetByCountryRegionCode", new object[] {
                        _countryRegionCode,
                        start,
                        pageLength}, this.CountryRegionProvider_GetByCountryRegionCodeOperationCompleted, userState);
        }
        
        private void OnCountryRegionProvider_GetByCountryRegionCodeOperationCompleted(object arg) {
            if ((this.CountryRegionProvider_GetByCountryRegionCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountryRegionProvider_GetByCountryRegionCodeCompleted(this, new CountryRegionProvider_GetByCountryRegionCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CountryRegionProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CountryRegion CountryRegionProvider_Insert(CountryRegion entity) {
            object[] results = this.Invoke("CountryRegionProvider_Insert", new object[] {
                        entity});
            return ((CountryRegion)(results[0]));
        }
        
        /// <remarks/>
        public void CountryRegionProvider_InsertAsync(CountryRegion entity) {
            this.CountryRegionProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void CountryRegionProvider_InsertAsync(CountryRegion entity, object userState) {
            if ((this.CountryRegionProvider_InsertOperationCompleted == null)) {
                this.CountryRegionProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountryRegionProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("CountryRegionProvider_Insert", new object[] {
                        entity}, this.CountryRegionProvider_InsertOperationCompleted, userState);
        }
        
        private void OnCountryRegionProvider_InsertOperationCompleted(object arg) {
            if ((this.CountryRegionProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountryRegionProvider_InsertCompleted(this, new CountryRegionProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CountryRegionProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CountryRegionProvider_BulkInsert(CountryRegion[] entityList) {
            this.Invoke("CountryRegionProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void CountryRegionProvider_BulkInsertAsync(CountryRegion[] entityList) {
            this.CountryRegionProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void CountryRegionProvider_BulkInsertAsync(CountryRegion[] entityList, object userState) {
            if ((this.CountryRegionProvider_BulkInsertOperationCompleted == null)) {
                this.CountryRegionProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountryRegionProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("CountryRegionProvider_BulkInsert", new object[] {
                        entityList}, this.CountryRegionProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnCountryRegionProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.CountryRegionProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountryRegionProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CountryRegionProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CountryRegion CountryRegionProvider_Update(CountryRegion entity) {
            object[] results = this.Invoke("CountryRegionProvider_Update", new object[] {
                        entity});
            return ((CountryRegion)(results[0]));
        }
        
        /// <remarks/>
        public void CountryRegionProvider_UpdateAsync(CountryRegion entity) {
            this.CountryRegionProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void CountryRegionProvider_UpdateAsync(CountryRegion entity, object userState) {
            if ((this.CountryRegionProvider_UpdateOperationCompleted == null)) {
                this.CountryRegionProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountryRegionProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("CountryRegionProvider_Update", new object[] {
                        entity}, this.CountryRegionProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnCountryRegionProvider_UpdateOperationCompleted(object arg) {
            if ((this.CountryRegionProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountryRegionProvider_UpdateCompleted(this, new CountryRegionProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/AddressProvider_GetByCustomerIdFromCustom" +
            "erAddress", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Address[] AddressProvider_GetByCustomerIdFromCustomerAddress(int _customerId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("AddressProvider_GetByCustomerIdFromCustomerAddress", new object[] {
                        _customerId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Address[])(results[0]));
        }
        
        /// <remarks/>
        public void AddressProvider_GetByCustomerIdFromCustomerAddressAsync(int _customerId, int start, int pageLength) {
            this.AddressProvider_GetByCustomerIdFromCustomerAddressAsync(_customerId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void AddressProvider_GetByCustomerIdFromCustomerAddressAsync(int _customerId, int start, int pageLength, object userState) {
            if ((this.AddressProvider_GetByCustomerIdFromCustomerAddressOperationCompleted == null)) {
                this.AddressProvider_GetByCustomerIdFromCustomerAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddressProvider_GetByCustomerIdFromCustomerAddressOperationCompleted);
            }
            this.InvokeAsync("AddressProvider_GetByCustomerIdFromCustomerAddress", new object[] {
                        _customerId,
                        start,
                        pageLength}, this.AddressProvider_GetByCustomerIdFromCustomerAddressOperationCompleted, userState);
        }
        
        private void OnAddressProvider_GetByCustomerIdFromCustomerAddressOperationCompleted(object arg) {
            if ((this.AddressProvider_GetByCustomerIdFromCustomerAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddressProvider_GetByCustomerIdFromCustomerAddressCompleted(this, new AddressProvider_GetByCustomerIdFromCustomerAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/AddressProvider_GetByEmployeeIdFromEmploy" +
            "eeAddress", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Address[] AddressProvider_GetByEmployeeIdFromEmployeeAddress(int _employeeId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("AddressProvider_GetByEmployeeIdFromEmployeeAddress", new object[] {
                        _employeeId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Address[])(results[0]));
        }
        
        /// <remarks/>
        public void AddressProvider_GetByEmployeeIdFromEmployeeAddressAsync(int _employeeId, int start, int pageLength) {
            this.AddressProvider_GetByEmployeeIdFromEmployeeAddressAsync(_employeeId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void AddressProvider_GetByEmployeeIdFromEmployeeAddressAsync(int _employeeId, int start, int pageLength, object userState) {
            if ((this.AddressProvider_GetByEmployeeIdFromEmployeeAddressOperationCompleted == null)) {
                this.AddressProvider_GetByEmployeeIdFromEmployeeAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddressProvider_GetByEmployeeIdFromEmployeeAddressOperationCompleted);
            }
            this.InvokeAsync("AddressProvider_GetByEmployeeIdFromEmployeeAddress", new object[] {
                        _employeeId,
                        start,
                        pageLength}, this.AddressProvider_GetByEmployeeIdFromEmployeeAddressOperationCompleted, userState);
        }
        
        private void OnAddressProvider_GetByEmployeeIdFromEmployeeAddressOperationCompleted(object arg) {
            if ((this.AddressProvider_GetByEmployeeIdFromEmployeeAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddressProvider_GetByEmployeeIdFromEmployeeAddressCompleted(this, new AddressProvider_GetByEmployeeIdFromEmployeeAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/AddressProvider_GetByVendorIdFromVendorAd" +
            "dress", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Address[] AddressProvider_GetByVendorIdFromVendorAddress(int _vendorId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("AddressProvider_GetByVendorIdFromVendorAddress", new object[] {
                        _vendorId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Address[])(results[0]));
        }
        
        /// <remarks/>
        public void AddressProvider_GetByVendorIdFromVendorAddressAsync(int _vendorId, int start, int pageLength) {
            this.AddressProvider_GetByVendorIdFromVendorAddressAsync(_vendorId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void AddressProvider_GetByVendorIdFromVendorAddressAsync(int _vendorId, int start, int pageLength, object userState) {
            if ((this.AddressProvider_GetByVendorIdFromVendorAddressOperationCompleted == null)) {
                this.AddressProvider_GetByVendorIdFromVendorAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddressProvider_GetByVendorIdFromVendorAddressOperationCompleted);
            }
            this.InvokeAsync("AddressProvider_GetByVendorIdFromVendorAddress", new object[] {
                        _vendorId,
                        start,
                        pageLength}, this.AddressProvider_GetByVendorIdFromVendorAddressOperationCompleted, userState);
        }
        
        private void OnAddressProvider_GetByVendorIdFromVendorAddressOperationCompleted(object arg) {
            if ((this.AddressProvider_GetByVendorIdFromVendorAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddressProvider_GetByVendorIdFromVendorAddressCompleted(this, new AddressProvider_GetByVendorIdFromVendorAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/AddressProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddressProvider_Delete(int _addressId) {
            object[] results = this.Invoke("AddressProvider_Delete", new object[] {
                        _addressId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddressProvider_DeleteAsync(int _addressId) {
            this.AddressProvider_DeleteAsync(_addressId, null);
        }
        
        /// <remarks/>
        public void AddressProvider_DeleteAsync(int _addressId, object userState) {
            if ((this.AddressProvider_DeleteOperationCompleted == null)) {
                this.AddressProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddressProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("AddressProvider_Delete", new object[] {
                        _addressId}, this.AddressProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnAddressProvider_DeleteOperationCompleted(object arg) {
            if ((this.AddressProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddressProvider_DeleteCompleted(this, new AddressProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/AddressProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Address[] AddressProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("AddressProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Address[])(results[0]));
        }
        
        /// <remarks/>
        public void AddressProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.AddressProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void AddressProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.AddressProvider_FindOperationCompleted == null)) {
                this.AddressProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddressProvider_FindOperationCompleted);
            }
            this.InvokeAsync("AddressProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.AddressProvider_FindOperationCompleted, userState);
        }
        
        private void OnAddressProvider_FindOperationCompleted(object arg) {
            if ((this.AddressProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddressProvider_FindCompleted(this, new AddressProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/AddressProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Address[] AddressProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("AddressProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Address[])(results[0]));
        }
        
        /// <remarks/>
        public void AddressProvider_GetAllAsync(int start, int pageLength) {
            this.AddressProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void AddressProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.AddressProvider_GetAllOperationCompleted == null)) {
                this.AddressProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddressProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("AddressProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.AddressProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnAddressProvider_GetAllOperationCompleted(object arg) {
            if ((this.AddressProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddressProvider_GetAllCompleted(this, new AddressProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/AddressProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Address[] AddressProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("AddressProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Address[])(results[0]));
        }
        
        /// <remarks/>
        public void AddressProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.AddressProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void AddressProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.AddressProvider_GetPagedOperationCompleted == null)) {
                this.AddressProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddressProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("AddressProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.AddressProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnAddressProvider_GetPagedOperationCompleted(object arg) {
            if ((this.AddressProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddressProvider_GetPagedCompleted(this, new AddressProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/AddressProvider_GetByRowguid", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Address AddressProvider_GetByRowguid(System.Guid _rowguid, int start, int pageLength, out int count) {
            object[] results = this.Invoke("AddressProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Address)(results[0]));
        }
        
        /// <remarks/>
        public void AddressProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength) {
            this.AddressProvider_GetByRowguidAsync(_rowguid, start, pageLength, null);
        }
        
        /// <remarks/>
        public void AddressProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength, object userState) {
            if ((this.AddressProvider_GetByRowguidOperationCompleted == null)) {
                this.AddressProvider_GetByRowguidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddressProvider_GetByRowguidOperationCompleted);
            }
            this.InvokeAsync("AddressProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength}, this.AddressProvider_GetByRowguidOperationCompleted, userState);
        }
        
        private void OnAddressProvider_GetByRowguidOperationCompleted(object arg) {
            if ((this.AddressProvider_GetByRowguidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddressProvider_GetByRowguidCompleted(this, new AddressProvider_GetByRowguidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/AddressProvider_GetByAddressLine1AddressL" +
            "ine2CityStateProvinceIdPostalCode", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Address AddressProvider_GetByAddressLine1AddressLine2CityStateProvinceIdPostalCode(string _addressLine1, string _addressLine2, string _city, int _stateProvinceId, string _postalCode, int start, int pageLength, out int count) {
            object[] results = this.Invoke("AddressProvider_GetByAddressLine1AddressLine2CityStateProvinceIdPostalCode", new object[] {
                        _addressLine1,
                        _addressLine2,
                        _city,
                        _stateProvinceId,
                        _postalCode,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Address)(results[0]));
        }
        
        /// <remarks/>
        public void AddressProvider_GetByAddressLine1AddressLine2CityStateProvinceIdPostalCodeAsync(string _addressLine1, string _addressLine2, string _city, int _stateProvinceId, string _postalCode, int start, int pageLength) {
            this.AddressProvider_GetByAddressLine1AddressLine2CityStateProvinceIdPostalCodeAsync(_addressLine1, _addressLine2, _city, _stateProvinceId, _postalCode, start, pageLength, null);
        }
        
        /// <remarks/>
        public void AddressProvider_GetByAddressLine1AddressLine2CityStateProvinceIdPostalCodeAsync(string _addressLine1, string _addressLine2, string _city, int _stateProvinceId, string _postalCode, int start, int pageLength, object userState) {
            if ((this.AddressProvider_GetByAddressLine1AddressLine2CityStateProvinceIdPostalCodeOperationCompleted == null)) {
                this.AddressProvider_GetByAddressLine1AddressLine2CityStateProvinceIdPostalCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddressProvider_GetByAddressLine1AddressLine2CityStateProvinceIdPostalCodeOperationCompleted);
            }
            this.InvokeAsync("AddressProvider_GetByAddressLine1AddressLine2CityStateProvinceIdPostalCode", new object[] {
                        _addressLine1,
                        _addressLine2,
                        _city,
                        _stateProvinceId,
                        _postalCode,
                        start,
                        pageLength}, this.AddressProvider_GetByAddressLine1AddressLine2CityStateProvinceIdPostalCodeOperationCompleted, userState);
        }
        
        private void OnAddressProvider_GetByAddressLine1AddressLine2CityStateProvinceIdPostalCodeOperationCompleted(object arg) {
            if ((this.AddressProvider_GetByAddressLine1AddressLine2CityStateProvinceIdPostalCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddressProvider_GetByAddressLine1AddressLine2CityStateProvinceIdPostalCodeCompleted(this, new AddressProvider_GetByAddressLine1AddressLine2CityStateProvinceIdPostalCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/AddressProvider_GetByStateProvinceId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Address[] AddressProvider_GetByStateProvinceId(int _stateProvinceId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("AddressProvider_GetByStateProvinceId", new object[] {
                        _stateProvinceId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Address[])(results[0]));
        }
        
        /// <remarks/>
        public void AddressProvider_GetByStateProvinceIdAsync(int _stateProvinceId, int start, int pageLength) {
            this.AddressProvider_GetByStateProvinceIdAsync(_stateProvinceId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void AddressProvider_GetByStateProvinceIdAsync(int _stateProvinceId, int start, int pageLength, object userState) {
            if ((this.AddressProvider_GetByStateProvinceIdOperationCompleted == null)) {
                this.AddressProvider_GetByStateProvinceIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddressProvider_GetByStateProvinceIdOperationCompleted);
            }
            this.InvokeAsync("AddressProvider_GetByStateProvinceId", new object[] {
                        _stateProvinceId,
                        start,
                        pageLength}, this.AddressProvider_GetByStateProvinceIdOperationCompleted, userState);
        }
        
        private void OnAddressProvider_GetByStateProvinceIdOperationCompleted(object arg) {
            if ((this.AddressProvider_GetByStateProvinceIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddressProvider_GetByStateProvinceIdCompleted(this, new AddressProvider_GetByStateProvinceIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/AddressProvider_GetByAddressId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Address AddressProvider_GetByAddressId(int _addressId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("AddressProvider_GetByAddressId", new object[] {
                        _addressId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Address)(results[0]));
        }
        
        /// <remarks/>
        public void AddressProvider_GetByAddressIdAsync(int _addressId, int start, int pageLength) {
            this.AddressProvider_GetByAddressIdAsync(_addressId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void AddressProvider_GetByAddressIdAsync(int _addressId, int start, int pageLength, object userState) {
            if ((this.AddressProvider_GetByAddressIdOperationCompleted == null)) {
                this.AddressProvider_GetByAddressIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddressProvider_GetByAddressIdOperationCompleted);
            }
            this.InvokeAsync("AddressProvider_GetByAddressId", new object[] {
                        _addressId,
                        start,
                        pageLength}, this.AddressProvider_GetByAddressIdOperationCompleted, userState);
        }
        
        private void OnAddressProvider_GetByAddressIdOperationCompleted(object arg) {
            if ((this.AddressProvider_GetByAddressIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddressProvider_GetByAddressIdCompleted(this, new AddressProvider_GetByAddressIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/AddressProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Address AddressProvider_Insert(Address entity) {
            object[] results = this.Invoke("AddressProvider_Insert", new object[] {
                        entity});
            return ((Address)(results[0]));
        }
        
        /// <remarks/>
        public void AddressProvider_InsertAsync(Address entity) {
            this.AddressProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void AddressProvider_InsertAsync(Address entity, object userState) {
            if ((this.AddressProvider_InsertOperationCompleted == null)) {
                this.AddressProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddressProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("AddressProvider_Insert", new object[] {
                        entity}, this.AddressProvider_InsertOperationCompleted, userState);
        }
        
        private void OnAddressProvider_InsertOperationCompleted(object arg) {
            if ((this.AddressProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddressProvider_InsertCompleted(this, new AddressProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/AddressProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddressProvider_BulkInsert(Address[] entityList) {
            this.Invoke("AddressProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void AddressProvider_BulkInsertAsync(Address[] entityList) {
            this.AddressProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void AddressProvider_BulkInsertAsync(Address[] entityList, object userState) {
            if ((this.AddressProvider_BulkInsertOperationCompleted == null)) {
                this.AddressProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddressProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("AddressProvider_BulkInsert", new object[] {
                        entityList}, this.AddressProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnAddressProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.AddressProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddressProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/AddressProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Address AddressProvider_Update(Address entity) {
            object[] results = this.Invoke("AddressProvider_Update", new object[] {
                        entity});
            return ((Address)(results[0]));
        }
        
        /// <remarks/>
        public void AddressProvider_UpdateAsync(Address entity) {
            this.AddressProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void AddressProvider_UpdateAsync(Address entity, object userState) {
            if ((this.AddressProvider_UpdateOperationCompleted == null)) {
                this.AddressProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddressProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("AddressProvider_Update", new object[] {
                        entity}, this.AddressProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnAddressProvider_UpdateOperationCompleted(object arg) {
            if ((this.AddressProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddressProvider_UpdateCompleted(this, new AddressProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ShiftProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ShiftProvider_Delete(byte _shiftId) {
            object[] results = this.Invoke("ShiftProvider_Delete", new object[] {
                        _shiftId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ShiftProvider_DeleteAsync(byte _shiftId) {
            this.ShiftProvider_DeleteAsync(_shiftId, null);
        }
        
        /// <remarks/>
        public void ShiftProvider_DeleteAsync(byte _shiftId, object userState) {
            if ((this.ShiftProvider_DeleteOperationCompleted == null)) {
                this.ShiftProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShiftProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("ShiftProvider_Delete", new object[] {
                        _shiftId}, this.ShiftProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnShiftProvider_DeleteOperationCompleted(object arg) {
            if ((this.ShiftProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShiftProvider_DeleteCompleted(this, new ShiftProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ShiftProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Shift[] ShiftProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ShiftProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Shift[])(results[0]));
        }
        
        /// <remarks/>
        public void ShiftProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.ShiftProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ShiftProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.ShiftProvider_FindOperationCompleted == null)) {
                this.ShiftProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShiftProvider_FindOperationCompleted);
            }
            this.InvokeAsync("ShiftProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.ShiftProvider_FindOperationCompleted, userState);
        }
        
        private void OnShiftProvider_FindOperationCompleted(object arg) {
            if ((this.ShiftProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShiftProvider_FindCompleted(this, new ShiftProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ShiftProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Shift[] ShiftProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("ShiftProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Shift[])(results[0]));
        }
        
        /// <remarks/>
        public void ShiftProvider_GetAllAsync(int start, int pageLength) {
            this.ShiftProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void ShiftProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.ShiftProvider_GetAllOperationCompleted == null)) {
                this.ShiftProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShiftProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("ShiftProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.ShiftProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnShiftProvider_GetAllOperationCompleted(object arg) {
            if ((this.ShiftProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShiftProvider_GetAllCompleted(this, new ShiftProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ShiftProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Shift[] ShiftProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ShiftProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Shift[])(results[0]));
        }
        
        /// <remarks/>
        public void ShiftProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.ShiftProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ShiftProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.ShiftProvider_GetPagedOperationCompleted == null)) {
                this.ShiftProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShiftProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("ShiftProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.ShiftProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnShiftProvider_GetPagedOperationCompleted(object arg) {
            if ((this.ShiftProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShiftProvider_GetPagedCompleted(this, new ShiftProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ShiftProvider_GetByName", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Shift ShiftProvider_GetByName(string _name, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ShiftProvider_GetByName", new object[] {
                        _name,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Shift)(results[0]));
        }
        
        /// <remarks/>
        public void ShiftProvider_GetByNameAsync(string _name, int start, int pageLength) {
            this.ShiftProvider_GetByNameAsync(_name, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ShiftProvider_GetByNameAsync(string _name, int start, int pageLength, object userState) {
            if ((this.ShiftProvider_GetByNameOperationCompleted == null)) {
                this.ShiftProvider_GetByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShiftProvider_GetByNameOperationCompleted);
            }
            this.InvokeAsync("ShiftProvider_GetByName", new object[] {
                        _name,
                        start,
                        pageLength}, this.ShiftProvider_GetByNameOperationCompleted, userState);
        }
        
        private void OnShiftProvider_GetByNameOperationCompleted(object arg) {
            if ((this.ShiftProvider_GetByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShiftProvider_GetByNameCompleted(this, new ShiftProvider_GetByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ShiftProvider_GetByStartTimeEndTime", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Shift ShiftProvider_GetByStartTimeEndTime(System.DateTime _startTime, System.DateTime _endTime, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ShiftProvider_GetByStartTimeEndTime", new object[] {
                        _startTime,
                        _endTime,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Shift)(results[0]));
        }
        
        /// <remarks/>
        public void ShiftProvider_GetByStartTimeEndTimeAsync(System.DateTime _startTime, System.DateTime _endTime, int start, int pageLength) {
            this.ShiftProvider_GetByStartTimeEndTimeAsync(_startTime, _endTime, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ShiftProvider_GetByStartTimeEndTimeAsync(System.DateTime _startTime, System.DateTime _endTime, int start, int pageLength, object userState) {
            if ((this.ShiftProvider_GetByStartTimeEndTimeOperationCompleted == null)) {
                this.ShiftProvider_GetByStartTimeEndTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShiftProvider_GetByStartTimeEndTimeOperationCompleted);
            }
            this.InvokeAsync("ShiftProvider_GetByStartTimeEndTime", new object[] {
                        _startTime,
                        _endTime,
                        start,
                        pageLength}, this.ShiftProvider_GetByStartTimeEndTimeOperationCompleted, userState);
        }
        
        private void OnShiftProvider_GetByStartTimeEndTimeOperationCompleted(object arg) {
            if ((this.ShiftProvider_GetByStartTimeEndTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShiftProvider_GetByStartTimeEndTimeCompleted(this, new ShiftProvider_GetByStartTimeEndTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ShiftProvider_GetByShiftId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Shift ShiftProvider_GetByShiftId(byte _shiftId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ShiftProvider_GetByShiftId", new object[] {
                        _shiftId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Shift)(results[0]));
        }
        
        /// <remarks/>
        public void ShiftProvider_GetByShiftIdAsync(byte _shiftId, int start, int pageLength) {
            this.ShiftProvider_GetByShiftIdAsync(_shiftId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ShiftProvider_GetByShiftIdAsync(byte _shiftId, int start, int pageLength, object userState) {
            if ((this.ShiftProvider_GetByShiftIdOperationCompleted == null)) {
                this.ShiftProvider_GetByShiftIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShiftProvider_GetByShiftIdOperationCompleted);
            }
            this.InvokeAsync("ShiftProvider_GetByShiftId", new object[] {
                        _shiftId,
                        start,
                        pageLength}, this.ShiftProvider_GetByShiftIdOperationCompleted, userState);
        }
        
        private void OnShiftProvider_GetByShiftIdOperationCompleted(object arg) {
            if ((this.ShiftProvider_GetByShiftIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShiftProvider_GetByShiftIdCompleted(this, new ShiftProvider_GetByShiftIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ShiftProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Shift ShiftProvider_Insert(Shift entity) {
            object[] results = this.Invoke("ShiftProvider_Insert", new object[] {
                        entity});
            return ((Shift)(results[0]));
        }
        
        /// <remarks/>
        public void ShiftProvider_InsertAsync(Shift entity) {
            this.ShiftProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void ShiftProvider_InsertAsync(Shift entity, object userState) {
            if ((this.ShiftProvider_InsertOperationCompleted == null)) {
                this.ShiftProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShiftProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("ShiftProvider_Insert", new object[] {
                        entity}, this.ShiftProvider_InsertOperationCompleted, userState);
        }
        
        private void OnShiftProvider_InsertOperationCompleted(object arg) {
            if ((this.ShiftProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShiftProvider_InsertCompleted(this, new ShiftProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ShiftProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ShiftProvider_BulkInsert(Shift[] entityList) {
            this.Invoke("ShiftProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void ShiftProvider_BulkInsertAsync(Shift[] entityList) {
            this.ShiftProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void ShiftProvider_BulkInsertAsync(Shift[] entityList, object userState) {
            if ((this.ShiftProvider_BulkInsertOperationCompleted == null)) {
                this.ShiftProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShiftProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("ShiftProvider_BulkInsert", new object[] {
                        entityList}, this.ShiftProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnShiftProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.ShiftProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShiftProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ShiftProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Shift ShiftProvider_Update(Shift entity) {
            object[] results = this.Invoke("ShiftProvider_Update", new object[] {
                        entity});
            return ((Shift)(results[0]));
        }
        
        /// <remarks/>
        public void ShiftProvider_UpdateAsync(Shift entity) {
            this.ShiftProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void ShiftProvider_UpdateAsync(Shift entity, object userState) {
            if ((this.ShiftProvider_UpdateOperationCompleted == null)) {
                this.ShiftProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShiftProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("ShiftProvider_Update", new object[] {
                        entity}, this.ShiftProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnShiftProvider_UpdateOperationCompleted(object arg) {
            if ((this.ShiftProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShiftProvider_UpdateCompleted(this, new ShiftProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StateProvinceProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StateProvinceProvider_Delete(int _stateProvinceId) {
            object[] results = this.Invoke("StateProvinceProvider_Delete", new object[] {
                        _stateProvinceId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StateProvinceProvider_DeleteAsync(int _stateProvinceId) {
            this.StateProvinceProvider_DeleteAsync(_stateProvinceId, null);
        }
        
        /// <remarks/>
        public void StateProvinceProvider_DeleteAsync(int _stateProvinceId, object userState) {
            if ((this.StateProvinceProvider_DeleteOperationCompleted == null)) {
                this.StateProvinceProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStateProvinceProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("StateProvinceProvider_Delete", new object[] {
                        _stateProvinceId}, this.StateProvinceProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnStateProvinceProvider_DeleteOperationCompleted(object arg) {
            if ((this.StateProvinceProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StateProvinceProvider_DeleteCompleted(this, new StateProvinceProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StateProvinceProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StateProvince[] StateProvinceProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("StateProvinceProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((StateProvince[])(results[0]));
        }
        
        /// <remarks/>
        public void StateProvinceProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.StateProvinceProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void StateProvinceProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.StateProvinceProvider_FindOperationCompleted == null)) {
                this.StateProvinceProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStateProvinceProvider_FindOperationCompleted);
            }
            this.InvokeAsync("StateProvinceProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.StateProvinceProvider_FindOperationCompleted, userState);
        }
        
        private void OnStateProvinceProvider_FindOperationCompleted(object arg) {
            if ((this.StateProvinceProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StateProvinceProvider_FindCompleted(this, new StateProvinceProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StateProvinceProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StateProvince[] StateProvinceProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("StateProvinceProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((StateProvince[])(results[0]));
        }
        
        /// <remarks/>
        public void StateProvinceProvider_GetAllAsync(int start, int pageLength) {
            this.StateProvinceProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void StateProvinceProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.StateProvinceProvider_GetAllOperationCompleted == null)) {
                this.StateProvinceProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStateProvinceProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("StateProvinceProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.StateProvinceProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnStateProvinceProvider_GetAllOperationCompleted(object arg) {
            if ((this.StateProvinceProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StateProvinceProvider_GetAllCompleted(this, new StateProvinceProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StateProvinceProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StateProvince[] StateProvinceProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("StateProvinceProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((StateProvince[])(results[0]));
        }
        
        /// <remarks/>
        public void StateProvinceProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.StateProvinceProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void StateProvinceProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.StateProvinceProvider_GetPagedOperationCompleted == null)) {
                this.StateProvinceProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStateProvinceProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("StateProvinceProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.StateProvinceProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnStateProvinceProvider_GetPagedOperationCompleted(object arg) {
            if ((this.StateProvinceProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StateProvinceProvider_GetPagedCompleted(this, new StateProvinceProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StateProvinceProvider_GetByCountryRegionC" +
            "ode", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StateProvince[] StateProvinceProvider_GetByCountryRegionCode(string _countryRegionCode, int start, int pageLength, out int count) {
            object[] results = this.Invoke("StateProvinceProvider_GetByCountryRegionCode", new object[] {
                        _countryRegionCode,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((StateProvince[])(results[0]));
        }
        
        /// <remarks/>
        public void StateProvinceProvider_GetByCountryRegionCodeAsync(string _countryRegionCode, int start, int pageLength) {
            this.StateProvinceProvider_GetByCountryRegionCodeAsync(_countryRegionCode, start, pageLength, null);
        }
        
        /// <remarks/>
        public void StateProvinceProvider_GetByCountryRegionCodeAsync(string _countryRegionCode, int start, int pageLength, object userState) {
            if ((this.StateProvinceProvider_GetByCountryRegionCodeOperationCompleted == null)) {
                this.StateProvinceProvider_GetByCountryRegionCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStateProvinceProvider_GetByCountryRegionCodeOperationCompleted);
            }
            this.InvokeAsync("StateProvinceProvider_GetByCountryRegionCode", new object[] {
                        _countryRegionCode,
                        start,
                        pageLength}, this.StateProvinceProvider_GetByCountryRegionCodeOperationCompleted, userState);
        }
        
        private void OnStateProvinceProvider_GetByCountryRegionCodeOperationCompleted(object arg) {
            if ((this.StateProvinceProvider_GetByCountryRegionCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StateProvinceProvider_GetByCountryRegionCodeCompleted(this, new StateProvinceProvider_GetByCountryRegionCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StateProvinceProvider_GetByTerritoryId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StateProvince[] StateProvinceProvider_GetByTerritoryId(int _territoryId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("StateProvinceProvider_GetByTerritoryId", new object[] {
                        _territoryId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((StateProvince[])(results[0]));
        }
        
        /// <remarks/>
        public void StateProvinceProvider_GetByTerritoryIdAsync(int _territoryId, int start, int pageLength) {
            this.StateProvinceProvider_GetByTerritoryIdAsync(_territoryId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void StateProvinceProvider_GetByTerritoryIdAsync(int _territoryId, int start, int pageLength, object userState) {
            if ((this.StateProvinceProvider_GetByTerritoryIdOperationCompleted == null)) {
                this.StateProvinceProvider_GetByTerritoryIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStateProvinceProvider_GetByTerritoryIdOperationCompleted);
            }
            this.InvokeAsync("StateProvinceProvider_GetByTerritoryId", new object[] {
                        _territoryId,
                        start,
                        pageLength}, this.StateProvinceProvider_GetByTerritoryIdOperationCompleted, userState);
        }
        
        private void OnStateProvinceProvider_GetByTerritoryIdOperationCompleted(object arg) {
            if ((this.StateProvinceProvider_GetByTerritoryIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StateProvinceProvider_GetByTerritoryIdCompleted(this, new StateProvinceProvider_GetByTerritoryIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StateProvinceProvider_GetByName", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StateProvince StateProvinceProvider_GetByName(string _name, int start, int pageLength, out int count) {
            object[] results = this.Invoke("StateProvinceProvider_GetByName", new object[] {
                        _name,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((StateProvince)(results[0]));
        }
        
        /// <remarks/>
        public void StateProvinceProvider_GetByNameAsync(string _name, int start, int pageLength) {
            this.StateProvinceProvider_GetByNameAsync(_name, start, pageLength, null);
        }
        
        /// <remarks/>
        public void StateProvinceProvider_GetByNameAsync(string _name, int start, int pageLength, object userState) {
            if ((this.StateProvinceProvider_GetByNameOperationCompleted == null)) {
                this.StateProvinceProvider_GetByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStateProvinceProvider_GetByNameOperationCompleted);
            }
            this.InvokeAsync("StateProvinceProvider_GetByName", new object[] {
                        _name,
                        start,
                        pageLength}, this.StateProvinceProvider_GetByNameOperationCompleted, userState);
        }
        
        private void OnStateProvinceProvider_GetByNameOperationCompleted(object arg) {
            if ((this.StateProvinceProvider_GetByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StateProvinceProvider_GetByNameCompleted(this, new StateProvinceProvider_GetByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StateProvinceProvider_GetByRowguid", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StateProvince StateProvinceProvider_GetByRowguid(System.Guid _rowguid, int start, int pageLength, out int count) {
            object[] results = this.Invoke("StateProvinceProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((StateProvince)(results[0]));
        }
        
        /// <remarks/>
        public void StateProvinceProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength) {
            this.StateProvinceProvider_GetByRowguidAsync(_rowguid, start, pageLength, null);
        }
        
        /// <remarks/>
        public void StateProvinceProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength, object userState) {
            if ((this.StateProvinceProvider_GetByRowguidOperationCompleted == null)) {
                this.StateProvinceProvider_GetByRowguidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStateProvinceProvider_GetByRowguidOperationCompleted);
            }
            this.InvokeAsync("StateProvinceProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength}, this.StateProvinceProvider_GetByRowguidOperationCompleted, userState);
        }
        
        private void OnStateProvinceProvider_GetByRowguidOperationCompleted(object arg) {
            if ((this.StateProvinceProvider_GetByRowguidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StateProvinceProvider_GetByRowguidCompleted(this, new StateProvinceProvider_GetByRowguidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StateProvinceProvider_GetByStateProvinceC" +
            "odeCountryRegionCode", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StateProvince StateProvinceProvider_GetByStateProvinceCodeCountryRegionCode(string _stateProvinceCode, string _countryRegionCode, int start, int pageLength, out int count) {
            object[] results = this.Invoke("StateProvinceProvider_GetByStateProvinceCodeCountryRegionCode", new object[] {
                        _stateProvinceCode,
                        _countryRegionCode,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((StateProvince)(results[0]));
        }
        
        /// <remarks/>
        public void StateProvinceProvider_GetByStateProvinceCodeCountryRegionCodeAsync(string _stateProvinceCode, string _countryRegionCode, int start, int pageLength) {
            this.StateProvinceProvider_GetByStateProvinceCodeCountryRegionCodeAsync(_stateProvinceCode, _countryRegionCode, start, pageLength, null);
        }
        
        /// <remarks/>
        public void StateProvinceProvider_GetByStateProvinceCodeCountryRegionCodeAsync(string _stateProvinceCode, string _countryRegionCode, int start, int pageLength, object userState) {
            if ((this.StateProvinceProvider_GetByStateProvinceCodeCountryRegionCodeOperationCompleted == null)) {
                this.StateProvinceProvider_GetByStateProvinceCodeCountryRegionCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStateProvinceProvider_GetByStateProvinceCodeCountryRegionCodeOperationCompleted);
            }
            this.InvokeAsync("StateProvinceProvider_GetByStateProvinceCodeCountryRegionCode", new object[] {
                        _stateProvinceCode,
                        _countryRegionCode,
                        start,
                        pageLength}, this.StateProvinceProvider_GetByStateProvinceCodeCountryRegionCodeOperationCompleted, userState);
        }
        
        private void OnStateProvinceProvider_GetByStateProvinceCodeCountryRegionCodeOperationCompleted(object arg) {
            if ((this.StateProvinceProvider_GetByStateProvinceCodeCountryRegionCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StateProvinceProvider_GetByStateProvinceCodeCountryRegionCodeCompleted(this, new StateProvinceProvider_GetByStateProvinceCodeCountryRegionCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StateProvinceProvider_GetByStateProvinceI" +
            "d", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StateProvince StateProvinceProvider_GetByStateProvinceId(int _stateProvinceId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("StateProvinceProvider_GetByStateProvinceId", new object[] {
                        _stateProvinceId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((StateProvince)(results[0]));
        }
        
        /// <remarks/>
        public void StateProvinceProvider_GetByStateProvinceIdAsync(int _stateProvinceId, int start, int pageLength) {
            this.StateProvinceProvider_GetByStateProvinceIdAsync(_stateProvinceId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void StateProvinceProvider_GetByStateProvinceIdAsync(int _stateProvinceId, int start, int pageLength, object userState) {
            if ((this.StateProvinceProvider_GetByStateProvinceIdOperationCompleted == null)) {
                this.StateProvinceProvider_GetByStateProvinceIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStateProvinceProvider_GetByStateProvinceIdOperationCompleted);
            }
            this.InvokeAsync("StateProvinceProvider_GetByStateProvinceId", new object[] {
                        _stateProvinceId,
                        start,
                        pageLength}, this.StateProvinceProvider_GetByStateProvinceIdOperationCompleted, userState);
        }
        
        private void OnStateProvinceProvider_GetByStateProvinceIdOperationCompleted(object arg) {
            if ((this.StateProvinceProvider_GetByStateProvinceIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StateProvinceProvider_GetByStateProvinceIdCompleted(this, new StateProvinceProvider_GetByStateProvinceIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StateProvinceProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StateProvince StateProvinceProvider_Insert(StateProvince entity) {
            object[] results = this.Invoke("StateProvinceProvider_Insert", new object[] {
                        entity});
            return ((StateProvince)(results[0]));
        }
        
        /// <remarks/>
        public void StateProvinceProvider_InsertAsync(StateProvince entity) {
            this.StateProvinceProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void StateProvinceProvider_InsertAsync(StateProvince entity, object userState) {
            if ((this.StateProvinceProvider_InsertOperationCompleted == null)) {
                this.StateProvinceProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStateProvinceProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("StateProvinceProvider_Insert", new object[] {
                        entity}, this.StateProvinceProvider_InsertOperationCompleted, userState);
        }
        
        private void OnStateProvinceProvider_InsertOperationCompleted(object arg) {
            if ((this.StateProvinceProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StateProvinceProvider_InsertCompleted(this, new StateProvinceProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StateProvinceProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void StateProvinceProvider_BulkInsert(StateProvince[] entityList) {
            this.Invoke("StateProvinceProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void StateProvinceProvider_BulkInsertAsync(StateProvince[] entityList) {
            this.StateProvinceProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void StateProvinceProvider_BulkInsertAsync(StateProvince[] entityList, object userState) {
            if ((this.StateProvinceProvider_BulkInsertOperationCompleted == null)) {
                this.StateProvinceProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStateProvinceProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("StateProvinceProvider_BulkInsert", new object[] {
                        entityList}, this.StateProvinceProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnStateProvinceProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.StateProvinceProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StateProvinceProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/StateProvinceProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StateProvince StateProvinceProvider_Update(StateProvince entity) {
            object[] results = this.Invoke("StateProvinceProvider_Update", new object[] {
                        entity});
            return ((StateProvince)(results[0]));
        }
        
        /// <remarks/>
        public void StateProvinceProvider_UpdateAsync(StateProvince entity) {
            this.StateProvinceProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void StateProvinceProvider_UpdateAsync(StateProvince entity, object userState) {
            if ((this.StateProvinceProvider_UpdateOperationCompleted == null)) {
                this.StateProvinceProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStateProvinceProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("StateProvinceProvider_Update", new object[] {
                        entity}, this.StateProvinceProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnStateProvinceProvider_UpdateOperationCompleted(object arg) {
            if ((this.StateProvinceProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StateProvinceProvider_UpdateCompleted(this, new StateProvinceProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesReasonProvider_GetBySalesOrderIdFrom" +
            "SalesOrderHeaderSalesReason", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesReason[] SalesReasonProvider_GetBySalesOrderIdFromSalesOrderHeaderSalesReason(int _salesOrderId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesReasonProvider_GetBySalesOrderIdFromSalesOrderHeaderSalesReason", new object[] {
                        _salesOrderId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesReason[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesReasonProvider_GetBySalesOrderIdFromSalesOrderHeaderSalesReasonAsync(int _salesOrderId, int start, int pageLength) {
            this.SalesReasonProvider_GetBySalesOrderIdFromSalesOrderHeaderSalesReasonAsync(_salesOrderId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesReasonProvider_GetBySalesOrderIdFromSalesOrderHeaderSalesReasonAsync(int _salesOrderId, int start, int pageLength, object userState) {
            if ((this.SalesReasonProvider_GetBySalesOrderIdFromSalesOrderHeaderSalesReasonOperationCompleted == null)) {
                this.SalesReasonProvider_GetBySalesOrderIdFromSalesOrderHeaderSalesReasonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesReasonProvider_GetBySalesOrderIdFromSalesOrderHeaderSalesReasonOperationCompleted);
            }
            this.InvokeAsync("SalesReasonProvider_GetBySalesOrderIdFromSalesOrderHeaderSalesReason", new object[] {
                        _salesOrderId,
                        start,
                        pageLength}, this.SalesReasonProvider_GetBySalesOrderIdFromSalesOrderHeaderSalesReasonOperationCompleted, userState);
        }
        
        private void OnSalesReasonProvider_GetBySalesOrderIdFromSalesOrderHeaderSalesReasonOperationCompleted(object arg) {
            if ((this.SalesReasonProvider_GetBySalesOrderIdFromSalesOrderHeaderSalesReasonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesReasonProvider_GetBySalesOrderIdFromSalesOrderHeaderSalesReasonCompleted(this, new SalesReasonProvider_GetBySalesOrderIdFromSalesOrderHeaderSalesReasonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesReasonProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SalesReasonProvider_Delete(int _salesReasonId) {
            object[] results = this.Invoke("SalesReasonProvider_Delete", new object[] {
                        _salesReasonId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SalesReasonProvider_DeleteAsync(int _salesReasonId) {
            this.SalesReasonProvider_DeleteAsync(_salesReasonId, null);
        }
        
        /// <remarks/>
        public void SalesReasonProvider_DeleteAsync(int _salesReasonId, object userState) {
            if ((this.SalesReasonProvider_DeleteOperationCompleted == null)) {
                this.SalesReasonProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesReasonProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("SalesReasonProvider_Delete", new object[] {
                        _salesReasonId}, this.SalesReasonProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnSalesReasonProvider_DeleteOperationCompleted(object arg) {
            if ((this.SalesReasonProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesReasonProvider_DeleteCompleted(this, new SalesReasonProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesReasonProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesReason[] SalesReasonProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesReasonProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesReason[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesReasonProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.SalesReasonProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesReasonProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.SalesReasonProvider_FindOperationCompleted == null)) {
                this.SalesReasonProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesReasonProvider_FindOperationCompleted);
            }
            this.InvokeAsync("SalesReasonProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.SalesReasonProvider_FindOperationCompleted, userState);
        }
        
        private void OnSalesReasonProvider_FindOperationCompleted(object arg) {
            if ((this.SalesReasonProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesReasonProvider_FindCompleted(this, new SalesReasonProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesReasonProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesReason[] SalesReasonProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesReasonProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesReason[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesReasonProvider_GetAllAsync(int start, int pageLength) {
            this.SalesReasonProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesReasonProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.SalesReasonProvider_GetAllOperationCompleted == null)) {
                this.SalesReasonProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesReasonProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("SalesReasonProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.SalesReasonProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnSalesReasonProvider_GetAllOperationCompleted(object arg) {
            if ((this.SalesReasonProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesReasonProvider_GetAllCompleted(this, new SalesReasonProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesReasonProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesReason[] SalesReasonProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesReasonProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesReason[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesReasonProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.SalesReasonProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesReasonProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.SalesReasonProvider_GetPagedOperationCompleted == null)) {
                this.SalesReasonProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesReasonProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("SalesReasonProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.SalesReasonProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnSalesReasonProvider_GetPagedOperationCompleted(object arg) {
            if ((this.SalesReasonProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesReasonProvider_GetPagedCompleted(this, new SalesReasonProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesReasonProvider_GetBySalesReasonId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesReason SalesReasonProvider_GetBySalesReasonId(int _salesReasonId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesReasonProvider_GetBySalesReasonId", new object[] {
                        _salesReasonId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesReason)(results[0]));
        }
        
        /// <remarks/>
        public void SalesReasonProvider_GetBySalesReasonIdAsync(int _salesReasonId, int start, int pageLength) {
            this.SalesReasonProvider_GetBySalesReasonIdAsync(_salesReasonId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesReasonProvider_GetBySalesReasonIdAsync(int _salesReasonId, int start, int pageLength, object userState) {
            if ((this.SalesReasonProvider_GetBySalesReasonIdOperationCompleted == null)) {
                this.SalesReasonProvider_GetBySalesReasonIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesReasonProvider_GetBySalesReasonIdOperationCompleted);
            }
            this.InvokeAsync("SalesReasonProvider_GetBySalesReasonId", new object[] {
                        _salesReasonId,
                        start,
                        pageLength}, this.SalesReasonProvider_GetBySalesReasonIdOperationCompleted, userState);
        }
        
        private void OnSalesReasonProvider_GetBySalesReasonIdOperationCompleted(object arg) {
            if ((this.SalesReasonProvider_GetBySalesReasonIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesReasonProvider_GetBySalesReasonIdCompleted(this, new SalesReasonProvider_GetBySalesReasonIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesReasonProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesReason SalesReasonProvider_Insert(SalesReason entity) {
            object[] results = this.Invoke("SalesReasonProvider_Insert", new object[] {
                        entity});
            return ((SalesReason)(results[0]));
        }
        
        /// <remarks/>
        public void SalesReasonProvider_InsertAsync(SalesReason entity) {
            this.SalesReasonProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void SalesReasonProvider_InsertAsync(SalesReason entity, object userState) {
            if ((this.SalesReasonProvider_InsertOperationCompleted == null)) {
                this.SalesReasonProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesReasonProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("SalesReasonProvider_Insert", new object[] {
                        entity}, this.SalesReasonProvider_InsertOperationCompleted, userState);
        }
        
        private void OnSalesReasonProvider_InsertOperationCompleted(object arg) {
            if ((this.SalesReasonProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesReasonProvider_InsertCompleted(this, new SalesReasonProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesReasonProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SalesReasonProvider_BulkInsert(SalesReason[] entityList) {
            this.Invoke("SalesReasonProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void SalesReasonProvider_BulkInsertAsync(SalesReason[] entityList) {
            this.SalesReasonProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void SalesReasonProvider_BulkInsertAsync(SalesReason[] entityList, object userState) {
            if ((this.SalesReasonProvider_BulkInsertOperationCompleted == null)) {
                this.SalesReasonProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesReasonProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("SalesReasonProvider_BulkInsert", new object[] {
                        entityList}, this.SalesReasonProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnSalesReasonProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.SalesReasonProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesReasonProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesReasonProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesReason SalesReasonProvider_Update(SalesReason entity) {
            object[] results = this.Invoke("SalesReasonProvider_Update", new object[] {
                        entity});
            return ((SalesReason)(results[0]));
        }
        
        /// <remarks/>
        public void SalesReasonProvider_UpdateAsync(SalesReason entity) {
            this.SalesReasonProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void SalesReasonProvider_UpdateAsync(SalesReason entity, object userState) {
            if ((this.SalesReasonProvider_UpdateOperationCompleted == null)) {
                this.SalesReasonProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesReasonProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("SalesReasonProvider_Update", new object[] {
                        entity}, this.SalesReasonProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnSalesReasonProvider_UpdateOperationCompleted(object arg) {
            if ((this.SalesReasonProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesReasonProvider_UpdateCompleted(this, new SalesReasonProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CultureProvider_GetByProductDescriptionId" +
            "FromProductModelProductDescriptionCulture", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Culture[] CultureProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCulture(int _productDescriptionId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CultureProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultur" +
                    "e", new object[] {
                        _productDescriptionId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Culture[])(results[0]));
        }
        
        /// <remarks/>
        public void CultureProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureAsync(int _productDescriptionId, int start, int pageLength) {
            this.CultureProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureAsync(_productDescriptionId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CultureProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureAsync(int _productDescriptionId, int start, int pageLength, object userState) {
            if ((this.CultureProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureOperationCompleted == null)) {
                this.CultureProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCultureProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureOperationCompleted);
            }
            this.InvokeAsync("CultureProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultur" +
                    "e", new object[] {
                        _productDescriptionId,
                        start,
                        pageLength}, this.CultureProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureOperationCompleted, userState);
        }
        
        private void OnCultureProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureOperationCompleted(object arg) {
            if ((this.CultureProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CultureProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureCompleted(this, new CultureProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CultureProvider_GetByProductModelIdFromPr" +
            "oductModelProductDescriptionCulture", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Culture[] CultureProvider_GetByProductModelIdFromProductModelProductDescriptionCulture(int _productModelId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CultureProvider_GetByProductModelIdFromProductModelProductDescriptionCulture", new object[] {
                        _productModelId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Culture[])(results[0]));
        }
        
        /// <remarks/>
        public void CultureProvider_GetByProductModelIdFromProductModelProductDescriptionCultureAsync(int _productModelId, int start, int pageLength) {
            this.CultureProvider_GetByProductModelIdFromProductModelProductDescriptionCultureAsync(_productModelId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CultureProvider_GetByProductModelIdFromProductModelProductDescriptionCultureAsync(int _productModelId, int start, int pageLength, object userState) {
            if ((this.CultureProvider_GetByProductModelIdFromProductModelProductDescriptionCultureOperationCompleted == null)) {
                this.CultureProvider_GetByProductModelIdFromProductModelProductDescriptionCultureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCultureProvider_GetByProductModelIdFromProductModelProductDescriptionCultureOperationCompleted);
            }
            this.InvokeAsync("CultureProvider_GetByProductModelIdFromProductModelProductDescriptionCulture", new object[] {
                        _productModelId,
                        start,
                        pageLength}, this.CultureProvider_GetByProductModelIdFromProductModelProductDescriptionCultureOperationCompleted, userState);
        }
        
        private void OnCultureProvider_GetByProductModelIdFromProductModelProductDescriptionCultureOperationCompleted(object arg) {
            if ((this.CultureProvider_GetByProductModelIdFromProductModelProductDescriptionCultureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CultureProvider_GetByProductModelIdFromProductModelProductDescriptionCultureCompleted(this, new CultureProvider_GetByProductModelIdFromProductModelProductDescriptionCultureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CultureProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CultureProvider_Delete(string _cultureId) {
            object[] results = this.Invoke("CultureProvider_Delete", new object[] {
                        _cultureId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CultureProvider_DeleteAsync(string _cultureId) {
            this.CultureProvider_DeleteAsync(_cultureId, null);
        }
        
        /// <remarks/>
        public void CultureProvider_DeleteAsync(string _cultureId, object userState) {
            if ((this.CultureProvider_DeleteOperationCompleted == null)) {
                this.CultureProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCultureProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("CultureProvider_Delete", new object[] {
                        _cultureId}, this.CultureProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnCultureProvider_DeleteOperationCompleted(object arg) {
            if ((this.CultureProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CultureProvider_DeleteCompleted(this, new CultureProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CultureProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Culture[] CultureProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CultureProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Culture[])(results[0]));
        }
        
        /// <remarks/>
        public void CultureProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.CultureProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CultureProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.CultureProvider_FindOperationCompleted == null)) {
                this.CultureProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCultureProvider_FindOperationCompleted);
            }
            this.InvokeAsync("CultureProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.CultureProvider_FindOperationCompleted, userState);
        }
        
        private void OnCultureProvider_FindOperationCompleted(object arg) {
            if ((this.CultureProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CultureProvider_FindCompleted(this, new CultureProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CultureProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Culture[] CultureProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("CultureProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Culture[])(results[0]));
        }
        
        /// <remarks/>
        public void CultureProvider_GetAllAsync(int start, int pageLength) {
            this.CultureProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void CultureProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.CultureProvider_GetAllOperationCompleted == null)) {
                this.CultureProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCultureProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("CultureProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.CultureProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnCultureProvider_GetAllOperationCompleted(object arg) {
            if ((this.CultureProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CultureProvider_GetAllCompleted(this, new CultureProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CultureProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Culture[] CultureProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CultureProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Culture[])(results[0]));
        }
        
        /// <remarks/>
        public void CultureProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.CultureProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CultureProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.CultureProvider_GetPagedOperationCompleted == null)) {
                this.CultureProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCultureProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("CultureProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.CultureProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnCultureProvider_GetPagedOperationCompleted(object arg) {
            if ((this.CultureProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CultureProvider_GetPagedCompleted(this, new CultureProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CultureProvider_GetByName", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Culture CultureProvider_GetByName(string _name, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CultureProvider_GetByName", new object[] {
                        _name,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Culture)(results[0]));
        }
        
        /// <remarks/>
        public void CultureProvider_GetByNameAsync(string _name, int start, int pageLength) {
            this.CultureProvider_GetByNameAsync(_name, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CultureProvider_GetByNameAsync(string _name, int start, int pageLength, object userState) {
            if ((this.CultureProvider_GetByNameOperationCompleted == null)) {
                this.CultureProvider_GetByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCultureProvider_GetByNameOperationCompleted);
            }
            this.InvokeAsync("CultureProvider_GetByName", new object[] {
                        _name,
                        start,
                        pageLength}, this.CultureProvider_GetByNameOperationCompleted, userState);
        }
        
        private void OnCultureProvider_GetByNameOperationCompleted(object arg) {
            if ((this.CultureProvider_GetByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CultureProvider_GetByNameCompleted(this, new CultureProvider_GetByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CultureProvider_GetByCultureId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Culture CultureProvider_GetByCultureId(string _cultureId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CultureProvider_GetByCultureId", new object[] {
                        _cultureId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Culture)(results[0]));
        }
        
        /// <remarks/>
        public void CultureProvider_GetByCultureIdAsync(string _cultureId, int start, int pageLength) {
            this.CultureProvider_GetByCultureIdAsync(_cultureId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CultureProvider_GetByCultureIdAsync(string _cultureId, int start, int pageLength, object userState) {
            if ((this.CultureProvider_GetByCultureIdOperationCompleted == null)) {
                this.CultureProvider_GetByCultureIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCultureProvider_GetByCultureIdOperationCompleted);
            }
            this.InvokeAsync("CultureProvider_GetByCultureId", new object[] {
                        _cultureId,
                        start,
                        pageLength}, this.CultureProvider_GetByCultureIdOperationCompleted, userState);
        }
        
        private void OnCultureProvider_GetByCultureIdOperationCompleted(object arg) {
            if ((this.CultureProvider_GetByCultureIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CultureProvider_GetByCultureIdCompleted(this, new CultureProvider_GetByCultureIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CultureProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Culture CultureProvider_Insert(Culture entity) {
            object[] results = this.Invoke("CultureProvider_Insert", new object[] {
                        entity});
            return ((Culture)(results[0]));
        }
        
        /// <remarks/>
        public void CultureProvider_InsertAsync(Culture entity) {
            this.CultureProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void CultureProvider_InsertAsync(Culture entity, object userState) {
            if ((this.CultureProvider_InsertOperationCompleted == null)) {
                this.CultureProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCultureProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("CultureProvider_Insert", new object[] {
                        entity}, this.CultureProvider_InsertOperationCompleted, userState);
        }
        
        private void OnCultureProvider_InsertOperationCompleted(object arg) {
            if ((this.CultureProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CultureProvider_InsertCompleted(this, new CultureProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CultureProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CultureProvider_BulkInsert(Culture[] entityList) {
            this.Invoke("CultureProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void CultureProvider_BulkInsertAsync(Culture[] entityList) {
            this.CultureProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void CultureProvider_BulkInsertAsync(Culture[] entityList, object userState) {
            if ((this.CultureProvider_BulkInsertOperationCompleted == null)) {
                this.CultureProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCultureProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("CultureProvider_BulkInsert", new object[] {
                        entityList}, this.CultureProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnCultureProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.CultureProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CultureProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CultureProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Culture CultureProvider_Update(Culture entity) {
            object[] results = this.Invoke("CultureProvider_Update", new object[] {
                        entity});
            return ((Culture)(results[0]));
        }
        
        /// <remarks/>
        public void CultureProvider_UpdateAsync(Culture entity) {
            this.CultureProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void CultureProvider_UpdateAsync(Culture entity, object userState) {
            if ((this.CultureProvider_UpdateOperationCompleted == null)) {
                this.CultureProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCultureProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("CultureProvider_Update", new object[] {
                        entity}, this.CultureProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnCultureProvider_UpdateOperationCompleted(object arg) {
            if ((this.CultureProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CultureProvider_UpdateCompleted(this, new CultureProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderHeaderProvider_GetBySalesReason" +
            "IdFromSalesOrderHeaderSalesReason", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderHeader[] SalesOrderHeaderProvider_GetBySalesReasonIdFromSalesOrderHeaderSalesReason(int _salesReasonId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesOrderHeaderProvider_GetBySalesReasonIdFromSalesOrderHeaderSalesReason", new object[] {
                        _salesReasonId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesOrderHeader[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_GetBySalesReasonIdFromSalesOrderHeaderSalesReasonAsync(int _salesReasonId, int start, int pageLength) {
            this.SalesOrderHeaderProvider_GetBySalesReasonIdFromSalesOrderHeaderSalesReasonAsync(_salesReasonId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_GetBySalesReasonIdFromSalesOrderHeaderSalesReasonAsync(int _salesReasonId, int start, int pageLength, object userState) {
            if ((this.SalesOrderHeaderProvider_GetBySalesReasonIdFromSalesOrderHeaderSalesReasonOperationCompleted == null)) {
                this.SalesOrderHeaderProvider_GetBySalesReasonIdFromSalesOrderHeaderSalesReasonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderHeaderProvider_GetBySalesReasonIdFromSalesOrderHeaderSalesReasonOperationCompleted);
            }
            this.InvokeAsync("SalesOrderHeaderProvider_GetBySalesReasonIdFromSalesOrderHeaderSalesReason", new object[] {
                        _salesReasonId,
                        start,
                        pageLength}, this.SalesOrderHeaderProvider_GetBySalesReasonIdFromSalesOrderHeaderSalesReasonOperationCompleted, userState);
        }
        
        private void OnSalesOrderHeaderProvider_GetBySalesReasonIdFromSalesOrderHeaderSalesReasonOperationCompleted(object arg) {
            if ((this.SalesOrderHeaderProvider_GetBySalesReasonIdFromSalesOrderHeaderSalesReasonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderHeaderProvider_GetBySalesReasonIdFromSalesOrderHeaderSalesReasonCompleted(this, new SalesOrderHeaderProvider_GetBySalesReasonIdFromSalesOrderHeaderSalesReasonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderHeaderProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SalesOrderHeaderProvider_Delete(int _salesOrderId) {
            object[] results = this.Invoke("SalesOrderHeaderProvider_Delete", new object[] {
                        _salesOrderId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_DeleteAsync(int _salesOrderId) {
            this.SalesOrderHeaderProvider_DeleteAsync(_salesOrderId, null);
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_DeleteAsync(int _salesOrderId, object userState) {
            if ((this.SalesOrderHeaderProvider_DeleteOperationCompleted == null)) {
                this.SalesOrderHeaderProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderHeaderProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("SalesOrderHeaderProvider_Delete", new object[] {
                        _salesOrderId}, this.SalesOrderHeaderProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnSalesOrderHeaderProvider_DeleteOperationCompleted(object arg) {
            if ((this.SalesOrderHeaderProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderHeaderProvider_DeleteCompleted(this, new SalesOrderHeaderProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderHeaderProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderHeader[] SalesOrderHeaderProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesOrderHeaderProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesOrderHeader[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.SalesOrderHeaderProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.SalesOrderHeaderProvider_FindOperationCompleted == null)) {
                this.SalesOrderHeaderProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderHeaderProvider_FindOperationCompleted);
            }
            this.InvokeAsync("SalesOrderHeaderProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.SalesOrderHeaderProvider_FindOperationCompleted, userState);
        }
        
        private void OnSalesOrderHeaderProvider_FindOperationCompleted(object arg) {
            if ((this.SalesOrderHeaderProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderHeaderProvider_FindCompleted(this, new SalesOrderHeaderProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderHeaderProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderHeader[] SalesOrderHeaderProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesOrderHeaderProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesOrderHeader[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_GetAllAsync(int start, int pageLength) {
            this.SalesOrderHeaderProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.SalesOrderHeaderProvider_GetAllOperationCompleted == null)) {
                this.SalesOrderHeaderProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderHeaderProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("SalesOrderHeaderProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.SalesOrderHeaderProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnSalesOrderHeaderProvider_GetAllOperationCompleted(object arg) {
            if ((this.SalesOrderHeaderProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderHeaderProvider_GetAllCompleted(this, new SalesOrderHeaderProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderHeaderProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderHeader[] SalesOrderHeaderProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesOrderHeaderProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesOrderHeader[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.SalesOrderHeaderProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.SalesOrderHeaderProvider_GetPagedOperationCompleted == null)) {
                this.SalesOrderHeaderProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderHeaderProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("SalesOrderHeaderProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.SalesOrderHeaderProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnSalesOrderHeaderProvider_GetPagedOperationCompleted(object arg) {
            if ((this.SalesOrderHeaderProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderHeaderProvider_GetPagedCompleted(this, new SalesOrderHeaderProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderHeaderProvider_GetByBillToAddre" +
            "ssId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderHeader[] SalesOrderHeaderProvider_GetByBillToAddressId(int _billToAddressId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesOrderHeaderProvider_GetByBillToAddressId", new object[] {
                        _billToAddressId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesOrderHeader[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_GetByBillToAddressIdAsync(int _billToAddressId, int start, int pageLength) {
            this.SalesOrderHeaderProvider_GetByBillToAddressIdAsync(_billToAddressId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_GetByBillToAddressIdAsync(int _billToAddressId, int start, int pageLength, object userState) {
            if ((this.SalesOrderHeaderProvider_GetByBillToAddressIdOperationCompleted == null)) {
                this.SalesOrderHeaderProvider_GetByBillToAddressIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderHeaderProvider_GetByBillToAddressIdOperationCompleted);
            }
            this.InvokeAsync("SalesOrderHeaderProvider_GetByBillToAddressId", new object[] {
                        _billToAddressId,
                        start,
                        pageLength}, this.SalesOrderHeaderProvider_GetByBillToAddressIdOperationCompleted, userState);
        }
        
        private void OnSalesOrderHeaderProvider_GetByBillToAddressIdOperationCompleted(object arg) {
            if ((this.SalesOrderHeaderProvider_GetByBillToAddressIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderHeaderProvider_GetByBillToAddressIdCompleted(this, new SalesOrderHeaderProvider_GetByBillToAddressIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderHeaderProvider_GetByShipToAddre" +
            "ssId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderHeader[] SalesOrderHeaderProvider_GetByShipToAddressId(int _shipToAddressId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesOrderHeaderProvider_GetByShipToAddressId", new object[] {
                        _shipToAddressId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesOrderHeader[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_GetByShipToAddressIdAsync(int _shipToAddressId, int start, int pageLength) {
            this.SalesOrderHeaderProvider_GetByShipToAddressIdAsync(_shipToAddressId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_GetByShipToAddressIdAsync(int _shipToAddressId, int start, int pageLength, object userState) {
            if ((this.SalesOrderHeaderProvider_GetByShipToAddressIdOperationCompleted == null)) {
                this.SalesOrderHeaderProvider_GetByShipToAddressIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderHeaderProvider_GetByShipToAddressIdOperationCompleted);
            }
            this.InvokeAsync("SalesOrderHeaderProvider_GetByShipToAddressId", new object[] {
                        _shipToAddressId,
                        start,
                        pageLength}, this.SalesOrderHeaderProvider_GetByShipToAddressIdOperationCompleted, userState);
        }
        
        private void OnSalesOrderHeaderProvider_GetByShipToAddressIdOperationCompleted(object arg) {
            if ((this.SalesOrderHeaderProvider_GetByShipToAddressIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderHeaderProvider_GetByShipToAddressIdCompleted(this, new SalesOrderHeaderProvider_GetByShipToAddressIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderHeaderProvider_GetByContactId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderHeader[] SalesOrderHeaderProvider_GetByContactId(int _contactId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesOrderHeaderProvider_GetByContactId", new object[] {
                        _contactId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesOrderHeader[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_GetByContactIdAsync(int _contactId, int start, int pageLength) {
            this.SalesOrderHeaderProvider_GetByContactIdAsync(_contactId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_GetByContactIdAsync(int _contactId, int start, int pageLength, object userState) {
            if ((this.SalesOrderHeaderProvider_GetByContactIdOperationCompleted == null)) {
                this.SalesOrderHeaderProvider_GetByContactIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderHeaderProvider_GetByContactIdOperationCompleted);
            }
            this.InvokeAsync("SalesOrderHeaderProvider_GetByContactId", new object[] {
                        _contactId,
                        start,
                        pageLength}, this.SalesOrderHeaderProvider_GetByContactIdOperationCompleted, userState);
        }
        
        private void OnSalesOrderHeaderProvider_GetByContactIdOperationCompleted(object arg) {
            if ((this.SalesOrderHeaderProvider_GetByContactIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderHeaderProvider_GetByContactIdCompleted(this, new SalesOrderHeaderProvider_GetByContactIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderHeaderProvider_GetByCreditCardI" +
            "d", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderHeader[] SalesOrderHeaderProvider_GetByCreditCardId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> _creditCardId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesOrderHeaderProvider_GetByCreditCardId", new object[] {
                        _creditCardId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesOrderHeader[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_GetByCreditCardIdAsync(System.Nullable<int> _creditCardId, int start, int pageLength) {
            this.SalesOrderHeaderProvider_GetByCreditCardIdAsync(_creditCardId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_GetByCreditCardIdAsync(System.Nullable<int> _creditCardId, int start, int pageLength, object userState) {
            if ((this.SalesOrderHeaderProvider_GetByCreditCardIdOperationCompleted == null)) {
                this.SalesOrderHeaderProvider_GetByCreditCardIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderHeaderProvider_GetByCreditCardIdOperationCompleted);
            }
            this.InvokeAsync("SalesOrderHeaderProvider_GetByCreditCardId", new object[] {
                        _creditCardId,
                        start,
                        pageLength}, this.SalesOrderHeaderProvider_GetByCreditCardIdOperationCompleted, userState);
        }
        
        private void OnSalesOrderHeaderProvider_GetByCreditCardIdOperationCompleted(object arg) {
            if ((this.SalesOrderHeaderProvider_GetByCreditCardIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderHeaderProvider_GetByCreditCardIdCompleted(this, new SalesOrderHeaderProvider_GetByCreditCardIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderHeaderProvider_GetByCurrencyRat" +
            "eId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderHeader[] SalesOrderHeaderProvider_GetByCurrencyRateId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> _currencyRateId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesOrderHeaderProvider_GetByCurrencyRateId", new object[] {
                        _currencyRateId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesOrderHeader[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_GetByCurrencyRateIdAsync(System.Nullable<int> _currencyRateId, int start, int pageLength) {
            this.SalesOrderHeaderProvider_GetByCurrencyRateIdAsync(_currencyRateId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_GetByCurrencyRateIdAsync(System.Nullable<int> _currencyRateId, int start, int pageLength, object userState) {
            if ((this.SalesOrderHeaderProvider_GetByCurrencyRateIdOperationCompleted == null)) {
                this.SalesOrderHeaderProvider_GetByCurrencyRateIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderHeaderProvider_GetByCurrencyRateIdOperationCompleted);
            }
            this.InvokeAsync("SalesOrderHeaderProvider_GetByCurrencyRateId", new object[] {
                        _currencyRateId,
                        start,
                        pageLength}, this.SalesOrderHeaderProvider_GetByCurrencyRateIdOperationCompleted, userState);
        }
        
        private void OnSalesOrderHeaderProvider_GetByCurrencyRateIdOperationCompleted(object arg) {
            if ((this.SalesOrderHeaderProvider_GetByCurrencyRateIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderHeaderProvider_GetByCurrencyRateIdCompleted(this, new SalesOrderHeaderProvider_GetByCurrencyRateIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderHeaderProvider_GetByTerritoryId" +
            "", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderHeader[] SalesOrderHeaderProvider_GetByTerritoryId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> _territoryId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesOrderHeaderProvider_GetByTerritoryId", new object[] {
                        _territoryId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesOrderHeader[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_GetByTerritoryIdAsync(System.Nullable<int> _territoryId, int start, int pageLength) {
            this.SalesOrderHeaderProvider_GetByTerritoryIdAsync(_territoryId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_GetByTerritoryIdAsync(System.Nullable<int> _territoryId, int start, int pageLength, object userState) {
            if ((this.SalesOrderHeaderProvider_GetByTerritoryIdOperationCompleted == null)) {
                this.SalesOrderHeaderProvider_GetByTerritoryIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderHeaderProvider_GetByTerritoryIdOperationCompleted);
            }
            this.InvokeAsync("SalesOrderHeaderProvider_GetByTerritoryId", new object[] {
                        _territoryId,
                        start,
                        pageLength}, this.SalesOrderHeaderProvider_GetByTerritoryIdOperationCompleted, userState);
        }
        
        private void OnSalesOrderHeaderProvider_GetByTerritoryIdOperationCompleted(object arg) {
            if ((this.SalesOrderHeaderProvider_GetByTerritoryIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderHeaderProvider_GetByTerritoryIdCompleted(this, new SalesOrderHeaderProvider_GetByTerritoryIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderHeaderProvider_GetByShipMethodI" +
            "d", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderHeader[] SalesOrderHeaderProvider_GetByShipMethodId(int _shipMethodId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesOrderHeaderProvider_GetByShipMethodId", new object[] {
                        _shipMethodId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesOrderHeader[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_GetByShipMethodIdAsync(int _shipMethodId, int start, int pageLength) {
            this.SalesOrderHeaderProvider_GetByShipMethodIdAsync(_shipMethodId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_GetByShipMethodIdAsync(int _shipMethodId, int start, int pageLength, object userState) {
            if ((this.SalesOrderHeaderProvider_GetByShipMethodIdOperationCompleted == null)) {
                this.SalesOrderHeaderProvider_GetByShipMethodIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderHeaderProvider_GetByShipMethodIdOperationCompleted);
            }
            this.InvokeAsync("SalesOrderHeaderProvider_GetByShipMethodId", new object[] {
                        _shipMethodId,
                        start,
                        pageLength}, this.SalesOrderHeaderProvider_GetByShipMethodIdOperationCompleted, userState);
        }
        
        private void OnSalesOrderHeaderProvider_GetByShipMethodIdOperationCompleted(object arg) {
            if ((this.SalesOrderHeaderProvider_GetByShipMethodIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderHeaderProvider_GetByShipMethodIdCompleted(this, new SalesOrderHeaderProvider_GetByShipMethodIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderHeaderProvider_GetByRowguid", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderHeader SalesOrderHeaderProvider_GetByRowguid(System.Guid _rowguid, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesOrderHeaderProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesOrderHeader)(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength) {
            this.SalesOrderHeaderProvider_GetByRowguidAsync(_rowguid, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength, object userState) {
            if ((this.SalesOrderHeaderProvider_GetByRowguidOperationCompleted == null)) {
                this.SalesOrderHeaderProvider_GetByRowguidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderHeaderProvider_GetByRowguidOperationCompleted);
            }
            this.InvokeAsync("SalesOrderHeaderProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength}, this.SalesOrderHeaderProvider_GetByRowguidOperationCompleted, userState);
        }
        
        private void OnSalesOrderHeaderProvider_GetByRowguidOperationCompleted(object arg) {
            if ((this.SalesOrderHeaderProvider_GetByRowguidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderHeaderProvider_GetByRowguidCompleted(this, new SalesOrderHeaderProvider_GetByRowguidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderHeaderProvider_GetBySalesOrderN" +
            "umber", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderHeader SalesOrderHeaderProvider_GetBySalesOrderNumber(string _salesOrderNumber, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesOrderHeaderProvider_GetBySalesOrderNumber", new object[] {
                        _salesOrderNumber,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesOrderHeader)(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_GetBySalesOrderNumberAsync(string _salesOrderNumber, int start, int pageLength) {
            this.SalesOrderHeaderProvider_GetBySalesOrderNumberAsync(_salesOrderNumber, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_GetBySalesOrderNumberAsync(string _salesOrderNumber, int start, int pageLength, object userState) {
            if ((this.SalesOrderHeaderProvider_GetBySalesOrderNumberOperationCompleted == null)) {
                this.SalesOrderHeaderProvider_GetBySalesOrderNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderHeaderProvider_GetBySalesOrderNumberOperationCompleted);
            }
            this.InvokeAsync("SalesOrderHeaderProvider_GetBySalesOrderNumber", new object[] {
                        _salesOrderNumber,
                        start,
                        pageLength}, this.SalesOrderHeaderProvider_GetBySalesOrderNumberOperationCompleted, userState);
        }
        
        private void OnSalesOrderHeaderProvider_GetBySalesOrderNumberOperationCompleted(object arg) {
            if ((this.SalesOrderHeaderProvider_GetBySalesOrderNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderHeaderProvider_GetBySalesOrderNumberCompleted(this, new SalesOrderHeaderProvider_GetBySalesOrderNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderHeaderProvider_GetByCustomerId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderHeader[] SalesOrderHeaderProvider_GetByCustomerId(int _customerId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesOrderHeaderProvider_GetByCustomerId", new object[] {
                        _customerId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesOrderHeader[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_GetByCustomerIdAsync(int _customerId, int start, int pageLength) {
            this.SalesOrderHeaderProvider_GetByCustomerIdAsync(_customerId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_GetByCustomerIdAsync(int _customerId, int start, int pageLength, object userState) {
            if ((this.SalesOrderHeaderProvider_GetByCustomerIdOperationCompleted == null)) {
                this.SalesOrderHeaderProvider_GetByCustomerIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderHeaderProvider_GetByCustomerIdOperationCompleted);
            }
            this.InvokeAsync("SalesOrderHeaderProvider_GetByCustomerId", new object[] {
                        _customerId,
                        start,
                        pageLength}, this.SalesOrderHeaderProvider_GetByCustomerIdOperationCompleted, userState);
        }
        
        private void OnSalesOrderHeaderProvider_GetByCustomerIdOperationCompleted(object arg) {
            if ((this.SalesOrderHeaderProvider_GetByCustomerIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderHeaderProvider_GetByCustomerIdCompleted(this, new SalesOrderHeaderProvider_GetByCustomerIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderHeaderProvider_GetBySalesPerson" +
            "Id", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderHeader[] SalesOrderHeaderProvider_GetBySalesPersonId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> _salesPersonId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesOrderHeaderProvider_GetBySalesPersonId", new object[] {
                        _salesPersonId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesOrderHeader[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_GetBySalesPersonIdAsync(System.Nullable<int> _salesPersonId, int start, int pageLength) {
            this.SalesOrderHeaderProvider_GetBySalesPersonIdAsync(_salesPersonId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_GetBySalesPersonIdAsync(System.Nullable<int> _salesPersonId, int start, int pageLength, object userState) {
            if ((this.SalesOrderHeaderProvider_GetBySalesPersonIdOperationCompleted == null)) {
                this.SalesOrderHeaderProvider_GetBySalesPersonIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderHeaderProvider_GetBySalesPersonIdOperationCompleted);
            }
            this.InvokeAsync("SalesOrderHeaderProvider_GetBySalesPersonId", new object[] {
                        _salesPersonId,
                        start,
                        pageLength}, this.SalesOrderHeaderProvider_GetBySalesPersonIdOperationCompleted, userState);
        }
        
        private void OnSalesOrderHeaderProvider_GetBySalesPersonIdOperationCompleted(object arg) {
            if ((this.SalesOrderHeaderProvider_GetBySalesPersonIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderHeaderProvider_GetBySalesPersonIdCompleted(this, new SalesOrderHeaderProvider_GetBySalesPersonIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderHeaderProvider_GetBySalesOrderI" +
            "d", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderHeader SalesOrderHeaderProvider_GetBySalesOrderId(int _salesOrderId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesOrderHeaderProvider_GetBySalesOrderId", new object[] {
                        _salesOrderId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesOrderHeader)(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_GetBySalesOrderIdAsync(int _salesOrderId, int start, int pageLength) {
            this.SalesOrderHeaderProvider_GetBySalesOrderIdAsync(_salesOrderId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_GetBySalesOrderIdAsync(int _salesOrderId, int start, int pageLength, object userState) {
            if ((this.SalesOrderHeaderProvider_GetBySalesOrderIdOperationCompleted == null)) {
                this.SalesOrderHeaderProvider_GetBySalesOrderIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderHeaderProvider_GetBySalesOrderIdOperationCompleted);
            }
            this.InvokeAsync("SalesOrderHeaderProvider_GetBySalesOrderId", new object[] {
                        _salesOrderId,
                        start,
                        pageLength}, this.SalesOrderHeaderProvider_GetBySalesOrderIdOperationCompleted, userState);
        }
        
        private void OnSalesOrderHeaderProvider_GetBySalesOrderIdOperationCompleted(object arg) {
            if ((this.SalesOrderHeaderProvider_GetBySalesOrderIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderHeaderProvider_GetBySalesOrderIdCompleted(this, new SalesOrderHeaderProvider_GetBySalesOrderIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderHeaderProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderHeader SalesOrderHeaderProvider_Insert(SalesOrderHeader entity) {
            object[] results = this.Invoke("SalesOrderHeaderProvider_Insert", new object[] {
                        entity});
            return ((SalesOrderHeader)(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_InsertAsync(SalesOrderHeader entity) {
            this.SalesOrderHeaderProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_InsertAsync(SalesOrderHeader entity, object userState) {
            if ((this.SalesOrderHeaderProvider_InsertOperationCompleted == null)) {
                this.SalesOrderHeaderProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderHeaderProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("SalesOrderHeaderProvider_Insert", new object[] {
                        entity}, this.SalesOrderHeaderProvider_InsertOperationCompleted, userState);
        }
        
        private void OnSalesOrderHeaderProvider_InsertOperationCompleted(object arg) {
            if ((this.SalesOrderHeaderProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderHeaderProvider_InsertCompleted(this, new SalesOrderHeaderProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderHeaderProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SalesOrderHeaderProvider_BulkInsert(SalesOrderHeader[] entityList) {
            this.Invoke("SalesOrderHeaderProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_BulkInsertAsync(SalesOrderHeader[] entityList) {
            this.SalesOrderHeaderProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_BulkInsertAsync(SalesOrderHeader[] entityList, object userState) {
            if ((this.SalesOrderHeaderProvider_BulkInsertOperationCompleted == null)) {
                this.SalesOrderHeaderProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderHeaderProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("SalesOrderHeaderProvider_BulkInsert", new object[] {
                        entityList}, this.SalesOrderHeaderProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnSalesOrderHeaderProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.SalesOrderHeaderProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderHeaderProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesOrderHeaderProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesOrderHeader SalesOrderHeaderProvider_Update(SalesOrderHeader entity) {
            object[] results = this.Invoke("SalesOrderHeaderProvider_Update", new object[] {
                        entity});
            return ((SalesOrderHeader)(results[0]));
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_UpdateAsync(SalesOrderHeader entity) {
            this.SalesOrderHeaderProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void SalesOrderHeaderProvider_UpdateAsync(SalesOrderHeader entity, object userState) {
            if ((this.SalesOrderHeaderProvider_UpdateOperationCompleted == null)) {
                this.SalesOrderHeaderProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesOrderHeaderProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("SalesOrderHeaderProvider_Update", new object[] {
                        entity}, this.SalesOrderHeaderProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnSalesOrderHeaderProvider_UpdateOperationCompleted(object arg) {
            if ((this.SalesOrderHeaderProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesOrderHeaderProvider_UpdateCompleted(this, new SalesOrderHeaderProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelProductDescriptionCultureProv" +
            "ider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ProductModelProductDescriptionCultureProvider_Delete(int _productModelId, int _productDescriptionId, string _cultureId) {
            object[] results = this.Invoke("ProductModelProductDescriptionCultureProvider_Delete", new object[] {
                        _productModelId,
                        _productDescriptionId,
                        _cultureId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ProductModelProductDescriptionCultureProvider_DeleteAsync(int _productModelId, int _productDescriptionId, string _cultureId) {
            this.ProductModelProductDescriptionCultureProvider_DeleteAsync(_productModelId, _productDescriptionId, _cultureId, null);
        }
        
        /// <remarks/>
        public void ProductModelProductDescriptionCultureProvider_DeleteAsync(int _productModelId, int _productDescriptionId, string _cultureId, object userState) {
            if ((this.ProductModelProductDescriptionCultureProvider_DeleteOperationCompleted == null)) {
                this.ProductModelProductDescriptionCultureProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelProductDescriptionCultureProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("ProductModelProductDescriptionCultureProvider_Delete", new object[] {
                        _productModelId,
                        _productDescriptionId,
                        _cultureId}, this.ProductModelProductDescriptionCultureProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnProductModelProductDescriptionCultureProvider_DeleteOperationCompleted(object arg) {
            if ((this.ProductModelProductDescriptionCultureProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelProductDescriptionCultureProvider_DeleteCompleted(this, new ProductModelProductDescriptionCultureProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelProductDescriptionCultureProv" +
            "ider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductModelProductDescriptionCulture[] ProductModelProductDescriptionCultureProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductModelProductDescriptionCultureProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductModelProductDescriptionCulture[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductModelProductDescriptionCultureProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.ProductModelProductDescriptionCultureProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductModelProductDescriptionCultureProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.ProductModelProductDescriptionCultureProvider_FindOperationCompleted == null)) {
                this.ProductModelProductDescriptionCultureProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelProductDescriptionCultureProvider_FindOperationCompleted);
            }
            this.InvokeAsync("ProductModelProductDescriptionCultureProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.ProductModelProductDescriptionCultureProvider_FindOperationCompleted, userState);
        }
        
        private void OnProductModelProductDescriptionCultureProvider_FindOperationCompleted(object arg) {
            if ((this.ProductModelProductDescriptionCultureProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelProductDescriptionCultureProvider_FindCompleted(this, new ProductModelProductDescriptionCultureProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelProductDescriptionCultureProv" +
            "ider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductModelProductDescriptionCulture[] ProductModelProductDescriptionCultureProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductModelProductDescriptionCultureProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductModelProductDescriptionCulture[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductModelProductDescriptionCultureProvider_GetAllAsync(int start, int pageLength) {
            this.ProductModelProductDescriptionCultureProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductModelProductDescriptionCultureProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.ProductModelProductDescriptionCultureProvider_GetAllOperationCompleted == null)) {
                this.ProductModelProductDescriptionCultureProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelProductDescriptionCultureProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("ProductModelProductDescriptionCultureProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.ProductModelProductDescriptionCultureProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnProductModelProductDescriptionCultureProvider_GetAllOperationCompleted(object arg) {
            if ((this.ProductModelProductDescriptionCultureProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelProductDescriptionCultureProvider_GetAllCompleted(this, new ProductModelProductDescriptionCultureProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelProductDescriptionCultureProv" +
            "ider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductModelProductDescriptionCulture[] ProductModelProductDescriptionCultureProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductModelProductDescriptionCultureProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductModelProductDescriptionCulture[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductModelProductDescriptionCultureProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.ProductModelProductDescriptionCultureProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductModelProductDescriptionCultureProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.ProductModelProductDescriptionCultureProvider_GetPagedOperationCompleted == null)) {
                this.ProductModelProductDescriptionCultureProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelProductDescriptionCultureProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("ProductModelProductDescriptionCultureProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.ProductModelProductDescriptionCultureProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnProductModelProductDescriptionCultureProvider_GetPagedOperationCompleted(object arg) {
            if ((this.ProductModelProductDescriptionCultureProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelProductDescriptionCultureProvider_GetPagedCompleted(this, new ProductModelProductDescriptionCultureProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelProductDescriptionCultureProv" +
            "ider_GetByCultureId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductModelProductDescriptionCulture[] ProductModelProductDescriptionCultureProvider_GetByCultureId(string _cultureId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductModelProductDescriptionCultureProvider_GetByCultureId", new object[] {
                        _cultureId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductModelProductDescriptionCulture[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductModelProductDescriptionCultureProvider_GetByCultureIdAsync(string _cultureId, int start, int pageLength) {
            this.ProductModelProductDescriptionCultureProvider_GetByCultureIdAsync(_cultureId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductModelProductDescriptionCultureProvider_GetByCultureIdAsync(string _cultureId, int start, int pageLength, object userState) {
            if ((this.ProductModelProductDescriptionCultureProvider_GetByCultureIdOperationCompleted == null)) {
                this.ProductModelProductDescriptionCultureProvider_GetByCultureIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelProductDescriptionCultureProvider_GetByCultureIdOperationCompleted);
            }
            this.InvokeAsync("ProductModelProductDescriptionCultureProvider_GetByCultureId", new object[] {
                        _cultureId,
                        start,
                        pageLength}, this.ProductModelProductDescriptionCultureProvider_GetByCultureIdOperationCompleted, userState);
        }
        
        private void OnProductModelProductDescriptionCultureProvider_GetByCultureIdOperationCompleted(object arg) {
            if ((this.ProductModelProductDescriptionCultureProvider_GetByCultureIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelProductDescriptionCultureProvider_GetByCultureIdCompleted(this, new ProductModelProductDescriptionCultureProvider_GetByCultureIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelProductDescriptionCultureProv" +
            "ider_GetByProductDescriptionId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductModelProductDescriptionCulture[] ProductModelProductDescriptionCultureProvider_GetByProductDescriptionId(int _productDescriptionId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductModelProductDescriptionCultureProvider_GetByProductDescriptionId", new object[] {
                        _productDescriptionId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductModelProductDescriptionCulture[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductModelProductDescriptionCultureProvider_GetByProductDescriptionIdAsync(int _productDescriptionId, int start, int pageLength) {
            this.ProductModelProductDescriptionCultureProvider_GetByProductDescriptionIdAsync(_productDescriptionId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductModelProductDescriptionCultureProvider_GetByProductDescriptionIdAsync(int _productDescriptionId, int start, int pageLength, object userState) {
            if ((this.ProductModelProductDescriptionCultureProvider_GetByProductDescriptionIdOperationCompleted == null)) {
                this.ProductModelProductDescriptionCultureProvider_GetByProductDescriptionIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelProductDescriptionCultureProvider_GetByProductDescriptionIdOperationCompleted);
            }
            this.InvokeAsync("ProductModelProductDescriptionCultureProvider_GetByProductDescriptionId", new object[] {
                        _productDescriptionId,
                        start,
                        pageLength}, this.ProductModelProductDescriptionCultureProvider_GetByProductDescriptionIdOperationCompleted, userState);
        }
        
        private void OnProductModelProductDescriptionCultureProvider_GetByProductDescriptionIdOperationCompleted(object arg) {
            if ((this.ProductModelProductDescriptionCultureProvider_GetByProductDescriptionIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelProductDescriptionCultureProvider_GetByProductDescriptionIdCompleted(this, new ProductModelProductDescriptionCultureProvider_GetByProductDescriptionIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelProductDescriptionCultureProv" +
            "ider_GetByProductModelId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductModelProductDescriptionCulture[] ProductModelProductDescriptionCultureProvider_GetByProductModelId(int _productModelId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductModelProductDescriptionCultureProvider_GetByProductModelId", new object[] {
                        _productModelId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductModelProductDescriptionCulture[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductModelProductDescriptionCultureProvider_GetByProductModelIdAsync(int _productModelId, int start, int pageLength) {
            this.ProductModelProductDescriptionCultureProvider_GetByProductModelIdAsync(_productModelId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductModelProductDescriptionCultureProvider_GetByProductModelIdAsync(int _productModelId, int start, int pageLength, object userState) {
            if ((this.ProductModelProductDescriptionCultureProvider_GetByProductModelIdOperationCompleted == null)) {
                this.ProductModelProductDescriptionCultureProvider_GetByProductModelIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelProductDescriptionCultureProvider_GetByProductModelIdOperationCompleted);
            }
            this.InvokeAsync("ProductModelProductDescriptionCultureProvider_GetByProductModelId", new object[] {
                        _productModelId,
                        start,
                        pageLength}, this.ProductModelProductDescriptionCultureProvider_GetByProductModelIdOperationCompleted, userState);
        }
        
        private void OnProductModelProductDescriptionCultureProvider_GetByProductModelIdOperationCompleted(object arg) {
            if ((this.ProductModelProductDescriptionCultureProvider_GetByProductModelIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelProductDescriptionCultureProvider_GetByProductModelIdCompleted(this, new ProductModelProductDescriptionCultureProvider_GetByProductModelIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelProductDescriptionCultureProv" +
            "ider_GetByProductModelIdProductDescriptionIdCultureId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductModelProductDescriptionCulture ProductModelProductDescriptionCultureProvider_GetByProductModelIdProductDescriptionIdCultureId(int _productModelId, int _productDescriptionId, string _cultureId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductModelProductDescriptionCultureProvider_GetByProductModelIdProductDescripti" +
                    "onIdCultureId", new object[] {
                        _productModelId,
                        _productDescriptionId,
                        _cultureId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductModelProductDescriptionCulture)(results[0]));
        }
        
        /// <remarks/>
        public void ProductModelProductDescriptionCultureProvider_GetByProductModelIdProductDescriptionIdCultureIdAsync(int _productModelId, int _productDescriptionId, string _cultureId, int start, int pageLength) {
            this.ProductModelProductDescriptionCultureProvider_GetByProductModelIdProductDescriptionIdCultureIdAsync(_productModelId, _productDescriptionId, _cultureId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductModelProductDescriptionCultureProvider_GetByProductModelIdProductDescriptionIdCultureIdAsync(int _productModelId, int _productDescriptionId, string _cultureId, int start, int pageLength, object userState) {
            if ((this.ProductModelProductDescriptionCultureProvider_GetByProductModelIdProductDescriptionIdCultureIdOperationCompleted == null)) {
                this.ProductModelProductDescriptionCultureProvider_GetByProductModelIdProductDescriptionIdCultureIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelProductDescriptionCultureProvider_GetByProductModelIdProductDescriptionIdCultureIdOperationCompleted);
            }
            this.InvokeAsync("ProductModelProductDescriptionCultureProvider_GetByProductModelIdProductDescripti" +
                    "onIdCultureId", new object[] {
                        _productModelId,
                        _productDescriptionId,
                        _cultureId,
                        start,
                        pageLength}, this.ProductModelProductDescriptionCultureProvider_GetByProductModelIdProductDescriptionIdCultureIdOperationCompleted, userState);
        }
        
        private void OnProductModelProductDescriptionCultureProvider_GetByProductModelIdProductDescriptionIdCultureIdOperationCompleted(object arg) {
            if ((this.ProductModelProductDescriptionCultureProvider_GetByProductModelIdProductDescriptionIdCultureIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelProductDescriptionCultureProvider_GetByProductModelIdProductDescriptionIdCultureIdCompleted(this, new ProductModelProductDescriptionCultureProvider_GetByProductModelIdProductDescriptionIdCultureIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelProductDescriptionCultureProv" +
            "ider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductModelProductDescriptionCulture ProductModelProductDescriptionCultureProvider_Insert(ProductModelProductDescriptionCulture entity) {
            object[] results = this.Invoke("ProductModelProductDescriptionCultureProvider_Insert", new object[] {
                        entity});
            return ((ProductModelProductDescriptionCulture)(results[0]));
        }
        
        /// <remarks/>
        public void ProductModelProductDescriptionCultureProvider_InsertAsync(ProductModelProductDescriptionCulture entity) {
            this.ProductModelProductDescriptionCultureProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void ProductModelProductDescriptionCultureProvider_InsertAsync(ProductModelProductDescriptionCulture entity, object userState) {
            if ((this.ProductModelProductDescriptionCultureProvider_InsertOperationCompleted == null)) {
                this.ProductModelProductDescriptionCultureProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelProductDescriptionCultureProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("ProductModelProductDescriptionCultureProvider_Insert", new object[] {
                        entity}, this.ProductModelProductDescriptionCultureProvider_InsertOperationCompleted, userState);
        }
        
        private void OnProductModelProductDescriptionCultureProvider_InsertOperationCompleted(object arg) {
            if ((this.ProductModelProductDescriptionCultureProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelProductDescriptionCultureProvider_InsertCompleted(this, new ProductModelProductDescriptionCultureProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelProductDescriptionCultureProv" +
            "ider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ProductModelProductDescriptionCultureProvider_BulkInsert(ProductModelProductDescriptionCulture[] entityList) {
            this.Invoke("ProductModelProductDescriptionCultureProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void ProductModelProductDescriptionCultureProvider_BulkInsertAsync(ProductModelProductDescriptionCulture[] entityList) {
            this.ProductModelProductDescriptionCultureProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void ProductModelProductDescriptionCultureProvider_BulkInsertAsync(ProductModelProductDescriptionCulture[] entityList, object userState) {
            if ((this.ProductModelProductDescriptionCultureProvider_BulkInsertOperationCompleted == null)) {
                this.ProductModelProductDescriptionCultureProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelProductDescriptionCultureProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("ProductModelProductDescriptionCultureProvider_BulkInsert", new object[] {
                        entityList}, this.ProductModelProductDescriptionCultureProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnProductModelProductDescriptionCultureProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.ProductModelProductDescriptionCultureProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelProductDescriptionCultureProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductModelProductDescriptionCultureProv" +
            "ider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductModelProductDescriptionCulture ProductModelProductDescriptionCultureProvider_Update(ProductModelProductDescriptionCulture entity) {
            object[] results = this.Invoke("ProductModelProductDescriptionCultureProvider_Update", new object[] {
                        entity});
            return ((ProductModelProductDescriptionCulture)(results[0]));
        }
        
        /// <remarks/>
        public void ProductModelProductDescriptionCultureProvider_UpdateAsync(ProductModelProductDescriptionCulture entity) {
            this.ProductModelProductDescriptionCultureProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void ProductModelProductDescriptionCultureProvider_UpdateAsync(ProductModelProductDescriptionCulture entity, object userState) {
            if ((this.ProductModelProductDescriptionCultureProvider_UpdateOperationCompleted == null)) {
                this.ProductModelProductDescriptionCultureProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductModelProductDescriptionCultureProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("ProductModelProductDescriptionCultureProvider_Update", new object[] {
                        entity}, this.ProductModelProductDescriptionCultureProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnProductModelProductDescriptionCultureProvider_UpdateOperationCompleted(object arg) {
            if ((this.ProductModelProductDescriptionCultureProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductModelProductDescriptionCultureProvider_UpdateCompleted(this, new ProductModelProductDescriptionCultureProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/DocumentProvider_GetByProductIdFromProduc" +
            "tDocument", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Document[] DocumentProvider_GetByProductIdFromProductDocument(int _productId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("DocumentProvider_GetByProductIdFromProductDocument", new object[] {
                        _productId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Document[])(results[0]));
        }
        
        /// <remarks/>
        public void DocumentProvider_GetByProductIdFromProductDocumentAsync(int _productId, int start, int pageLength) {
            this.DocumentProvider_GetByProductIdFromProductDocumentAsync(_productId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void DocumentProvider_GetByProductIdFromProductDocumentAsync(int _productId, int start, int pageLength, object userState) {
            if ((this.DocumentProvider_GetByProductIdFromProductDocumentOperationCompleted == null)) {
                this.DocumentProvider_GetByProductIdFromProductDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocumentProvider_GetByProductIdFromProductDocumentOperationCompleted);
            }
            this.InvokeAsync("DocumentProvider_GetByProductIdFromProductDocument", new object[] {
                        _productId,
                        start,
                        pageLength}, this.DocumentProvider_GetByProductIdFromProductDocumentOperationCompleted, userState);
        }
        
        private void OnDocumentProvider_GetByProductIdFromProductDocumentOperationCompleted(object arg) {
            if ((this.DocumentProvider_GetByProductIdFromProductDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DocumentProvider_GetByProductIdFromProductDocumentCompleted(this, new DocumentProvider_GetByProductIdFromProductDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/DocumentProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DocumentProvider_Delete(int _documentId) {
            object[] results = this.Invoke("DocumentProvider_Delete", new object[] {
                        _documentId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DocumentProvider_DeleteAsync(int _documentId) {
            this.DocumentProvider_DeleteAsync(_documentId, null);
        }
        
        /// <remarks/>
        public void DocumentProvider_DeleteAsync(int _documentId, object userState) {
            if ((this.DocumentProvider_DeleteOperationCompleted == null)) {
                this.DocumentProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocumentProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("DocumentProvider_Delete", new object[] {
                        _documentId}, this.DocumentProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnDocumentProvider_DeleteOperationCompleted(object arg) {
            if ((this.DocumentProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DocumentProvider_DeleteCompleted(this, new DocumentProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/DocumentProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Document[] DocumentProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("DocumentProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Document[])(results[0]));
        }
        
        /// <remarks/>
        public void DocumentProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.DocumentProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void DocumentProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.DocumentProvider_FindOperationCompleted == null)) {
                this.DocumentProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocumentProvider_FindOperationCompleted);
            }
            this.InvokeAsync("DocumentProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.DocumentProvider_FindOperationCompleted, userState);
        }
        
        private void OnDocumentProvider_FindOperationCompleted(object arg) {
            if ((this.DocumentProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DocumentProvider_FindCompleted(this, new DocumentProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/DocumentProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Document[] DocumentProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("DocumentProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Document[])(results[0]));
        }
        
        /// <remarks/>
        public void DocumentProvider_GetAllAsync(int start, int pageLength) {
            this.DocumentProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void DocumentProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.DocumentProvider_GetAllOperationCompleted == null)) {
                this.DocumentProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocumentProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("DocumentProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.DocumentProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnDocumentProvider_GetAllOperationCompleted(object arg) {
            if ((this.DocumentProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DocumentProvider_GetAllCompleted(this, new DocumentProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/DocumentProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Document[] DocumentProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("DocumentProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Document[])(results[0]));
        }
        
        /// <remarks/>
        public void DocumentProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.DocumentProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void DocumentProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.DocumentProvider_GetPagedOperationCompleted == null)) {
                this.DocumentProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocumentProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("DocumentProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.DocumentProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnDocumentProvider_GetPagedOperationCompleted(object arg) {
            if ((this.DocumentProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DocumentProvider_GetPagedCompleted(this, new DocumentProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/DocumentProvider_GetByFileNameRevision", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Document DocumentProvider_GetByFileNameRevision(string _fileName, string _revision, int start, int pageLength, out int count) {
            object[] results = this.Invoke("DocumentProvider_GetByFileNameRevision", new object[] {
                        _fileName,
                        _revision,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Document)(results[0]));
        }
        
        /// <remarks/>
        public void DocumentProvider_GetByFileNameRevisionAsync(string _fileName, string _revision, int start, int pageLength) {
            this.DocumentProvider_GetByFileNameRevisionAsync(_fileName, _revision, start, pageLength, null);
        }
        
        /// <remarks/>
        public void DocumentProvider_GetByFileNameRevisionAsync(string _fileName, string _revision, int start, int pageLength, object userState) {
            if ((this.DocumentProvider_GetByFileNameRevisionOperationCompleted == null)) {
                this.DocumentProvider_GetByFileNameRevisionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocumentProvider_GetByFileNameRevisionOperationCompleted);
            }
            this.InvokeAsync("DocumentProvider_GetByFileNameRevision", new object[] {
                        _fileName,
                        _revision,
                        start,
                        pageLength}, this.DocumentProvider_GetByFileNameRevisionOperationCompleted, userState);
        }
        
        private void OnDocumentProvider_GetByFileNameRevisionOperationCompleted(object arg) {
            if ((this.DocumentProvider_GetByFileNameRevisionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DocumentProvider_GetByFileNameRevisionCompleted(this, new DocumentProvider_GetByFileNameRevisionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/DocumentProvider_GetByDocumentId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Document DocumentProvider_GetByDocumentId(int _documentId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("DocumentProvider_GetByDocumentId", new object[] {
                        _documentId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Document)(results[0]));
        }
        
        /// <remarks/>
        public void DocumentProvider_GetByDocumentIdAsync(int _documentId, int start, int pageLength) {
            this.DocumentProvider_GetByDocumentIdAsync(_documentId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void DocumentProvider_GetByDocumentIdAsync(int _documentId, int start, int pageLength, object userState) {
            if ((this.DocumentProvider_GetByDocumentIdOperationCompleted == null)) {
                this.DocumentProvider_GetByDocumentIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocumentProvider_GetByDocumentIdOperationCompleted);
            }
            this.InvokeAsync("DocumentProvider_GetByDocumentId", new object[] {
                        _documentId,
                        start,
                        pageLength}, this.DocumentProvider_GetByDocumentIdOperationCompleted, userState);
        }
        
        private void OnDocumentProvider_GetByDocumentIdOperationCompleted(object arg) {
            if ((this.DocumentProvider_GetByDocumentIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DocumentProvider_GetByDocumentIdCompleted(this, new DocumentProvider_GetByDocumentIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/DocumentProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Document DocumentProvider_Insert(Document entity) {
            object[] results = this.Invoke("DocumentProvider_Insert", new object[] {
                        entity});
            return ((Document)(results[0]));
        }
        
        /// <remarks/>
        public void DocumentProvider_InsertAsync(Document entity) {
            this.DocumentProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void DocumentProvider_InsertAsync(Document entity, object userState) {
            if ((this.DocumentProvider_InsertOperationCompleted == null)) {
                this.DocumentProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocumentProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("DocumentProvider_Insert", new object[] {
                        entity}, this.DocumentProvider_InsertOperationCompleted, userState);
        }
        
        private void OnDocumentProvider_InsertOperationCompleted(object arg) {
            if ((this.DocumentProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DocumentProvider_InsertCompleted(this, new DocumentProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/DocumentProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DocumentProvider_BulkInsert(Document[] entityList) {
            this.Invoke("DocumentProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void DocumentProvider_BulkInsertAsync(Document[] entityList) {
            this.DocumentProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void DocumentProvider_BulkInsertAsync(Document[] entityList, object userState) {
            if ((this.DocumentProvider_BulkInsertOperationCompleted == null)) {
                this.DocumentProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocumentProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("DocumentProvider_BulkInsert", new object[] {
                        entityList}, this.DocumentProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnDocumentProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.DocumentProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DocumentProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/DocumentProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Document DocumentProvider_Update(Document entity) {
            object[] results = this.Invoke("DocumentProvider_Update", new object[] {
                        entity});
            return ((Document)(results[0]));
        }
        
        /// <remarks/>
        public void DocumentProvider_UpdateAsync(Document entity) {
            this.DocumentProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void DocumentProvider_UpdateAsync(Document entity, object userState) {
            if ((this.DocumentProvider_UpdateOperationCompleted == null)) {
                this.DocumentProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocumentProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("DocumentProvider_Update", new object[] {
                        entity}, this.DocumentProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnDocumentProvider_UpdateOperationCompleted(object arg) {
            if ((this.DocumentProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DocumentProvider_UpdateCompleted(this, new DocumentProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductProductPhotoProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ProductProductPhotoProvider_Delete(int _productId, int _productPhotoId) {
            object[] results = this.Invoke("ProductProductPhotoProvider_Delete", new object[] {
                        _productId,
                        _productPhotoId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ProductProductPhotoProvider_DeleteAsync(int _productId, int _productPhotoId) {
            this.ProductProductPhotoProvider_DeleteAsync(_productId, _productPhotoId, null);
        }
        
        /// <remarks/>
        public void ProductProductPhotoProvider_DeleteAsync(int _productId, int _productPhotoId, object userState) {
            if ((this.ProductProductPhotoProvider_DeleteOperationCompleted == null)) {
                this.ProductProductPhotoProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductProductPhotoProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("ProductProductPhotoProvider_Delete", new object[] {
                        _productId,
                        _productPhotoId}, this.ProductProductPhotoProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnProductProductPhotoProvider_DeleteOperationCompleted(object arg) {
            if ((this.ProductProductPhotoProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductProductPhotoProvider_DeleteCompleted(this, new ProductProductPhotoProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductProductPhotoProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductProductPhoto[] ProductProductPhotoProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductProductPhotoProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductProductPhoto[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductProductPhotoProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.ProductProductPhotoProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductProductPhotoProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.ProductProductPhotoProvider_FindOperationCompleted == null)) {
                this.ProductProductPhotoProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductProductPhotoProvider_FindOperationCompleted);
            }
            this.InvokeAsync("ProductProductPhotoProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.ProductProductPhotoProvider_FindOperationCompleted, userState);
        }
        
        private void OnProductProductPhotoProvider_FindOperationCompleted(object arg) {
            if ((this.ProductProductPhotoProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductProductPhotoProvider_FindCompleted(this, new ProductProductPhotoProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductProductPhotoProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductProductPhoto[] ProductProductPhotoProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductProductPhotoProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductProductPhoto[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductProductPhotoProvider_GetAllAsync(int start, int pageLength) {
            this.ProductProductPhotoProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductProductPhotoProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.ProductProductPhotoProvider_GetAllOperationCompleted == null)) {
                this.ProductProductPhotoProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductProductPhotoProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("ProductProductPhotoProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.ProductProductPhotoProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnProductProductPhotoProvider_GetAllOperationCompleted(object arg) {
            if ((this.ProductProductPhotoProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductProductPhotoProvider_GetAllCompleted(this, new ProductProductPhotoProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductProductPhotoProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductProductPhoto[] ProductProductPhotoProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductProductPhotoProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductProductPhoto[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductProductPhotoProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.ProductProductPhotoProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductProductPhotoProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.ProductProductPhotoProvider_GetPagedOperationCompleted == null)) {
                this.ProductProductPhotoProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductProductPhotoProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("ProductProductPhotoProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.ProductProductPhotoProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnProductProductPhotoProvider_GetPagedOperationCompleted(object arg) {
            if ((this.ProductProductPhotoProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductProductPhotoProvider_GetPagedCompleted(this, new ProductProductPhotoProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductProductPhotoProvider_GetByProductI" +
            "d", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductProductPhoto[] ProductProductPhotoProvider_GetByProductId(int _productId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductProductPhotoProvider_GetByProductId", new object[] {
                        _productId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductProductPhoto[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductProductPhotoProvider_GetByProductIdAsync(int _productId, int start, int pageLength) {
            this.ProductProductPhotoProvider_GetByProductIdAsync(_productId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductProductPhotoProvider_GetByProductIdAsync(int _productId, int start, int pageLength, object userState) {
            if ((this.ProductProductPhotoProvider_GetByProductIdOperationCompleted == null)) {
                this.ProductProductPhotoProvider_GetByProductIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductProductPhotoProvider_GetByProductIdOperationCompleted);
            }
            this.InvokeAsync("ProductProductPhotoProvider_GetByProductId", new object[] {
                        _productId,
                        start,
                        pageLength}, this.ProductProductPhotoProvider_GetByProductIdOperationCompleted, userState);
        }
        
        private void OnProductProductPhotoProvider_GetByProductIdOperationCompleted(object arg) {
            if ((this.ProductProductPhotoProvider_GetByProductIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductProductPhotoProvider_GetByProductIdCompleted(this, new ProductProductPhotoProvider_GetByProductIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductProductPhotoProvider_GetByProductP" +
            "hotoId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductProductPhoto[] ProductProductPhotoProvider_GetByProductPhotoId(int _productPhotoId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductProductPhotoProvider_GetByProductPhotoId", new object[] {
                        _productPhotoId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductProductPhoto[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductProductPhotoProvider_GetByProductPhotoIdAsync(int _productPhotoId, int start, int pageLength) {
            this.ProductProductPhotoProvider_GetByProductPhotoIdAsync(_productPhotoId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductProductPhotoProvider_GetByProductPhotoIdAsync(int _productPhotoId, int start, int pageLength, object userState) {
            if ((this.ProductProductPhotoProvider_GetByProductPhotoIdOperationCompleted == null)) {
                this.ProductProductPhotoProvider_GetByProductPhotoIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductProductPhotoProvider_GetByProductPhotoIdOperationCompleted);
            }
            this.InvokeAsync("ProductProductPhotoProvider_GetByProductPhotoId", new object[] {
                        _productPhotoId,
                        start,
                        pageLength}, this.ProductProductPhotoProvider_GetByProductPhotoIdOperationCompleted, userState);
        }
        
        private void OnProductProductPhotoProvider_GetByProductPhotoIdOperationCompleted(object arg) {
            if ((this.ProductProductPhotoProvider_GetByProductPhotoIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductProductPhotoProvider_GetByProductPhotoIdCompleted(this, new ProductProductPhotoProvider_GetByProductPhotoIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductProductPhotoProvider_GetByProductI" +
            "dProductPhotoId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductProductPhoto ProductProductPhotoProvider_GetByProductIdProductPhotoId(int _productId, int _productPhotoId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductProductPhotoProvider_GetByProductIdProductPhotoId", new object[] {
                        _productId,
                        _productPhotoId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductProductPhoto)(results[0]));
        }
        
        /// <remarks/>
        public void ProductProductPhotoProvider_GetByProductIdProductPhotoIdAsync(int _productId, int _productPhotoId, int start, int pageLength) {
            this.ProductProductPhotoProvider_GetByProductIdProductPhotoIdAsync(_productId, _productPhotoId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductProductPhotoProvider_GetByProductIdProductPhotoIdAsync(int _productId, int _productPhotoId, int start, int pageLength, object userState) {
            if ((this.ProductProductPhotoProvider_GetByProductIdProductPhotoIdOperationCompleted == null)) {
                this.ProductProductPhotoProvider_GetByProductIdProductPhotoIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductProductPhotoProvider_GetByProductIdProductPhotoIdOperationCompleted);
            }
            this.InvokeAsync("ProductProductPhotoProvider_GetByProductIdProductPhotoId", new object[] {
                        _productId,
                        _productPhotoId,
                        start,
                        pageLength}, this.ProductProductPhotoProvider_GetByProductIdProductPhotoIdOperationCompleted, userState);
        }
        
        private void OnProductProductPhotoProvider_GetByProductIdProductPhotoIdOperationCompleted(object arg) {
            if ((this.ProductProductPhotoProvider_GetByProductIdProductPhotoIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductProductPhotoProvider_GetByProductIdProductPhotoIdCompleted(this, new ProductProductPhotoProvider_GetByProductIdProductPhotoIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductProductPhotoProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductProductPhoto ProductProductPhotoProvider_Insert(ProductProductPhoto entity) {
            object[] results = this.Invoke("ProductProductPhotoProvider_Insert", new object[] {
                        entity});
            return ((ProductProductPhoto)(results[0]));
        }
        
        /// <remarks/>
        public void ProductProductPhotoProvider_InsertAsync(ProductProductPhoto entity) {
            this.ProductProductPhotoProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void ProductProductPhotoProvider_InsertAsync(ProductProductPhoto entity, object userState) {
            if ((this.ProductProductPhotoProvider_InsertOperationCompleted == null)) {
                this.ProductProductPhotoProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductProductPhotoProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("ProductProductPhotoProvider_Insert", new object[] {
                        entity}, this.ProductProductPhotoProvider_InsertOperationCompleted, userState);
        }
        
        private void OnProductProductPhotoProvider_InsertOperationCompleted(object arg) {
            if ((this.ProductProductPhotoProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductProductPhotoProvider_InsertCompleted(this, new ProductProductPhotoProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductProductPhotoProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ProductProductPhotoProvider_BulkInsert(ProductProductPhoto[] entityList) {
            this.Invoke("ProductProductPhotoProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void ProductProductPhotoProvider_BulkInsertAsync(ProductProductPhoto[] entityList) {
            this.ProductProductPhotoProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void ProductProductPhotoProvider_BulkInsertAsync(ProductProductPhoto[] entityList, object userState) {
            if ((this.ProductProductPhotoProvider_BulkInsertOperationCompleted == null)) {
                this.ProductProductPhotoProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductProductPhotoProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("ProductProductPhotoProvider_BulkInsert", new object[] {
                        entityList}, this.ProductProductPhotoProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnProductProductPhotoProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.ProductProductPhotoProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductProductPhotoProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductProductPhotoProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductProductPhoto ProductProductPhotoProvider_Update(ProductProductPhoto entity) {
            object[] results = this.Invoke("ProductProductPhotoProvider_Update", new object[] {
                        entity});
            return ((ProductProductPhoto)(results[0]));
        }
        
        /// <remarks/>
        public void ProductProductPhotoProvider_UpdateAsync(ProductProductPhoto entity) {
            this.ProductProductPhotoProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void ProductProductPhotoProvider_UpdateAsync(ProductProductPhoto entity, object userState) {
            if ((this.ProductProductPhotoProvider_UpdateOperationCompleted == null)) {
                this.ProductProductPhotoProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductProductPhotoProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("ProductProductPhotoProvider_Update", new object[] {
                        entity}, this.ProductProductPhotoProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnProductProductPhotoProvider_UpdateOperationCompleted(object arg) {
            if ((this.ProductProductPhotoProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductProductPhotoProvider_UpdateCompleted(this, new ProductProductPhotoProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductDocumentProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ProductDocumentProvider_Delete(int _productId, int _documentId) {
            object[] results = this.Invoke("ProductDocumentProvider_Delete", new object[] {
                        _productId,
                        _documentId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ProductDocumentProvider_DeleteAsync(int _productId, int _documentId) {
            this.ProductDocumentProvider_DeleteAsync(_productId, _documentId, null);
        }
        
        /// <remarks/>
        public void ProductDocumentProvider_DeleteAsync(int _productId, int _documentId, object userState) {
            if ((this.ProductDocumentProvider_DeleteOperationCompleted == null)) {
                this.ProductDocumentProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductDocumentProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("ProductDocumentProvider_Delete", new object[] {
                        _productId,
                        _documentId}, this.ProductDocumentProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnProductDocumentProvider_DeleteOperationCompleted(object arg) {
            if ((this.ProductDocumentProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductDocumentProvider_DeleteCompleted(this, new ProductDocumentProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductDocumentProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductDocument[] ProductDocumentProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductDocumentProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductDocument[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductDocumentProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.ProductDocumentProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductDocumentProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.ProductDocumentProvider_FindOperationCompleted == null)) {
                this.ProductDocumentProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductDocumentProvider_FindOperationCompleted);
            }
            this.InvokeAsync("ProductDocumentProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.ProductDocumentProvider_FindOperationCompleted, userState);
        }
        
        private void OnProductDocumentProvider_FindOperationCompleted(object arg) {
            if ((this.ProductDocumentProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductDocumentProvider_FindCompleted(this, new ProductDocumentProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductDocumentProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductDocument[] ProductDocumentProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductDocumentProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductDocument[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductDocumentProvider_GetAllAsync(int start, int pageLength) {
            this.ProductDocumentProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductDocumentProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.ProductDocumentProvider_GetAllOperationCompleted == null)) {
                this.ProductDocumentProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductDocumentProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("ProductDocumentProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.ProductDocumentProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnProductDocumentProvider_GetAllOperationCompleted(object arg) {
            if ((this.ProductDocumentProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductDocumentProvider_GetAllCompleted(this, new ProductDocumentProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductDocumentProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductDocument[] ProductDocumentProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductDocumentProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductDocument[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductDocumentProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.ProductDocumentProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductDocumentProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.ProductDocumentProvider_GetPagedOperationCompleted == null)) {
                this.ProductDocumentProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductDocumentProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("ProductDocumentProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.ProductDocumentProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnProductDocumentProvider_GetPagedOperationCompleted(object arg) {
            if ((this.ProductDocumentProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductDocumentProvider_GetPagedCompleted(this, new ProductDocumentProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductDocumentProvider_GetByDocumentId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductDocument[] ProductDocumentProvider_GetByDocumentId(int _documentId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductDocumentProvider_GetByDocumentId", new object[] {
                        _documentId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductDocument[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductDocumentProvider_GetByDocumentIdAsync(int _documentId, int start, int pageLength) {
            this.ProductDocumentProvider_GetByDocumentIdAsync(_documentId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductDocumentProvider_GetByDocumentIdAsync(int _documentId, int start, int pageLength, object userState) {
            if ((this.ProductDocumentProvider_GetByDocumentIdOperationCompleted == null)) {
                this.ProductDocumentProvider_GetByDocumentIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductDocumentProvider_GetByDocumentIdOperationCompleted);
            }
            this.InvokeAsync("ProductDocumentProvider_GetByDocumentId", new object[] {
                        _documentId,
                        start,
                        pageLength}, this.ProductDocumentProvider_GetByDocumentIdOperationCompleted, userState);
        }
        
        private void OnProductDocumentProvider_GetByDocumentIdOperationCompleted(object arg) {
            if ((this.ProductDocumentProvider_GetByDocumentIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductDocumentProvider_GetByDocumentIdCompleted(this, new ProductDocumentProvider_GetByDocumentIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductDocumentProvider_GetByProductId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductDocument[] ProductDocumentProvider_GetByProductId(int _productId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductDocumentProvider_GetByProductId", new object[] {
                        _productId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductDocument[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductDocumentProvider_GetByProductIdAsync(int _productId, int start, int pageLength) {
            this.ProductDocumentProvider_GetByProductIdAsync(_productId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductDocumentProvider_GetByProductIdAsync(int _productId, int start, int pageLength, object userState) {
            if ((this.ProductDocumentProvider_GetByProductIdOperationCompleted == null)) {
                this.ProductDocumentProvider_GetByProductIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductDocumentProvider_GetByProductIdOperationCompleted);
            }
            this.InvokeAsync("ProductDocumentProvider_GetByProductId", new object[] {
                        _productId,
                        start,
                        pageLength}, this.ProductDocumentProvider_GetByProductIdOperationCompleted, userState);
        }
        
        private void OnProductDocumentProvider_GetByProductIdOperationCompleted(object arg) {
            if ((this.ProductDocumentProvider_GetByProductIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductDocumentProvider_GetByProductIdCompleted(this, new ProductDocumentProvider_GetByProductIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductDocumentProvider_GetByProductIdDoc" +
            "umentId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductDocument ProductDocumentProvider_GetByProductIdDocumentId(int _productId, int _documentId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductDocumentProvider_GetByProductIdDocumentId", new object[] {
                        _productId,
                        _documentId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductDocument)(results[0]));
        }
        
        /// <remarks/>
        public void ProductDocumentProvider_GetByProductIdDocumentIdAsync(int _productId, int _documentId, int start, int pageLength) {
            this.ProductDocumentProvider_GetByProductIdDocumentIdAsync(_productId, _documentId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductDocumentProvider_GetByProductIdDocumentIdAsync(int _productId, int _documentId, int start, int pageLength, object userState) {
            if ((this.ProductDocumentProvider_GetByProductIdDocumentIdOperationCompleted == null)) {
                this.ProductDocumentProvider_GetByProductIdDocumentIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductDocumentProvider_GetByProductIdDocumentIdOperationCompleted);
            }
            this.InvokeAsync("ProductDocumentProvider_GetByProductIdDocumentId", new object[] {
                        _productId,
                        _documentId,
                        start,
                        pageLength}, this.ProductDocumentProvider_GetByProductIdDocumentIdOperationCompleted, userState);
        }
        
        private void OnProductDocumentProvider_GetByProductIdDocumentIdOperationCompleted(object arg) {
            if ((this.ProductDocumentProvider_GetByProductIdDocumentIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductDocumentProvider_GetByProductIdDocumentIdCompleted(this, new ProductDocumentProvider_GetByProductIdDocumentIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductDocumentProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductDocument ProductDocumentProvider_Insert(ProductDocument entity) {
            object[] results = this.Invoke("ProductDocumentProvider_Insert", new object[] {
                        entity});
            return ((ProductDocument)(results[0]));
        }
        
        /// <remarks/>
        public void ProductDocumentProvider_InsertAsync(ProductDocument entity) {
            this.ProductDocumentProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void ProductDocumentProvider_InsertAsync(ProductDocument entity, object userState) {
            if ((this.ProductDocumentProvider_InsertOperationCompleted == null)) {
                this.ProductDocumentProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductDocumentProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("ProductDocumentProvider_Insert", new object[] {
                        entity}, this.ProductDocumentProvider_InsertOperationCompleted, userState);
        }
        
        private void OnProductDocumentProvider_InsertOperationCompleted(object arg) {
            if ((this.ProductDocumentProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductDocumentProvider_InsertCompleted(this, new ProductDocumentProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductDocumentProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ProductDocumentProvider_BulkInsert(ProductDocument[] entityList) {
            this.Invoke("ProductDocumentProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void ProductDocumentProvider_BulkInsertAsync(ProductDocument[] entityList) {
            this.ProductDocumentProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void ProductDocumentProvider_BulkInsertAsync(ProductDocument[] entityList, object userState) {
            if ((this.ProductDocumentProvider_BulkInsertOperationCompleted == null)) {
                this.ProductDocumentProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductDocumentProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("ProductDocumentProvider_BulkInsert", new object[] {
                        entityList}, this.ProductDocumentProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnProductDocumentProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.ProductDocumentProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductDocumentProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductDocumentProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductDocument ProductDocumentProvider_Update(ProductDocument entity) {
            object[] results = this.Invoke("ProductDocumentProvider_Update", new object[] {
                        entity});
            return ((ProductDocument)(results[0]));
        }
        
        /// <remarks/>
        public void ProductDocumentProvider_UpdateAsync(ProductDocument entity) {
            this.ProductDocumentProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void ProductDocumentProvider_UpdateAsync(ProductDocument entity, object userState) {
            if ((this.ProductDocumentProvider_UpdateOperationCompleted == null)) {
                this.ProductDocumentProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductDocumentProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("ProductDocumentProvider_Update", new object[] {
                        entity}, this.ProductDocumentProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnProductDocumentProvider_UpdateOperationCompleted(object arg) {
            if ((this.ProductDocumentProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductDocumentProvider_UpdateCompleted(this, new ProductDocumentProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/LocationProvider_GetByProductIdFromProduc" +
            "tInventory", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Location[] LocationProvider_GetByProductIdFromProductInventory(int _productId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("LocationProvider_GetByProductIdFromProductInventory", new object[] {
                        _productId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Location[])(results[0]));
        }
        
        /// <remarks/>
        public void LocationProvider_GetByProductIdFromProductInventoryAsync(int _productId, int start, int pageLength) {
            this.LocationProvider_GetByProductIdFromProductInventoryAsync(_productId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void LocationProvider_GetByProductIdFromProductInventoryAsync(int _productId, int start, int pageLength, object userState) {
            if ((this.LocationProvider_GetByProductIdFromProductInventoryOperationCompleted == null)) {
                this.LocationProvider_GetByProductIdFromProductInventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLocationProvider_GetByProductIdFromProductInventoryOperationCompleted);
            }
            this.InvokeAsync("LocationProvider_GetByProductIdFromProductInventory", new object[] {
                        _productId,
                        start,
                        pageLength}, this.LocationProvider_GetByProductIdFromProductInventoryOperationCompleted, userState);
        }
        
        private void OnLocationProvider_GetByProductIdFromProductInventoryOperationCompleted(object arg) {
            if ((this.LocationProvider_GetByProductIdFromProductInventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LocationProvider_GetByProductIdFromProductInventoryCompleted(this, new LocationProvider_GetByProductIdFromProductInventoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeePayHistoryProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EmployeePayHistoryProvider_Delete(int _employeeId, System.DateTime _rateChangeDate) {
            object[] results = this.Invoke("EmployeePayHistoryProvider_Delete", new object[] {
                        _employeeId,
                        _rateChangeDate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EmployeePayHistoryProvider_DeleteAsync(int _employeeId, System.DateTime _rateChangeDate) {
            this.EmployeePayHistoryProvider_DeleteAsync(_employeeId, _rateChangeDate, null);
        }
        
        /// <remarks/>
        public void EmployeePayHistoryProvider_DeleteAsync(int _employeeId, System.DateTime _rateChangeDate, object userState) {
            if ((this.EmployeePayHistoryProvider_DeleteOperationCompleted == null)) {
                this.EmployeePayHistoryProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeePayHistoryProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("EmployeePayHistoryProvider_Delete", new object[] {
                        _employeeId,
                        _rateChangeDate}, this.EmployeePayHistoryProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnEmployeePayHistoryProvider_DeleteOperationCompleted(object arg) {
            if ((this.EmployeePayHistoryProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeePayHistoryProvider_DeleteCompleted(this, new EmployeePayHistoryProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeePayHistoryProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmployeePayHistory[] EmployeePayHistoryProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("EmployeePayHistoryProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((EmployeePayHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void EmployeePayHistoryProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.EmployeePayHistoryProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void EmployeePayHistoryProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.EmployeePayHistoryProvider_FindOperationCompleted == null)) {
                this.EmployeePayHistoryProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeePayHistoryProvider_FindOperationCompleted);
            }
            this.InvokeAsync("EmployeePayHistoryProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.EmployeePayHistoryProvider_FindOperationCompleted, userState);
        }
        
        private void OnEmployeePayHistoryProvider_FindOperationCompleted(object arg) {
            if ((this.EmployeePayHistoryProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeePayHistoryProvider_FindCompleted(this, new EmployeePayHistoryProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeePayHistoryProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmployeePayHistory[] EmployeePayHistoryProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("EmployeePayHistoryProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((EmployeePayHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void EmployeePayHistoryProvider_GetAllAsync(int start, int pageLength) {
            this.EmployeePayHistoryProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void EmployeePayHistoryProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.EmployeePayHistoryProvider_GetAllOperationCompleted == null)) {
                this.EmployeePayHistoryProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeePayHistoryProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("EmployeePayHistoryProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.EmployeePayHistoryProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnEmployeePayHistoryProvider_GetAllOperationCompleted(object arg) {
            if ((this.EmployeePayHistoryProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeePayHistoryProvider_GetAllCompleted(this, new EmployeePayHistoryProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeePayHistoryProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmployeePayHistory[] EmployeePayHistoryProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("EmployeePayHistoryProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((EmployeePayHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void EmployeePayHistoryProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.EmployeePayHistoryProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void EmployeePayHistoryProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.EmployeePayHistoryProvider_GetPagedOperationCompleted == null)) {
                this.EmployeePayHistoryProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeePayHistoryProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("EmployeePayHistoryProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.EmployeePayHistoryProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnEmployeePayHistoryProvider_GetPagedOperationCompleted(object arg) {
            if ((this.EmployeePayHistoryProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeePayHistoryProvider_GetPagedCompleted(this, new EmployeePayHistoryProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeePayHistoryProvider_GetByEmployeeI" +
            "d", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmployeePayHistory[] EmployeePayHistoryProvider_GetByEmployeeId(int _employeeId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("EmployeePayHistoryProvider_GetByEmployeeId", new object[] {
                        _employeeId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((EmployeePayHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void EmployeePayHistoryProvider_GetByEmployeeIdAsync(int _employeeId, int start, int pageLength) {
            this.EmployeePayHistoryProvider_GetByEmployeeIdAsync(_employeeId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void EmployeePayHistoryProvider_GetByEmployeeIdAsync(int _employeeId, int start, int pageLength, object userState) {
            if ((this.EmployeePayHistoryProvider_GetByEmployeeIdOperationCompleted == null)) {
                this.EmployeePayHistoryProvider_GetByEmployeeIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeePayHistoryProvider_GetByEmployeeIdOperationCompleted);
            }
            this.InvokeAsync("EmployeePayHistoryProvider_GetByEmployeeId", new object[] {
                        _employeeId,
                        start,
                        pageLength}, this.EmployeePayHistoryProvider_GetByEmployeeIdOperationCompleted, userState);
        }
        
        private void OnEmployeePayHistoryProvider_GetByEmployeeIdOperationCompleted(object arg) {
            if ((this.EmployeePayHistoryProvider_GetByEmployeeIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeePayHistoryProvider_GetByEmployeeIdCompleted(this, new EmployeePayHistoryProvider_GetByEmployeeIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeePayHistoryProvider_GetByEmployeeI" +
            "dRateChangeDate", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmployeePayHistory EmployeePayHistoryProvider_GetByEmployeeIdRateChangeDate(int _employeeId, System.DateTime _rateChangeDate, int start, int pageLength, out int count) {
            object[] results = this.Invoke("EmployeePayHistoryProvider_GetByEmployeeIdRateChangeDate", new object[] {
                        _employeeId,
                        _rateChangeDate,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((EmployeePayHistory)(results[0]));
        }
        
        /// <remarks/>
        public void EmployeePayHistoryProvider_GetByEmployeeIdRateChangeDateAsync(int _employeeId, System.DateTime _rateChangeDate, int start, int pageLength) {
            this.EmployeePayHistoryProvider_GetByEmployeeIdRateChangeDateAsync(_employeeId, _rateChangeDate, start, pageLength, null);
        }
        
        /// <remarks/>
        public void EmployeePayHistoryProvider_GetByEmployeeIdRateChangeDateAsync(int _employeeId, System.DateTime _rateChangeDate, int start, int pageLength, object userState) {
            if ((this.EmployeePayHistoryProvider_GetByEmployeeIdRateChangeDateOperationCompleted == null)) {
                this.EmployeePayHistoryProvider_GetByEmployeeIdRateChangeDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeePayHistoryProvider_GetByEmployeeIdRateChangeDateOperationCompleted);
            }
            this.InvokeAsync("EmployeePayHistoryProvider_GetByEmployeeIdRateChangeDate", new object[] {
                        _employeeId,
                        _rateChangeDate,
                        start,
                        pageLength}, this.EmployeePayHistoryProvider_GetByEmployeeIdRateChangeDateOperationCompleted, userState);
        }
        
        private void OnEmployeePayHistoryProvider_GetByEmployeeIdRateChangeDateOperationCompleted(object arg) {
            if ((this.EmployeePayHistoryProvider_GetByEmployeeIdRateChangeDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeePayHistoryProvider_GetByEmployeeIdRateChangeDateCompleted(this, new EmployeePayHistoryProvider_GetByEmployeeIdRateChangeDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeePayHistoryProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmployeePayHistory EmployeePayHistoryProvider_Insert(EmployeePayHistory entity) {
            object[] results = this.Invoke("EmployeePayHistoryProvider_Insert", new object[] {
                        entity});
            return ((EmployeePayHistory)(results[0]));
        }
        
        /// <remarks/>
        public void EmployeePayHistoryProvider_InsertAsync(EmployeePayHistory entity) {
            this.EmployeePayHistoryProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void EmployeePayHistoryProvider_InsertAsync(EmployeePayHistory entity, object userState) {
            if ((this.EmployeePayHistoryProvider_InsertOperationCompleted == null)) {
                this.EmployeePayHistoryProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeePayHistoryProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("EmployeePayHistoryProvider_Insert", new object[] {
                        entity}, this.EmployeePayHistoryProvider_InsertOperationCompleted, userState);
        }
        
        private void OnEmployeePayHistoryProvider_InsertOperationCompleted(object arg) {
            if ((this.EmployeePayHistoryProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeePayHistoryProvider_InsertCompleted(this, new EmployeePayHistoryProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeePayHistoryProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmployeePayHistoryProvider_BulkInsert(EmployeePayHistory[] entityList) {
            this.Invoke("EmployeePayHistoryProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void EmployeePayHistoryProvider_BulkInsertAsync(EmployeePayHistory[] entityList) {
            this.EmployeePayHistoryProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void EmployeePayHistoryProvider_BulkInsertAsync(EmployeePayHistory[] entityList, object userState) {
            if ((this.EmployeePayHistoryProvider_BulkInsertOperationCompleted == null)) {
                this.EmployeePayHistoryProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeePayHistoryProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("EmployeePayHistoryProvider_BulkInsert", new object[] {
                        entityList}, this.EmployeePayHistoryProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnEmployeePayHistoryProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.EmployeePayHistoryProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeePayHistoryProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeePayHistoryProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmployeePayHistory EmployeePayHistoryProvider_Update(EmployeePayHistory entity) {
            object[] results = this.Invoke("EmployeePayHistoryProvider_Update", new object[] {
                        entity});
            return ((EmployeePayHistory)(results[0]));
        }
        
        /// <remarks/>
        public void EmployeePayHistoryProvider_UpdateAsync(EmployeePayHistory entity) {
            this.EmployeePayHistoryProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void EmployeePayHistoryProvider_UpdateAsync(EmployeePayHistory entity, object userState) {
            if ((this.EmployeePayHistoryProvider_UpdateOperationCompleted == null)) {
                this.EmployeePayHistoryProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeePayHistoryProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("EmployeePayHistoryProvider_Update", new object[] {
                        entity}, this.EmployeePayHistoryProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnEmployeePayHistoryProvider_UpdateOperationCompleted(object arg) {
            if ((this.EmployeePayHistoryProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeePayHistoryProvider_UpdateCompleted(this, new EmployeePayHistoryProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/AwBuildVersionProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AwBuildVersionProvider_Delete(byte _systemInformationId) {
            object[] results = this.Invoke("AwBuildVersionProvider_Delete", new object[] {
                        _systemInformationId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AwBuildVersionProvider_DeleteAsync(byte _systemInformationId) {
            this.AwBuildVersionProvider_DeleteAsync(_systemInformationId, null);
        }
        
        /// <remarks/>
        public void AwBuildVersionProvider_DeleteAsync(byte _systemInformationId, object userState) {
            if ((this.AwBuildVersionProvider_DeleteOperationCompleted == null)) {
                this.AwBuildVersionProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAwBuildVersionProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("AwBuildVersionProvider_Delete", new object[] {
                        _systemInformationId}, this.AwBuildVersionProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnAwBuildVersionProvider_DeleteOperationCompleted(object arg) {
            if ((this.AwBuildVersionProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AwBuildVersionProvider_DeleteCompleted(this, new AwBuildVersionProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/AwBuildVersionProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AwBuildVersion[] AwBuildVersionProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("AwBuildVersionProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((AwBuildVersion[])(results[0]));
        }
        
        /// <remarks/>
        public void AwBuildVersionProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.AwBuildVersionProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void AwBuildVersionProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.AwBuildVersionProvider_FindOperationCompleted == null)) {
                this.AwBuildVersionProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAwBuildVersionProvider_FindOperationCompleted);
            }
            this.InvokeAsync("AwBuildVersionProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.AwBuildVersionProvider_FindOperationCompleted, userState);
        }
        
        private void OnAwBuildVersionProvider_FindOperationCompleted(object arg) {
            if ((this.AwBuildVersionProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AwBuildVersionProvider_FindCompleted(this, new AwBuildVersionProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/AwBuildVersionProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AwBuildVersion[] AwBuildVersionProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("AwBuildVersionProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((AwBuildVersion[])(results[0]));
        }
        
        /// <remarks/>
        public void AwBuildVersionProvider_GetAllAsync(int start, int pageLength) {
            this.AwBuildVersionProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void AwBuildVersionProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.AwBuildVersionProvider_GetAllOperationCompleted == null)) {
                this.AwBuildVersionProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAwBuildVersionProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("AwBuildVersionProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.AwBuildVersionProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnAwBuildVersionProvider_GetAllOperationCompleted(object arg) {
            if ((this.AwBuildVersionProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AwBuildVersionProvider_GetAllCompleted(this, new AwBuildVersionProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/AwBuildVersionProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AwBuildVersion[] AwBuildVersionProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("AwBuildVersionProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((AwBuildVersion[])(results[0]));
        }
        
        /// <remarks/>
        public void AwBuildVersionProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.AwBuildVersionProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void AwBuildVersionProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.AwBuildVersionProvider_GetPagedOperationCompleted == null)) {
                this.AwBuildVersionProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAwBuildVersionProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("AwBuildVersionProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.AwBuildVersionProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnAwBuildVersionProvider_GetPagedOperationCompleted(object arg) {
            if ((this.AwBuildVersionProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AwBuildVersionProvider_GetPagedCompleted(this, new AwBuildVersionProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/AwBuildVersionProvider_GetBySystemInforma" +
            "tionId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AwBuildVersion AwBuildVersionProvider_GetBySystemInformationId(byte _systemInformationId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("AwBuildVersionProvider_GetBySystemInformationId", new object[] {
                        _systemInformationId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((AwBuildVersion)(results[0]));
        }
        
        /// <remarks/>
        public void AwBuildVersionProvider_GetBySystemInformationIdAsync(byte _systemInformationId, int start, int pageLength) {
            this.AwBuildVersionProvider_GetBySystemInformationIdAsync(_systemInformationId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void AwBuildVersionProvider_GetBySystemInformationIdAsync(byte _systemInformationId, int start, int pageLength, object userState) {
            if ((this.AwBuildVersionProvider_GetBySystemInformationIdOperationCompleted == null)) {
                this.AwBuildVersionProvider_GetBySystemInformationIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAwBuildVersionProvider_GetBySystemInformationIdOperationCompleted);
            }
            this.InvokeAsync("AwBuildVersionProvider_GetBySystemInformationId", new object[] {
                        _systemInformationId,
                        start,
                        pageLength}, this.AwBuildVersionProvider_GetBySystemInformationIdOperationCompleted, userState);
        }
        
        private void OnAwBuildVersionProvider_GetBySystemInformationIdOperationCompleted(object arg) {
            if ((this.AwBuildVersionProvider_GetBySystemInformationIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AwBuildVersionProvider_GetBySystemInformationIdCompleted(this, new AwBuildVersionProvider_GetBySystemInformationIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/AwBuildVersionProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AwBuildVersion AwBuildVersionProvider_Insert(AwBuildVersion entity) {
            object[] results = this.Invoke("AwBuildVersionProvider_Insert", new object[] {
                        entity});
            return ((AwBuildVersion)(results[0]));
        }
        
        /// <remarks/>
        public void AwBuildVersionProvider_InsertAsync(AwBuildVersion entity) {
            this.AwBuildVersionProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void AwBuildVersionProvider_InsertAsync(AwBuildVersion entity, object userState) {
            if ((this.AwBuildVersionProvider_InsertOperationCompleted == null)) {
                this.AwBuildVersionProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAwBuildVersionProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("AwBuildVersionProvider_Insert", new object[] {
                        entity}, this.AwBuildVersionProvider_InsertOperationCompleted, userState);
        }
        
        private void OnAwBuildVersionProvider_InsertOperationCompleted(object arg) {
            if ((this.AwBuildVersionProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AwBuildVersionProvider_InsertCompleted(this, new AwBuildVersionProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/AwBuildVersionProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AwBuildVersionProvider_BulkInsert(AwBuildVersion[] entityList) {
            this.Invoke("AwBuildVersionProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void AwBuildVersionProvider_BulkInsertAsync(AwBuildVersion[] entityList) {
            this.AwBuildVersionProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void AwBuildVersionProvider_BulkInsertAsync(AwBuildVersion[] entityList, object userState) {
            if ((this.AwBuildVersionProvider_BulkInsertOperationCompleted == null)) {
                this.AwBuildVersionProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAwBuildVersionProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("AwBuildVersionProvider_BulkInsert", new object[] {
                        entityList}, this.AwBuildVersionProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnAwBuildVersionProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.AwBuildVersionProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AwBuildVersionProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/AwBuildVersionProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AwBuildVersion AwBuildVersionProvider_Update(AwBuildVersion entity) {
            object[] results = this.Invoke("AwBuildVersionProvider_Update", new object[] {
                        entity});
            return ((AwBuildVersion)(results[0]));
        }
        
        /// <remarks/>
        public void AwBuildVersionProvider_UpdateAsync(AwBuildVersion entity) {
            this.AwBuildVersionProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void AwBuildVersionProvider_UpdateAsync(AwBuildVersion entity, object userState) {
            if ((this.AwBuildVersionProvider_UpdateOperationCompleted == null)) {
                this.AwBuildVersionProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAwBuildVersionProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("AwBuildVersionProvider_Update", new object[] {
                        entity}, this.AwBuildVersionProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnAwBuildVersionProvider_UpdateOperationCompleted(object arg) {
            if ((this.AwBuildVersionProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AwBuildVersionProvider_UpdateCompleted(this, new AwBuildVersionProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/DatabaseLogProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DatabaseLogProvider_Delete(int _databaseLogId) {
            object[] results = this.Invoke("DatabaseLogProvider_Delete", new object[] {
                        _databaseLogId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DatabaseLogProvider_DeleteAsync(int _databaseLogId) {
            this.DatabaseLogProvider_DeleteAsync(_databaseLogId, null);
        }
        
        /// <remarks/>
        public void DatabaseLogProvider_DeleteAsync(int _databaseLogId, object userState) {
            if ((this.DatabaseLogProvider_DeleteOperationCompleted == null)) {
                this.DatabaseLogProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDatabaseLogProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("DatabaseLogProvider_Delete", new object[] {
                        _databaseLogId}, this.DatabaseLogProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnDatabaseLogProvider_DeleteOperationCompleted(object arg) {
            if ((this.DatabaseLogProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DatabaseLogProvider_DeleteCompleted(this, new DatabaseLogProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/DatabaseLogProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DatabaseLog[] DatabaseLogProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("DatabaseLogProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((DatabaseLog[])(results[0]));
        }
        
        /// <remarks/>
        public void DatabaseLogProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.DatabaseLogProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void DatabaseLogProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.DatabaseLogProvider_FindOperationCompleted == null)) {
                this.DatabaseLogProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDatabaseLogProvider_FindOperationCompleted);
            }
            this.InvokeAsync("DatabaseLogProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.DatabaseLogProvider_FindOperationCompleted, userState);
        }
        
        private void OnDatabaseLogProvider_FindOperationCompleted(object arg) {
            if ((this.DatabaseLogProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DatabaseLogProvider_FindCompleted(this, new DatabaseLogProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/DatabaseLogProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DatabaseLog[] DatabaseLogProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("DatabaseLogProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((DatabaseLog[])(results[0]));
        }
        
        /// <remarks/>
        public void DatabaseLogProvider_GetAllAsync(int start, int pageLength) {
            this.DatabaseLogProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void DatabaseLogProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.DatabaseLogProvider_GetAllOperationCompleted == null)) {
                this.DatabaseLogProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDatabaseLogProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("DatabaseLogProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.DatabaseLogProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnDatabaseLogProvider_GetAllOperationCompleted(object arg) {
            if ((this.DatabaseLogProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DatabaseLogProvider_GetAllCompleted(this, new DatabaseLogProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/DatabaseLogProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DatabaseLog[] DatabaseLogProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("DatabaseLogProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((DatabaseLog[])(results[0]));
        }
        
        /// <remarks/>
        public void DatabaseLogProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.DatabaseLogProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void DatabaseLogProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.DatabaseLogProvider_GetPagedOperationCompleted == null)) {
                this.DatabaseLogProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDatabaseLogProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("DatabaseLogProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.DatabaseLogProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnDatabaseLogProvider_GetPagedOperationCompleted(object arg) {
            if ((this.DatabaseLogProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DatabaseLogProvider_GetPagedCompleted(this, new DatabaseLogProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/DatabaseLogProvider_GetByDatabaseLogId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DatabaseLog DatabaseLogProvider_GetByDatabaseLogId(int _databaseLogId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("DatabaseLogProvider_GetByDatabaseLogId", new object[] {
                        _databaseLogId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((DatabaseLog)(results[0]));
        }
        
        /// <remarks/>
        public void DatabaseLogProvider_GetByDatabaseLogIdAsync(int _databaseLogId, int start, int pageLength) {
            this.DatabaseLogProvider_GetByDatabaseLogIdAsync(_databaseLogId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void DatabaseLogProvider_GetByDatabaseLogIdAsync(int _databaseLogId, int start, int pageLength, object userState) {
            if ((this.DatabaseLogProvider_GetByDatabaseLogIdOperationCompleted == null)) {
                this.DatabaseLogProvider_GetByDatabaseLogIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDatabaseLogProvider_GetByDatabaseLogIdOperationCompleted);
            }
            this.InvokeAsync("DatabaseLogProvider_GetByDatabaseLogId", new object[] {
                        _databaseLogId,
                        start,
                        pageLength}, this.DatabaseLogProvider_GetByDatabaseLogIdOperationCompleted, userState);
        }
        
        private void OnDatabaseLogProvider_GetByDatabaseLogIdOperationCompleted(object arg) {
            if ((this.DatabaseLogProvider_GetByDatabaseLogIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DatabaseLogProvider_GetByDatabaseLogIdCompleted(this, new DatabaseLogProvider_GetByDatabaseLogIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/DatabaseLogProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DatabaseLog DatabaseLogProvider_Insert(DatabaseLog entity) {
            object[] results = this.Invoke("DatabaseLogProvider_Insert", new object[] {
                        entity});
            return ((DatabaseLog)(results[0]));
        }
        
        /// <remarks/>
        public void DatabaseLogProvider_InsertAsync(DatabaseLog entity) {
            this.DatabaseLogProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void DatabaseLogProvider_InsertAsync(DatabaseLog entity, object userState) {
            if ((this.DatabaseLogProvider_InsertOperationCompleted == null)) {
                this.DatabaseLogProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDatabaseLogProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("DatabaseLogProvider_Insert", new object[] {
                        entity}, this.DatabaseLogProvider_InsertOperationCompleted, userState);
        }
        
        private void OnDatabaseLogProvider_InsertOperationCompleted(object arg) {
            if ((this.DatabaseLogProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DatabaseLogProvider_InsertCompleted(this, new DatabaseLogProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/DatabaseLogProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DatabaseLogProvider_BulkInsert(DatabaseLog[] entityList) {
            this.Invoke("DatabaseLogProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void DatabaseLogProvider_BulkInsertAsync(DatabaseLog[] entityList) {
            this.DatabaseLogProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void DatabaseLogProvider_BulkInsertAsync(DatabaseLog[] entityList, object userState) {
            if ((this.DatabaseLogProvider_BulkInsertOperationCompleted == null)) {
                this.DatabaseLogProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDatabaseLogProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("DatabaseLogProvider_BulkInsert", new object[] {
                        entityList}, this.DatabaseLogProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnDatabaseLogProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.DatabaseLogProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DatabaseLogProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/DatabaseLogProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DatabaseLog DatabaseLogProvider_Update(DatabaseLog entity) {
            object[] results = this.Invoke("DatabaseLogProvider_Update", new object[] {
                        entity});
            return ((DatabaseLog)(results[0]));
        }
        
        /// <remarks/>
        public void DatabaseLogProvider_UpdateAsync(DatabaseLog entity) {
            this.DatabaseLogProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void DatabaseLogProvider_UpdateAsync(DatabaseLog entity, object userState) {
            if ((this.DatabaseLogProvider_UpdateOperationCompleted == null)) {
                this.DatabaseLogProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDatabaseLogProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("DatabaseLogProvider_Update", new object[] {
                        entity}, this.DatabaseLogProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnDatabaseLogProvider_UpdateOperationCompleted(object arg) {
            if ((this.DatabaseLogProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DatabaseLogProvider_UpdateCompleted(this, new DatabaseLogProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeAddressProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EmployeeAddressProvider_Delete(int _employeeId, int _addressId) {
            object[] results = this.Invoke("EmployeeAddressProvider_Delete", new object[] {
                        _employeeId,
                        _addressId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeAddressProvider_DeleteAsync(int _employeeId, int _addressId) {
            this.EmployeeAddressProvider_DeleteAsync(_employeeId, _addressId, null);
        }
        
        /// <remarks/>
        public void EmployeeAddressProvider_DeleteAsync(int _employeeId, int _addressId, object userState) {
            if ((this.EmployeeAddressProvider_DeleteOperationCompleted == null)) {
                this.EmployeeAddressProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeAddressProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("EmployeeAddressProvider_Delete", new object[] {
                        _employeeId,
                        _addressId}, this.EmployeeAddressProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnEmployeeAddressProvider_DeleteOperationCompleted(object arg) {
            if ((this.EmployeeAddressProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeAddressProvider_DeleteCompleted(this, new EmployeeAddressProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeAddressProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmployeeAddress[] EmployeeAddressProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("EmployeeAddressProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((EmployeeAddress[])(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeAddressProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.EmployeeAddressProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void EmployeeAddressProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.EmployeeAddressProvider_FindOperationCompleted == null)) {
                this.EmployeeAddressProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeAddressProvider_FindOperationCompleted);
            }
            this.InvokeAsync("EmployeeAddressProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.EmployeeAddressProvider_FindOperationCompleted, userState);
        }
        
        private void OnEmployeeAddressProvider_FindOperationCompleted(object arg) {
            if ((this.EmployeeAddressProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeAddressProvider_FindCompleted(this, new EmployeeAddressProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeAddressProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmployeeAddress[] EmployeeAddressProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("EmployeeAddressProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((EmployeeAddress[])(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeAddressProvider_GetAllAsync(int start, int pageLength) {
            this.EmployeeAddressProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void EmployeeAddressProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.EmployeeAddressProvider_GetAllOperationCompleted == null)) {
                this.EmployeeAddressProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeAddressProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("EmployeeAddressProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.EmployeeAddressProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnEmployeeAddressProvider_GetAllOperationCompleted(object arg) {
            if ((this.EmployeeAddressProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeAddressProvider_GetAllCompleted(this, new EmployeeAddressProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeAddressProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmployeeAddress[] EmployeeAddressProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("EmployeeAddressProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((EmployeeAddress[])(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeAddressProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.EmployeeAddressProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void EmployeeAddressProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.EmployeeAddressProvider_GetPagedOperationCompleted == null)) {
                this.EmployeeAddressProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeAddressProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("EmployeeAddressProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.EmployeeAddressProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnEmployeeAddressProvider_GetPagedOperationCompleted(object arg) {
            if ((this.EmployeeAddressProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeAddressProvider_GetPagedCompleted(this, new EmployeeAddressProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeAddressProvider_GetByAddressId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmployeeAddress[] EmployeeAddressProvider_GetByAddressId(int _addressId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("EmployeeAddressProvider_GetByAddressId", new object[] {
                        _addressId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((EmployeeAddress[])(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeAddressProvider_GetByAddressIdAsync(int _addressId, int start, int pageLength) {
            this.EmployeeAddressProvider_GetByAddressIdAsync(_addressId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void EmployeeAddressProvider_GetByAddressIdAsync(int _addressId, int start, int pageLength, object userState) {
            if ((this.EmployeeAddressProvider_GetByAddressIdOperationCompleted == null)) {
                this.EmployeeAddressProvider_GetByAddressIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeAddressProvider_GetByAddressIdOperationCompleted);
            }
            this.InvokeAsync("EmployeeAddressProvider_GetByAddressId", new object[] {
                        _addressId,
                        start,
                        pageLength}, this.EmployeeAddressProvider_GetByAddressIdOperationCompleted, userState);
        }
        
        private void OnEmployeeAddressProvider_GetByAddressIdOperationCompleted(object arg) {
            if ((this.EmployeeAddressProvider_GetByAddressIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeAddressProvider_GetByAddressIdCompleted(this, new EmployeeAddressProvider_GetByAddressIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeAddressProvider_GetByEmployeeId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmployeeAddress[] EmployeeAddressProvider_GetByEmployeeId(int _employeeId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("EmployeeAddressProvider_GetByEmployeeId", new object[] {
                        _employeeId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((EmployeeAddress[])(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeAddressProvider_GetByEmployeeIdAsync(int _employeeId, int start, int pageLength) {
            this.EmployeeAddressProvider_GetByEmployeeIdAsync(_employeeId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void EmployeeAddressProvider_GetByEmployeeIdAsync(int _employeeId, int start, int pageLength, object userState) {
            if ((this.EmployeeAddressProvider_GetByEmployeeIdOperationCompleted == null)) {
                this.EmployeeAddressProvider_GetByEmployeeIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeAddressProvider_GetByEmployeeIdOperationCompleted);
            }
            this.InvokeAsync("EmployeeAddressProvider_GetByEmployeeId", new object[] {
                        _employeeId,
                        start,
                        pageLength}, this.EmployeeAddressProvider_GetByEmployeeIdOperationCompleted, userState);
        }
        
        private void OnEmployeeAddressProvider_GetByEmployeeIdOperationCompleted(object arg) {
            if ((this.EmployeeAddressProvider_GetByEmployeeIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeAddressProvider_GetByEmployeeIdCompleted(this, new EmployeeAddressProvider_GetByEmployeeIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeAddressProvider_GetByRowguid", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmployeeAddress EmployeeAddressProvider_GetByRowguid(System.Guid _rowguid, int start, int pageLength, out int count) {
            object[] results = this.Invoke("EmployeeAddressProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((EmployeeAddress)(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeAddressProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength) {
            this.EmployeeAddressProvider_GetByRowguidAsync(_rowguid, start, pageLength, null);
        }
        
        /// <remarks/>
        public void EmployeeAddressProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength, object userState) {
            if ((this.EmployeeAddressProvider_GetByRowguidOperationCompleted == null)) {
                this.EmployeeAddressProvider_GetByRowguidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeAddressProvider_GetByRowguidOperationCompleted);
            }
            this.InvokeAsync("EmployeeAddressProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength}, this.EmployeeAddressProvider_GetByRowguidOperationCompleted, userState);
        }
        
        private void OnEmployeeAddressProvider_GetByRowguidOperationCompleted(object arg) {
            if ((this.EmployeeAddressProvider_GetByRowguidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeAddressProvider_GetByRowguidCompleted(this, new EmployeeAddressProvider_GetByRowguidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeAddressProvider_GetByEmployeeIdAd" +
            "dressId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmployeeAddress EmployeeAddressProvider_GetByEmployeeIdAddressId(int _employeeId, int _addressId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("EmployeeAddressProvider_GetByEmployeeIdAddressId", new object[] {
                        _employeeId,
                        _addressId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((EmployeeAddress)(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeAddressProvider_GetByEmployeeIdAddressIdAsync(int _employeeId, int _addressId, int start, int pageLength) {
            this.EmployeeAddressProvider_GetByEmployeeIdAddressIdAsync(_employeeId, _addressId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void EmployeeAddressProvider_GetByEmployeeIdAddressIdAsync(int _employeeId, int _addressId, int start, int pageLength, object userState) {
            if ((this.EmployeeAddressProvider_GetByEmployeeIdAddressIdOperationCompleted == null)) {
                this.EmployeeAddressProvider_GetByEmployeeIdAddressIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeAddressProvider_GetByEmployeeIdAddressIdOperationCompleted);
            }
            this.InvokeAsync("EmployeeAddressProvider_GetByEmployeeIdAddressId", new object[] {
                        _employeeId,
                        _addressId,
                        start,
                        pageLength}, this.EmployeeAddressProvider_GetByEmployeeIdAddressIdOperationCompleted, userState);
        }
        
        private void OnEmployeeAddressProvider_GetByEmployeeIdAddressIdOperationCompleted(object arg) {
            if ((this.EmployeeAddressProvider_GetByEmployeeIdAddressIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeAddressProvider_GetByEmployeeIdAddressIdCompleted(this, new EmployeeAddressProvider_GetByEmployeeIdAddressIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeAddressProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmployeeAddress EmployeeAddressProvider_Insert(EmployeeAddress entity) {
            object[] results = this.Invoke("EmployeeAddressProvider_Insert", new object[] {
                        entity});
            return ((EmployeeAddress)(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeAddressProvider_InsertAsync(EmployeeAddress entity) {
            this.EmployeeAddressProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void EmployeeAddressProvider_InsertAsync(EmployeeAddress entity, object userState) {
            if ((this.EmployeeAddressProvider_InsertOperationCompleted == null)) {
                this.EmployeeAddressProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeAddressProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("EmployeeAddressProvider_Insert", new object[] {
                        entity}, this.EmployeeAddressProvider_InsertOperationCompleted, userState);
        }
        
        private void OnEmployeeAddressProvider_InsertOperationCompleted(object arg) {
            if ((this.EmployeeAddressProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeAddressProvider_InsertCompleted(this, new EmployeeAddressProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeAddressProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmployeeAddressProvider_BulkInsert(EmployeeAddress[] entityList) {
            this.Invoke("EmployeeAddressProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void EmployeeAddressProvider_BulkInsertAsync(EmployeeAddress[] entityList) {
            this.EmployeeAddressProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void EmployeeAddressProvider_BulkInsertAsync(EmployeeAddress[] entityList, object userState) {
            if ((this.EmployeeAddressProvider_BulkInsertOperationCompleted == null)) {
                this.EmployeeAddressProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeAddressProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("EmployeeAddressProvider_BulkInsert", new object[] {
                        entityList}, this.EmployeeAddressProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnEmployeeAddressProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.EmployeeAddressProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeAddressProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeAddressProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmployeeAddress EmployeeAddressProvider_Update(EmployeeAddress entity) {
            object[] results = this.Invoke("EmployeeAddressProvider_Update", new object[] {
                        entity});
            return ((EmployeeAddress)(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeAddressProvider_UpdateAsync(EmployeeAddress entity) {
            this.EmployeeAddressProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void EmployeeAddressProvider_UpdateAsync(EmployeeAddress entity, object userState) {
            if ((this.EmployeeAddressProvider_UpdateOperationCompleted == null)) {
                this.EmployeeAddressProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeAddressProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("EmployeeAddressProvider_Update", new object[] {
                        entity}, this.EmployeeAddressProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnEmployeeAddressProvider_UpdateOperationCompleted(object arg) {
            if ((this.EmployeeAddressProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeAddressProvider_UpdateCompleted(this, new EmployeeAddressProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/DepartmentProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DepartmentProvider_Delete(short _departmentId) {
            object[] results = this.Invoke("DepartmentProvider_Delete", new object[] {
                        _departmentId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DepartmentProvider_DeleteAsync(short _departmentId) {
            this.DepartmentProvider_DeleteAsync(_departmentId, null);
        }
        
        /// <remarks/>
        public void DepartmentProvider_DeleteAsync(short _departmentId, object userState) {
            if ((this.DepartmentProvider_DeleteOperationCompleted == null)) {
                this.DepartmentProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDepartmentProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("DepartmentProvider_Delete", new object[] {
                        _departmentId}, this.DepartmentProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnDepartmentProvider_DeleteOperationCompleted(object arg) {
            if ((this.DepartmentProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DepartmentProvider_DeleteCompleted(this, new DepartmentProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/DepartmentProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Department[] DepartmentProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("DepartmentProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Department[])(results[0]));
        }
        
        /// <remarks/>
        public void DepartmentProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.DepartmentProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void DepartmentProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.DepartmentProvider_FindOperationCompleted == null)) {
                this.DepartmentProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDepartmentProvider_FindOperationCompleted);
            }
            this.InvokeAsync("DepartmentProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.DepartmentProvider_FindOperationCompleted, userState);
        }
        
        private void OnDepartmentProvider_FindOperationCompleted(object arg) {
            if ((this.DepartmentProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DepartmentProvider_FindCompleted(this, new DepartmentProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/DepartmentProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Department[] DepartmentProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("DepartmentProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Department[])(results[0]));
        }
        
        /// <remarks/>
        public void DepartmentProvider_GetAllAsync(int start, int pageLength) {
            this.DepartmentProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void DepartmentProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.DepartmentProvider_GetAllOperationCompleted == null)) {
                this.DepartmentProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDepartmentProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("DepartmentProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.DepartmentProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnDepartmentProvider_GetAllOperationCompleted(object arg) {
            if ((this.DepartmentProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DepartmentProvider_GetAllCompleted(this, new DepartmentProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/DepartmentProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Department[] DepartmentProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("DepartmentProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Department[])(results[0]));
        }
        
        /// <remarks/>
        public void DepartmentProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.DepartmentProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void DepartmentProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.DepartmentProvider_GetPagedOperationCompleted == null)) {
                this.DepartmentProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDepartmentProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("DepartmentProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.DepartmentProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnDepartmentProvider_GetPagedOperationCompleted(object arg) {
            if ((this.DepartmentProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DepartmentProvider_GetPagedCompleted(this, new DepartmentProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/DepartmentProvider_GetByName", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Department DepartmentProvider_GetByName(string _name, int start, int pageLength, out int count) {
            object[] results = this.Invoke("DepartmentProvider_GetByName", new object[] {
                        _name,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Department)(results[0]));
        }
        
        /// <remarks/>
        public void DepartmentProvider_GetByNameAsync(string _name, int start, int pageLength) {
            this.DepartmentProvider_GetByNameAsync(_name, start, pageLength, null);
        }
        
        /// <remarks/>
        public void DepartmentProvider_GetByNameAsync(string _name, int start, int pageLength, object userState) {
            if ((this.DepartmentProvider_GetByNameOperationCompleted == null)) {
                this.DepartmentProvider_GetByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDepartmentProvider_GetByNameOperationCompleted);
            }
            this.InvokeAsync("DepartmentProvider_GetByName", new object[] {
                        _name,
                        start,
                        pageLength}, this.DepartmentProvider_GetByNameOperationCompleted, userState);
        }
        
        private void OnDepartmentProvider_GetByNameOperationCompleted(object arg) {
            if ((this.DepartmentProvider_GetByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DepartmentProvider_GetByNameCompleted(this, new DepartmentProvider_GetByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/DepartmentProvider_GetByDepartmentId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Department DepartmentProvider_GetByDepartmentId(short _departmentId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("DepartmentProvider_GetByDepartmentId", new object[] {
                        _departmentId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Department)(results[0]));
        }
        
        /// <remarks/>
        public void DepartmentProvider_GetByDepartmentIdAsync(short _departmentId, int start, int pageLength) {
            this.DepartmentProvider_GetByDepartmentIdAsync(_departmentId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void DepartmentProvider_GetByDepartmentIdAsync(short _departmentId, int start, int pageLength, object userState) {
            if ((this.DepartmentProvider_GetByDepartmentIdOperationCompleted == null)) {
                this.DepartmentProvider_GetByDepartmentIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDepartmentProvider_GetByDepartmentIdOperationCompleted);
            }
            this.InvokeAsync("DepartmentProvider_GetByDepartmentId", new object[] {
                        _departmentId,
                        start,
                        pageLength}, this.DepartmentProvider_GetByDepartmentIdOperationCompleted, userState);
        }
        
        private void OnDepartmentProvider_GetByDepartmentIdOperationCompleted(object arg) {
            if ((this.DepartmentProvider_GetByDepartmentIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DepartmentProvider_GetByDepartmentIdCompleted(this, new DepartmentProvider_GetByDepartmentIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/DepartmentProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Department DepartmentProvider_Insert(Department entity) {
            object[] results = this.Invoke("DepartmentProvider_Insert", new object[] {
                        entity});
            return ((Department)(results[0]));
        }
        
        /// <remarks/>
        public void DepartmentProvider_InsertAsync(Department entity) {
            this.DepartmentProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void DepartmentProvider_InsertAsync(Department entity, object userState) {
            if ((this.DepartmentProvider_InsertOperationCompleted == null)) {
                this.DepartmentProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDepartmentProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("DepartmentProvider_Insert", new object[] {
                        entity}, this.DepartmentProvider_InsertOperationCompleted, userState);
        }
        
        private void OnDepartmentProvider_InsertOperationCompleted(object arg) {
            if ((this.DepartmentProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DepartmentProvider_InsertCompleted(this, new DepartmentProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/DepartmentProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DepartmentProvider_BulkInsert(Department[] entityList) {
            this.Invoke("DepartmentProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void DepartmentProvider_BulkInsertAsync(Department[] entityList) {
            this.DepartmentProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void DepartmentProvider_BulkInsertAsync(Department[] entityList, object userState) {
            if ((this.DepartmentProvider_BulkInsertOperationCompleted == null)) {
                this.DepartmentProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDepartmentProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("DepartmentProvider_BulkInsert", new object[] {
                        entityList}, this.DepartmentProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnDepartmentProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.DepartmentProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DepartmentProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/DepartmentProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Department DepartmentProvider_Update(Department entity) {
            object[] results = this.Invoke("DepartmentProvider_Update", new object[] {
                        entity});
            return ((Department)(results[0]));
        }
        
        /// <remarks/>
        public void DepartmentProvider_UpdateAsync(Department entity) {
            this.DepartmentProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void DepartmentProvider_UpdateAsync(Department entity, object userState) {
            if ((this.DepartmentProvider_UpdateOperationCompleted == null)) {
                this.DepartmentProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDepartmentProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("DepartmentProvider_Update", new object[] {
                        entity}, this.DepartmentProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnDepartmentProvider_UpdateOperationCompleted(object arg) {
            if ((this.DepartmentProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DepartmentProvider_UpdateCompleted(this, new DepartmentProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductPhotoProvider_GetByProductIdFromPr" +
            "oductProductPhoto", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductPhoto[] ProductPhotoProvider_GetByProductIdFromProductProductPhoto(int _productId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductPhotoProvider_GetByProductIdFromProductProductPhoto", new object[] {
                        _productId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductPhoto[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductPhotoProvider_GetByProductIdFromProductProductPhotoAsync(int _productId, int start, int pageLength) {
            this.ProductPhotoProvider_GetByProductIdFromProductProductPhotoAsync(_productId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductPhotoProvider_GetByProductIdFromProductProductPhotoAsync(int _productId, int start, int pageLength, object userState) {
            if ((this.ProductPhotoProvider_GetByProductIdFromProductProductPhotoOperationCompleted == null)) {
                this.ProductPhotoProvider_GetByProductIdFromProductProductPhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductPhotoProvider_GetByProductIdFromProductProductPhotoOperationCompleted);
            }
            this.InvokeAsync("ProductPhotoProvider_GetByProductIdFromProductProductPhoto", new object[] {
                        _productId,
                        start,
                        pageLength}, this.ProductPhotoProvider_GetByProductIdFromProductProductPhotoOperationCompleted, userState);
        }
        
        private void OnProductPhotoProvider_GetByProductIdFromProductProductPhotoOperationCompleted(object arg) {
            if ((this.ProductPhotoProvider_GetByProductIdFromProductProductPhotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductPhotoProvider_GetByProductIdFromProductProductPhotoCompleted(this, new ProductPhotoProvider_GetByProductIdFromProductProductPhotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductPhotoProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ProductPhotoProvider_Delete(int _productPhotoId) {
            object[] results = this.Invoke("ProductPhotoProvider_Delete", new object[] {
                        _productPhotoId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ProductPhotoProvider_DeleteAsync(int _productPhotoId) {
            this.ProductPhotoProvider_DeleteAsync(_productPhotoId, null);
        }
        
        /// <remarks/>
        public void ProductPhotoProvider_DeleteAsync(int _productPhotoId, object userState) {
            if ((this.ProductPhotoProvider_DeleteOperationCompleted == null)) {
                this.ProductPhotoProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductPhotoProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("ProductPhotoProvider_Delete", new object[] {
                        _productPhotoId}, this.ProductPhotoProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnProductPhotoProvider_DeleteOperationCompleted(object arg) {
            if ((this.ProductPhotoProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductPhotoProvider_DeleteCompleted(this, new ProductPhotoProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductPhotoProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductPhoto[] ProductPhotoProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductPhotoProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductPhoto[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductPhotoProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.ProductPhotoProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductPhotoProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.ProductPhotoProvider_FindOperationCompleted == null)) {
                this.ProductPhotoProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductPhotoProvider_FindOperationCompleted);
            }
            this.InvokeAsync("ProductPhotoProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.ProductPhotoProvider_FindOperationCompleted, userState);
        }
        
        private void OnProductPhotoProvider_FindOperationCompleted(object arg) {
            if ((this.ProductPhotoProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductPhotoProvider_FindCompleted(this, new ProductPhotoProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductPhotoProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductPhoto[] ProductPhotoProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductPhotoProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductPhoto[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductPhotoProvider_GetAllAsync(int start, int pageLength) {
            this.ProductPhotoProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductPhotoProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.ProductPhotoProvider_GetAllOperationCompleted == null)) {
                this.ProductPhotoProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductPhotoProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("ProductPhotoProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.ProductPhotoProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnProductPhotoProvider_GetAllOperationCompleted(object arg) {
            if ((this.ProductPhotoProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductPhotoProvider_GetAllCompleted(this, new ProductPhotoProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductPhotoProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductPhoto[] ProductPhotoProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductPhotoProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductPhoto[])(results[0]));
        }
        
        /// <remarks/>
        public void ProductPhotoProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.ProductPhotoProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductPhotoProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.ProductPhotoProvider_GetPagedOperationCompleted == null)) {
                this.ProductPhotoProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductPhotoProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("ProductPhotoProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.ProductPhotoProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnProductPhotoProvider_GetPagedOperationCompleted(object arg) {
            if ((this.ProductPhotoProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductPhotoProvider_GetPagedCompleted(this, new ProductPhotoProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductPhotoProvider_GetByProductPhotoId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductPhoto ProductPhotoProvider_GetByProductPhotoId(int _productPhotoId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ProductPhotoProvider_GetByProductPhotoId", new object[] {
                        _productPhotoId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ProductPhoto)(results[0]));
        }
        
        /// <remarks/>
        public void ProductPhotoProvider_GetByProductPhotoIdAsync(int _productPhotoId, int start, int pageLength) {
            this.ProductPhotoProvider_GetByProductPhotoIdAsync(_productPhotoId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ProductPhotoProvider_GetByProductPhotoIdAsync(int _productPhotoId, int start, int pageLength, object userState) {
            if ((this.ProductPhotoProvider_GetByProductPhotoIdOperationCompleted == null)) {
                this.ProductPhotoProvider_GetByProductPhotoIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductPhotoProvider_GetByProductPhotoIdOperationCompleted);
            }
            this.InvokeAsync("ProductPhotoProvider_GetByProductPhotoId", new object[] {
                        _productPhotoId,
                        start,
                        pageLength}, this.ProductPhotoProvider_GetByProductPhotoIdOperationCompleted, userState);
        }
        
        private void OnProductPhotoProvider_GetByProductPhotoIdOperationCompleted(object arg) {
            if ((this.ProductPhotoProvider_GetByProductPhotoIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductPhotoProvider_GetByProductPhotoIdCompleted(this, new ProductPhotoProvider_GetByProductPhotoIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductPhotoProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductPhoto ProductPhotoProvider_Insert(ProductPhoto entity) {
            object[] results = this.Invoke("ProductPhotoProvider_Insert", new object[] {
                        entity});
            return ((ProductPhoto)(results[0]));
        }
        
        /// <remarks/>
        public void ProductPhotoProvider_InsertAsync(ProductPhoto entity) {
            this.ProductPhotoProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void ProductPhotoProvider_InsertAsync(ProductPhoto entity, object userState) {
            if ((this.ProductPhotoProvider_InsertOperationCompleted == null)) {
                this.ProductPhotoProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductPhotoProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("ProductPhotoProvider_Insert", new object[] {
                        entity}, this.ProductPhotoProvider_InsertOperationCompleted, userState);
        }
        
        private void OnProductPhotoProvider_InsertOperationCompleted(object arg) {
            if ((this.ProductPhotoProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductPhotoProvider_InsertCompleted(this, new ProductPhotoProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductPhotoProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ProductPhotoProvider_BulkInsert(ProductPhoto[] entityList) {
            this.Invoke("ProductPhotoProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void ProductPhotoProvider_BulkInsertAsync(ProductPhoto[] entityList) {
            this.ProductPhotoProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void ProductPhotoProvider_BulkInsertAsync(ProductPhoto[] entityList, object userState) {
            if ((this.ProductPhotoProvider_BulkInsertOperationCompleted == null)) {
                this.ProductPhotoProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductPhotoProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("ProductPhotoProvider_BulkInsert", new object[] {
                        entityList}, this.ProductPhotoProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnProductPhotoProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.ProductPhotoProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductPhotoProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ProductPhotoProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProductPhoto ProductPhotoProvider_Update(ProductPhoto entity) {
            object[] results = this.Invoke("ProductPhotoProvider_Update", new object[] {
                        entity});
            return ((ProductPhoto)(results[0]));
        }
        
        /// <remarks/>
        public void ProductPhotoProvider_UpdateAsync(ProductPhoto entity) {
            this.ProductPhotoProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void ProductPhotoProvider_UpdateAsync(ProductPhoto entity, object userState) {
            if ((this.ProductPhotoProvider_UpdateOperationCompleted == null)) {
                this.ProductPhotoProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductPhotoProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("ProductPhotoProvider_Update", new object[] {
                        entity}, this.ProductPhotoProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnProductPhotoProvider_UpdateOperationCompleted(object arg) {
            if ((this.ProductPhotoProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductPhotoProvider_UpdateCompleted(this, new ProductPhotoProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/BillOfMaterialsProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BillOfMaterialsProvider_Delete(int _billOfMaterialsId) {
            object[] results = this.Invoke("BillOfMaterialsProvider_Delete", new object[] {
                        _billOfMaterialsId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BillOfMaterialsProvider_DeleteAsync(int _billOfMaterialsId) {
            this.BillOfMaterialsProvider_DeleteAsync(_billOfMaterialsId, null);
        }
        
        /// <remarks/>
        public void BillOfMaterialsProvider_DeleteAsync(int _billOfMaterialsId, object userState) {
            if ((this.BillOfMaterialsProvider_DeleteOperationCompleted == null)) {
                this.BillOfMaterialsProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBillOfMaterialsProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("BillOfMaterialsProvider_Delete", new object[] {
                        _billOfMaterialsId}, this.BillOfMaterialsProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnBillOfMaterialsProvider_DeleteOperationCompleted(object arg) {
            if ((this.BillOfMaterialsProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BillOfMaterialsProvider_DeleteCompleted(this, new BillOfMaterialsProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/BillOfMaterialsProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BillOfMaterials[] BillOfMaterialsProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("BillOfMaterialsProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((BillOfMaterials[])(results[0]));
        }
        
        /// <remarks/>
        public void BillOfMaterialsProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.BillOfMaterialsProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void BillOfMaterialsProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.BillOfMaterialsProvider_FindOperationCompleted == null)) {
                this.BillOfMaterialsProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBillOfMaterialsProvider_FindOperationCompleted);
            }
            this.InvokeAsync("BillOfMaterialsProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.BillOfMaterialsProvider_FindOperationCompleted, userState);
        }
        
        private void OnBillOfMaterialsProvider_FindOperationCompleted(object arg) {
            if ((this.BillOfMaterialsProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BillOfMaterialsProvider_FindCompleted(this, new BillOfMaterialsProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/BillOfMaterialsProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BillOfMaterials[] BillOfMaterialsProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("BillOfMaterialsProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((BillOfMaterials[])(results[0]));
        }
        
        /// <remarks/>
        public void BillOfMaterialsProvider_GetAllAsync(int start, int pageLength) {
            this.BillOfMaterialsProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void BillOfMaterialsProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.BillOfMaterialsProvider_GetAllOperationCompleted == null)) {
                this.BillOfMaterialsProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBillOfMaterialsProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("BillOfMaterialsProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.BillOfMaterialsProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnBillOfMaterialsProvider_GetAllOperationCompleted(object arg) {
            if ((this.BillOfMaterialsProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BillOfMaterialsProvider_GetAllCompleted(this, new BillOfMaterialsProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/BillOfMaterialsProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BillOfMaterials[] BillOfMaterialsProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("BillOfMaterialsProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((BillOfMaterials[])(results[0]));
        }
        
        /// <remarks/>
        public void BillOfMaterialsProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.BillOfMaterialsProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void BillOfMaterialsProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.BillOfMaterialsProvider_GetPagedOperationCompleted == null)) {
                this.BillOfMaterialsProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBillOfMaterialsProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("BillOfMaterialsProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.BillOfMaterialsProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnBillOfMaterialsProvider_GetPagedOperationCompleted(object arg) {
            if ((this.BillOfMaterialsProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BillOfMaterialsProvider_GetPagedCompleted(this, new BillOfMaterialsProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/BillOfMaterialsProvider_GetByComponentId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BillOfMaterials[] BillOfMaterialsProvider_GetByComponentId(int _componentId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("BillOfMaterialsProvider_GetByComponentId", new object[] {
                        _componentId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((BillOfMaterials[])(results[0]));
        }
        
        /// <remarks/>
        public void BillOfMaterialsProvider_GetByComponentIdAsync(int _componentId, int start, int pageLength) {
            this.BillOfMaterialsProvider_GetByComponentIdAsync(_componentId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void BillOfMaterialsProvider_GetByComponentIdAsync(int _componentId, int start, int pageLength, object userState) {
            if ((this.BillOfMaterialsProvider_GetByComponentIdOperationCompleted == null)) {
                this.BillOfMaterialsProvider_GetByComponentIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBillOfMaterialsProvider_GetByComponentIdOperationCompleted);
            }
            this.InvokeAsync("BillOfMaterialsProvider_GetByComponentId", new object[] {
                        _componentId,
                        start,
                        pageLength}, this.BillOfMaterialsProvider_GetByComponentIdOperationCompleted, userState);
        }
        
        private void OnBillOfMaterialsProvider_GetByComponentIdOperationCompleted(object arg) {
            if ((this.BillOfMaterialsProvider_GetByComponentIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BillOfMaterialsProvider_GetByComponentIdCompleted(this, new BillOfMaterialsProvider_GetByComponentIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/BillOfMaterialsProvider_GetByProductAssem" +
            "blyId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BillOfMaterials[] BillOfMaterialsProvider_GetByProductAssemblyId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> _productAssemblyId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("BillOfMaterialsProvider_GetByProductAssemblyId", new object[] {
                        _productAssemblyId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((BillOfMaterials[])(results[0]));
        }
        
        /// <remarks/>
        public void BillOfMaterialsProvider_GetByProductAssemblyIdAsync(System.Nullable<int> _productAssemblyId, int start, int pageLength) {
            this.BillOfMaterialsProvider_GetByProductAssemblyIdAsync(_productAssemblyId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void BillOfMaterialsProvider_GetByProductAssemblyIdAsync(System.Nullable<int> _productAssemblyId, int start, int pageLength, object userState) {
            if ((this.BillOfMaterialsProvider_GetByProductAssemblyIdOperationCompleted == null)) {
                this.BillOfMaterialsProvider_GetByProductAssemblyIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBillOfMaterialsProvider_GetByProductAssemblyIdOperationCompleted);
            }
            this.InvokeAsync("BillOfMaterialsProvider_GetByProductAssemblyId", new object[] {
                        _productAssemblyId,
                        start,
                        pageLength}, this.BillOfMaterialsProvider_GetByProductAssemblyIdOperationCompleted, userState);
        }
        
        private void OnBillOfMaterialsProvider_GetByProductAssemblyIdOperationCompleted(object arg) {
            if ((this.BillOfMaterialsProvider_GetByProductAssemblyIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BillOfMaterialsProvider_GetByProductAssemblyIdCompleted(this, new BillOfMaterialsProvider_GetByProductAssemblyIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/BillOfMaterialsProvider_GetByProductAssem" +
            "blyIdComponentIdStartDate", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BillOfMaterials BillOfMaterialsProvider_GetByProductAssemblyIdComponentIdStartDate([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> _productAssemblyId, int _componentId, System.DateTime _startDate, int start, int pageLength, out int count) {
            object[] results = this.Invoke("BillOfMaterialsProvider_GetByProductAssemblyIdComponentIdStartDate", new object[] {
                        _productAssemblyId,
                        _componentId,
                        _startDate,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((BillOfMaterials)(results[0]));
        }
        
        /// <remarks/>
        public void BillOfMaterialsProvider_GetByProductAssemblyIdComponentIdStartDateAsync(System.Nullable<int> _productAssemblyId, int _componentId, System.DateTime _startDate, int start, int pageLength) {
            this.BillOfMaterialsProvider_GetByProductAssemblyIdComponentIdStartDateAsync(_productAssemblyId, _componentId, _startDate, start, pageLength, null);
        }
        
        /// <remarks/>
        public void BillOfMaterialsProvider_GetByProductAssemblyIdComponentIdStartDateAsync(System.Nullable<int> _productAssemblyId, int _componentId, System.DateTime _startDate, int start, int pageLength, object userState) {
            if ((this.BillOfMaterialsProvider_GetByProductAssemblyIdComponentIdStartDateOperationCompleted == null)) {
                this.BillOfMaterialsProvider_GetByProductAssemblyIdComponentIdStartDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBillOfMaterialsProvider_GetByProductAssemblyIdComponentIdStartDateOperationCompleted);
            }
            this.InvokeAsync("BillOfMaterialsProvider_GetByProductAssemblyIdComponentIdStartDate", new object[] {
                        _productAssemblyId,
                        _componentId,
                        _startDate,
                        start,
                        pageLength}, this.BillOfMaterialsProvider_GetByProductAssemblyIdComponentIdStartDateOperationCompleted, userState);
        }
        
        private void OnBillOfMaterialsProvider_GetByProductAssemblyIdComponentIdStartDateOperationCompleted(object arg) {
            if ((this.BillOfMaterialsProvider_GetByProductAssemblyIdComponentIdStartDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BillOfMaterialsProvider_GetByProductAssemblyIdComponentIdStartDateCompleted(this, new BillOfMaterialsProvider_GetByProductAssemblyIdComponentIdStartDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/BillOfMaterialsProvider_GetByUnitMeasureC" +
            "ode", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BillOfMaterials[] BillOfMaterialsProvider_GetByUnitMeasureCode(string _unitMeasureCode, int start, int pageLength, out int count) {
            object[] results = this.Invoke("BillOfMaterialsProvider_GetByUnitMeasureCode", new object[] {
                        _unitMeasureCode,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((BillOfMaterials[])(results[0]));
        }
        
        /// <remarks/>
        public void BillOfMaterialsProvider_GetByUnitMeasureCodeAsync(string _unitMeasureCode, int start, int pageLength) {
            this.BillOfMaterialsProvider_GetByUnitMeasureCodeAsync(_unitMeasureCode, start, pageLength, null);
        }
        
        /// <remarks/>
        public void BillOfMaterialsProvider_GetByUnitMeasureCodeAsync(string _unitMeasureCode, int start, int pageLength, object userState) {
            if ((this.BillOfMaterialsProvider_GetByUnitMeasureCodeOperationCompleted == null)) {
                this.BillOfMaterialsProvider_GetByUnitMeasureCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBillOfMaterialsProvider_GetByUnitMeasureCodeOperationCompleted);
            }
            this.InvokeAsync("BillOfMaterialsProvider_GetByUnitMeasureCode", new object[] {
                        _unitMeasureCode,
                        start,
                        pageLength}, this.BillOfMaterialsProvider_GetByUnitMeasureCodeOperationCompleted, userState);
        }
        
        private void OnBillOfMaterialsProvider_GetByUnitMeasureCodeOperationCompleted(object arg) {
            if ((this.BillOfMaterialsProvider_GetByUnitMeasureCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BillOfMaterialsProvider_GetByUnitMeasureCodeCompleted(this, new BillOfMaterialsProvider_GetByUnitMeasureCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/BillOfMaterialsProvider_GetByBillOfMateri" +
            "alsId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BillOfMaterials BillOfMaterialsProvider_GetByBillOfMaterialsId(int _billOfMaterialsId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("BillOfMaterialsProvider_GetByBillOfMaterialsId", new object[] {
                        _billOfMaterialsId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((BillOfMaterials)(results[0]));
        }
        
        /// <remarks/>
        public void BillOfMaterialsProvider_GetByBillOfMaterialsIdAsync(int _billOfMaterialsId, int start, int pageLength) {
            this.BillOfMaterialsProvider_GetByBillOfMaterialsIdAsync(_billOfMaterialsId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void BillOfMaterialsProvider_GetByBillOfMaterialsIdAsync(int _billOfMaterialsId, int start, int pageLength, object userState) {
            if ((this.BillOfMaterialsProvider_GetByBillOfMaterialsIdOperationCompleted == null)) {
                this.BillOfMaterialsProvider_GetByBillOfMaterialsIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBillOfMaterialsProvider_GetByBillOfMaterialsIdOperationCompleted);
            }
            this.InvokeAsync("BillOfMaterialsProvider_GetByBillOfMaterialsId", new object[] {
                        _billOfMaterialsId,
                        start,
                        pageLength}, this.BillOfMaterialsProvider_GetByBillOfMaterialsIdOperationCompleted, userState);
        }
        
        private void OnBillOfMaterialsProvider_GetByBillOfMaterialsIdOperationCompleted(object arg) {
            if ((this.BillOfMaterialsProvider_GetByBillOfMaterialsIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BillOfMaterialsProvider_GetByBillOfMaterialsIdCompleted(this, new BillOfMaterialsProvider_GetByBillOfMaterialsIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/BillOfMaterialsProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BillOfMaterials BillOfMaterialsProvider_Insert(BillOfMaterials entity) {
            object[] results = this.Invoke("BillOfMaterialsProvider_Insert", new object[] {
                        entity});
            return ((BillOfMaterials)(results[0]));
        }
        
        /// <remarks/>
        public void BillOfMaterialsProvider_InsertAsync(BillOfMaterials entity) {
            this.BillOfMaterialsProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void BillOfMaterialsProvider_InsertAsync(BillOfMaterials entity, object userState) {
            if ((this.BillOfMaterialsProvider_InsertOperationCompleted == null)) {
                this.BillOfMaterialsProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBillOfMaterialsProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("BillOfMaterialsProvider_Insert", new object[] {
                        entity}, this.BillOfMaterialsProvider_InsertOperationCompleted, userState);
        }
        
        private void OnBillOfMaterialsProvider_InsertOperationCompleted(object arg) {
            if ((this.BillOfMaterialsProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BillOfMaterialsProvider_InsertCompleted(this, new BillOfMaterialsProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/BillOfMaterialsProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BillOfMaterialsProvider_BulkInsert(BillOfMaterials[] entityList) {
            this.Invoke("BillOfMaterialsProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void BillOfMaterialsProvider_BulkInsertAsync(BillOfMaterials[] entityList) {
            this.BillOfMaterialsProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void BillOfMaterialsProvider_BulkInsertAsync(BillOfMaterials[] entityList, object userState) {
            if ((this.BillOfMaterialsProvider_BulkInsertOperationCompleted == null)) {
                this.BillOfMaterialsProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBillOfMaterialsProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("BillOfMaterialsProvider_BulkInsert", new object[] {
                        entityList}, this.BillOfMaterialsProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnBillOfMaterialsProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.BillOfMaterialsProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BillOfMaterialsProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/BillOfMaterialsProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BillOfMaterials BillOfMaterialsProvider_Update(BillOfMaterials entity) {
            object[] results = this.Invoke("BillOfMaterialsProvider_Update", new object[] {
                        entity});
            return ((BillOfMaterials)(results[0]));
        }
        
        /// <remarks/>
        public void BillOfMaterialsProvider_UpdateAsync(BillOfMaterials entity) {
            this.BillOfMaterialsProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void BillOfMaterialsProvider_UpdateAsync(BillOfMaterials entity, object userState) {
            if ((this.BillOfMaterialsProvider_UpdateOperationCompleted == null)) {
                this.BillOfMaterialsProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBillOfMaterialsProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("BillOfMaterialsProvider_Update", new object[] {
                        entity}, this.BillOfMaterialsProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnBillOfMaterialsProvider_UpdateOperationCompleted(object arg) {
            if ((this.BillOfMaterialsProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BillOfMaterialsProvider_UpdateCompleted(this, new BillOfMaterialsProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesPersonProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SalesPersonProvider_Delete(int _salesPersonId) {
            object[] results = this.Invoke("SalesPersonProvider_Delete", new object[] {
                        _salesPersonId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SalesPersonProvider_DeleteAsync(int _salesPersonId) {
            this.SalesPersonProvider_DeleteAsync(_salesPersonId, null);
        }
        
        /// <remarks/>
        public void SalesPersonProvider_DeleteAsync(int _salesPersonId, object userState) {
            if ((this.SalesPersonProvider_DeleteOperationCompleted == null)) {
                this.SalesPersonProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesPersonProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("SalesPersonProvider_Delete", new object[] {
                        _salesPersonId}, this.SalesPersonProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnSalesPersonProvider_DeleteOperationCompleted(object arg) {
            if ((this.SalesPersonProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesPersonProvider_DeleteCompleted(this, new SalesPersonProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesPersonProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesPerson[] SalesPersonProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesPersonProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesPerson[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesPersonProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.SalesPersonProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesPersonProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.SalesPersonProvider_FindOperationCompleted == null)) {
                this.SalesPersonProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesPersonProvider_FindOperationCompleted);
            }
            this.InvokeAsync("SalesPersonProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.SalesPersonProvider_FindOperationCompleted, userState);
        }
        
        private void OnSalesPersonProvider_FindOperationCompleted(object arg) {
            if ((this.SalesPersonProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesPersonProvider_FindCompleted(this, new SalesPersonProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesPersonProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesPerson[] SalesPersonProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesPersonProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesPerson[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesPersonProvider_GetAllAsync(int start, int pageLength) {
            this.SalesPersonProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesPersonProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.SalesPersonProvider_GetAllOperationCompleted == null)) {
                this.SalesPersonProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesPersonProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("SalesPersonProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.SalesPersonProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnSalesPersonProvider_GetAllOperationCompleted(object arg) {
            if ((this.SalesPersonProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesPersonProvider_GetAllCompleted(this, new SalesPersonProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesPersonProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesPerson[] SalesPersonProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesPersonProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesPerson[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesPersonProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.SalesPersonProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesPersonProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.SalesPersonProvider_GetPagedOperationCompleted == null)) {
                this.SalesPersonProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesPersonProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("SalesPersonProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.SalesPersonProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnSalesPersonProvider_GetPagedOperationCompleted(object arg) {
            if ((this.SalesPersonProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesPersonProvider_GetPagedCompleted(this, new SalesPersonProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesPersonProvider_GetByTerritoryId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesPerson[] SalesPersonProvider_GetByTerritoryId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> _territoryId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesPersonProvider_GetByTerritoryId", new object[] {
                        _territoryId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesPerson[])(results[0]));
        }
        
        /// <remarks/>
        public void SalesPersonProvider_GetByTerritoryIdAsync(System.Nullable<int> _territoryId, int start, int pageLength) {
            this.SalesPersonProvider_GetByTerritoryIdAsync(_territoryId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesPersonProvider_GetByTerritoryIdAsync(System.Nullable<int> _territoryId, int start, int pageLength, object userState) {
            if ((this.SalesPersonProvider_GetByTerritoryIdOperationCompleted == null)) {
                this.SalesPersonProvider_GetByTerritoryIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesPersonProvider_GetByTerritoryIdOperationCompleted);
            }
            this.InvokeAsync("SalesPersonProvider_GetByTerritoryId", new object[] {
                        _territoryId,
                        start,
                        pageLength}, this.SalesPersonProvider_GetByTerritoryIdOperationCompleted, userState);
        }
        
        private void OnSalesPersonProvider_GetByTerritoryIdOperationCompleted(object arg) {
            if ((this.SalesPersonProvider_GetByTerritoryIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesPersonProvider_GetByTerritoryIdCompleted(this, new SalesPersonProvider_GetByTerritoryIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesPersonProvider_GetByRowguid", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesPerson SalesPersonProvider_GetByRowguid(System.Guid _rowguid, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesPersonProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesPerson)(results[0]));
        }
        
        /// <remarks/>
        public void SalesPersonProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength) {
            this.SalesPersonProvider_GetByRowguidAsync(_rowguid, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesPersonProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength, object userState) {
            if ((this.SalesPersonProvider_GetByRowguidOperationCompleted == null)) {
                this.SalesPersonProvider_GetByRowguidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesPersonProvider_GetByRowguidOperationCompleted);
            }
            this.InvokeAsync("SalesPersonProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength}, this.SalesPersonProvider_GetByRowguidOperationCompleted, userState);
        }
        
        private void OnSalesPersonProvider_GetByRowguidOperationCompleted(object arg) {
            if ((this.SalesPersonProvider_GetByRowguidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesPersonProvider_GetByRowguidCompleted(this, new SalesPersonProvider_GetByRowguidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesPersonProvider_GetBySalesPersonId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesPerson SalesPersonProvider_GetBySalesPersonId(int _salesPersonId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("SalesPersonProvider_GetBySalesPersonId", new object[] {
                        _salesPersonId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((SalesPerson)(results[0]));
        }
        
        /// <remarks/>
        public void SalesPersonProvider_GetBySalesPersonIdAsync(int _salesPersonId, int start, int pageLength) {
            this.SalesPersonProvider_GetBySalesPersonIdAsync(_salesPersonId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void SalesPersonProvider_GetBySalesPersonIdAsync(int _salesPersonId, int start, int pageLength, object userState) {
            if ((this.SalesPersonProvider_GetBySalesPersonIdOperationCompleted == null)) {
                this.SalesPersonProvider_GetBySalesPersonIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesPersonProvider_GetBySalesPersonIdOperationCompleted);
            }
            this.InvokeAsync("SalesPersonProvider_GetBySalesPersonId", new object[] {
                        _salesPersonId,
                        start,
                        pageLength}, this.SalesPersonProvider_GetBySalesPersonIdOperationCompleted, userState);
        }
        
        private void OnSalesPersonProvider_GetBySalesPersonIdOperationCompleted(object arg) {
            if ((this.SalesPersonProvider_GetBySalesPersonIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesPersonProvider_GetBySalesPersonIdCompleted(this, new SalesPersonProvider_GetBySalesPersonIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesPersonProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesPerson SalesPersonProvider_Insert(SalesPerson entity) {
            object[] results = this.Invoke("SalesPersonProvider_Insert", new object[] {
                        entity});
            return ((SalesPerson)(results[0]));
        }
        
        /// <remarks/>
        public void SalesPersonProvider_InsertAsync(SalesPerson entity) {
            this.SalesPersonProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void SalesPersonProvider_InsertAsync(SalesPerson entity, object userState) {
            if ((this.SalesPersonProvider_InsertOperationCompleted == null)) {
                this.SalesPersonProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesPersonProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("SalesPersonProvider_Insert", new object[] {
                        entity}, this.SalesPersonProvider_InsertOperationCompleted, userState);
        }
        
        private void OnSalesPersonProvider_InsertOperationCompleted(object arg) {
            if ((this.SalesPersonProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesPersonProvider_InsertCompleted(this, new SalesPersonProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesPersonProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SalesPersonProvider_BulkInsert(SalesPerson[] entityList) {
            this.Invoke("SalesPersonProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void SalesPersonProvider_BulkInsertAsync(SalesPerson[] entityList) {
            this.SalesPersonProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void SalesPersonProvider_BulkInsertAsync(SalesPerson[] entityList, object userState) {
            if ((this.SalesPersonProvider_BulkInsertOperationCompleted == null)) {
                this.SalesPersonProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesPersonProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("SalesPersonProvider_BulkInsert", new object[] {
                        entityList}, this.SalesPersonProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnSalesPersonProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.SalesPersonProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesPersonProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/SalesPersonProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SalesPerson SalesPersonProvider_Update(SalesPerson entity) {
            object[] results = this.Invoke("SalesPersonProvider_Update", new object[] {
                        entity});
            return ((SalesPerson)(results[0]));
        }
        
        /// <remarks/>
        public void SalesPersonProvider_UpdateAsync(SalesPerson entity) {
            this.SalesPersonProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void SalesPersonProvider_UpdateAsync(SalesPerson entity, object userState) {
            if ((this.SalesPersonProvider_UpdateOperationCompleted == null)) {
                this.SalesPersonProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalesPersonProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("SalesPersonProvider_Update", new object[] {
                        entity}, this.SalesPersonProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnSalesPersonProvider_UpdateOperationCompleted(object arg) {
            if ((this.SalesPersonProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalesPersonProvider_UpdateCompleted(this, new SalesPersonProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/JobCandidateProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool JobCandidateProvider_Delete(int _jobCandidateId) {
            object[] results = this.Invoke("JobCandidateProvider_Delete", new object[] {
                        _jobCandidateId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void JobCandidateProvider_DeleteAsync(int _jobCandidateId) {
            this.JobCandidateProvider_DeleteAsync(_jobCandidateId, null);
        }
        
        /// <remarks/>
        public void JobCandidateProvider_DeleteAsync(int _jobCandidateId, object userState) {
            if ((this.JobCandidateProvider_DeleteOperationCompleted == null)) {
                this.JobCandidateProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJobCandidateProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("JobCandidateProvider_Delete", new object[] {
                        _jobCandidateId}, this.JobCandidateProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnJobCandidateProvider_DeleteOperationCompleted(object arg) {
            if ((this.JobCandidateProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.JobCandidateProvider_DeleteCompleted(this, new JobCandidateProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/JobCandidateProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public JobCandidate[] JobCandidateProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("JobCandidateProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((JobCandidate[])(results[0]));
        }
        
        /// <remarks/>
        public void JobCandidateProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.JobCandidateProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void JobCandidateProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.JobCandidateProvider_FindOperationCompleted == null)) {
                this.JobCandidateProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJobCandidateProvider_FindOperationCompleted);
            }
            this.InvokeAsync("JobCandidateProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.JobCandidateProvider_FindOperationCompleted, userState);
        }
        
        private void OnJobCandidateProvider_FindOperationCompleted(object arg) {
            if ((this.JobCandidateProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.JobCandidateProvider_FindCompleted(this, new JobCandidateProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/JobCandidateProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public JobCandidate[] JobCandidateProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("JobCandidateProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((JobCandidate[])(results[0]));
        }
        
        /// <remarks/>
        public void JobCandidateProvider_GetAllAsync(int start, int pageLength) {
            this.JobCandidateProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void JobCandidateProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.JobCandidateProvider_GetAllOperationCompleted == null)) {
                this.JobCandidateProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJobCandidateProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("JobCandidateProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.JobCandidateProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnJobCandidateProvider_GetAllOperationCompleted(object arg) {
            if ((this.JobCandidateProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.JobCandidateProvider_GetAllCompleted(this, new JobCandidateProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/JobCandidateProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public JobCandidate[] JobCandidateProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("JobCandidateProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((JobCandidate[])(results[0]));
        }
        
        /// <remarks/>
        public void JobCandidateProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.JobCandidateProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void JobCandidateProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.JobCandidateProvider_GetPagedOperationCompleted == null)) {
                this.JobCandidateProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJobCandidateProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("JobCandidateProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.JobCandidateProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnJobCandidateProvider_GetPagedOperationCompleted(object arg) {
            if ((this.JobCandidateProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.JobCandidateProvider_GetPagedCompleted(this, new JobCandidateProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/JobCandidateProvider_GetByEmployeeId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public JobCandidate[] JobCandidateProvider_GetByEmployeeId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> _employeeId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("JobCandidateProvider_GetByEmployeeId", new object[] {
                        _employeeId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((JobCandidate[])(results[0]));
        }
        
        /// <remarks/>
        public void JobCandidateProvider_GetByEmployeeIdAsync(System.Nullable<int> _employeeId, int start, int pageLength) {
            this.JobCandidateProvider_GetByEmployeeIdAsync(_employeeId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void JobCandidateProvider_GetByEmployeeIdAsync(System.Nullable<int> _employeeId, int start, int pageLength, object userState) {
            if ((this.JobCandidateProvider_GetByEmployeeIdOperationCompleted == null)) {
                this.JobCandidateProvider_GetByEmployeeIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJobCandidateProvider_GetByEmployeeIdOperationCompleted);
            }
            this.InvokeAsync("JobCandidateProvider_GetByEmployeeId", new object[] {
                        _employeeId,
                        start,
                        pageLength}, this.JobCandidateProvider_GetByEmployeeIdOperationCompleted, userState);
        }
        
        private void OnJobCandidateProvider_GetByEmployeeIdOperationCompleted(object arg) {
            if ((this.JobCandidateProvider_GetByEmployeeIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.JobCandidateProvider_GetByEmployeeIdCompleted(this, new JobCandidateProvider_GetByEmployeeIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/JobCandidateProvider_GetByJobCandidateId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public JobCandidate JobCandidateProvider_GetByJobCandidateId(int _jobCandidateId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("JobCandidateProvider_GetByJobCandidateId", new object[] {
                        _jobCandidateId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((JobCandidate)(results[0]));
        }
        
        /// <remarks/>
        public void JobCandidateProvider_GetByJobCandidateIdAsync(int _jobCandidateId, int start, int pageLength) {
            this.JobCandidateProvider_GetByJobCandidateIdAsync(_jobCandidateId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void JobCandidateProvider_GetByJobCandidateIdAsync(int _jobCandidateId, int start, int pageLength, object userState) {
            if ((this.JobCandidateProvider_GetByJobCandidateIdOperationCompleted == null)) {
                this.JobCandidateProvider_GetByJobCandidateIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJobCandidateProvider_GetByJobCandidateIdOperationCompleted);
            }
            this.InvokeAsync("JobCandidateProvider_GetByJobCandidateId", new object[] {
                        _jobCandidateId,
                        start,
                        pageLength}, this.JobCandidateProvider_GetByJobCandidateIdOperationCompleted, userState);
        }
        
        private void OnJobCandidateProvider_GetByJobCandidateIdOperationCompleted(object arg) {
            if ((this.JobCandidateProvider_GetByJobCandidateIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.JobCandidateProvider_GetByJobCandidateIdCompleted(this, new JobCandidateProvider_GetByJobCandidateIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/JobCandidateProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public JobCandidate JobCandidateProvider_Insert(JobCandidate entity) {
            object[] results = this.Invoke("JobCandidateProvider_Insert", new object[] {
                        entity});
            return ((JobCandidate)(results[0]));
        }
        
        /// <remarks/>
        public void JobCandidateProvider_InsertAsync(JobCandidate entity) {
            this.JobCandidateProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void JobCandidateProvider_InsertAsync(JobCandidate entity, object userState) {
            if ((this.JobCandidateProvider_InsertOperationCompleted == null)) {
                this.JobCandidateProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJobCandidateProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("JobCandidateProvider_Insert", new object[] {
                        entity}, this.JobCandidateProvider_InsertOperationCompleted, userState);
        }
        
        private void OnJobCandidateProvider_InsertOperationCompleted(object arg) {
            if ((this.JobCandidateProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.JobCandidateProvider_InsertCompleted(this, new JobCandidateProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/JobCandidateProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void JobCandidateProvider_BulkInsert(JobCandidate[] entityList) {
            this.Invoke("JobCandidateProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void JobCandidateProvider_BulkInsertAsync(JobCandidate[] entityList) {
            this.JobCandidateProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void JobCandidateProvider_BulkInsertAsync(JobCandidate[] entityList, object userState) {
            if ((this.JobCandidateProvider_BulkInsertOperationCompleted == null)) {
                this.JobCandidateProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJobCandidateProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("JobCandidateProvider_BulkInsert", new object[] {
                        entityList}, this.JobCandidateProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnJobCandidateProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.JobCandidateProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.JobCandidateProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/JobCandidateProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public JobCandidate JobCandidateProvider_Update(JobCandidate entity) {
            object[] results = this.Invoke("JobCandidateProvider_Update", new object[] {
                        entity});
            return ((JobCandidate)(results[0]));
        }
        
        /// <remarks/>
        public void JobCandidateProvider_UpdateAsync(JobCandidate entity) {
            this.JobCandidateProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void JobCandidateProvider_UpdateAsync(JobCandidate entity, object userState) {
            if ((this.JobCandidateProvider_UpdateOperationCompleted == null)) {
                this.JobCandidateProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJobCandidateProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("JobCandidateProvider_Update", new object[] {
                        entity}, this.JobCandidateProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnJobCandidateProvider_UpdateOperationCompleted(object arg) {
            if ((this.JobCandidateProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.JobCandidateProvider_UpdateCompleted(this, new JobCandidateProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeDepartmentHistoryProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EmployeeDepartmentHistoryProvider_Delete(int _employeeId, System.DateTime _startDate, short _departmentId, byte _shiftId) {
            object[] results = this.Invoke("EmployeeDepartmentHistoryProvider_Delete", new object[] {
                        _employeeId,
                        _startDate,
                        _departmentId,
                        _shiftId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeDepartmentHistoryProvider_DeleteAsync(int _employeeId, System.DateTime _startDate, short _departmentId, byte _shiftId) {
            this.EmployeeDepartmentHistoryProvider_DeleteAsync(_employeeId, _startDate, _departmentId, _shiftId, null);
        }
        
        /// <remarks/>
        public void EmployeeDepartmentHistoryProvider_DeleteAsync(int _employeeId, System.DateTime _startDate, short _departmentId, byte _shiftId, object userState) {
            if ((this.EmployeeDepartmentHistoryProvider_DeleteOperationCompleted == null)) {
                this.EmployeeDepartmentHistoryProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeDepartmentHistoryProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("EmployeeDepartmentHistoryProvider_Delete", new object[] {
                        _employeeId,
                        _startDate,
                        _departmentId,
                        _shiftId}, this.EmployeeDepartmentHistoryProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnEmployeeDepartmentHistoryProvider_DeleteOperationCompleted(object arg) {
            if ((this.EmployeeDepartmentHistoryProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeDepartmentHistoryProvider_DeleteCompleted(this, new EmployeeDepartmentHistoryProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeDepartmentHistoryProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmployeeDepartmentHistory[] EmployeeDepartmentHistoryProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("EmployeeDepartmentHistoryProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((EmployeeDepartmentHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeDepartmentHistoryProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.EmployeeDepartmentHistoryProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void EmployeeDepartmentHistoryProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.EmployeeDepartmentHistoryProvider_FindOperationCompleted == null)) {
                this.EmployeeDepartmentHistoryProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeDepartmentHistoryProvider_FindOperationCompleted);
            }
            this.InvokeAsync("EmployeeDepartmentHistoryProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.EmployeeDepartmentHistoryProvider_FindOperationCompleted, userState);
        }
        
        private void OnEmployeeDepartmentHistoryProvider_FindOperationCompleted(object arg) {
            if ((this.EmployeeDepartmentHistoryProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeDepartmentHistoryProvider_FindCompleted(this, new EmployeeDepartmentHistoryProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeDepartmentHistoryProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmployeeDepartmentHistory[] EmployeeDepartmentHistoryProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("EmployeeDepartmentHistoryProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((EmployeeDepartmentHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeDepartmentHistoryProvider_GetAllAsync(int start, int pageLength) {
            this.EmployeeDepartmentHistoryProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void EmployeeDepartmentHistoryProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.EmployeeDepartmentHistoryProvider_GetAllOperationCompleted == null)) {
                this.EmployeeDepartmentHistoryProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeDepartmentHistoryProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("EmployeeDepartmentHistoryProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.EmployeeDepartmentHistoryProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnEmployeeDepartmentHistoryProvider_GetAllOperationCompleted(object arg) {
            if ((this.EmployeeDepartmentHistoryProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeDepartmentHistoryProvider_GetAllCompleted(this, new EmployeeDepartmentHistoryProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeDepartmentHistoryProvider_GetPage" +
            "d", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmployeeDepartmentHistory[] EmployeeDepartmentHistoryProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("EmployeeDepartmentHistoryProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((EmployeeDepartmentHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeDepartmentHistoryProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.EmployeeDepartmentHistoryProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void EmployeeDepartmentHistoryProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.EmployeeDepartmentHistoryProvider_GetPagedOperationCompleted == null)) {
                this.EmployeeDepartmentHistoryProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeDepartmentHistoryProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("EmployeeDepartmentHistoryProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.EmployeeDepartmentHistoryProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnEmployeeDepartmentHistoryProvider_GetPagedOperationCompleted(object arg) {
            if ((this.EmployeeDepartmentHistoryProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeDepartmentHistoryProvider_GetPagedCompleted(this, new EmployeeDepartmentHistoryProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeDepartmentHistoryProvider_GetByEm" +
            "ployeeId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmployeeDepartmentHistory[] EmployeeDepartmentHistoryProvider_GetByEmployeeId(int _employeeId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("EmployeeDepartmentHistoryProvider_GetByEmployeeId", new object[] {
                        _employeeId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((EmployeeDepartmentHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeDepartmentHistoryProvider_GetByEmployeeIdAsync(int _employeeId, int start, int pageLength) {
            this.EmployeeDepartmentHistoryProvider_GetByEmployeeIdAsync(_employeeId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void EmployeeDepartmentHistoryProvider_GetByEmployeeIdAsync(int _employeeId, int start, int pageLength, object userState) {
            if ((this.EmployeeDepartmentHistoryProvider_GetByEmployeeIdOperationCompleted == null)) {
                this.EmployeeDepartmentHistoryProvider_GetByEmployeeIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeDepartmentHistoryProvider_GetByEmployeeIdOperationCompleted);
            }
            this.InvokeAsync("EmployeeDepartmentHistoryProvider_GetByEmployeeId", new object[] {
                        _employeeId,
                        start,
                        pageLength}, this.EmployeeDepartmentHistoryProvider_GetByEmployeeIdOperationCompleted, userState);
        }
        
        private void OnEmployeeDepartmentHistoryProvider_GetByEmployeeIdOperationCompleted(object arg) {
            if ((this.EmployeeDepartmentHistoryProvider_GetByEmployeeIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeDepartmentHistoryProvider_GetByEmployeeIdCompleted(this, new EmployeeDepartmentHistoryProvider_GetByEmployeeIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeDepartmentHistoryProvider_GetByDe" +
            "partmentId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmployeeDepartmentHistory[] EmployeeDepartmentHistoryProvider_GetByDepartmentId(short _departmentId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("EmployeeDepartmentHistoryProvider_GetByDepartmentId", new object[] {
                        _departmentId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((EmployeeDepartmentHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeDepartmentHistoryProvider_GetByDepartmentIdAsync(short _departmentId, int start, int pageLength) {
            this.EmployeeDepartmentHistoryProvider_GetByDepartmentIdAsync(_departmentId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void EmployeeDepartmentHistoryProvider_GetByDepartmentIdAsync(short _departmentId, int start, int pageLength, object userState) {
            if ((this.EmployeeDepartmentHistoryProvider_GetByDepartmentIdOperationCompleted == null)) {
                this.EmployeeDepartmentHistoryProvider_GetByDepartmentIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeDepartmentHistoryProvider_GetByDepartmentIdOperationCompleted);
            }
            this.InvokeAsync("EmployeeDepartmentHistoryProvider_GetByDepartmentId", new object[] {
                        _departmentId,
                        start,
                        pageLength}, this.EmployeeDepartmentHistoryProvider_GetByDepartmentIdOperationCompleted, userState);
        }
        
        private void OnEmployeeDepartmentHistoryProvider_GetByDepartmentIdOperationCompleted(object arg) {
            if ((this.EmployeeDepartmentHistoryProvider_GetByDepartmentIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeDepartmentHistoryProvider_GetByDepartmentIdCompleted(this, new EmployeeDepartmentHistoryProvider_GetByDepartmentIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeDepartmentHistoryProvider_GetBySh" +
            "iftId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmployeeDepartmentHistory[] EmployeeDepartmentHistoryProvider_GetByShiftId(byte _shiftId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("EmployeeDepartmentHistoryProvider_GetByShiftId", new object[] {
                        _shiftId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((EmployeeDepartmentHistory[])(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeDepartmentHistoryProvider_GetByShiftIdAsync(byte _shiftId, int start, int pageLength) {
            this.EmployeeDepartmentHistoryProvider_GetByShiftIdAsync(_shiftId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void EmployeeDepartmentHistoryProvider_GetByShiftIdAsync(byte _shiftId, int start, int pageLength, object userState) {
            if ((this.EmployeeDepartmentHistoryProvider_GetByShiftIdOperationCompleted == null)) {
                this.EmployeeDepartmentHistoryProvider_GetByShiftIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeDepartmentHistoryProvider_GetByShiftIdOperationCompleted);
            }
            this.InvokeAsync("EmployeeDepartmentHistoryProvider_GetByShiftId", new object[] {
                        _shiftId,
                        start,
                        pageLength}, this.EmployeeDepartmentHistoryProvider_GetByShiftIdOperationCompleted, userState);
        }
        
        private void OnEmployeeDepartmentHistoryProvider_GetByShiftIdOperationCompleted(object arg) {
            if ((this.EmployeeDepartmentHistoryProvider_GetByShiftIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeDepartmentHistoryProvider_GetByShiftIdCompleted(this, new EmployeeDepartmentHistoryProvider_GetByShiftIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeDepartmentHistoryProvider_GetByEm" +
            "ployeeIdStartDateDepartmentIdShiftId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmployeeDepartmentHistory EmployeeDepartmentHistoryProvider_GetByEmployeeIdStartDateDepartmentIdShiftId(int _employeeId, System.DateTime _startDate, short _departmentId, byte _shiftId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("EmployeeDepartmentHistoryProvider_GetByEmployeeIdStartDateDepartmentIdShiftId", new object[] {
                        _employeeId,
                        _startDate,
                        _departmentId,
                        _shiftId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((EmployeeDepartmentHistory)(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeDepartmentHistoryProvider_GetByEmployeeIdStartDateDepartmentIdShiftIdAsync(int _employeeId, System.DateTime _startDate, short _departmentId, byte _shiftId, int start, int pageLength) {
            this.EmployeeDepartmentHistoryProvider_GetByEmployeeIdStartDateDepartmentIdShiftIdAsync(_employeeId, _startDate, _departmentId, _shiftId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void EmployeeDepartmentHistoryProvider_GetByEmployeeIdStartDateDepartmentIdShiftIdAsync(int _employeeId, System.DateTime _startDate, short _departmentId, byte _shiftId, int start, int pageLength, object userState) {
            if ((this.EmployeeDepartmentHistoryProvider_GetByEmployeeIdStartDateDepartmentIdShiftIdOperationCompleted == null)) {
                this.EmployeeDepartmentHistoryProvider_GetByEmployeeIdStartDateDepartmentIdShiftIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeDepartmentHistoryProvider_GetByEmployeeIdStartDateDepartmentIdShiftIdOperationCompleted);
            }
            this.InvokeAsync("EmployeeDepartmentHistoryProvider_GetByEmployeeIdStartDateDepartmentIdShiftId", new object[] {
                        _employeeId,
                        _startDate,
                        _departmentId,
                        _shiftId,
                        start,
                        pageLength}, this.EmployeeDepartmentHistoryProvider_GetByEmployeeIdStartDateDepartmentIdShiftIdOperationCompleted, userState);
        }
        
        private void OnEmployeeDepartmentHistoryProvider_GetByEmployeeIdStartDateDepartmentIdShiftIdOperationCompleted(object arg) {
            if ((this.EmployeeDepartmentHistoryProvider_GetByEmployeeIdStartDateDepartmentIdShiftIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeDepartmentHistoryProvider_GetByEmployeeIdStartDateDepartmentIdShiftIdCompleted(this, new EmployeeDepartmentHistoryProvider_GetByEmployeeIdStartDateDepartmentIdShiftIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeDepartmentHistoryProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmployeeDepartmentHistory EmployeeDepartmentHistoryProvider_Insert(EmployeeDepartmentHistory entity) {
            object[] results = this.Invoke("EmployeeDepartmentHistoryProvider_Insert", new object[] {
                        entity});
            return ((EmployeeDepartmentHistory)(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeDepartmentHistoryProvider_InsertAsync(EmployeeDepartmentHistory entity) {
            this.EmployeeDepartmentHistoryProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void EmployeeDepartmentHistoryProvider_InsertAsync(EmployeeDepartmentHistory entity, object userState) {
            if ((this.EmployeeDepartmentHistoryProvider_InsertOperationCompleted == null)) {
                this.EmployeeDepartmentHistoryProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeDepartmentHistoryProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("EmployeeDepartmentHistoryProvider_Insert", new object[] {
                        entity}, this.EmployeeDepartmentHistoryProvider_InsertOperationCompleted, userState);
        }
        
        private void OnEmployeeDepartmentHistoryProvider_InsertOperationCompleted(object arg) {
            if ((this.EmployeeDepartmentHistoryProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeDepartmentHistoryProvider_InsertCompleted(this, new EmployeeDepartmentHistoryProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeDepartmentHistoryProvider_BulkIns" +
            "ert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmployeeDepartmentHistoryProvider_BulkInsert(EmployeeDepartmentHistory[] entityList) {
            this.Invoke("EmployeeDepartmentHistoryProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void EmployeeDepartmentHistoryProvider_BulkInsertAsync(EmployeeDepartmentHistory[] entityList) {
            this.EmployeeDepartmentHistoryProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void EmployeeDepartmentHistoryProvider_BulkInsertAsync(EmployeeDepartmentHistory[] entityList, object userState) {
            if ((this.EmployeeDepartmentHistoryProvider_BulkInsertOperationCompleted == null)) {
                this.EmployeeDepartmentHistoryProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeDepartmentHistoryProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("EmployeeDepartmentHistoryProvider_BulkInsert", new object[] {
                        entityList}, this.EmployeeDepartmentHistoryProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnEmployeeDepartmentHistoryProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.EmployeeDepartmentHistoryProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeDepartmentHistoryProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeDepartmentHistoryProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmployeeDepartmentHistory EmployeeDepartmentHistoryProvider_Update(EmployeeDepartmentHistory entity) {
            object[] results = this.Invoke("EmployeeDepartmentHistoryProvider_Update", new object[] {
                        entity});
            return ((EmployeeDepartmentHistory)(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeDepartmentHistoryProvider_UpdateAsync(EmployeeDepartmentHistory entity) {
            this.EmployeeDepartmentHistoryProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void EmployeeDepartmentHistoryProvider_UpdateAsync(EmployeeDepartmentHistory entity, object userState) {
            if ((this.EmployeeDepartmentHistoryProvider_UpdateOperationCompleted == null)) {
                this.EmployeeDepartmentHistoryProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeDepartmentHistoryProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("EmployeeDepartmentHistoryProvider_Update", new object[] {
                        entity}, this.EmployeeDepartmentHistoryProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnEmployeeDepartmentHistoryProvider_UpdateOperationCompleted(object arg) {
            if ((this.EmployeeDepartmentHistoryProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeDepartmentHistoryProvider_UpdateCompleted(this, new EmployeeDepartmentHistoryProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ContactTypeProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ContactTypeProvider_Delete(int _contactTypeId) {
            object[] results = this.Invoke("ContactTypeProvider_Delete", new object[] {
                        _contactTypeId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ContactTypeProvider_DeleteAsync(int _contactTypeId) {
            this.ContactTypeProvider_DeleteAsync(_contactTypeId, null);
        }
        
        /// <remarks/>
        public void ContactTypeProvider_DeleteAsync(int _contactTypeId, object userState) {
            if ((this.ContactTypeProvider_DeleteOperationCompleted == null)) {
                this.ContactTypeProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactTypeProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("ContactTypeProvider_Delete", new object[] {
                        _contactTypeId}, this.ContactTypeProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnContactTypeProvider_DeleteOperationCompleted(object arg) {
            if ((this.ContactTypeProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactTypeProvider_DeleteCompleted(this, new ContactTypeProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ContactTypeProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ContactType[] ContactTypeProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ContactTypeProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ContactType[])(results[0]));
        }
        
        /// <remarks/>
        public void ContactTypeProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.ContactTypeProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ContactTypeProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.ContactTypeProvider_FindOperationCompleted == null)) {
                this.ContactTypeProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactTypeProvider_FindOperationCompleted);
            }
            this.InvokeAsync("ContactTypeProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.ContactTypeProvider_FindOperationCompleted, userState);
        }
        
        private void OnContactTypeProvider_FindOperationCompleted(object arg) {
            if ((this.ContactTypeProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactTypeProvider_FindCompleted(this, new ContactTypeProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ContactTypeProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ContactType[] ContactTypeProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("ContactTypeProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ContactType[])(results[0]));
        }
        
        /// <remarks/>
        public void ContactTypeProvider_GetAllAsync(int start, int pageLength) {
            this.ContactTypeProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void ContactTypeProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.ContactTypeProvider_GetAllOperationCompleted == null)) {
                this.ContactTypeProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactTypeProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("ContactTypeProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.ContactTypeProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnContactTypeProvider_GetAllOperationCompleted(object arg) {
            if ((this.ContactTypeProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactTypeProvider_GetAllCompleted(this, new ContactTypeProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ContactTypeProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ContactType[] ContactTypeProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ContactTypeProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ContactType[])(results[0]));
        }
        
        /// <remarks/>
        public void ContactTypeProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.ContactTypeProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ContactTypeProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.ContactTypeProvider_GetPagedOperationCompleted == null)) {
                this.ContactTypeProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactTypeProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("ContactTypeProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.ContactTypeProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnContactTypeProvider_GetPagedOperationCompleted(object arg) {
            if ((this.ContactTypeProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactTypeProvider_GetPagedCompleted(this, new ContactTypeProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ContactTypeProvider_GetByName", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ContactType ContactTypeProvider_GetByName(string _name, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ContactTypeProvider_GetByName", new object[] {
                        _name,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ContactType)(results[0]));
        }
        
        /// <remarks/>
        public void ContactTypeProvider_GetByNameAsync(string _name, int start, int pageLength) {
            this.ContactTypeProvider_GetByNameAsync(_name, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ContactTypeProvider_GetByNameAsync(string _name, int start, int pageLength, object userState) {
            if ((this.ContactTypeProvider_GetByNameOperationCompleted == null)) {
                this.ContactTypeProvider_GetByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactTypeProvider_GetByNameOperationCompleted);
            }
            this.InvokeAsync("ContactTypeProvider_GetByName", new object[] {
                        _name,
                        start,
                        pageLength}, this.ContactTypeProvider_GetByNameOperationCompleted, userState);
        }
        
        private void OnContactTypeProvider_GetByNameOperationCompleted(object arg) {
            if ((this.ContactTypeProvider_GetByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactTypeProvider_GetByNameCompleted(this, new ContactTypeProvider_GetByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ContactTypeProvider_GetByContactTypeId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ContactType ContactTypeProvider_GetByContactTypeId(int _contactTypeId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ContactTypeProvider_GetByContactTypeId", new object[] {
                        _contactTypeId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ContactType)(results[0]));
        }
        
        /// <remarks/>
        public void ContactTypeProvider_GetByContactTypeIdAsync(int _contactTypeId, int start, int pageLength) {
            this.ContactTypeProvider_GetByContactTypeIdAsync(_contactTypeId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ContactTypeProvider_GetByContactTypeIdAsync(int _contactTypeId, int start, int pageLength, object userState) {
            if ((this.ContactTypeProvider_GetByContactTypeIdOperationCompleted == null)) {
                this.ContactTypeProvider_GetByContactTypeIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactTypeProvider_GetByContactTypeIdOperationCompleted);
            }
            this.InvokeAsync("ContactTypeProvider_GetByContactTypeId", new object[] {
                        _contactTypeId,
                        start,
                        pageLength}, this.ContactTypeProvider_GetByContactTypeIdOperationCompleted, userState);
        }
        
        private void OnContactTypeProvider_GetByContactTypeIdOperationCompleted(object arg) {
            if ((this.ContactTypeProvider_GetByContactTypeIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactTypeProvider_GetByContactTypeIdCompleted(this, new ContactTypeProvider_GetByContactTypeIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ContactTypeProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ContactType ContactTypeProvider_Insert(ContactType entity) {
            object[] results = this.Invoke("ContactTypeProvider_Insert", new object[] {
                        entity});
            return ((ContactType)(results[0]));
        }
        
        /// <remarks/>
        public void ContactTypeProvider_InsertAsync(ContactType entity) {
            this.ContactTypeProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void ContactTypeProvider_InsertAsync(ContactType entity, object userState) {
            if ((this.ContactTypeProvider_InsertOperationCompleted == null)) {
                this.ContactTypeProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactTypeProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("ContactTypeProvider_Insert", new object[] {
                        entity}, this.ContactTypeProvider_InsertOperationCompleted, userState);
        }
        
        private void OnContactTypeProvider_InsertOperationCompleted(object arg) {
            if ((this.ContactTypeProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactTypeProvider_InsertCompleted(this, new ContactTypeProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ContactTypeProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ContactTypeProvider_BulkInsert(ContactType[] entityList) {
            this.Invoke("ContactTypeProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void ContactTypeProvider_BulkInsertAsync(ContactType[] entityList) {
            this.ContactTypeProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void ContactTypeProvider_BulkInsertAsync(ContactType[] entityList, object userState) {
            if ((this.ContactTypeProvider_BulkInsertOperationCompleted == null)) {
                this.ContactTypeProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactTypeProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("ContactTypeProvider_BulkInsert", new object[] {
                        entityList}, this.ContactTypeProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnContactTypeProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.ContactTypeProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactTypeProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ContactTypeProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ContactType ContactTypeProvider_Update(ContactType entity) {
            object[] results = this.Invoke("ContactTypeProvider_Update", new object[] {
                        entity});
            return ((ContactType)(results[0]));
        }
        
        /// <remarks/>
        public void ContactTypeProvider_UpdateAsync(ContactType entity) {
            this.ContactTypeProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void ContactTypeProvider_UpdateAsync(ContactType entity, object userState) {
            if ((this.ContactTypeProvider_UpdateOperationCompleted == null)) {
                this.ContactTypeProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContactTypeProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("ContactTypeProvider_Update", new object[] {
                        entity}, this.ContactTypeProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnContactTypeProvider_UpdateOperationCompleted(object arg) {
            if ((this.ContactTypeProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContactTypeProvider_UpdateCompleted(this, new ContactTypeProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ErrorLogProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ErrorLogProvider_Delete(int _errorLogId) {
            object[] results = this.Invoke("ErrorLogProvider_Delete", new object[] {
                        _errorLogId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ErrorLogProvider_DeleteAsync(int _errorLogId) {
            this.ErrorLogProvider_DeleteAsync(_errorLogId, null);
        }
        
        /// <remarks/>
        public void ErrorLogProvider_DeleteAsync(int _errorLogId, object userState) {
            if ((this.ErrorLogProvider_DeleteOperationCompleted == null)) {
                this.ErrorLogProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnErrorLogProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("ErrorLogProvider_Delete", new object[] {
                        _errorLogId}, this.ErrorLogProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnErrorLogProvider_DeleteOperationCompleted(object arg) {
            if ((this.ErrorLogProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ErrorLogProvider_DeleteCompleted(this, new ErrorLogProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ErrorLogProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ErrorLog[] ErrorLogProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ErrorLogProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ErrorLog[])(results[0]));
        }
        
        /// <remarks/>
        public void ErrorLogProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.ErrorLogProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ErrorLogProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.ErrorLogProvider_FindOperationCompleted == null)) {
                this.ErrorLogProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnErrorLogProvider_FindOperationCompleted);
            }
            this.InvokeAsync("ErrorLogProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.ErrorLogProvider_FindOperationCompleted, userState);
        }
        
        private void OnErrorLogProvider_FindOperationCompleted(object arg) {
            if ((this.ErrorLogProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ErrorLogProvider_FindCompleted(this, new ErrorLogProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ErrorLogProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ErrorLog[] ErrorLogProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("ErrorLogProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ErrorLog[])(results[0]));
        }
        
        /// <remarks/>
        public void ErrorLogProvider_GetAllAsync(int start, int pageLength) {
            this.ErrorLogProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void ErrorLogProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.ErrorLogProvider_GetAllOperationCompleted == null)) {
                this.ErrorLogProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnErrorLogProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("ErrorLogProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.ErrorLogProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnErrorLogProvider_GetAllOperationCompleted(object arg) {
            if ((this.ErrorLogProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ErrorLogProvider_GetAllCompleted(this, new ErrorLogProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ErrorLogProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ErrorLog[] ErrorLogProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ErrorLogProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ErrorLog[])(results[0]));
        }
        
        /// <remarks/>
        public void ErrorLogProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.ErrorLogProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ErrorLogProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.ErrorLogProvider_GetPagedOperationCompleted == null)) {
                this.ErrorLogProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnErrorLogProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("ErrorLogProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.ErrorLogProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnErrorLogProvider_GetPagedOperationCompleted(object arg) {
            if ((this.ErrorLogProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ErrorLogProvider_GetPagedCompleted(this, new ErrorLogProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ErrorLogProvider_GetByErrorLogId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ErrorLog ErrorLogProvider_GetByErrorLogId(int _errorLogId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("ErrorLogProvider_GetByErrorLogId", new object[] {
                        _errorLogId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((ErrorLog)(results[0]));
        }
        
        /// <remarks/>
        public void ErrorLogProvider_GetByErrorLogIdAsync(int _errorLogId, int start, int pageLength) {
            this.ErrorLogProvider_GetByErrorLogIdAsync(_errorLogId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void ErrorLogProvider_GetByErrorLogIdAsync(int _errorLogId, int start, int pageLength, object userState) {
            if ((this.ErrorLogProvider_GetByErrorLogIdOperationCompleted == null)) {
                this.ErrorLogProvider_GetByErrorLogIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnErrorLogProvider_GetByErrorLogIdOperationCompleted);
            }
            this.InvokeAsync("ErrorLogProvider_GetByErrorLogId", new object[] {
                        _errorLogId,
                        start,
                        pageLength}, this.ErrorLogProvider_GetByErrorLogIdOperationCompleted, userState);
        }
        
        private void OnErrorLogProvider_GetByErrorLogIdOperationCompleted(object arg) {
            if ((this.ErrorLogProvider_GetByErrorLogIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ErrorLogProvider_GetByErrorLogIdCompleted(this, new ErrorLogProvider_GetByErrorLogIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ErrorLogProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ErrorLog ErrorLogProvider_Insert(ErrorLog entity) {
            object[] results = this.Invoke("ErrorLogProvider_Insert", new object[] {
                        entity});
            return ((ErrorLog)(results[0]));
        }
        
        /// <remarks/>
        public void ErrorLogProvider_InsertAsync(ErrorLog entity) {
            this.ErrorLogProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void ErrorLogProvider_InsertAsync(ErrorLog entity, object userState) {
            if ((this.ErrorLogProvider_InsertOperationCompleted == null)) {
                this.ErrorLogProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnErrorLogProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("ErrorLogProvider_Insert", new object[] {
                        entity}, this.ErrorLogProvider_InsertOperationCompleted, userState);
        }
        
        private void OnErrorLogProvider_InsertOperationCompleted(object arg) {
            if ((this.ErrorLogProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ErrorLogProvider_InsertCompleted(this, new ErrorLogProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ErrorLogProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ErrorLogProvider_BulkInsert(ErrorLog[] entityList) {
            this.Invoke("ErrorLogProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void ErrorLogProvider_BulkInsertAsync(ErrorLog[] entityList) {
            this.ErrorLogProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void ErrorLogProvider_BulkInsertAsync(ErrorLog[] entityList, object userState) {
            if ((this.ErrorLogProvider_BulkInsertOperationCompleted == null)) {
                this.ErrorLogProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnErrorLogProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("ErrorLogProvider_BulkInsert", new object[] {
                        entityList}, this.ErrorLogProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnErrorLogProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.ErrorLogProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ErrorLogProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/ErrorLogProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ErrorLog ErrorLogProvider_Update(ErrorLog entity) {
            object[] results = this.Invoke("ErrorLogProvider_Update", new object[] {
                        entity});
            return ((ErrorLog)(results[0]));
        }
        
        /// <remarks/>
        public void ErrorLogProvider_UpdateAsync(ErrorLog entity) {
            this.ErrorLogProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void ErrorLogProvider_UpdateAsync(ErrorLog entity, object userState) {
            if ((this.ErrorLogProvider_UpdateOperationCompleted == null)) {
                this.ErrorLogProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnErrorLogProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("ErrorLogProvider_Update", new object[] {
                        entity}, this.ErrorLogProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnErrorLogProvider_UpdateOperationCompleted(object arg) {
            if ((this.ErrorLogProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ErrorLogProvider_UpdateCompleted(this, new ErrorLogProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeProvider_GetByAddressIdFromEmploy" +
            "eeAddress", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Employee[] EmployeeProvider_GetByAddressIdFromEmployeeAddress(int _addressId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("EmployeeProvider_GetByAddressIdFromEmployeeAddress", new object[] {
                        _addressId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Employee[])(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeProvider_GetByAddressIdFromEmployeeAddressAsync(int _addressId, int start, int pageLength) {
            this.EmployeeProvider_GetByAddressIdFromEmployeeAddressAsync(_addressId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void EmployeeProvider_GetByAddressIdFromEmployeeAddressAsync(int _addressId, int start, int pageLength, object userState) {
            if ((this.EmployeeProvider_GetByAddressIdFromEmployeeAddressOperationCompleted == null)) {
                this.EmployeeProvider_GetByAddressIdFromEmployeeAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeProvider_GetByAddressIdFromEmployeeAddressOperationCompleted);
            }
            this.InvokeAsync("EmployeeProvider_GetByAddressIdFromEmployeeAddress", new object[] {
                        _addressId,
                        start,
                        pageLength}, this.EmployeeProvider_GetByAddressIdFromEmployeeAddressOperationCompleted, userState);
        }
        
        private void OnEmployeeProvider_GetByAddressIdFromEmployeeAddressOperationCompleted(object arg) {
            if ((this.EmployeeProvider_GetByAddressIdFromEmployeeAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeProvider_GetByAddressIdFromEmployeeAddressCompleted(this, new EmployeeProvider_GetByAddressIdFromEmployeeAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeProvider_Delete", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EmployeeProvider_Delete(int _employeeId) {
            object[] results = this.Invoke("EmployeeProvider_Delete", new object[] {
                        _employeeId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeProvider_DeleteAsync(int _employeeId) {
            this.EmployeeProvider_DeleteAsync(_employeeId, null);
        }
        
        /// <remarks/>
        public void EmployeeProvider_DeleteAsync(int _employeeId, object userState) {
            if ((this.EmployeeProvider_DeleteOperationCompleted == null)) {
                this.EmployeeProvider_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeProvider_DeleteOperationCompleted);
            }
            this.InvokeAsync("EmployeeProvider_Delete", new object[] {
                        _employeeId}, this.EmployeeProvider_DeleteOperationCompleted, userState);
        }
        
        private void OnEmployeeProvider_DeleteOperationCompleted(object arg) {
            if ((this.EmployeeProvider_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeProvider_DeleteCompleted(this, new EmployeeProvider_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeProvider_Find", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Employee[] EmployeeProvider_Find(string whereClause, int start, int pageLength, out int count) {
            object[] results = this.Invoke("EmployeeProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Employee[])(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeProvider_FindAsync(string whereClause, int start, int pageLength) {
            this.EmployeeProvider_FindAsync(whereClause, start, pageLength, null);
        }
        
        /// <remarks/>
        public void EmployeeProvider_FindAsync(string whereClause, int start, int pageLength, object userState) {
            if ((this.EmployeeProvider_FindOperationCompleted == null)) {
                this.EmployeeProvider_FindOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeProvider_FindOperationCompleted);
            }
            this.InvokeAsync("EmployeeProvider_Find", new object[] {
                        whereClause,
                        start,
                        pageLength}, this.EmployeeProvider_FindOperationCompleted, userState);
        }
        
        private void OnEmployeeProvider_FindOperationCompleted(object arg) {
            if ((this.EmployeeProvider_FindCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeProvider_FindCompleted(this, new EmployeeProvider_FindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeProvider_GetAll", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Employee[] EmployeeProvider_GetAll(int start, int pageLength, out int count) {
            object[] results = this.Invoke("EmployeeProvider_GetAll", new object[] {
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Employee[])(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeProvider_GetAllAsync(int start, int pageLength) {
            this.EmployeeProvider_GetAllAsync(start, pageLength, null);
        }
        
        /// <remarks/>
        public void EmployeeProvider_GetAllAsync(int start, int pageLength, object userState) {
            if ((this.EmployeeProvider_GetAllOperationCompleted == null)) {
                this.EmployeeProvider_GetAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeProvider_GetAllOperationCompleted);
            }
            this.InvokeAsync("EmployeeProvider_GetAll", new object[] {
                        start,
                        pageLength}, this.EmployeeProvider_GetAllOperationCompleted, userState);
        }
        
        private void OnEmployeeProvider_GetAllOperationCompleted(object arg) {
            if ((this.EmployeeProvider_GetAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeProvider_GetAllCompleted(this, new EmployeeProvider_GetAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeProvider_GetPaged", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Employee[] EmployeeProvider_GetPaged(string whereClause, string orderBy, int start, int pageLength, out int count) {
            object[] results = this.Invoke("EmployeeProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Employee[])(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength) {
            this.EmployeeProvider_GetPagedAsync(whereClause, orderBy, start, pageLength, null);
        }
        
        /// <remarks/>
        public void EmployeeProvider_GetPagedAsync(string whereClause, string orderBy, int start, int pageLength, object userState) {
            if ((this.EmployeeProvider_GetPagedOperationCompleted == null)) {
                this.EmployeeProvider_GetPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeProvider_GetPagedOperationCompleted);
            }
            this.InvokeAsync("EmployeeProvider_GetPaged", new object[] {
                        whereClause,
                        orderBy,
                        start,
                        pageLength}, this.EmployeeProvider_GetPagedOperationCompleted, userState);
        }
        
        private void OnEmployeeProvider_GetPagedOperationCompleted(object arg) {
            if ((this.EmployeeProvider_GetPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeProvider_GetPagedCompleted(this, new EmployeeProvider_GetPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeProvider_GetByContactId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Employee[] EmployeeProvider_GetByContactId(int _contactId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("EmployeeProvider_GetByContactId", new object[] {
                        _contactId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Employee[])(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeProvider_GetByContactIdAsync(int _contactId, int start, int pageLength) {
            this.EmployeeProvider_GetByContactIdAsync(_contactId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void EmployeeProvider_GetByContactIdAsync(int _contactId, int start, int pageLength, object userState) {
            if ((this.EmployeeProvider_GetByContactIdOperationCompleted == null)) {
                this.EmployeeProvider_GetByContactIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeProvider_GetByContactIdOperationCompleted);
            }
            this.InvokeAsync("EmployeeProvider_GetByContactId", new object[] {
                        _contactId,
                        start,
                        pageLength}, this.EmployeeProvider_GetByContactIdOperationCompleted, userState);
        }
        
        private void OnEmployeeProvider_GetByContactIdOperationCompleted(object arg) {
            if ((this.EmployeeProvider_GetByContactIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeProvider_GetByContactIdCompleted(this, new EmployeeProvider_GetByContactIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeProvider_GetByLoginId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Employee EmployeeProvider_GetByLoginId(string _loginId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("EmployeeProvider_GetByLoginId", new object[] {
                        _loginId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Employee)(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeProvider_GetByLoginIdAsync(string _loginId, int start, int pageLength) {
            this.EmployeeProvider_GetByLoginIdAsync(_loginId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void EmployeeProvider_GetByLoginIdAsync(string _loginId, int start, int pageLength, object userState) {
            if ((this.EmployeeProvider_GetByLoginIdOperationCompleted == null)) {
                this.EmployeeProvider_GetByLoginIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeProvider_GetByLoginIdOperationCompleted);
            }
            this.InvokeAsync("EmployeeProvider_GetByLoginId", new object[] {
                        _loginId,
                        start,
                        pageLength}, this.EmployeeProvider_GetByLoginIdOperationCompleted, userState);
        }
        
        private void OnEmployeeProvider_GetByLoginIdOperationCompleted(object arg) {
            if ((this.EmployeeProvider_GetByLoginIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeProvider_GetByLoginIdCompleted(this, new EmployeeProvider_GetByLoginIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeProvider_GetByNationalIdNumber", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Employee EmployeeProvider_GetByNationalIdNumber(string _nationalIdNumber, int start, int pageLength, out int count) {
            object[] results = this.Invoke("EmployeeProvider_GetByNationalIdNumber", new object[] {
                        _nationalIdNumber,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Employee)(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeProvider_GetByNationalIdNumberAsync(string _nationalIdNumber, int start, int pageLength) {
            this.EmployeeProvider_GetByNationalIdNumberAsync(_nationalIdNumber, start, pageLength, null);
        }
        
        /// <remarks/>
        public void EmployeeProvider_GetByNationalIdNumberAsync(string _nationalIdNumber, int start, int pageLength, object userState) {
            if ((this.EmployeeProvider_GetByNationalIdNumberOperationCompleted == null)) {
                this.EmployeeProvider_GetByNationalIdNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeProvider_GetByNationalIdNumberOperationCompleted);
            }
            this.InvokeAsync("EmployeeProvider_GetByNationalIdNumber", new object[] {
                        _nationalIdNumber,
                        start,
                        pageLength}, this.EmployeeProvider_GetByNationalIdNumberOperationCompleted, userState);
        }
        
        private void OnEmployeeProvider_GetByNationalIdNumberOperationCompleted(object arg) {
            if ((this.EmployeeProvider_GetByNationalIdNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeProvider_GetByNationalIdNumberCompleted(this, new EmployeeProvider_GetByNationalIdNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeProvider_GetByRowguid", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Employee EmployeeProvider_GetByRowguid(System.Guid _rowguid, int start, int pageLength, out int count) {
            object[] results = this.Invoke("EmployeeProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Employee)(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength) {
            this.EmployeeProvider_GetByRowguidAsync(_rowguid, start, pageLength, null);
        }
        
        /// <remarks/>
        public void EmployeeProvider_GetByRowguidAsync(System.Guid _rowguid, int start, int pageLength, object userState) {
            if ((this.EmployeeProvider_GetByRowguidOperationCompleted == null)) {
                this.EmployeeProvider_GetByRowguidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeProvider_GetByRowguidOperationCompleted);
            }
            this.InvokeAsync("EmployeeProvider_GetByRowguid", new object[] {
                        _rowguid,
                        start,
                        pageLength}, this.EmployeeProvider_GetByRowguidOperationCompleted, userState);
        }
        
        private void OnEmployeeProvider_GetByRowguidOperationCompleted(object arg) {
            if ((this.EmployeeProvider_GetByRowguidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeProvider_GetByRowguidCompleted(this, new EmployeeProvider_GetByRowguidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeProvider_GetByManagerId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Employee[] EmployeeProvider_GetByManagerId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> _managerId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("EmployeeProvider_GetByManagerId", new object[] {
                        _managerId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Employee[])(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeProvider_GetByManagerIdAsync(System.Nullable<int> _managerId, int start, int pageLength) {
            this.EmployeeProvider_GetByManagerIdAsync(_managerId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void EmployeeProvider_GetByManagerIdAsync(System.Nullable<int> _managerId, int start, int pageLength, object userState) {
            if ((this.EmployeeProvider_GetByManagerIdOperationCompleted == null)) {
                this.EmployeeProvider_GetByManagerIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeProvider_GetByManagerIdOperationCompleted);
            }
            this.InvokeAsync("EmployeeProvider_GetByManagerId", new object[] {
                        _managerId,
                        start,
                        pageLength}, this.EmployeeProvider_GetByManagerIdOperationCompleted, userState);
        }
        
        private void OnEmployeeProvider_GetByManagerIdOperationCompleted(object arg) {
            if ((this.EmployeeProvider_GetByManagerIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeProvider_GetByManagerIdCompleted(this, new EmployeeProvider_GetByManagerIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeProvider_GetByEmployeeId", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Employee EmployeeProvider_GetByEmployeeId(int _employeeId, int start, int pageLength, out int count) {
            object[] results = this.Invoke("EmployeeProvider_GetByEmployeeId", new object[] {
                        _employeeId,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((Employee)(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeProvider_GetByEmployeeIdAsync(int _employeeId, int start, int pageLength) {
            this.EmployeeProvider_GetByEmployeeIdAsync(_employeeId, start, pageLength, null);
        }
        
        /// <remarks/>
        public void EmployeeProvider_GetByEmployeeIdAsync(int _employeeId, int start, int pageLength, object userState) {
            if ((this.EmployeeProvider_GetByEmployeeIdOperationCompleted == null)) {
                this.EmployeeProvider_GetByEmployeeIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeProvider_GetByEmployeeIdOperationCompleted);
            }
            this.InvokeAsync("EmployeeProvider_GetByEmployeeId", new object[] {
                        _employeeId,
                        start,
                        pageLength}, this.EmployeeProvider_GetByEmployeeIdOperationCompleted, userState);
        }
        
        private void OnEmployeeProvider_GetByEmployeeIdOperationCompleted(object arg) {
            if ((this.EmployeeProvider_GetByEmployeeIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeProvider_GetByEmployeeIdCompleted(this, new EmployeeProvider_GetByEmployeeIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeProvider_Insert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Employee EmployeeProvider_Insert(Employee entity) {
            object[] results = this.Invoke("EmployeeProvider_Insert", new object[] {
                        entity});
            return ((Employee)(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeProvider_InsertAsync(Employee entity) {
            this.EmployeeProvider_InsertAsync(entity, null);
        }
        
        /// <remarks/>
        public void EmployeeProvider_InsertAsync(Employee entity, object userState) {
            if ((this.EmployeeProvider_InsertOperationCompleted == null)) {
                this.EmployeeProvider_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeProvider_InsertOperationCompleted);
            }
            this.InvokeAsync("EmployeeProvider_Insert", new object[] {
                        entity}, this.EmployeeProvider_InsertOperationCompleted, userState);
        }
        
        private void OnEmployeeProvider_InsertOperationCompleted(object arg) {
            if ((this.EmployeeProvider_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeProvider_InsertCompleted(this, new EmployeeProvider_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeProvider_BulkInsert", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EmployeeProvider_BulkInsert(Employee[] entityList) {
            this.Invoke("EmployeeProvider_BulkInsert", new object[] {
                        entityList});
        }
        
        /// <remarks/>
        public void EmployeeProvider_BulkInsertAsync(Employee[] entityList) {
            this.EmployeeProvider_BulkInsertAsync(entityList, null);
        }
        
        /// <remarks/>
        public void EmployeeProvider_BulkInsertAsync(Employee[] entityList, object userState) {
            if ((this.EmployeeProvider_BulkInsertOperationCompleted == null)) {
                this.EmployeeProvider_BulkInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeProvider_BulkInsertOperationCompleted);
            }
            this.InvokeAsync("EmployeeProvider_BulkInsert", new object[] {
                        entityList}, this.EmployeeProvider_BulkInsertOperationCompleted, userState);
        }
        
        private void OnEmployeeProvider_BulkInsertOperationCompleted(object arg) {
            if ((this.EmployeeProvider_BulkInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeProvider_BulkInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/EmployeeProvider_Update", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Employee EmployeeProvider_Update(Employee entity) {
            object[] results = this.Invoke("EmployeeProvider_Update", new object[] {
                        entity});
            return ((Employee)(results[0]));
        }
        
        /// <remarks/>
        public void EmployeeProvider_UpdateAsync(Employee entity) {
            this.EmployeeProvider_UpdateAsync(entity, null);
        }
        
        /// <remarks/>
        public void EmployeeProvider_UpdateAsync(Employee entity, object userState) {
            if ((this.EmployeeProvider_UpdateOperationCompleted == null)) {
                this.EmployeeProvider_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployeeProvider_UpdateOperationCompleted);
            }
            this.InvokeAsync("EmployeeProvider_Update", new object[] {
                        entity}, this.EmployeeProvider_UpdateOperationCompleted, userState);
        }
        
        private void OnEmployeeProvider_UpdateOperationCompleted(object arg) {
            if ((this.EmployeeProvider_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmployeeProvider_UpdateCompleted(this, new EmployeeProvider_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/AdventureWorksServices/CountryRegionProvider_GetByCurrencyCodeFr" +
            "omCountryRegionCurrency", RequestNamespace="http://localhost/AdventureWorksServices", ResponseNamespace="http://localhost/AdventureWorksServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CountryRegion[] CountryRegionProvider_GetByCurrencyCodeFromCountryRegionCurrency(string _currencyCode, int start, int pageLength, out int count) {
            object[] results = this.Invoke("CountryRegionProvider_GetByCurrencyCodeFromCountryRegionCurrency", new object[] {
                        _currencyCode,
                        start,
                        pageLength});
            count = ((int)(results[1]));
            return ((CountryRegion[])(results[0]));
        }
        
        /// <remarks/>
        public void CountryRegionProvider_GetByCurrencyCodeFromCountryRegionCurrencyAsync(string _currencyCode, int start, int pageLength) {
            this.CountryRegionProvider_GetByCurrencyCodeFromCountryRegionCurrencyAsync(_currencyCode, start, pageLength, null);
        }
        
        /// <remarks/>
        public void CountryRegionProvider_GetByCurrencyCodeFromCountryRegionCurrencyAsync(string _currencyCode, int start, int pageLength, object userState) {
            if ((this.CountryRegionProvider_GetByCurrencyCodeFromCountryRegionCurrencyOperationCompleted == null)) {
                this.CountryRegionProvider_GetByCurrencyCodeFromCountryRegionCurrencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountryRegionProvider_GetByCurrencyCodeFromCountryRegionCurrencyOperationCompleted);
            }
            this.InvokeAsync("CountryRegionProvider_GetByCurrencyCodeFromCountryRegionCurrency", new object[] {
                        _currencyCode,
                        start,
                        pageLength}, this.CountryRegionProvider_GetByCurrencyCodeFromCountryRegionCurrencyOperationCompleted, userState);
        }
        
        private void OnCountryRegionProvider_GetByCurrencyCodeFromCountryRegionCurrencyOperationCompleted(object arg) {
            if ((this.CountryRegionProvider_GetByCurrencyCodeFromCountryRegionCurrencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountryRegionProvider_GetByCurrencyCodeFromCountryRegionCurrencyCompleted(this, new CountryRegionProvider_GetByCurrencyCodeFromCountryRegionCurrencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class NullFkeyChild : NullFkeyChildBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NullFkeyChild))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class NullFkeyChildBase : EntityBase {
        
        private int nullFkeyChildIdField;
        
        private int originalNullFkeyChildIdField;
        
        private System.Nullable<int> nullFkeyParentIdField;
        
        private string someTextField;
        
        /// <remarks/>
        public int NullFkeyChildId {
            get {
                return this.nullFkeyChildIdField;
            }
            set {
                this.nullFkeyChildIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalNullFkeyChildId {
            get {
                return this.originalNullFkeyChildIdField;
            }
            set {
                this.originalNullFkeyChildIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> NullFkeyParentId {
            get {
                return this.nullFkeyParentIdField;
            }
            set {
                this.nullFkeyParentIdField = value;
            }
        }
        
        /// <remarks/>
        public string SomeText {
            get {
                return this.someTextField;
            }
            set {
                this.someTextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ErrorLogBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ErrorLog))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContactTypeBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContactType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DepartmentBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Department))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DatabaseLogBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DatabaseLog))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AwBuildVersionBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AwBuildVersion))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ShiftBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Shift))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ShipMethodBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ShipMethod))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesTerritoryBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesTerritory))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TimestampPkBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TimestampPk))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CurrencyRateBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CurrencyRate))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CountryRegionBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CountryRegion))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CurrencyBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Currency))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StateProvinceBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StateProvince))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddressTypeBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddressType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransactionHistoryArchiveBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransactionHistoryArchive))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ScrapReasonBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ScrapReason))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CountryRegionCurrencyBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CountryRegionCurrency))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductCategoryBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductCategory))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductSubcategoryBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductSubcategory))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NullFkeyParentBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NullFkeyParent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TestVariantBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TestVariant))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesTaxRateBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesTaxRate))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UnitMeasureBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UnitMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductCostHistoryBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductCostHistory))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ShoppingCartItemBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ShoppingCartItem))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SpecialOfferBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SpecialOffer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductListPriceHistoryBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductListPriceHistory))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LocationBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Location))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WorkOrderRoutingBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WorkOrderRouting))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WorkOrderBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WorkOrder))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CreditCardBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CreditCard))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VendorContactBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VendorContact))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContactCreditCardBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContactCreditCard))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IndividualBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Individual))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmployeeDepartmentHistoryBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmployeeDepartmentHistory))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PurchaseOrderDetailBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PurchaseOrderDetail))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PurchaseOrderHeaderBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PurchaseOrderHeader))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmployeePayHistoryBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmployeePayHistory))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmployeeAddressBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmployeeAddress))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesTerritoryHistoryBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesTerritoryHistory))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesReasonBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesReason))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesOrderHeaderSalesReasonBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesOrderHeaderSalesReason))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesOrderHeaderBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesOrderHeader))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesPersonQuotaHistoryBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesPersonQuotaHistory))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesPersonBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesPerson))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(JobCandidateBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(JobCandidate))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmployeeBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Employee))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContactBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Contact))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StoreContactBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StoreContact))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StoreBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Store))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CustomerBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Customer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CustomerAddressBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CustomerAddress))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddressBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Address))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VendorAddressBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VendorAddress))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VendorBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Vendor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductReviewBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductReview))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductInventoryBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductInventory))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductPhotoBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductPhoto))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesOrderDetailBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesOrderDetail))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SpecialOfferProductBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SpecialOfferProduct))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductDocumentBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductDocument))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DocumentBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Document))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BillOfMaterialsBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BillOfMaterials))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductVendorBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductVendor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransactionHistoryBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransactionHistory))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductProductPhotoBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductProductPhoto))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Product))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductModelIllustrationBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductModelIllustration))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IllustrationBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Illustration))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductDescriptionBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductDescription))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CultureBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Culture))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductModelBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductModelProductDescriptionCultureBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductModelProductDescriptionCulture))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NullFkeyChildBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NullFkeyChild))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class EntityBase : EntityBaseCore {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ErrorLogBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ErrorLog))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContactTypeBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContactType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DepartmentBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Department))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DatabaseLogBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DatabaseLog))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AwBuildVersionBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AwBuildVersion))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ShiftBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Shift))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ShipMethodBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ShipMethod))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesTerritoryBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesTerritory))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TimestampPkBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TimestampPk))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CurrencyRateBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CurrencyRate))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CountryRegionBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CountryRegion))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CurrencyBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Currency))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StateProvinceBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StateProvince))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddressTypeBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddressType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransactionHistoryArchiveBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransactionHistoryArchive))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ScrapReasonBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ScrapReason))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CountryRegionCurrencyBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CountryRegionCurrency))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductCategoryBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductCategory))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductSubcategoryBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductSubcategory))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NullFkeyParentBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NullFkeyParent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TestVariantBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TestVariant))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesTaxRateBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesTaxRate))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UnitMeasureBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UnitMeasure))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductCostHistoryBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductCostHistory))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ShoppingCartItemBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ShoppingCartItem))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SpecialOfferBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SpecialOffer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductListPriceHistoryBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductListPriceHistory))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LocationBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Location))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WorkOrderRoutingBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WorkOrderRouting))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WorkOrderBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WorkOrder))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CreditCardBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CreditCard))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VendorContactBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VendorContact))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContactCreditCardBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContactCreditCard))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IndividualBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Individual))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmployeeDepartmentHistoryBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmployeeDepartmentHistory))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PurchaseOrderDetailBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PurchaseOrderDetail))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PurchaseOrderHeaderBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PurchaseOrderHeader))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmployeePayHistoryBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmployeePayHistory))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmployeeAddressBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmployeeAddress))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesTerritoryHistoryBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesTerritoryHistory))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesReasonBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesReason))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesOrderHeaderSalesReasonBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesOrderHeaderSalesReason))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesOrderHeaderBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesOrderHeader))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesPersonQuotaHistoryBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesPersonQuotaHistory))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesPersonBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesPerson))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(JobCandidateBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(JobCandidate))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmployeeBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Employee))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContactBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Contact))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StoreContactBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StoreContact))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StoreBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Store))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CustomerBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Customer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CustomerAddressBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CustomerAddress))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddressBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Address))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VendorAddressBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VendorAddress))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VendorBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Vendor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductReviewBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductReview))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductInventoryBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductInventory))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductPhotoBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductPhoto))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesOrderDetailBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesOrderDetail))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SpecialOfferProductBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SpecialOfferProduct))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductDocumentBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductDocument))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DocumentBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Document))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BillOfMaterialsBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BillOfMaterials))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductVendorBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductVendor))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransactionHistoryBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransactionHistory))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductProductPhotoBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductProductPhoto))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Product))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductModelIllustrationBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductModelIllustration))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IllustrationBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Illustration))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductDescriptionBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductDescription))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CultureBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Culture))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductModelBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductModel))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductModelProductDescriptionCultureBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductModelProductDescriptionCulture))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NullFkeyChildBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NullFkeyChild))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class EntityBaseCore {
        
        private object tagField;
        
        /// <remarks/>
        public object Tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VVendor))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class VVendorBase {
        
        private int vendorIdField;
        
        private string nameField;
        
        private string contactTypeField;
        
        private string titleField;
        
        private string firstNameField;
        
        private string middleNameField;
        
        private string lastNameField;
        
        private string suffixField;
        
        private string phoneField;
        
        private string emailAddressField;
        
        private int emailPromotionField;
        
        private string addressLine1Field;
        
        private string addressLine2Field;
        
        private string cityField;
        
        private string stateProvinceNameField;
        
        private string postalCodeField;
        
        private string countryRegionNameField;
        
        private object tagField;
        
        /// <remarks/>
        public int VendorId {
            get {
                return this.vendorIdField;
            }
            set {
                this.vendorIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string ContactType {
            get {
                return this.contactTypeField;
            }
            set {
                this.contactTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string MiddleName {
            get {
                return this.middleNameField;
            }
            set {
                this.middleNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Suffix {
            get {
                return this.suffixField;
            }
            set {
                this.suffixField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public int EmailPromotion {
            get {
                return this.emailPromotionField;
            }
            set {
                this.emailPromotionField = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine1 {
            get {
                return this.addressLine1Field;
            }
            set {
                this.addressLine1Field = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine2 {
            get {
                return this.addressLine2Field;
            }
            set {
                this.addressLine2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string StateProvinceName {
            get {
                return this.stateProvinceNameField;
            }
            set {
                this.stateProvinceNameField = value;
            }
        }
        
        /// <remarks/>
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CountryRegionName {
            get {
                return this.countryRegionNameField;
            }
            set {
                this.countryRegionNameField = value;
            }
        }
        
        /// <remarks/>
        public object Tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class VVendor : VVendorBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VStoreWithDemographics))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class VStoreWithDemographicsBase {
        
        private int customerIdField;
        
        private string nameField;
        
        private string contactTypeField;
        
        private string titleField;
        
        private string firstNameField;
        
        private string middleNameField;
        
        private string lastNameField;
        
        private string suffixField;
        
        private string phoneField;
        
        private string emailAddressField;
        
        private int emailPromotionField;
        
        private string addressTypeField;
        
        private string addressLine1Field;
        
        private string addressLine2Field;
        
        private string cityField;
        
        private string stateProvinceNameField;
        
        private string postalCodeField;
        
        private string countryRegionNameField;
        
        private System.Nullable<decimal> annualSalesField;
        
        private System.Nullable<decimal> annualRevenueField;
        
        private string bankNameField;
        
        private string businessTypeField;
        
        private System.Nullable<int> yearOpenedField;
        
        private string specialtyField;
        
        private System.Nullable<int> squareFeetField;
        
        private string brandsField;
        
        private string internetField;
        
        private System.Nullable<int> numberEmployeesField;
        
        private object tagField;
        
        /// <remarks/>
        public int CustomerId {
            get {
                return this.customerIdField;
            }
            set {
                this.customerIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string ContactType {
            get {
                return this.contactTypeField;
            }
            set {
                this.contactTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string MiddleName {
            get {
                return this.middleNameField;
            }
            set {
                this.middleNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Suffix {
            get {
                return this.suffixField;
            }
            set {
                this.suffixField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public int EmailPromotion {
            get {
                return this.emailPromotionField;
            }
            set {
                this.emailPromotionField = value;
            }
        }
        
        /// <remarks/>
        public string AddressType {
            get {
                return this.addressTypeField;
            }
            set {
                this.addressTypeField = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine1 {
            get {
                return this.addressLine1Field;
            }
            set {
                this.addressLine1Field = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine2 {
            get {
                return this.addressLine2Field;
            }
            set {
                this.addressLine2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string StateProvinceName {
            get {
                return this.stateProvinceNameField;
            }
            set {
                this.stateProvinceNameField = value;
            }
        }
        
        /// <remarks/>
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CountryRegionName {
            get {
                return this.countryRegionNameField;
            }
            set {
                this.countryRegionNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> AnnualSales {
            get {
                return this.annualSalesField;
            }
            set {
                this.annualSalesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> AnnualRevenue {
            get {
                return this.annualRevenueField;
            }
            set {
                this.annualRevenueField = value;
            }
        }
        
        /// <remarks/>
        public string BankName {
            get {
                return this.bankNameField;
            }
            set {
                this.bankNameField = value;
            }
        }
        
        /// <remarks/>
        public string BusinessType {
            get {
                return this.businessTypeField;
            }
            set {
                this.businessTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> YearOpened {
            get {
                return this.yearOpenedField;
            }
            set {
                this.yearOpenedField = value;
            }
        }
        
        /// <remarks/>
        public string Specialty {
            get {
                return this.specialtyField;
            }
            set {
                this.specialtyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> SquareFeet {
            get {
                return this.squareFeetField;
            }
            set {
                this.squareFeetField = value;
            }
        }
        
        /// <remarks/>
        public string Brands {
            get {
                return this.brandsField;
            }
            set {
                this.brandsField = value;
            }
        }
        
        /// <remarks/>
        public string Internet {
            get {
                return this.internetField;
            }
            set {
                this.internetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> NumberEmployees {
            get {
                return this.numberEmployeesField;
            }
            set {
                this.numberEmployeesField = value;
            }
        }
        
        /// <remarks/>
        public object Tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class VStoreWithDemographics : VStoreWithDemographicsBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VStateProvinceCountryRegion))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class VStateProvinceCountryRegionBase {
        
        private int stateProvinceIdField;
        
        private string stateProvinceCodeField;
        
        private bool isOnlyStateProvinceFlagField;
        
        private string stateProvinceNameField;
        
        private int territoryIdField;
        
        private string countryRegionCodeField;
        
        private string countryRegionNameField;
        
        private object tagField;
        
        /// <remarks/>
        public int StateProvinceId {
            get {
                return this.stateProvinceIdField;
            }
            set {
                this.stateProvinceIdField = value;
            }
        }
        
        /// <remarks/>
        public string StateProvinceCode {
            get {
                return this.stateProvinceCodeField;
            }
            set {
                this.stateProvinceCodeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsOnlyStateProvinceFlag {
            get {
                return this.isOnlyStateProvinceFlagField;
            }
            set {
                this.isOnlyStateProvinceFlagField = value;
            }
        }
        
        /// <remarks/>
        public string StateProvinceName {
            get {
                return this.stateProvinceNameField;
            }
            set {
                this.stateProvinceNameField = value;
            }
        }
        
        /// <remarks/>
        public int TerritoryId {
            get {
                return this.territoryIdField;
            }
            set {
                this.territoryIdField = value;
            }
        }
        
        /// <remarks/>
        public string CountryRegionCode {
            get {
                return this.countryRegionCodeField;
            }
            set {
                this.countryRegionCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CountryRegionName {
            get {
                return this.countryRegionNameField;
            }
            set {
                this.countryRegionNameField = value;
            }
        }
        
        /// <remarks/>
        public object Tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class VStateProvinceCountryRegion : VStateProvinceCountryRegionBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VSalesPersonSalesByFiscalYears))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class VSalesPersonSalesByFiscalYearsBase {
        
        private System.Nullable<int> salesPersonIdField;
        
        private string fullNameField;
        
        private string titleField;
        
        private string salesTerritoryField;
        
        private System.Nullable<decimal> safeName2002Field;
        
        private System.Nullable<decimal> safeName2003Field;
        
        private System.Nullable<decimal> safeName2004Field;
        
        private object tagField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> SalesPersonId {
            get {
                return this.salesPersonIdField;
            }
            set {
                this.salesPersonIdField = value;
            }
        }
        
        /// <remarks/>
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string SalesTerritory {
            get {
                return this.salesTerritoryField;
            }
            set {
                this.salesTerritoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> SafeName2002 {
            get {
                return this.safeName2002Field;
            }
            set {
                this.safeName2002Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> SafeName2003 {
            get {
                return this.safeName2003Field;
            }
            set {
                this.safeName2003Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> SafeName2004 {
            get {
                return this.safeName2004Field;
            }
            set {
                this.safeName2004Field = value;
            }
        }
        
        /// <remarks/>
        public object Tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class VSalesPersonSalesByFiscalYears : VSalesPersonSalesByFiscalYearsBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VSalesPerson))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class VSalesPersonBase {
        
        private int salesPersonIdField;
        
        private string titleField;
        
        private string firstNameField;
        
        private string middleNameField;
        
        private string lastNameField;
        
        private string suffixField;
        
        private string jobTitleField;
        
        private string phoneField;
        
        private string emailAddressField;
        
        private int emailPromotionField;
        
        private string addressLine1Field;
        
        private string addressLine2Field;
        
        private string cityField;
        
        private string stateProvinceNameField;
        
        private string postalCodeField;
        
        private string countryRegionNameField;
        
        private string territoryNameField;
        
        private string territoryGroupField;
        
        private System.Nullable<decimal> salesQuotaField;
        
        private decimal salesYtdField;
        
        private decimal salesLastYearField;
        
        private object tagField;
        
        /// <remarks/>
        public int SalesPersonId {
            get {
                return this.salesPersonIdField;
            }
            set {
                this.salesPersonIdField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string MiddleName {
            get {
                return this.middleNameField;
            }
            set {
                this.middleNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Suffix {
            get {
                return this.suffixField;
            }
            set {
                this.suffixField = value;
            }
        }
        
        /// <remarks/>
        public string JobTitle {
            get {
                return this.jobTitleField;
            }
            set {
                this.jobTitleField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public int EmailPromotion {
            get {
                return this.emailPromotionField;
            }
            set {
                this.emailPromotionField = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine1 {
            get {
                return this.addressLine1Field;
            }
            set {
                this.addressLine1Field = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine2 {
            get {
                return this.addressLine2Field;
            }
            set {
                this.addressLine2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string StateProvinceName {
            get {
                return this.stateProvinceNameField;
            }
            set {
                this.stateProvinceNameField = value;
            }
        }
        
        /// <remarks/>
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CountryRegionName {
            get {
                return this.countryRegionNameField;
            }
            set {
                this.countryRegionNameField = value;
            }
        }
        
        /// <remarks/>
        public string TerritoryName {
            get {
                return this.territoryNameField;
            }
            set {
                this.territoryNameField = value;
            }
        }
        
        /// <remarks/>
        public string TerritoryGroup {
            get {
                return this.territoryGroupField;
            }
            set {
                this.territoryGroupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> SalesQuota {
            get {
                return this.salesQuotaField;
            }
            set {
                this.salesQuotaField = value;
            }
        }
        
        /// <remarks/>
        public decimal SalesYtd {
            get {
                return this.salesYtdField;
            }
            set {
                this.salesYtdField = value;
            }
        }
        
        /// <remarks/>
        public decimal SalesLastYear {
            get {
                return this.salesLastYearField;
            }
            set {
                this.salesLastYearField = value;
            }
        }
        
        /// <remarks/>
        public object Tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class VSalesPerson : VSalesPersonBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VProductModelInstructions))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class VProductModelInstructionsBase {
        
        private int productModelIdField;
        
        private string nameField;
        
        private string instructionsField;
        
        private System.Nullable<int> locationIdField;
        
        private System.Nullable<decimal> setupHoursField;
        
        private System.Nullable<decimal> machineHoursField;
        
        private System.Nullable<decimal> laborHoursField;
        
        private System.Nullable<int> lotSizeField;
        
        private string stepField;
        
        private System.Guid rowguidField;
        
        private System.DateTime modifiedDateField;
        
        private object tagField;
        
        /// <remarks/>
        public int ProductModelId {
            get {
                return this.productModelIdField;
            }
            set {
                this.productModelIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Instructions {
            get {
                return this.instructionsField;
            }
            set {
                this.instructionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> LocationId {
            get {
                return this.locationIdField;
            }
            set {
                this.locationIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> SetupHours {
            get {
                return this.setupHoursField;
            }
            set {
                this.setupHoursField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> MachineHours {
            get {
                return this.machineHoursField;
            }
            set {
                this.machineHoursField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> LaborHours {
            get {
                return this.laborHoursField;
            }
            set {
                this.laborHoursField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> LotSize {
            get {
                return this.lotSizeField;
            }
            set {
                this.lotSizeField = value;
            }
        }
        
        /// <remarks/>
        public string Step {
            get {
                return this.stepField;
            }
            set {
                this.stepField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Rowguid {
            get {
                return this.rowguidField;
            }
            set {
                this.rowguidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public object Tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class VProductModelInstructions : VProductModelInstructionsBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VProductModelCatalogDescription))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class VProductModelCatalogDescriptionBase {
        
        private int productModelIdField;
        
        private string nameField;
        
        private string summaryField;
        
        private string manufacturerField;
        
        private string copyrightField;
        
        private string productUrlField;
        
        private string warrantyPeriodField;
        
        private string warrantyDescriptionField;
        
        private string noOfYearsField;
        
        private string maintenanceDescriptionField;
        
        private string wheelField;
        
        private string saddleField;
        
        private string pedalField;
        
        private string bikeFrameField;
        
        private string cranksetField;
        
        private string pictureAngleField;
        
        private string pictureSizeField;
        
        private string productPhotoIdField;
        
        private string materialField;
        
        private string colorField;
        
        private string productLineField;
        
        private string styleField;
        
        private string riderExperienceField;
        
        private System.Guid rowguidField;
        
        private System.DateTime modifiedDateField;
        
        private object tagField;
        
        /// <remarks/>
        public int ProductModelId {
            get {
                return this.productModelIdField;
            }
            set {
                this.productModelIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Summary {
            get {
                return this.summaryField;
            }
            set {
                this.summaryField = value;
            }
        }
        
        /// <remarks/>
        public string Manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string Copyright {
            get {
                return this.copyrightField;
            }
            set {
                this.copyrightField = value;
            }
        }
        
        /// <remarks/>
        public string ProductUrl {
            get {
                return this.productUrlField;
            }
            set {
                this.productUrlField = value;
            }
        }
        
        /// <remarks/>
        public string WarrantyPeriod {
            get {
                return this.warrantyPeriodField;
            }
            set {
                this.warrantyPeriodField = value;
            }
        }
        
        /// <remarks/>
        public string WarrantyDescription {
            get {
                return this.warrantyDescriptionField;
            }
            set {
                this.warrantyDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string NoOfYears {
            get {
                return this.noOfYearsField;
            }
            set {
                this.noOfYearsField = value;
            }
        }
        
        /// <remarks/>
        public string MaintenanceDescription {
            get {
                return this.maintenanceDescriptionField;
            }
            set {
                this.maintenanceDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Wheel {
            get {
                return this.wheelField;
            }
            set {
                this.wheelField = value;
            }
        }
        
        /// <remarks/>
        public string Saddle {
            get {
                return this.saddleField;
            }
            set {
                this.saddleField = value;
            }
        }
        
        /// <remarks/>
        public string Pedal {
            get {
                return this.pedalField;
            }
            set {
                this.pedalField = value;
            }
        }
        
        /// <remarks/>
        public string BikeFrame {
            get {
                return this.bikeFrameField;
            }
            set {
                this.bikeFrameField = value;
            }
        }
        
        /// <remarks/>
        public string Crankset {
            get {
                return this.cranksetField;
            }
            set {
                this.cranksetField = value;
            }
        }
        
        /// <remarks/>
        public string PictureAngle {
            get {
                return this.pictureAngleField;
            }
            set {
                this.pictureAngleField = value;
            }
        }
        
        /// <remarks/>
        public string PictureSize {
            get {
                return this.pictureSizeField;
            }
            set {
                this.pictureSizeField = value;
            }
        }
        
        /// <remarks/>
        public string ProductPhotoId {
            get {
                return this.productPhotoIdField;
            }
            set {
                this.productPhotoIdField = value;
            }
        }
        
        /// <remarks/>
        public string Material {
            get {
                return this.materialField;
            }
            set {
                this.materialField = value;
            }
        }
        
        /// <remarks/>
        public string Color {
            get {
                return this.colorField;
            }
            set {
                this.colorField = value;
            }
        }
        
        /// <remarks/>
        public string ProductLine {
            get {
                return this.productLineField;
            }
            set {
                this.productLineField = value;
            }
        }
        
        /// <remarks/>
        public string Style {
            get {
                return this.styleField;
            }
            set {
                this.styleField = value;
            }
        }
        
        /// <remarks/>
        public string RiderExperience {
            get {
                return this.riderExperienceField;
            }
            set {
                this.riderExperienceField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Rowguid {
            get {
                return this.rowguidField;
            }
            set {
                this.rowguidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public object Tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class VProductModelCatalogDescription : VProductModelCatalogDescriptionBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VProductAndDescription))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class VProductAndDescriptionBase {
        
        private int productIdField;
        
        private string nameField;
        
        private string productModelField;
        
        private string cultureIdField;
        
        private string descriptionField;
        
        private object tagField;
        
        /// <remarks/>
        public int ProductId {
            get {
                return this.productIdField;
            }
            set {
                this.productIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string ProductModel {
            get {
                return this.productModelField;
            }
            set {
                this.productModelField = value;
            }
        }
        
        /// <remarks/>
        public string CultureId {
            get {
                return this.cultureIdField;
            }
            set {
                this.cultureIdField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public object Tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class VProductAndDescription : VProductAndDescriptionBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VJobCandidateEmployment))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class VJobCandidateEmploymentBase {
        
        private int jobCandidateIdField;
        
        private System.Nullable<System.DateTime> safeNameEmpStartDateField;
        
        private System.Nullable<System.DateTime> safeNameEmpEndDateField;
        
        private string safeNameEmpOrgNameField;
        
        private string safeNameEmpJobTitleField;
        
        private string safeNameEmpResponsibilityField;
        
        private string safeNameEmpFunctionCategoryField;
        
        private string safeNameEmpIndustryCategoryField;
        
        private string safeNameEmpLocCountryRegionField;
        
        private string safeNameEmpLocStateField;
        
        private string safeNameEmpLocCityField;
        
        private object tagField;
        
        /// <remarks/>
        public int JobCandidateId {
            get {
                return this.jobCandidateIdField;
            }
            set {
                this.jobCandidateIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> SafeNameEmpStartDate {
            get {
                return this.safeNameEmpStartDateField;
            }
            set {
                this.safeNameEmpStartDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> SafeNameEmpEndDate {
            get {
                return this.safeNameEmpEndDateField;
            }
            set {
                this.safeNameEmpEndDateField = value;
            }
        }
        
        /// <remarks/>
        public string SafeNameEmpOrgName {
            get {
                return this.safeNameEmpOrgNameField;
            }
            set {
                this.safeNameEmpOrgNameField = value;
            }
        }
        
        /// <remarks/>
        public string SafeNameEmpJobTitle {
            get {
                return this.safeNameEmpJobTitleField;
            }
            set {
                this.safeNameEmpJobTitleField = value;
            }
        }
        
        /// <remarks/>
        public string SafeNameEmpResponsibility {
            get {
                return this.safeNameEmpResponsibilityField;
            }
            set {
                this.safeNameEmpResponsibilityField = value;
            }
        }
        
        /// <remarks/>
        public string SafeNameEmpFunctionCategory {
            get {
                return this.safeNameEmpFunctionCategoryField;
            }
            set {
                this.safeNameEmpFunctionCategoryField = value;
            }
        }
        
        /// <remarks/>
        public string SafeNameEmpIndustryCategory {
            get {
                return this.safeNameEmpIndustryCategoryField;
            }
            set {
                this.safeNameEmpIndustryCategoryField = value;
            }
        }
        
        /// <remarks/>
        public string SafeNameEmpLocCountryRegion {
            get {
                return this.safeNameEmpLocCountryRegionField;
            }
            set {
                this.safeNameEmpLocCountryRegionField = value;
            }
        }
        
        /// <remarks/>
        public string SafeNameEmpLocState {
            get {
                return this.safeNameEmpLocStateField;
            }
            set {
                this.safeNameEmpLocStateField = value;
            }
        }
        
        /// <remarks/>
        public string SafeNameEmpLocCity {
            get {
                return this.safeNameEmpLocCityField;
            }
            set {
                this.safeNameEmpLocCityField = value;
            }
        }
        
        /// <remarks/>
        public object Tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class VJobCandidateEmployment : VJobCandidateEmploymentBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VJobCandidateEducation))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class VJobCandidateEducationBase {
        
        private int jobCandidateIdField;
        
        private string safeNameEduLevelField;
        
        private System.Nullable<System.DateTime> safeNameEduStartDateField;
        
        private System.Nullable<System.DateTime> safeNameEduEndDateField;
        
        private string safeNameEduDegreeField;
        
        private string safeNameEduMajorField;
        
        private string safeNameEduMinorField;
        
        private string safeNameEduGpaField;
        
        private string safeNameEduGpaScaleField;
        
        private string safeNameEduSchoolField;
        
        private string safeNameEduLocCountryRegionField;
        
        private string safeNameEduLocStateField;
        
        private string safeNameEduLocCityField;
        
        private object tagField;
        
        /// <remarks/>
        public int JobCandidateId {
            get {
                return this.jobCandidateIdField;
            }
            set {
                this.jobCandidateIdField = value;
            }
        }
        
        /// <remarks/>
        public string SafeNameEduLevel {
            get {
                return this.safeNameEduLevelField;
            }
            set {
                this.safeNameEduLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> SafeNameEduStartDate {
            get {
                return this.safeNameEduStartDateField;
            }
            set {
                this.safeNameEduStartDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> SafeNameEduEndDate {
            get {
                return this.safeNameEduEndDateField;
            }
            set {
                this.safeNameEduEndDateField = value;
            }
        }
        
        /// <remarks/>
        public string SafeNameEduDegree {
            get {
                return this.safeNameEduDegreeField;
            }
            set {
                this.safeNameEduDegreeField = value;
            }
        }
        
        /// <remarks/>
        public string SafeNameEduMajor {
            get {
                return this.safeNameEduMajorField;
            }
            set {
                this.safeNameEduMajorField = value;
            }
        }
        
        /// <remarks/>
        public string SafeNameEduMinor {
            get {
                return this.safeNameEduMinorField;
            }
            set {
                this.safeNameEduMinorField = value;
            }
        }
        
        /// <remarks/>
        public string SafeNameEduGpa {
            get {
                return this.safeNameEduGpaField;
            }
            set {
                this.safeNameEduGpaField = value;
            }
        }
        
        /// <remarks/>
        public string SafeNameEduGpaScale {
            get {
                return this.safeNameEduGpaScaleField;
            }
            set {
                this.safeNameEduGpaScaleField = value;
            }
        }
        
        /// <remarks/>
        public string SafeNameEduSchool {
            get {
                return this.safeNameEduSchoolField;
            }
            set {
                this.safeNameEduSchoolField = value;
            }
        }
        
        /// <remarks/>
        public string SafeNameEduLocCountryRegion {
            get {
                return this.safeNameEduLocCountryRegionField;
            }
            set {
                this.safeNameEduLocCountryRegionField = value;
            }
        }
        
        /// <remarks/>
        public string SafeNameEduLocState {
            get {
                return this.safeNameEduLocStateField;
            }
            set {
                this.safeNameEduLocStateField = value;
            }
        }
        
        /// <remarks/>
        public string SafeNameEduLocCity {
            get {
                return this.safeNameEduLocCityField;
            }
            set {
                this.safeNameEduLocCityField = value;
            }
        }
        
        /// <remarks/>
        public object Tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class VJobCandidateEducation : VJobCandidateEducationBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VJobCandidate))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class VJobCandidateBase {
        
        private int jobCandidateIdField;
        
        private System.Nullable<int> employeeIdField;
        
        private string safeNameNamePrefixField;
        
        private string safeNameNameFirstField;
        
        private string safeNameNameMiddleField;
        
        private string safeNameNameLastField;
        
        private string safeNameNameSuffixField;
        
        private string skillsField;
        
        private string safeNameAddrTypeField;
        
        private string safeNameAddrLocCountryRegionField;
        
        private string safeNameAddrLocStateField;
        
        private string safeNameAddrLocCityField;
        
        private string safeNameAddrPostalCodeField;
        
        private string emailField;
        
        private string webSiteField;
        
        private System.DateTime modifiedDateField;
        
        private object tagField;
        
        /// <remarks/>
        public int JobCandidateId {
            get {
                return this.jobCandidateIdField;
            }
            set {
                this.jobCandidateIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> EmployeeId {
            get {
                return this.employeeIdField;
            }
            set {
                this.employeeIdField = value;
            }
        }
        
        /// <remarks/>
        public string SafeNameNamePrefix {
            get {
                return this.safeNameNamePrefixField;
            }
            set {
                this.safeNameNamePrefixField = value;
            }
        }
        
        /// <remarks/>
        public string SafeNameNameFirst {
            get {
                return this.safeNameNameFirstField;
            }
            set {
                this.safeNameNameFirstField = value;
            }
        }
        
        /// <remarks/>
        public string SafeNameNameMiddle {
            get {
                return this.safeNameNameMiddleField;
            }
            set {
                this.safeNameNameMiddleField = value;
            }
        }
        
        /// <remarks/>
        public string SafeNameNameLast {
            get {
                return this.safeNameNameLastField;
            }
            set {
                this.safeNameNameLastField = value;
            }
        }
        
        /// <remarks/>
        public string SafeNameNameSuffix {
            get {
                return this.safeNameNameSuffixField;
            }
            set {
                this.safeNameNameSuffixField = value;
            }
        }
        
        /// <remarks/>
        public string Skills {
            get {
                return this.skillsField;
            }
            set {
                this.skillsField = value;
            }
        }
        
        /// <remarks/>
        public string SafeNameAddrType {
            get {
                return this.safeNameAddrTypeField;
            }
            set {
                this.safeNameAddrTypeField = value;
            }
        }
        
        /// <remarks/>
        public string SafeNameAddrLocCountryRegion {
            get {
                return this.safeNameAddrLocCountryRegionField;
            }
            set {
                this.safeNameAddrLocCountryRegionField = value;
            }
        }
        
        /// <remarks/>
        public string SafeNameAddrLocState {
            get {
                return this.safeNameAddrLocStateField;
            }
            set {
                this.safeNameAddrLocStateField = value;
            }
        }
        
        /// <remarks/>
        public string SafeNameAddrLocCity {
            get {
                return this.safeNameAddrLocCityField;
            }
            set {
                this.safeNameAddrLocCityField = value;
            }
        }
        
        /// <remarks/>
        public string SafeNameAddrPostalCode {
            get {
                return this.safeNameAddrPostalCodeField;
            }
            set {
                this.safeNameAddrPostalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string WebSite {
            get {
                return this.webSiteField;
            }
            set {
                this.webSiteField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public object Tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class VJobCandidate : VJobCandidateBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VIndividualDemographics))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class VIndividualDemographicsBase {
        
        private int customerIdField;
        
        private System.Nullable<decimal> totalPurchaseYtdField;
        
        private System.Nullable<System.DateTime> dateFirstPurchaseField;
        
        private System.Nullable<System.DateTime> birthDateField;
        
        private string maritalStatusField;
        
        private string yearlyIncomeField;
        
        private string genderField;
        
        private System.Nullable<int> totalChildrenField;
        
        private System.Nullable<int> numberChildrenAtHomeField;
        
        private string educationField;
        
        private string occupationField;
        
        private System.Nullable<bool> homeOwnerFlagField;
        
        private System.Nullable<int> numberCarsOwnedField;
        
        private object tagField;
        
        /// <remarks/>
        public int CustomerId {
            get {
                return this.customerIdField;
            }
            set {
                this.customerIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> TotalPurchaseYtd {
            get {
                return this.totalPurchaseYtdField;
            }
            set {
                this.totalPurchaseYtdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DateFirstPurchase {
            get {
                return this.dateFirstPurchaseField;
            }
            set {
                this.dateFirstPurchaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> BirthDate {
            get {
                return this.birthDateField;
            }
            set {
                this.birthDateField = value;
            }
        }
        
        /// <remarks/>
        public string MaritalStatus {
            get {
                return this.maritalStatusField;
            }
            set {
                this.maritalStatusField = value;
            }
        }
        
        /// <remarks/>
        public string YearlyIncome {
            get {
                return this.yearlyIncomeField;
            }
            set {
                this.yearlyIncomeField = value;
            }
        }
        
        /// <remarks/>
        public string Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TotalChildren {
            get {
                return this.totalChildrenField;
            }
            set {
                this.totalChildrenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> NumberChildrenAtHome {
            get {
                return this.numberChildrenAtHomeField;
            }
            set {
                this.numberChildrenAtHomeField = value;
            }
        }
        
        /// <remarks/>
        public string Education {
            get {
                return this.educationField;
            }
            set {
                this.educationField = value;
            }
        }
        
        /// <remarks/>
        public string Occupation {
            get {
                return this.occupationField;
            }
            set {
                this.occupationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> HomeOwnerFlag {
            get {
                return this.homeOwnerFlagField;
            }
            set {
                this.homeOwnerFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> NumberCarsOwned {
            get {
                return this.numberCarsOwnedField;
            }
            set {
                this.numberCarsOwnedField = value;
            }
        }
        
        /// <remarks/>
        public object Tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class VIndividualDemographics : VIndividualDemographicsBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VIndividualCustomer))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class VIndividualCustomerBase {
        
        private int customerIdField;
        
        private string titleField;
        
        private string firstNameField;
        
        private string middleNameField;
        
        private string lastNameField;
        
        private string suffixField;
        
        private string phoneField;
        
        private string emailAddressField;
        
        private int emailPromotionField;
        
        private string addressTypeField;
        
        private string addressLine1Field;
        
        private string addressLine2Field;
        
        private string cityField;
        
        private string stateProvinceNameField;
        
        private string postalCodeField;
        
        private string countryRegionNameField;
        
        private string demographicsField;
        
        private object tagField;
        
        /// <remarks/>
        public int CustomerId {
            get {
                return this.customerIdField;
            }
            set {
                this.customerIdField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string MiddleName {
            get {
                return this.middleNameField;
            }
            set {
                this.middleNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Suffix {
            get {
                return this.suffixField;
            }
            set {
                this.suffixField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public int EmailPromotion {
            get {
                return this.emailPromotionField;
            }
            set {
                this.emailPromotionField = value;
            }
        }
        
        /// <remarks/>
        public string AddressType {
            get {
                return this.addressTypeField;
            }
            set {
                this.addressTypeField = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine1 {
            get {
                return this.addressLine1Field;
            }
            set {
                this.addressLine1Field = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine2 {
            get {
                return this.addressLine2Field;
            }
            set {
                this.addressLine2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string StateProvinceName {
            get {
                return this.stateProvinceNameField;
            }
            set {
                this.stateProvinceNameField = value;
            }
        }
        
        /// <remarks/>
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CountryRegionName {
            get {
                return this.countryRegionNameField;
            }
            set {
                this.countryRegionNameField = value;
            }
        }
        
        /// <remarks/>
        public string Demographics {
            get {
                return this.demographicsField;
            }
            set {
                this.demographicsField = value;
            }
        }
        
        /// <remarks/>
        public object Tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class VIndividualCustomer : VIndividualCustomerBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VEmployeeDepartmentHistory))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class VEmployeeDepartmentHistoryBase {
        
        private int employeeIdField;
        
        private string titleField;
        
        private string firstNameField;
        
        private string middleNameField;
        
        private string lastNameField;
        
        private string suffixField;
        
        private string shiftField;
        
        private string departmentField;
        
        private string groupNameField;
        
        private System.DateTime startDateField;
        
        private System.Nullable<System.DateTime> endDateField;
        
        private object tagField;
        
        /// <remarks/>
        public int EmployeeId {
            get {
                return this.employeeIdField;
            }
            set {
                this.employeeIdField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string MiddleName {
            get {
                return this.middleNameField;
            }
            set {
                this.middleNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Suffix {
            get {
                return this.suffixField;
            }
            set {
                this.suffixField = value;
            }
        }
        
        /// <remarks/>
        public string Shift {
            get {
                return this.shiftField;
            }
            set {
                this.shiftField = value;
            }
        }
        
        /// <remarks/>
        public string Department {
            get {
                return this.departmentField;
            }
            set {
                this.departmentField = value;
            }
        }
        
        /// <remarks/>
        public string GroupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public object Tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class VEmployeeDepartmentHistory : VEmployeeDepartmentHistoryBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VEmployeeDepartment))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class VEmployeeDepartmentBase {
        
        private int employeeIdField;
        
        private string titleField;
        
        private string firstNameField;
        
        private string middleNameField;
        
        private string lastNameField;
        
        private string suffixField;
        
        private string jobTitleField;
        
        private string departmentField;
        
        private string groupNameField;
        
        private System.DateTime startDateField;
        
        private object tagField;
        
        /// <remarks/>
        public int EmployeeId {
            get {
                return this.employeeIdField;
            }
            set {
                this.employeeIdField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string MiddleName {
            get {
                return this.middleNameField;
            }
            set {
                this.middleNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Suffix {
            get {
                return this.suffixField;
            }
            set {
                this.suffixField = value;
            }
        }
        
        /// <remarks/>
        public string JobTitle {
            get {
                return this.jobTitleField;
            }
            set {
                this.jobTitleField = value;
            }
        }
        
        /// <remarks/>
        public string Department {
            get {
                return this.departmentField;
            }
            set {
                this.departmentField = value;
            }
        }
        
        /// <remarks/>
        public string GroupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public object Tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class VEmployeeDepartment : VEmployeeDepartmentBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VEmployee))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class VEmployeeBase {
        
        private int employeeIdField;
        
        private string titleField;
        
        private string firstNameField;
        
        private string middleNameField;
        
        private string lastNameField;
        
        private string suffixField;
        
        private string jobTitleField;
        
        private string phoneField;
        
        private string emailAddressField;
        
        private int emailPromotionField;
        
        private string addressLine1Field;
        
        private string addressLine2Field;
        
        private string cityField;
        
        private string stateProvinceNameField;
        
        private string postalCodeField;
        
        private string countryRegionNameField;
        
        private string additionalContactInfoField;
        
        private object tagField;
        
        /// <remarks/>
        public int EmployeeId {
            get {
                return this.employeeIdField;
            }
            set {
                this.employeeIdField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string MiddleName {
            get {
                return this.middleNameField;
            }
            set {
                this.middleNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Suffix {
            get {
                return this.suffixField;
            }
            set {
                this.suffixField = value;
            }
        }
        
        /// <remarks/>
        public string JobTitle {
            get {
                return this.jobTitleField;
            }
            set {
                this.jobTitleField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public int EmailPromotion {
            get {
                return this.emailPromotionField;
            }
            set {
                this.emailPromotionField = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine1 {
            get {
                return this.addressLine1Field;
            }
            set {
                this.addressLine1Field = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine2 {
            get {
                return this.addressLine2Field;
            }
            set {
                this.addressLine2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string StateProvinceName {
            get {
                return this.stateProvinceNameField;
            }
            set {
                this.stateProvinceNameField = value;
            }
        }
        
        /// <remarks/>
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CountryRegionName {
            get {
                return this.countryRegionNameField;
            }
            set {
                this.countryRegionNameField = value;
            }
        }
        
        /// <remarks/>
        public string AdditionalContactInfo {
            get {
                return this.additionalContactInfoField;
            }
            set {
                this.additionalContactInfoField = value;
            }
        }
        
        /// <remarks/>
        public object Tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class VEmployee : VEmployeeBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VAdditionalContactInfo))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class VAdditionalContactInfoBase {
        
        private int contactIdField;
        
        private string firstNameField;
        
        private string middleNameField;
        
        private string lastNameField;
        
        private string telephoneNumberField;
        
        private string telephoneSpecialInstructionsField;
        
        private string streetField;
        
        private string cityField;
        
        private string stateProvinceField;
        
        private string postalCodeField;
        
        private string countryRegionField;
        
        private string homeAddressSpecialInstructionsField;
        
        private string emailAddressField;
        
        private string emailSpecialInstructionsField;
        
        private string emailTelephoneNumberField;
        
        private System.Guid rowguidField;
        
        private System.DateTime modifiedDateField;
        
        private object tagField;
        
        /// <remarks/>
        public int ContactId {
            get {
                return this.contactIdField;
            }
            set {
                this.contactIdField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string MiddleName {
            get {
                return this.middleNameField;
            }
            set {
                this.middleNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string TelephoneNumber {
            get {
                return this.telephoneNumberField;
            }
            set {
                this.telephoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string TelephoneSpecialInstructions {
            get {
                return this.telephoneSpecialInstructionsField;
            }
            set {
                this.telephoneSpecialInstructionsField = value;
            }
        }
        
        /// <remarks/>
        public string Street {
            get {
                return this.streetField;
            }
            set {
                this.streetField = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string StateProvince {
            get {
                return this.stateProvinceField;
            }
            set {
                this.stateProvinceField = value;
            }
        }
        
        /// <remarks/>
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CountryRegion {
            get {
                return this.countryRegionField;
            }
            set {
                this.countryRegionField = value;
            }
        }
        
        /// <remarks/>
        public string HomeAddressSpecialInstructions {
            get {
                return this.homeAddressSpecialInstructionsField;
            }
            set {
                this.homeAddressSpecialInstructionsField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string EmailSpecialInstructions {
            get {
                return this.emailSpecialInstructionsField;
            }
            set {
                this.emailSpecialInstructionsField = value;
            }
        }
        
        /// <remarks/>
        public string EmailTelephoneNumber {
            get {
                return this.emailTelephoneNumberField;
            }
            set {
                this.emailTelephoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Rowguid {
            get {
                return this.rowguidField;
            }
            set {
                this.rowguidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public object Tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class VAdditionalContactInfo : VAdditionalContactInfoBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ErrorLog))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class ErrorLogBase : EntityBase {
        
        private int errorLogIdField;
        
        private System.DateTime errorTimeField;
        
        private string userNameField;
        
        private int errorNumberField;
        
        private System.Nullable<int> errorSeverityField;
        
        private System.Nullable<int> errorStateField;
        
        private string errorProcedureField;
        
        private System.Nullable<int> errorLineField;
        
        private string errorMessageField;
        
        /// <remarks/>
        public int ErrorLogId {
            get {
                return this.errorLogIdField;
            }
            set {
                this.errorLogIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ErrorTime {
            get {
                return this.errorTimeField;
            }
            set {
                this.errorTimeField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public int ErrorNumber {
            get {
                return this.errorNumberField;
            }
            set {
                this.errorNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ErrorSeverity {
            get {
                return this.errorSeverityField;
            }
            set {
                this.errorSeverityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ErrorState {
            get {
                return this.errorStateField;
            }
            set {
                this.errorStateField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorProcedure {
            get {
                return this.errorProcedureField;
            }
            set {
                this.errorProcedureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ErrorLine {
            get {
                return this.errorLineField;
            }
            set {
                this.errorLineField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class ErrorLog : ErrorLogBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContactType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class ContactTypeBase : EntityBase {
        
        private int contactTypeIdField;
        
        private string nameField;
        
        private System.DateTime modifiedDateField;
        
        private StoreContact[] storeContactCollectionField;
        
        private VendorContact[] vendorContactCollectionField;
        
        /// <remarks/>
        public int ContactTypeId {
            get {
                return this.contactTypeIdField;
            }
            set {
                this.contactTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public StoreContact[] StoreContactCollection {
            get {
                return this.storeContactCollectionField;
            }
            set {
                this.storeContactCollectionField = value;
            }
        }
        
        /// <remarks/>
        public VendorContact[] VendorContactCollection {
            get {
                return this.vendorContactCollectionField;
            }
            set {
                this.vendorContactCollectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class StoreContact : StoreContactBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StoreContact))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class StoreContactBase : EntityBase {
        
        private int customerIdField;
        
        private int originalCustomerIdField;
        
        private int contactIdField;
        
        private int originalContactIdField;
        
        private int contactTypeIdField;
        
        private System.Guid rowguidField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public int CustomerId {
            get {
                return this.customerIdField;
            }
            set {
                this.customerIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalCustomerId {
            get {
                return this.originalCustomerIdField;
            }
            set {
                this.originalCustomerIdField = value;
            }
        }
        
        /// <remarks/>
        public int ContactId {
            get {
                return this.contactIdField;
            }
            set {
                this.contactIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalContactId {
            get {
                return this.originalContactIdField;
            }
            set {
                this.originalContactIdField = value;
            }
        }
        
        /// <remarks/>
        public int ContactTypeId {
            get {
                return this.contactTypeIdField;
            }
            set {
                this.contactTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Rowguid {
            get {
                return this.rowguidField;
            }
            set {
                this.rowguidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class VendorContact : VendorContactBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VendorContact))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class VendorContactBase : EntityBase {
        
        private int vendorIdField;
        
        private int originalVendorIdField;
        
        private int contactIdField;
        
        private int originalContactIdField;
        
        private int contactTypeIdField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public int VendorId {
            get {
                return this.vendorIdField;
            }
            set {
                this.vendorIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalVendorId {
            get {
                return this.originalVendorIdField;
            }
            set {
                this.originalVendorIdField = value;
            }
        }
        
        /// <remarks/>
        public int ContactId {
            get {
                return this.contactIdField;
            }
            set {
                this.contactIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalContactId {
            get {
                return this.originalContactIdField;
            }
            set {
                this.originalContactIdField = value;
            }
        }
        
        /// <remarks/>
        public int ContactTypeId {
            get {
                return this.contactTypeIdField;
            }
            set {
                this.contactTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class ContactType : ContactTypeBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Department))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class DepartmentBase : EntityBase {
        
        private short departmentIdField;
        
        private string nameField;
        
        private string groupNameField;
        
        private System.DateTime modifiedDateField;
        
        private EmployeeDepartmentHistory[] employeeDepartmentHistoryCollectionField;
        
        /// <remarks/>
        public short DepartmentId {
            get {
                return this.departmentIdField;
            }
            set {
                this.departmentIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string GroupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public EmployeeDepartmentHistory[] EmployeeDepartmentHistoryCollection {
            get {
                return this.employeeDepartmentHistoryCollectionField;
            }
            set {
                this.employeeDepartmentHistoryCollectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class EmployeeDepartmentHistory : EmployeeDepartmentHistoryBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmployeeDepartmentHistory))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class EmployeeDepartmentHistoryBase : EntityBase {
        
        private int employeeIdField;
        
        private int originalEmployeeIdField;
        
        private short departmentIdField;
        
        private short originalDepartmentIdField;
        
        private byte shiftIdField;
        
        private byte originalShiftIdField;
        
        private System.DateTime startDateField;
        
        private System.DateTime originalStartDateField;
        
        private System.Nullable<System.DateTime> endDateField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public int EmployeeId {
            get {
                return this.employeeIdField;
            }
            set {
                this.employeeIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalEmployeeId {
            get {
                return this.originalEmployeeIdField;
            }
            set {
                this.originalEmployeeIdField = value;
            }
        }
        
        /// <remarks/>
        public short DepartmentId {
            get {
                return this.departmentIdField;
            }
            set {
                this.departmentIdField = value;
            }
        }
        
        /// <remarks/>
        public short OriginalDepartmentId {
            get {
                return this.originalDepartmentIdField;
            }
            set {
                this.originalDepartmentIdField = value;
            }
        }
        
        /// <remarks/>
        public byte ShiftId {
            get {
                return this.shiftIdField;
            }
            set {
                this.shiftIdField = value;
            }
        }
        
        /// <remarks/>
        public byte OriginalShiftId {
            get {
                return this.originalShiftIdField;
            }
            set {
                this.originalShiftIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime OriginalStartDate {
            get {
                return this.originalStartDateField;
            }
            set {
                this.originalStartDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class Department : DepartmentBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DatabaseLog))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class DatabaseLogBase : EntityBase {
        
        private int databaseLogIdField;
        
        private System.DateTime postTimeField;
        
        private string databaseUserField;
        
        private string safeNameEventField;
        
        private string schemaField;
        
        private string safeNameObjectField;
        
        private string tsqlField;
        
        private string xmlEventField;
        
        /// <remarks/>
        public int DatabaseLogId {
            get {
                return this.databaseLogIdField;
            }
            set {
                this.databaseLogIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PostTime {
            get {
                return this.postTimeField;
            }
            set {
                this.postTimeField = value;
            }
        }
        
        /// <remarks/>
        public string DatabaseUser {
            get {
                return this.databaseUserField;
            }
            set {
                this.databaseUserField = value;
            }
        }
        
        /// <remarks/>
        public string SafeNameEvent {
            get {
                return this.safeNameEventField;
            }
            set {
                this.safeNameEventField = value;
            }
        }
        
        /// <remarks/>
        public string Schema {
            get {
                return this.schemaField;
            }
            set {
                this.schemaField = value;
            }
        }
        
        /// <remarks/>
        public string SafeNameObject {
            get {
                return this.safeNameObjectField;
            }
            set {
                this.safeNameObjectField = value;
            }
        }
        
        /// <remarks/>
        public string Tsql {
            get {
                return this.tsqlField;
            }
            set {
                this.tsqlField = value;
            }
        }
        
        /// <remarks/>
        public string XmlEvent {
            get {
                return this.xmlEventField;
            }
            set {
                this.xmlEventField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class DatabaseLog : DatabaseLogBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AwBuildVersion))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class AwBuildVersionBase : EntityBase {
        
        private byte systemInformationIdField;
        
        private string databaseVersionField;
        
        private System.DateTime versionDateField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public byte SystemInformationId {
            get {
                return this.systemInformationIdField;
            }
            set {
                this.systemInformationIdField = value;
            }
        }
        
        /// <remarks/>
        public string DatabaseVersion {
            get {
                return this.databaseVersionField;
            }
            set {
                this.databaseVersionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime VersionDate {
            get {
                return this.versionDateField;
            }
            set {
                this.versionDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class AwBuildVersion : AwBuildVersionBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Shift))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class ShiftBase : EntityBase {
        
        private byte shiftIdField;
        
        private string nameField;
        
        private System.DateTime startTimeField;
        
        private System.DateTime endTimeField;
        
        private System.DateTime modifiedDateField;
        
        private EmployeeDepartmentHistory[] employeeDepartmentHistoryCollectionField;
        
        /// <remarks/>
        public byte ShiftId {
            get {
                return this.shiftIdField;
            }
            set {
                this.shiftIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public EmployeeDepartmentHistory[] EmployeeDepartmentHistoryCollection {
            get {
                return this.employeeDepartmentHistoryCollectionField;
            }
            set {
                this.employeeDepartmentHistoryCollectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class Shift : ShiftBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ShipMethod))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class ShipMethodBase : EntityBase {
        
        private int shipMethodIdField;
        
        private string nameField;
        
        private decimal shipBaseField;
        
        private decimal shipRateField;
        
        private System.Guid rowguidField;
        
        private System.DateTime modifiedDateField;
        
        private SalesOrderHeader[] salesOrderHeaderCollectionField;
        
        private PurchaseOrderHeader[] purchaseOrderHeaderCollectionField;
        
        /// <remarks/>
        public int ShipMethodId {
            get {
                return this.shipMethodIdField;
            }
            set {
                this.shipMethodIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public decimal ShipBase {
            get {
                return this.shipBaseField;
            }
            set {
                this.shipBaseField = value;
            }
        }
        
        /// <remarks/>
        public decimal ShipRate {
            get {
                return this.shipRateField;
            }
            set {
                this.shipRateField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Rowguid {
            get {
                return this.rowguidField;
            }
            set {
                this.rowguidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public SalesOrderHeader[] SalesOrderHeaderCollection {
            get {
                return this.salesOrderHeaderCollectionField;
            }
            set {
                this.salesOrderHeaderCollectionField = value;
            }
        }
        
        /// <remarks/>
        public PurchaseOrderHeader[] PurchaseOrderHeaderCollection {
            get {
                return this.purchaseOrderHeaderCollectionField;
            }
            set {
                this.purchaseOrderHeaderCollectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class SalesOrderHeader : SalesOrderHeaderBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesOrderHeader))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class SalesOrderHeaderBase : EntityBase {
        
        private int salesOrderIdField;
        
        private byte revisionNumberField;
        
        private System.DateTime orderDateField;
        
        private System.DateTime dueDateField;
        
        private System.Nullable<System.DateTime> shipDateField;
        
        private byte statusField;
        
        private bool onlineOrderFlagField;
        
        private string salesOrderNumberField;
        
        private string purchaseOrderNumberField;
        
        private string accountNumberField;
        
        private int customerIdField;
        
        private int contactIdField;
        
        private System.Nullable<int> salesPersonIdField;
        
        private System.Nullable<int> territoryIdField;
        
        private int billToAddressIdField;
        
        private int shipToAddressIdField;
        
        private int shipMethodIdField;
        
        private System.Nullable<int> creditCardIdField;
        
        private string creditCardApprovalCodeField;
        
        private System.Nullable<int> currencyRateIdField;
        
        private decimal subTotalField;
        
        private decimal taxAmtField;
        
        private decimal freightField;
        
        private decimal totalDueField;
        
        private string commentField;
        
        private System.Guid rowguidField;
        
        private System.DateTime modifiedDateField;
        
        private SalesOrderHeaderSalesReason[] salesOrderHeaderSalesReasonCollectionField;
        
        private SalesOrderDetail[] salesOrderDetailCollectionField;
        
        private SalesReason[] salesReasonIdSalesReasonCollection_From_SalesOrderHeaderSalesReasonField;
        
        /// <remarks/>
        public int SalesOrderId {
            get {
                return this.salesOrderIdField;
            }
            set {
                this.salesOrderIdField = value;
            }
        }
        
        /// <remarks/>
        public byte RevisionNumber {
            get {
                return this.revisionNumberField;
            }
            set {
                this.revisionNumberField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime OrderDate {
            get {
                return this.orderDateField;
            }
            set {
                this.orderDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DueDate {
            get {
                return this.dueDateField;
            }
            set {
                this.dueDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ShipDate {
            get {
                return this.shipDateField;
            }
            set {
                this.shipDateField = value;
            }
        }
        
        /// <remarks/>
        public byte Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public bool OnlineOrderFlag {
            get {
                return this.onlineOrderFlagField;
            }
            set {
                this.onlineOrderFlagField = value;
            }
        }
        
        /// <remarks/>
        public string SalesOrderNumber {
            get {
                return this.salesOrderNumberField;
            }
            set {
                this.salesOrderNumberField = value;
            }
        }
        
        /// <remarks/>
        public string PurchaseOrderNumber {
            get {
                return this.purchaseOrderNumberField;
            }
            set {
                this.purchaseOrderNumberField = value;
            }
        }
        
        /// <remarks/>
        public string AccountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public int CustomerId {
            get {
                return this.customerIdField;
            }
            set {
                this.customerIdField = value;
            }
        }
        
        /// <remarks/>
        public int ContactId {
            get {
                return this.contactIdField;
            }
            set {
                this.contactIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> SalesPersonId {
            get {
                return this.salesPersonIdField;
            }
            set {
                this.salesPersonIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TerritoryId {
            get {
                return this.territoryIdField;
            }
            set {
                this.territoryIdField = value;
            }
        }
        
        /// <remarks/>
        public int BillToAddressId {
            get {
                return this.billToAddressIdField;
            }
            set {
                this.billToAddressIdField = value;
            }
        }
        
        /// <remarks/>
        public int ShipToAddressId {
            get {
                return this.shipToAddressIdField;
            }
            set {
                this.shipToAddressIdField = value;
            }
        }
        
        /// <remarks/>
        public int ShipMethodId {
            get {
                return this.shipMethodIdField;
            }
            set {
                this.shipMethodIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CreditCardId {
            get {
                return this.creditCardIdField;
            }
            set {
                this.creditCardIdField = value;
            }
        }
        
        /// <remarks/>
        public string CreditCardApprovalCode {
            get {
                return this.creditCardApprovalCodeField;
            }
            set {
                this.creditCardApprovalCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CurrencyRateId {
            get {
                return this.currencyRateIdField;
            }
            set {
                this.currencyRateIdField = value;
            }
        }
        
        /// <remarks/>
        public decimal SubTotal {
            get {
                return this.subTotalField;
            }
            set {
                this.subTotalField = value;
            }
        }
        
        /// <remarks/>
        public decimal TaxAmt {
            get {
                return this.taxAmtField;
            }
            set {
                this.taxAmtField = value;
            }
        }
        
        /// <remarks/>
        public decimal Freight {
            get {
                return this.freightField;
            }
            set {
                this.freightField = value;
            }
        }
        
        /// <remarks/>
        public decimal TotalDue {
            get {
                return this.totalDueField;
            }
            set {
                this.totalDueField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Rowguid {
            get {
                return this.rowguidField;
            }
            set {
                this.rowguidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public SalesOrderHeaderSalesReason[] SalesOrderHeaderSalesReasonCollection {
            get {
                return this.salesOrderHeaderSalesReasonCollectionField;
            }
            set {
                this.salesOrderHeaderSalesReasonCollectionField = value;
            }
        }
        
        /// <remarks/>
        public SalesOrderDetail[] SalesOrderDetailCollection {
            get {
                return this.salesOrderDetailCollectionField;
            }
            set {
                this.salesOrderDetailCollectionField = value;
            }
        }
        
        /// <remarks/>
        public SalesReason[] SalesReasonIdSalesReasonCollection_From_SalesOrderHeaderSalesReason {
            get {
                return this.salesReasonIdSalesReasonCollection_From_SalesOrderHeaderSalesReasonField;
            }
            set {
                this.salesReasonIdSalesReasonCollection_From_SalesOrderHeaderSalesReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class SalesOrderHeaderSalesReason : SalesOrderHeaderSalesReasonBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesOrderHeaderSalesReason))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class SalesOrderHeaderSalesReasonBase : EntityBase {
        
        private int salesOrderIdField;
        
        private int originalSalesOrderIdField;
        
        private int salesReasonIdField;
        
        private int originalSalesReasonIdField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public int SalesOrderId {
            get {
                return this.salesOrderIdField;
            }
            set {
                this.salesOrderIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalSalesOrderId {
            get {
                return this.originalSalesOrderIdField;
            }
            set {
                this.originalSalesOrderIdField = value;
            }
        }
        
        /// <remarks/>
        public int SalesReasonId {
            get {
                return this.salesReasonIdField;
            }
            set {
                this.salesReasonIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalSalesReasonId {
            get {
                return this.originalSalesReasonIdField;
            }
            set {
                this.originalSalesReasonIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class SalesOrderDetail : SalesOrderDetailBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesOrderDetail))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class SalesOrderDetailBase : EntityBase {
        
        private int salesOrderIdField;
        
        private int originalSalesOrderIdField;
        
        private int salesOrderDetailIdField;
        
        private string carrierTrackingNumberField;
        
        private short orderQtyField;
        
        private int productIdField;
        
        private int specialOfferIdField;
        
        private decimal unitPriceField;
        
        private decimal unitPriceDiscountField;
        
        private decimal lineTotalField;
        
        private System.Guid rowguidField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public int SalesOrderId {
            get {
                return this.salesOrderIdField;
            }
            set {
                this.salesOrderIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalSalesOrderId {
            get {
                return this.originalSalesOrderIdField;
            }
            set {
                this.originalSalesOrderIdField = value;
            }
        }
        
        /// <remarks/>
        public int SalesOrderDetailId {
            get {
                return this.salesOrderDetailIdField;
            }
            set {
                this.salesOrderDetailIdField = value;
            }
        }
        
        /// <remarks/>
        public string CarrierTrackingNumber {
            get {
                return this.carrierTrackingNumberField;
            }
            set {
                this.carrierTrackingNumberField = value;
            }
        }
        
        /// <remarks/>
        public short OrderQty {
            get {
                return this.orderQtyField;
            }
            set {
                this.orderQtyField = value;
            }
        }
        
        /// <remarks/>
        public int ProductId {
            get {
                return this.productIdField;
            }
            set {
                this.productIdField = value;
            }
        }
        
        /// <remarks/>
        public int SpecialOfferId {
            get {
                return this.specialOfferIdField;
            }
            set {
                this.specialOfferIdField = value;
            }
        }
        
        /// <remarks/>
        public decimal UnitPrice {
            get {
                return this.unitPriceField;
            }
            set {
                this.unitPriceField = value;
            }
        }
        
        /// <remarks/>
        public decimal UnitPriceDiscount {
            get {
                return this.unitPriceDiscountField;
            }
            set {
                this.unitPriceDiscountField = value;
            }
        }
        
        /// <remarks/>
        public decimal LineTotal {
            get {
                return this.lineTotalField;
            }
            set {
                this.lineTotalField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Rowguid {
            get {
                return this.rowguidField;
            }
            set {
                this.rowguidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class SalesReason : SalesReasonBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesReason))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class SalesReasonBase : EntityBase {
        
        private int salesReasonIdField;
        
        private string nameField;
        
        private string reasonTypeField;
        
        private System.DateTime modifiedDateField;
        
        private SalesOrderHeaderSalesReason[] salesOrderHeaderSalesReasonCollectionField;
        
        private SalesOrderHeader[] salesOrderIdSalesOrderHeaderCollection_From_SalesOrderHeaderSalesReasonField;
        
        /// <remarks/>
        public int SalesReasonId {
            get {
                return this.salesReasonIdField;
            }
            set {
                this.salesReasonIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string ReasonType {
            get {
                return this.reasonTypeField;
            }
            set {
                this.reasonTypeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public SalesOrderHeaderSalesReason[] SalesOrderHeaderSalesReasonCollection {
            get {
                return this.salesOrderHeaderSalesReasonCollectionField;
            }
            set {
                this.salesOrderHeaderSalesReasonCollectionField = value;
            }
        }
        
        /// <remarks/>
        public SalesOrderHeader[] SalesOrderIdSalesOrderHeaderCollection_From_SalesOrderHeaderSalesReason {
            get {
                return this.salesOrderIdSalesOrderHeaderCollection_From_SalesOrderHeaderSalesReasonField;
            }
            set {
                this.salesOrderIdSalesOrderHeaderCollection_From_SalesOrderHeaderSalesReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class PurchaseOrderHeader : PurchaseOrderHeaderBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PurchaseOrderHeader))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class PurchaseOrderHeaderBase : EntityBase {
        
        private int purchaseOrderIdField;
        
        private byte revisionNumberField;
        
        private byte statusField;
        
        private int employeeIdField;
        
        private int vendorIdField;
        
        private int shipMethodIdField;
        
        private System.DateTime orderDateField;
        
        private System.Nullable<System.DateTime> shipDateField;
        
        private decimal subTotalField;
        
        private decimal taxAmtField;
        
        private decimal freightField;
        
        private decimal totalDueField;
        
        private System.DateTime modifiedDateField;
        
        private PurchaseOrderDetail[] purchaseOrderDetailCollectionField;
        
        /// <remarks/>
        public int PurchaseOrderId {
            get {
                return this.purchaseOrderIdField;
            }
            set {
                this.purchaseOrderIdField = value;
            }
        }
        
        /// <remarks/>
        public byte RevisionNumber {
            get {
                return this.revisionNumberField;
            }
            set {
                this.revisionNumberField = value;
            }
        }
        
        /// <remarks/>
        public byte Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public int EmployeeId {
            get {
                return this.employeeIdField;
            }
            set {
                this.employeeIdField = value;
            }
        }
        
        /// <remarks/>
        public int VendorId {
            get {
                return this.vendorIdField;
            }
            set {
                this.vendorIdField = value;
            }
        }
        
        /// <remarks/>
        public int ShipMethodId {
            get {
                return this.shipMethodIdField;
            }
            set {
                this.shipMethodIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime OrderDate {
            get {
                return this.orderDateField;
            }
            set {
                this.orderDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ShipDate {
            get {
                return this.shipDateField;
            }
            set {
                this.shipDateField = value;
            }
        }
        
        /// <remarks/>
        public decimal SubTotal {
            get {
                return this.subTotalField;
            }
            set {
                this.subTotalField = value;
            }
        }
        
        /// <remarks/>
        public decimal TaxAmt {
            get {
                return this.taxAmtField;
            }
            set {
                this.taxAmtField = value;
            }
        }
        
        /// <remarks/>
        public decimal Freight {
            get {
                return this.freightField;
            }
            set {
                this.freightField = value;
            }
        }
        
        /// <remarks/>
        public decimal TotalDue {
            get {
                return this.totalDueField;
            }
            set {
                this.totalDueField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public PurchaseOrderDetail[] PurchaseOrderDetailCollection {
            get {
                return this.purchaseOrderDetailCollectionField;
            }
            set {
                this.purchaseOrderDetailCollectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class PurchaseOrderDetail : PurchaseOrderDetailBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PurchaseOrderDetail))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class PurchaseOrderDetailBase : EntityBase {
        
        private int purchaseOrderIdField;
        
        private int originalPurchaseOrderIdField;
        
        private int purchaseOrderDetailIdField;
        
        private System.DateTime dueDateField;
        
        private short orderQtyField;
        
        private int productIdField;
        
        private decimal unitPriceField;
        
        private decimal lineTotalField;
        
        private decimal receivedQtyField;
        
        private decimal rejectedQtyField;
        
        private decimal stockedQtyField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public int PurchaseOrderId {
            get {
                return this.purchaseOrderIdField;
            }
            set {
                this.purchaseOrderIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalPurchaseOrderId {
            get {
                return this.originalPurchaseOrderIdField;
            }
            set {
                this.originalPurchaseOrderIdField = value;
            }
        }
        
        /// <remarks/>
        public int PurchaseOrderDetailId {
            get {
                return this.purchaseOrderDetailIdField;
            }
            set {
                this.purchaseOrderDetailIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DueDate {
            get {
                return this.dueDateField;
            }
            set {
                this.dueDateField = value;
            }
        }
        
        /// <remarks/>
        public short OrderQty {
            get {
                return this.orderQtyField;
            }
            set {
                this.orderQtyField = value;
            }
        }
        
        /// <remarks/>
        public int ProductId {
            get {
                return this.productIdField;
            }
            set {
                this.productIdField = value;
            }
        }
        
        /// <remarks/>
        public decimal UnitPrice {
            get {
                return this.unitPriceField;
            }
            set {
                this.unitPriceField = value;
            }
        }
        
        /// <remarks/>
        public decimal LineTotal {
            get {
                return this.lineTotalField;
            }
            set {
                this.lineTotalField = value;
            }
        }
        
        /// <remarks/>
        public decimal ReceivedQty {
            get {
                return this.receivedQtyField;
            }
            set {
                this.receivedQtyField = value;
            }
        }
        
        /// <remarks/>
        public decimal RejectedQty {
            get {
                return this.rejectedQtyField;
            }
            set {
                this.rejectedQtyField = value;
            }
        }
        
        /// <remarks/>
        public decimal StockedQty {
            get {
                return this.stockedQtyField;
            }
            set {
                this.stockedQtyField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class ShipMethod : ShipMethodBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesTerritory))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class SalesTerritoryBase : EntityBase {
        
        private int territoryIdField;
        
        private string nameField;
        
        private string countryRegionCodeField;
        
        private string groupField;
        
        private decimal salesYtdField;
        
        private decimal salesLastYearField;
        
        private decimal costYtdField;
        
        private decimal costLastYearField;
        
        private System.Guid rowguidField;
        
        private System.DateTime modifiedDateField;
        
        private StateProvince[] stateProvinceCollectionField;
        
        private SalesOrderHeader[] salesOrderHeaderCollectionField;
        
        private SalesPerson[] salesPersonCollectionField;
        
        private SalesTerritoryHistory[] salesTerritoryHistoryCollectionField;
        
        private Customer[] customerCollectionField;
        
        /// <remarks/>
        public int TerritoryId {
            get {
                return this.territoryIdField;
            }
            set {
                this.territoryIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string CountryRegionCode {
            get {
                return this.countryRegionCodeField;
            }
            set {
                this.countryRegionCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
        /// <remarks/>
        public decimal SalesYtd {
            get {
                return this.salesYtdField;
            }
            set {
                this.salesYtdField = value;
            }
        }
        
        /// <remarks/>
        public decimal SalesLastYear {
            get {
                return this.salesLastYearField;
            }
            set {
                this.salesLastYearField = value;
            }
        }
        
        /// <remarks/>
        public decimal CostYtd {
            get {
                return this.costYtdField;
            }
            set {
                this.costYtdField = value;
            }
        }
        
        /// <remarks/>
        public decimal CostLastYear {
            get {
                return this.costLastYearField;
            }
            set {
                this.costLastYearField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Rowguid {
            get {
                return this.rowguidField;
            }
            set {
                this.rowguidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public StateProvince[] StateProvinceCollection {
            get {
                return this.stateProvinceCollectionField;
            }
            set {
                this.stateProvinceCollectionField = value;
            }
        }
        
        /// <remarks/>
        public SalesOrderHeader[] SalesOrderHeaderCollection {
            get {
                return this.salesOrderHeaderCollectionField;
            }
            set {
                this.salesOrderHeaderCollectionField = value;
            }
        }
        
        /// <remarks/>
        public SalesPerson[] SalesPersonCollection {
            get {
                return this.salesPersonCollectionField;
            }
            set {
                this.salesPersonCollectionField = value;
            }
        }
        
        /// <remarks/>
        public SalesTerritoryHistory[] SalesTerritoryHistoryCollection {
            get {
                return this.salesTerritoryHistoryCollectionField;
            }
            set {
                this.salesTerritoryHistoryCollectionField = value;
            }
        }
        
        /// <remarks/>
        public Customer[] CustomerCollection {
            get {
                return this.customerCollectionField;
            }
            set {
                this.customerCollectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class StateProvince : StateProvinceBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StateProvince))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class StateProvinceBase : EntityBase {
        
        private int stateProvinceIdField;
        
        private string stateProvinceCodeField;
        
        private string countryRegionCodeField;
        
        private bool isOnlyStateProvinceFlagField;
        
        private string nameField;
        
        private int territoryIdField;
        
        private System.Guid rowguidField;
        
        private System.DateTime modifiedDateField;
        
        private Address[] addressCollectionField;
        
        private SalesTaxRate[] salesTaxRateCollectionField;
        
        /// <remarks/>
        public int StateProvinceId {
            get {
                return this.stateProvinceIdField;
            }
            set {
                this.stateProvinceIdField = value;
            }
        }
        
        /// <remarks/>
        public string StateProvinceCode {
            get {
                return this.stateProvinceCodeField;
            }
            set {
                this.stateProvinceCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CountryRegionCode {
            get {
                return this.countryRegionCodeField;
            }
            set {
                this.countryRegionCodeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsOnlyStateProvinceFlag {
            get {
                return this.isOnlyStateProvinceFlagField;
            }
            set {
                this.isOnlyStateProvinceFlagField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int TerritoryId {
            get {
                return this.territoryIdField;
            }
            set {
                this.territoryIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Rowguid {
            get {
                return this.rowguidField;
            }
            set {
                this.rowguidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public Address[] AddressCollection {
            get {
                return this.addressCollectionField;
            }
            set {
                this.addressCollectionField = value;
            }
        }
        
        /// <remarks/>
        public SalesTaxRate[] SalesTaxRateCollection {
            get {
                return this.salesTaxRateCollectionField;
            }
            set {
                this.salesTaxRateCollectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class Address : AddressBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Address))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class AddressBase : EntityBase {
        
        private int addressIdField;
        
        private string addressLine1Field;
        
        private string addressLine2Field;
        
        private string cityField;
        
        private int stateProvinceIdField;
        
        private string postalCodeField;
        
        private System.Guid rowguidField;
        
        private System.DateTime modifiedDateField;
        
        private CustomerAddress[] customerAddressCollectionField;
        
        private Customer[] customerIdCustomerCollection_From_CustomerAddressField;
        
        private SalesOrderHeader[] salesOrderHeaderCollectionGetByBillToAddressIdField;
        
        private EmployeeAddress[] employeeAddressCollectionField;
        
        private SalesOrderHeader[] salesOrderHeaderCollectionGetByShipToAddressIdField;
        
        private Vendor[] vendorIdVendorCollection_From_VendorAddressField;
        
        private VendorAddress[] vendorAddressCollectionField;
        
        private Employee[] employeeIdEmployeeCollection_From_EmployeeAddressField;
        
        /// <remarks/>
        public int AddressId {
            get {
                return this.addressIdField;
            }
            set {
                this.addressIdField = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine1 {
            get {
                return this.addressLine1Field;
            }
            set {
                this.addressLine1Field = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine2 {
            get {
                return this.addressLine2Field;
            }
            set {
                this.addressLine2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public int StateProvinceId {
            get {
                return this.stateProvinceIdField;
            }
            set {
                this.stateProvinceIdField = value;
            }
        }
        
        /// <remarks/>
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Rowguid {
            get {
                return this.rowguidField;
            }
            set {
                this.rowguidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public CustomerAddress[] CustomerAddressCollection {
            get {
                return this.customerAddressCollectionField;
            }
            set {
                this.customerAddressCollectionField = value;
            }
        }
        
        /// <remarks/>
        public Customer[] CustomerIdCustomerCollection_From_CustomerAddress {
            get {
                return this.customerIdCustomerCollection_From_CustomerAddressField;
            }
            set {
                this.customerIdCustomerCollection_From_CustomerAddressField = value;
            }
        }
        
        /// <remarks/>
        public SalesOrderHeader[] SalesOrderHeaderCollectionGetByBillToAddressId {
            get {
                return this.salesOrderHeaderCollectionGetByBillToAddressIdField;
            }
            set {
                this.salesOrderHeaderCollectionGetByBillToAddressIdField = value;
            }
        }
        
        /// <remarks/>
        public EmployeeAddress[] EmployeeAddressCollection {
            get {
                return this.employeeAddressCollectionField;
            }
            set {
                this.employeeAddressCollectionField = value;
            }
        }
        
        /// <remarks/>
        public SalesOrderHeader[] SalesOrderHeaderCollectionGetByShipToAddressId {
            get {
                return this.salesOrderHeaderCollectionGetByShipToAddressIdField;
            }
            set {
                this.salesOrderHeaderCollectionGetByShipToAddressIdField = value;
            }
        }
        
        /// <remarks/>
        public Vendor[] VendorIdVendorCollection_From_VendorAddress {
            get {
                return this.vendorIdVendorCollection_From_VendorAddressField;
            }
            set {
                this.vendorIdVendorCollection_From_VendorAddressField = value;
            }
        }
        
        /// <remarks/>
        public VendorAddress[] VendorAddressCollection {
            get {
                return this.vendorAddressCollectionField;
            }
            set {
                this.vendorAddressCollectionField = value;
            }
        }
        
        /// <remarks/>
        public Employee[] EmployeeIdEmployeeCollection_From_EmployeeAddress {
            get {
                return this.employeeIdEmployeeCollection_From_EmployeeAddressField;
            }
            set {
                this.employeeIdEmployeeCollection_From_EmployeeAddressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class CustomerAddress : CustomerAddressBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CustomerAddress))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class CustomerAddressBase : EntityBase {
        
        private int customerIdField;
        
        private int originalCustomerIdField;
        
        private int addressIdField;
        
        private int originalAddressIdField;
        
        private int addressTypeIdField;
        
        private System.Guid rowguidField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public int CustomerId {
            get {
                return this.customerIdField;
            }
            set {
                this.customerIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalCustomerId {
            get {
                return this.originalCustomerIdField;
            }
            set {
                this.originalCustomerIdField = value;
            }
        }
        
        /// <remarks/>
        public int AddressId {
            get {
                return this.addressIdField;
            }
            set {
                this.addressIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalAddressId {
            get {
                return this.originalAddressIdField;
            }
            set {
                this.originalAddressIdField = value;
            }
        }
        
        /// <remarks/>
        public int AddressTypeId {
            get {
                return this.addressTypeIdField;
            }
            set {
                this.addressTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Rowguid {
            get {
                return this.rowguidField;
            }
            set {
                this.rowguidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class Customer : CustomerBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Customer))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class CustomerBase : EntityBase {
        
        private int customerIdField;
        
        private System.Nullable<int> territoryIdField;
        
        private string accountNumberField;
        
        private string customerTypeField;
        
        private System.Guid rowguidField;
        
        private System.DateTime modifiedDateField;
        
        private Store storeField;
        
        private SalesOrderHeader[] salesOrderHeaderCollectionField;
        
        private Address[] addressIdAddressCollection_From_CustomerAddressField;
        
        private Individual individualField;
        
        private CustomerAddress[] customerAddressCollectionField;
        
        /// <remarks/>
        public int CustomerId {
            get {
                return this.customerIdField;
            }
            set {
                this.customerIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TerritoryId {
            get {
                return this.territoryIdField;
            }
            set {
                this.territoryIdField = value;
            }
        }
        
        /// <remarks/>
        public string AccountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerType {
            get {
                return this.customerTypeField;
            }
            set {
                this.customerTypeField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Rowguid {
            get {
                return this.rowguidField;
            }
            set {
                this.rowguidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public Store Store {
            get {
                return this.storeField;
            }
            set {
                this.storeField = value;
            }
        }
        
        /// <remarks/>
        public SalesOrderHeader[] SalesOrderHeaderCollection {
            get {
                return this.salesOrderHeaderCollectionField;
            }
            set {
                this.salesOrderHeaderCollectionField = value;
            }
        }
        
        /// <remarks/>
        public Address[] AddressIdAddressCollection_From_CustomerAddress {
            get {
                return this.addressIdAddressCollection_From_CustomerAddressField;
            }
            set {
                this.addressIdAddressCollection_From_CustomerAddressField = value;
            }
        }
        
        /// <remarks/>
        public Individual Individual {
            get {
                return this.individualField;
            }
            set {
                this.individualField = value;
            }
        }
        
        /// <remarks/>
        public CustomerAddress[] CustomerAddressCollection {
            get {
                return this.customerAddressCollectionField;
            }
            set {
                this.customerAddressCollectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class Store : StoreBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Store))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class StoreBase : EntityBase {
        
        private int customerIdField;
        
        private int originalCustomerIdField;
        
        private string nameField;
        
        private System.Nullable<int> salesPersonIdField;
        
        private string demographicsField;
        
        private System.Guid rowguidField;
        
        private System.DateTime modifiedDateField;
        
        private StoreContact[] storeContactCollectionField;
        
        private Contact[] contactIdContactCollection_From_StoreContactField;
        
        /// <remarks/>
        public int CustomerId {
            get {
                return this.customerIdField;
            }
            set {
                this.customerIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalCustomerId {
            get {
                return this.originalCustomerIdField;
            }
            set {
                this.originalCustomerIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> SalesPersonId {
            get {
                return this.salesPersonIdField;
            }
            set {
                this.salesPersonIdField = value;
            }
        }
        
        /// <remarks/>
        public string Demographics {
            get {
                return this.demographicsField;
            }
            set {
                this.demographicsField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Rowguid {
            get {
                return this.rowguidField;
            }
            set {
                this.rowguidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public StoreContact[] StoreContactCollection {
            get {
                return this.storeContactCollectionField;
            }
            set {
                this.storeContactCollectionField = value;
            }
        }
        
        /// <remarks/>
        public Contact[] ContactIdContactCollection_From_StoreContact {
            get {
                return this.contactIdContactCollection_From_StoreContactField;
            }
            set {
                this.contactIdContactCollection_From_StoreContactField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class Contact : ContactBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Contact))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class ContactBase : EntityBase {
        
        private int contactIdField;
        
        private bool nameStyleField;
        
        private string titleField;
        
        private string firstNameField;
        
        private string middleNameField;
        
        private string lastNameField;
        
        private string suffixField;
        
        private string emailAddressField;
        
        private int emailPromotionField;
        
        private string phoneField;
        
        private string passwordHashField;
        
        private string passwordSaltField;
        
        private string additionalContactInfoField;
        
        private System.Guid rowguidField;
        
        private System.DateTime modifiedDateField;
        
        private Employee[] employeeCollectionField;
        
        private SalesOrderHeader[] salesOrderHeaderCollectionField;
        
        private Individual[] individualCollectionField;
        
        private StoreContact[] storeContactCollectionField;
        
        private ContactCreditCard[] contactCreditCardCollectionField;
        
        private VendorContact[] vendorContactCollectionField;
        
        private CreditCard[] creditCardIdCreditCardCollection_From_ContactCreditCardField;
        
        private Store[] customerIdStoreCollection_From_StoreContactField;
        
        private Vendor[] vendorIdVendorCollection_From_VendorContactField;
        
        /// <remarks/>
        public int ContactId {
            get {
                return this.contactIdField;
            }
            set {
                this.contactIdField = value;
            }
        }
        
        /// <remarks/>
        public bool NameStyle {
            get {
                return this.nameStyleField;
            }
            set {
                this.nameStyleField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string MiddleName {
            get {
                return this.middleNameField;
            }
            set {
                this.middleNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Suffix {
            get {
                return this.suffixField;
            }
            set {
                this.suffixField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public int EmailPromotion {
            get {
                return this.emailPromotionField;
            }
            set {
                this.emailPromotionField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string PasswordHash {
            get {
                return this.passwordHashField;
            }
            set {
                this.passwordHashField = value;
            }
        }
        
        /// <remarks/>
        public string PasswordSalt {
            get {
                return this.passwordSaltField;
            }
            set {
                this.passwordSaltField = value;
            }
        }
        
        /// <remarks/>
        public string AdditionalContactInfo {
            get {
                return this.additionalContactInfoField;
            }
            set {
                this.additionalContactInfoField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Rowguid {
            get {
                return this.rowguidField;
            }
            set {
                this.rowguidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public Employee[] EmployeeCollection {
            get {
                return this.employeeCollectionField;
            }
            set {
                this.employeeCollectionField = value;
            }
        }
        
        /// <remarks/>
        public SalesOrderHeader[] SalesOrderHeaderCollection {
            get {
                return this.salesOrderHeaderCollectionField;
            }
            set {
                this.salesOrderHeaderCollectionField = value;
            }
        }
        
        /// <remarks/>
        public Individual[] IndividualCollection {
            get {
                return this.individualCollectionField;
            }
            set {
                this.individualCollectionField = value;
            }
        }
        
        /// <remarks/>
        public StoreContact[] StoreContactCollection {
            get {
                return this.storeContactCollectionField;
            }
            set {
                this.storeContactCollectionField = value;
            }
        }
        
        /// <remarks/>
        public ContactCreditCard[] ContactCreditCardCollection {
            get {
                return this.contactCreditCardCollectionField;
            }
            set {
                this.contactCreditCardCollectionField = value;
            }
        }
        
        /// <remarks/>
        public VendorContact[] VendorContactCollection {
            get {
                return this.vendorContactCollectionField;
            }
            set {
                this.vendorContactCollectionField = value;
            }
        }
        
        /// <remarks/>
        public CreditCard[] CreditCardIdCreditCardCollection_From_ContactCreditCard {
            get {
                return this.creditCardIdCreditCardCollection_From_ContactCreditCardField;
            }
            set {
                this.creditCardIdCreditCardCollection_From_ContactCreditCardField = value;
            }
        }
        
        /// <remarks/>
        public Store[] CustomerIdStoreCollection_From_StoreContact {
            get {
                return this.customerIdStoreCollection_From_StoreContactField;
            }
            set {
                this.customerIdStoreCollection_From_StoreContactField = value;
            }
        }
        
        /// <remarks/>
        public Vendor[] VendorIdVendorCollection_From_VendorContact {
            get {
                return this.vendorIdVendorCollection_From_VendorContactField;
            }
            set {
                this.vendorIdVendorCollection_From_VendorContactField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class Employee : EmployeeBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Employee))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class EmployeeBase : EntityBase {
        
        private int employeeIdField;
        
        private string nationalIdNumberField;
        
        private int contactIdField;
        
        private string loginIdField;
        
        private System.Nullable<int> managerIdField;
        
        private string titleField;
        
        private System.DateTime birthDateField;
        
        private string maritalStatusField;
        
        private string genderField;
        
        private System.DateTime hireDateField;
        
        private bool salariedFlagField;
        
        private short vacationHoursField;
        
        private short sickLeaveHoursField;
        
        private bool currentFlagField;
        
        private System.Guid rowguidField;
        
        private System.DateTime modifiedDateField;
        
        private Employee[] employeeCollectionField;
        
        private JobCandidate[] jobCandidateCollectionField;
        
        private SalesPerson salesPersonField;
        
        private EmployeeAddress[] employeeAddressCollectionField;
        
        private EmployeePayHistory[] employeePayHistoryCollectionField;
        
        private PurchaseOrderHeader[] purchaseOrderHeaderCollectionField;
        
        private Address[] addressIdAddressCollection_From_EmployeeAddressField;
        
        private EmployeeDepartmentHistory[] employeeDepartmentHistoryCollectionField;
        
        /// <remarks/>
        public int EmployeeId {
            get {
                return this.employeeIdField;
            }
            set {
                this.employeeIdField = value;
            }
        }
        
        /// <remarks/>
        public string NationalIdNumber {
            get {
                return this.nationalIdNumberField;
            }
            set {
                this.nationalIdNumberField = value;
            }
        }
        
        /// <remarks/>
        public int ContactId {
            get {
                return this.contactIdField;
            }
            set {
                this.contactIdField = value;
            }
        }
        
        /// <remarks/>
        public string LoginId {
            get {
                return this.loginIdField;
            }
            set {
                this.loginIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ManagerId {
            get {
                return this.managerIdField;
            }
            set {
                this.managerIdField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime BirthDate {
            get {
                return this.birthDateField;
            }
            set {
                this.birthDateField = value;
            }
        }
        
        /// <remarks/>
        public string MaritalStatus {
            get {
                return this.maritalStatusField;
            }
            set {
                this.maritalStatusField = value;
            }
        }
        
        /// <remarks/>
        public string Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime HireDate {
            get {
                return this.hireDateField;
            }
            set {
                this.hireDateField = value;
            }
        }
        
        /// <remarks/>
        public bool SalariedFlag {
            get {
                return this.salariedFlagField;
            }
            set {
                this.salariedFlagField = value;
            }
        }
        
        /// <remarks/>
        public short VacationHours {
            get {
                return this.vacationHoursField;
            }
            set {
                this.vacationHoursField = value;
            }
        }
        
        /// <remarks/>
        public short SickLeaveHours {
            get {
                return this.sickLeaveHoursField;
            }
            set {
                this.sickLeaveHoursField = value;
            }
        }
        
        /// <remarks/>
        public bool CurrentFlag {
            get {
                return this.currentFlagField;
            }
            set {
                this.currentFlagField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Rowguid {
            get {
                return this.rowguidField;
            }
            set {
                this.rowguidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public Employee[] EmployeeCollection {
            get {
                return this.employeeCollectionField;
            }
            set {
                this.employeeCollectionField = value;
            }
        }
        
        /// <remarks/>
        public JobCandidate[] JobCandidateCollection {
            get {
                return this.jobCandidateCollectionField;
            }
            set {
                this.jobCandidateCollectionField = value;
            }
        }
        
        /// <remarks/>
        public SalesPerson SalesPerson {
            get {
                return this.salesPersonField;
            }
            set {
                this.salesPersonField = value;
            }
        }
        
        /// <remarks/>
        public EmployeeAddress[] EmployeeAddressCollection {
            get {
                return this.employeeAddressCollectionField;
            }
            set {
                this.employeeAddressCollectionField = value;
            }
        }
        
        /// <remarks/>
        public EmployeePayHistory[] EmployeePayHistoryCollection {
            get {
                return this.employeePayHistoryCollectionField;
            }
            set {
                this.employeePayHistoryCollectionField = value;
            }
        }
        
        /// <remarks/>
        public PurchaseOrderHeader[] PurchaseOrderHeaderCollection {
            get {
                return this.purchaseOrderHeaderCollectionField;
            }
            set {
                this.purchaseOrderHeaderCollectionField = value;
            }
        }
        
        /// <remarks/>
        public Address[] AddressIdAddressCollection_From_EmployeeAddress {
            get {
                return this.addressIdAddressCollection_From_EmployeeAddressField;
            }
            set {
                this.addressIdAddressCollection_From_EmployeeAddressField = value;
            }
        }
        
        /// <remarks/>
        public EmployeeDepartmentHistory[] EmployeeDepartmentHistoryCollection {
            get {
                return this.employeeDepartmentHistoryCollectionField;
            }
            set {
                this.employeeDepartmentHistoryCollectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class JobCandidate : JobCandidateBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(JobCandidate))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class JobCandidateBase : EntityBase {
        
        private int jobCandidateIdField;
        
        private System.Nullable<int> employeeIdField;
        
        private string resumeField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public int JobCandidateId {
            get {
                return this.jobCandidateIdField;
            }
            set {
                this.jobCandidateIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> EmployeeId {
            get {
                return this.employeeIdField;
            }
            set {
                this.employeeIdField = value;
            }
        }
        
        /// <remarks/>
        public string Resume {
            get {
                return this.resumeField;
            }
            set {
                this.resumeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class SalesPerson : SalesPersonBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesPerson))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class SalesPersonBase : EntityBase {
        
        private int salesPersonIdField;
        
        private int originalSalesPersonIdField;
        
        private System.Nullable<int> territoryIdField;
        
        private System.Nullable<decimal> salesQuotaField;
        
        private decimal bonusField;
        
        private decimal commissionPctField;
        
        private decimal salesYtdField;
        
        private decimal salesLastYearField;
        
        private System.Guid rowguidField;
        
        private System.DateTime modifiedDateField;
        
        private Store[] storeCollectionField;
        
        private SalesPersonQuotaHistory[] salesPersonQuotaHistoryCollectionField;
        
        private SalesOrderHeader[] salesOrderHeaderCollectionField;
        
        private SalesTerritoryHistory[] salesTerritoryHistoryCollectionField;
        
        /// <remarks/>
        public int SalesPersonId {
            get {
                return this.salesPersonIdField;
            }
            set {
                this.salesPersonIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalSalesPersonId {
            get {
                return this.originalSalesPersonIdField;
            }
            set {
                this.originalSalesPersonIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TerritoryId {
            get {
                return this.territoryIdField;
            }
            set {
                this.territoryIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> SalesQuota {
            get {
                return this.salesQuotaField;
            }
            set {
                this.salesQuotaField = value;
            }
        }
        
        /// <remarks/>
        public decimal Bonus {
            get {
                return this.bonusField;
            }
            set {
                this.bonusField = value;
            }
        }
        
        /// <remarks/>
        public decimal CommissionPct {
            get {
                return this.commissionPctField;
            }
            set {
                this.commissionPctField = value;
            }
        }
        
        /// <remarks/>
        public decimal SalesYtd {
            get {
                return this.salesYtdField;
            }
            set {
                this.salesYtdField = value;
            }
        }
        
        /// <remarks/>
        public decimal SalesLastYear {
            get {
                return this.salesLastYearField;
            }
            set {
                this.salesLastYearField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Rowguid {
            get {
                return this.rowguidField;
            }
            set {
                this.rowguidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public Store[] StoreCollection {
            get {
                return this.storeCollectionField;
            }
            set {
                this.storeCollectionField = value;
            }
        }
        
        /// <remarks/>
        public SalesPersonQuotaHistory[] SalesPersonQuotaHistoryCollection {
            get {
                return this.salesPersonQuotaHistoryCollectionField;
            }
            set {
                this.salesPersonQuotaHistoryCollectionField = value;
            }
        }
        
        /// <remarks/>
        public SalesOrderHeader[] SalesOrderHeaderCollection {
            get {
                return this.salesOrderHeaderCollectionField;
            }
            set {
                this.salesOrderHeaderCollectionField = value;
            }
        }
        
        /// <remarks/>
        public SalesTerritoryHistory[] SalesTerritoryHistoryCollection {
            get {
                return this.salesTerritoryHistoryCollectionField;
            }
            set {
                this.salesTerritoryHistoryCollectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class SalesPersonQuotaHistory : SalesPersonQuotaHistoryBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesPersonQuotaHistory))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class SalesPersonQuotaHistoryBase : EntityBase {
        
        private int salesPersonIdField;
        
        private int originalSalesPersonIdField;
        
        private System.DateTime quotaDateField;
        
        private System.DateTime originalQuotaDateField;
        
        private decimal salesQuotaField;
        
        private System.Guid rowguidField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public int SalesPersonId {
            get {
                return this.salesPersonIdField;
            }
            set {
                this.salesPersonIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalSalesPersonId {
            get {
                return this.originalSalesPersonIdField;
            }
            set {
                this.originalSalesPersonIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime QuotaDate {
            get {
                return this.quotaDateField;
            }
            set {
                this.quotaDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime OriginalQuotaDate {
            get {
                return this.originalQuotaDateField;
            }
            set {
                this.originalQuotaDateField = value;
            }
        }
        
        /// <remarks/>
        public decimal SalesQuota {
            get {
                return this.salesQuotaField;
            }
            set {
                this.salesQuotaField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Rowguid {
            get {
                return this.rowguidField;
            }
            set {
                this.rowguidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class SalesTerritoryHistory : SalesTerritoryHistoryBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesTerritoryHistory))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class SalesTerritoryHistoryBase : EntityBase {
        
        private int salesPersonIdField;
        
        private int originalSalesPersonIdField;
        
        private int territoryIdField;
        
        private int originalTerritoryIdField;
        
        private System.DateTime startDateField;
        
        private System.DateTime originalStartDateField;
        
        private System.Nullable<System.DateTime> endDateField;
        
        private System.Guid rowguidField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public int SalesPersonId {
            get {
                return this.salesPersonIdField;
            }
            set {
                this.salesPersonIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalSalesPersonId {
            get {
                return this.originalSalesPersonIdField;
            }
            set {
                this.originalSalesPersonIdField = value;
            }
        }
        
        /// <remarks/>
        public int TerritoryId {
            get {
                return this.territoryIdField;
            }
            set {
                this.territoryIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalTerritoryId {
            get {
                return this.originalTerritoryIdField;
            }
            set {
                this.originalTerritoryIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime OriginalStartDate {
            get {
                return this.originalStartDateField;
            }
            set {
                this.originalStartDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Rowguid {
            get {
                return this.rowguidField;
            }
            set {
                this.rowguidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class EmployeeAddress : EmployeeAddressBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmployeeAddress))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class EmployeeAddressBase : EntityBase {
        
        private int employeeIdField;
        
        private int originalEmployeeIdField;
        
        private int addressIdField;
        
        private int originalAddressIdField;
        
        private System.Guid rowguidField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public int EmployeeId {
            get {
                return this.employeeIdField;
            }
            set {
                this.employeeIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalEmployeeId {
            get {
                return this.originalEmployeeIdField;
            }
            set {
                this.originalEmployeeIdField = value;
            }
        }
        
        /// <remarks/>
        public int AddressId {
            get {
                return this.addressIdField;
            }
            set {
                this.addressIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalAddressId {
            get {
                return this.originalAddressIdField;
            }
            set {
                this.originalAddressIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Rowguid {
            get {
                return this.rowguidField;
            }
            set {
                this.rowguidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class EmployeePayHistory : EmployeePayHistoryBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmployeePayHistory))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class EmployeePayHistoryBase : EntityBase {
        
        private int employeeIdField;
        
        private int originalEmployeeIdField;
        
        private System.DateTime rateChangeDateField;
        
        private System.DateTime originalRateChangeDateField;
        
        private decimal rateField;
        
        private byte payFrequencyField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public int EmployeeId {
            get {
                return this.employeeIdField;
            }
            set {
                this.employeeIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalEmployeeId {
            get {
                return this.originalEmployeeIdField;
            }
            set {
                this.originalEmployeeIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime RateChangeDate {
            get {
                return this.rateChangeDateField;
            }
            set {
                this.rateChangeDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime OriginalRateChangeDate {
            get {
                return this.originalRateChangeDateField;
            }
            set {
                this.originalRateChangeDateField = value;
            }
        }
        
        /// <remarks/>
        public decimal Rate {
            get {
                return this.rateField;
            }
            set {
                this.rateField = value;
            }
        }
        
        /// <remarks/>
        public byte PayFrequency {
            get {
                return this.payFrequencyField;
            }
            set {
                this.payFrequencyField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class Individual : IndividualBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Individual))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class IndividualBase : EntityBase {
        
        private int customerIdField;
        
        private int originalCustomerIdField;
        
        private int contactIdField;
        
        private string demographicsField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public int CustomerId {
            get {
                return this.customerIdField;
            }
            set {
                this.customerIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalCustomerId {
            get {
                return this.originalCustomerIdField;
            }
            set {
                this.originalCustomerIdField = value;
            }
        }
        
        /// <remarks/>
        public int ContactId {
            get {
                return this.contactIdField;
            }
            set {
                this.contactIdField = value;
            }
        }
        
        /// <remarks/>
        public string Demographics {
            get {
                return this.demographicsField;
            }
            set {
                this.demographicsField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class ContactCreditCard : ContactCreditCardBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContactCreditCard))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class ContactCreditCardBase : EntityBase {
        
        private int contactIdField;
        
        private int originalContactIdField;
        
        private int creditCardIdField;
        
        private int originalCreditCardIdField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public int ContactId {
            get {
                return this.contactIdField;
            }
            set {
                this.contactIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalContactId {
            get {
                return this.originalContactIdField;
            }
            set {
                this.originalContactIdField = value;
            }
        }
        
        /// <remarks/>
        public int CreditCardId {
            get {
                return this.creditCardIdField;
            }
            set {
                this.creditCardIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalCreditCardId {
            get {
                return this.originalCreditCardIdField;
            }
            set {
                this.originalCreditCardIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class CreditCard : CreditCardBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CreditCard))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class CreditCardBase : EntityBase {
        
        private int creditCardIdField;
        
        private string cardTypeField;
        
        private string cardNumberField;
        
        private byte expMonthField;
        
        private short expYearField;
        
        private System.DateTime modifiedDateField;
        
        private ContactCreditCard[] contactCreditCardCollectionField;
        
        private SalesOrderHeader[] salesOrderHeaderCollectionField;
        
        private Contact[] contactIdContactCollection_From_ContactCreditCardField;
        
        /// <remarks/>
        public int CreditCardId {
            get {
                return this.creditCardIdField;
            }
            set {
                this.creditCardIdField = value;
            }
        }
        
        /// <remarks/>
        public string CardType {
            get {
                return this.cardTypeField;
            }
            set {
                this.cardTypeField = value;
            }
        }
        
        /// <remarks/>
        public string CardNumber {
            get {
                return this.cardNumberField;
            }
            set {
                this.cardNumberField = value;
            }
        }
        
        /// <remarks/>
        public byte ExpMonth {
            get {
                return this.expMonthField;
            }
            set {
                this.expMonthField = value;
            }
        }
        
        /// <remarks/>
        public short ExpYear {
            get {
                return this.expYearField;
            }
            set {
                this.expYearField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public ContactCreditCard[] ContactCreditCardCollection {
            get {
                return this.contactCreditCardCollectionField;
            }
            set {
                this.contactCreditCardCollectionField = value;
            }
        }
        
        /// <remarks/>
        public SalesOrderHeader[] SalesOrderHeaderCollection {
            get {
                return this.salesOrderHeaderCollectionField;
            }
            set {
                this.salesOrderHeaderCollectionField = value;
            }
        }
        
        /// <remarks/>
        public Contact[] ContactIdContactCollection_From_ContactCreditCard {
            get {
                return this.contactIdContactCollection_From_ContactCreditCardField;
            }
            set {
                this.contactIdContactCollection_From_ContactCreditCardField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class Vendor : VendorBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Vendor))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class VendorBase : EntityBase {
        
        private int vendorIdField;
        
        private string accountNumberField;
        
        private string nameField;
        
        private byte creditRatingField;
        
        private bool preferredVendorStatusField;
        
        private bool activeFlagField;
        
        private string purchasingWebServiceUrlField;
        
        private System.DateTime modifiedDateField;
        
        private VendorAddress[] vendorAddressCollectionField;
        
        private Product[] productIdProductCollection_From_ProductVendorField;
        
        private Address[] addressIdAddressCollection_From_VendorAddressField;
        
        private Contact[] contactIdContactCollection_From_VendorContactField;
        
        private VendorContact[] vendorContactCollectionField;
        
        private PurchaseOrderHeader[] purchaseOrderHeaderCollectionField;
        
        private ProductVendor[] productVendorCollectionField;
        
        /// <remarks/>
        public int VendorId {
            get {
                return this.vendorIdField;
            }
            set {
                this.vendorIdField = value;
            }
        }
        
        /// <remarks/>
        public string AccountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public byte CreditRating {
            get {
                return this.creditRatingField;
            }
            set {
                this.creditRatingField = value;
            }
        }
        
        /// <remarks/>
        public bool PreferredVendorStatus {
            get {
                return this.preferredVendorStatusField;
            }
            set {
                this.preferredVendorStatusField = value;
            }
        }
        
        /// <remarks/>
        public bool ActiveFlag {
            get {
                return this.activeFlagField;
            }
            set {
                this.activeFlagField = value;
            }
        }
        
        /// <remarks/>
        public string PurchasingWebServiceUrl {
            get {
                return this.purchasingWebServiceUrlField;
            }
            set {
                this.purchasingWebServiceUrlField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public VendorAddress[] VendorAddressCollection {
            get {
                return this.vendorAddressCollectionField;
            }
            set {
                this.vendorAddressCollectionField = value;
            }
        }
        
        /// <remarks/>
        public Product[] ProductIdProductCollection_From_ProductVendor {
            get {
                return this.productIdProductCollection_From_ProductVendorField;
            }
            set {
                this.productIdProductCollection_From_ProductVendorField = value;
            }
        }
        
        /// <remarks/>
        public Address[] AddressIdAddressCollection_From_VendorAddress {
            get {
                return this.addressIdAddressCollection_From_VendorAddressField;
            }
            set {
                this.addressIdAddressCollection_From_VendorAddressField = value;
            }
        }
        
        /// <remarks/>
        public Contact[] ContactIdContactCollection_From_VendorContact {
            get {
                return this.contactIdContactCollection_From_VendorContactField;
            }
            set {
                this.contactIdContactCollection_From_VendorContactField = value;
            }
        }
        
        /// <remarks/>
        public VendorContact[] VendorContactCollection {
            get {
                return this.vendorContactCollectionField;
            }
            set {
                this.vendorContactCollectionField = value;
            }
        }
        
        /// <remarks/>
        public PurchaseOrderHeader[] PurchaseOrderHeaderCollection {
            get {
                return this.purchaseOrderHeaderCollectionField;
            }
            set {
                this.purchaseOrderHeaderCollectionField = value;
            }
        }
        
        /// <remarks/>
        public ProductVendor[] ProductVendorCollection {
            get {
                return this.productVendorCollectionField;
            }
            set {
                this.productVendorCollectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class VendorAddress : VendorAddressBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VendorAddress))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class VendorAddressBase : EntityBase {
        
        private int vendorIdField;
        
        private int originalVendorIdField;
        
        private int addressIdField;
        
        private int originalAddressIdField;
        
        private int addressTypeIdField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public int VendorId {
            get {
                return this.vendorIdField;
            }
            set {
                this.vendorIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalVendorId {
            get {
                return this.originalVendorIdField;
            }
            set {
                this.originalVendorIdField = value;
            }
        }
        
        /// <remarks/>
        public int AddressId {
            get {
                return this.addressIdField;
            }
            set {
                this.addressIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalAddressId {
            get {
                return this.originalAddressIdField;
            }
            set {
                this.originalAddressIdField = value;
            }
        }
        
        /// <remarks/>
        public int AddressTypeId {
            get {
                return this.addressTypeIdField;
            }
            set {
                this.addressTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class Product : ProductBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Product))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class ProductBase : EntityBase {
        
        private int productIdField;
        
        private string nameField;
        
        private string productNumberField;
        
        private bool makeFlagField;
        
        private bool finishedGoodsFlagField;
        
        private string colorField;
        
        private short safetyStockLevelField;
        
        private short reorderPointField;
        
        private decimal standardCostField;
        
        private decimal listPriceField;
        
        private string sizeField;
        
        private string sizeUnitMeasureCodeField;
        
        private string weightUnitMeasureCodeField;
        
        private System.Nullable<decimal> weightField;
        
        private int daysToManufactureField;
        
        private string productLineField;
        
        private string safeNameClassField;
        
        private string styleField;
        
        private System.Nullable<int> productSubcategoryIdField;
        
        private System.Nullable<int> productModelIdField;
        
        private System.DateTime sellStartDateField;
        
        private System.Nullable<System.DateTime> sellEndDateField;
        
        private System.Nullable<System.DateTime> discontinuedDateField;
        
        private System.Guid rowguidField;
        
        private System.DateTime modifiedDateField;
        
        private ProductProductPhoto[] productProductPhotoCollectionField;
        
        private TransactionHistory[] transactionHistoryCollectionField;
        
        private ProductVendor[] productVendorCollectionField;
        
        private BillOfMaterials[] billOfMaterialsCollectionGetByProductAssemblyIdField;
        
        private Document[] documentIdDocumentCollection_From_ProductDocumentField;
        
        private SpecialOfferProduct[] specialOfferProductCollectionField;
        
        private ProductPhoto[] productPhotoIdProductPhotoCollection_From_ProductProductPhotoField;
        
        private BillOfMaterials[] billOfMaterialsCollectionGetByComponentIdField;
        
        private ProductInventory[] productInventoryCollectionField;
        
        private ProductDocument[] productDocumentCollectionField;
        
        private ProductReview[] productReviewCollectionField;
        
        private Vendor[] vendorIdVendorCollection_From_ProductVendorField;
        
        private WorkOrder[] workOrderCollectionField;
        
        private PurchaseOrderDetail[] purchaseOrderDetailCollectionField;
        
        private Location[] locationIdLocationCollection_From_ProductInventoryField;
        
        private ProductListPriceHistory[] productListPriceHistoryCollectionField;
        
        private SpecialOffer[] specialOfferIdSpecialOfferCollection_From_SpecialOfferProductField;
        
        private ShoppingCartItem[] shoppingCartItemCollectionField;
        
        private ProductCostHistory[] productCostHistoryCollectionField;
        
        /// <remarks/>
        public int ProductId {
            get {
                return this.productIdField;
            }
            set {
                this.productIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string ProductNumber {
            get {
                return this.productNumberField;
            }
            set {
                this.productNumberField = value;
            }
        }
        
        /// <remarks/>
        public bool MakeFlag {
            get {
                return this.makeFlagField;
            }
            set {
                this.makeFlagField = value;
            }
        }
        
        /// <remarks/>
        public bool FinishedGoodsFlag {
            get {
                return this.finishedGoodsFlagField;
            }
            set {
                this.finishedGoodsFlagField = value;
            }
        }
        
        /// <remarks/>
        public string Color {
            get {
                return this.colorField;
            }
            set {
                this.colorField = value;
            }
        }
        
        /// <remarks/>
        public short SafetyStockLevel {
            get {
                return this.safetyStockLevelField;
            }
            set {
                this.safetyStockLevelField = value;
            }
        }
        
        /// <remarks/>
        public short ReorderPoint {
            get {
                return this.reorderPointField;
            }
            set {
                this.reorderPointField = value;
            }
        }
        
        /// <remarks/>
        public decimal StandardCost {
            get {
                return this.standardCostField;
            }
            set {
                this.standardCostField = value;
            }
        }
        
        /// <remarks/>
        public decimal ListPrice {
            get {
                return this.listPriceField;
            }
            set {
                this.listPriceField = value;
            }
        }
        
        /// <remarks/>
        public string Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        public string SizeUnitMeasureCode {
            get {
                return this.sizeUnitMeasureCodeField;
            }
            set {
                this.sizeUnitMeasureCodeField = value;
            }
        }
        
        /// <remarks/>
        public string WeightUnitMeasureCode {
            get {
                return this.weightUnitMeasureCodeField;
            }
            set {
                this.weightUnitMeasureCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> Weight {
            get {
                return this.weightField;
            }
            set {
                this.weightField = value;
            }
        }
        
        /// <remarks/>
        public int DaysToManufacture {
            get {
                return this.daysToManufactureField;
            }
            set {
                this.daysToManufactureField = value;
            }
        }
        
        /// <remarks/>
        public string ProductLine {
            get {
                return this.productLineField;
            }
            set {
                this.productLineField = value;
            }
        }
        
        /// <remarks/>
        public string SafeNameClass {
            get {
                return this.safeNameClassField;
            }
            set {
                this.safeNameClassField = value;
            }
        }
        
        /// <remarks/>
        public string Style {
            get {
                return this.styleField;
            }
            set {
                this.styleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ProductSubcategoryId {
            get {
                return this.productSubcategoryIdField;
            }
            set {
                this.productSubcategoryIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ProductModelId {
            get {
                return this.productModelIdField;
            }
            set {
                this.productModelIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SellStartDate {
            get {
                return this.sellStartDateField;
            }
            set {
                this.sellStartDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> SellEndDate {
            get {
                return this.sellEndDateField;
            }
            set {
                this.sellEndDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DiscontinuedDate {
            get {
                return this.discontinuedDateField;
            }
            set {
                this.discontinuedDateField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Rowguid {
            get {
                return this.rowguidField;
            }
            set {
                this.rowguidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public ProductProductPhoto[] ProductProductPhotoCollection {
            get {
                return this.productProductPhotoCollectionField;
            }
            set {
                this.productProductPhotoCollectionField = value;
            }
        }
        
        /// <remarks/>
        public TransactionHistory[] TransactionHistoryCollection {
            get {
                return this.transactionHistoryCollectionField;
            }
            set {
                this.transactionHistoryCollectionField = value;
            }
        }
        
        /// <remarks/>
        public ProductVendor[] ProductVendorCollection {
            get {
                return this.productVendorCollectionField;
            }
            set {
                this.productVendorCollectionField = value;
            }
        }
        
        /// <remarks/>
        public BillOfMaterials[] BillOfMaterialsCollectionGetByProductAssemblyId {
            get {
                return this.billOfMaterialsCollectionGetByProductAssemblyIdField;
            }
            set {
                this.billOfMaterialsCollectionGetByProductAssemblyIdField = value;
            }
        }
        
        /// <remarks/>
        public Document[] DocumentIdDocumentCollection_From_ProductDocument {
            get {
                return this.documentIdDocumentCollection_From_ProductDocumentField;
            }
            set {
                this.documentIdDocumentCollection_From_ProductDocumentField = value;
            }
        }
        
        /// <remarks/>
        public SpecialOfferProduct[] SpecialOfferProductCollection {
            get {
                return this.specialOfferProductCollectionField;
            }
            set {
                this.specialOfferProductCollectionField = value;
            }
        }
        
        /// <remarks/>
        public ProductPhoto[] ProductPhotoIdProductPhotoCollection_From_ProductProductPhoto {
            get {
                return this.productPhotoIdProductPhotoCollection_From_ProductProductPhotoField;
            }
            set {
                this.productPhotoIdProductPhotoCollection_From_ProductProductPhotoField = value;
            }
        }
        
        /// <remarks/>
        public BillOfMaterials[] BillOfMaterialsCollectionGetByComponentId {
            get {
                return this.billOfMaterialsCollectionGetByComponentIdField;
            }
            set {
                this.billOfMaterialsCollectionGetByComponentIdField = value;
            }
        }
        
        /// <remarks/>
        public ProductInventory[] ProductInventoryCollection {
            get {
                return this.productInventoryCollectionField;
            }
            set {
                this.productInventoryCollectionField = value;
            }
        }
        
        /// <remarks/>
        public ProductDocument[] ProductDocumentCollection {
            get {
                return this.productDocumentCollectionField;
            }
            set {
                this.productDocumentCollectionField = value;
            }
        }
        
        /// <remarks/>
        public ProductReview[] ProductReviewCollection {
            get {
                return this.productReviewCollectionField;
            }
            set {
                this.productReviewCollectionField = value;
            }
        }
        
        /// <remarks/>
        public Vendor[] VendorIdVendorCollection_From_ProductVendor {
            get {
                return this.vendorIdVendorCollection_From_ProductVendorField;
            }
            set {
                this.vendorIdVendorCollection_From_ProductVendorField = value;
            }
        }
        
        /// <remarks/>
        public WorkOrder[] WorkOrderCollection {
            get {
                return this.workOrderCollectionField;
            }
            set {
                this.workOrderCollectionField = value;
            }
        }
        
        /// <remarks/>
        public PurchaseOrderDetail[] PurchaseOrderDetailCollection {
            get {
                return this.purchaseOrderDetailCollectionField;
            }
            set {
                this.purchaseOrderDetailCollectionField = value;
            }
        }
        
        /// <remarks/>
        public Location[] LocationIdLocationCollection_From_ProductInventory {
            get {
                return this.locationIdLocationCollection_From_ProductInventoryField;
            }
            set {
                this.locationIdLocationCollection_From_ProductInventoryField = value;
            }
        }
        
        /// <remarks/>
        public ProductListPriceHistory[] ProductListPriceHistoryCollection {
            get {
                return this.productListPriceHistoryCollectionField;
            }
            set {
                this.productListPriceHistoryCollectionField = value;
            }
        }
        
        /// <remarks/>
        public SpecialOffer[] SpecialOfferIdSpecialOfferCollection_From_SpecialOfferProduct {
            get {
                return this.specialOfferIdSpecialOfferCollection_From_SpecialOfferProductField;
            }
            set {
                this.specialOfferIdSpecialOfferCollection_From_SpecialOfferProductField = value;
            }
        }
        
        /// <remarks/>
        public ShoppingCartItem[] ShoppingCartItemCollection {
            get {
                return this.shoppingCartItemCollectionField;
            }
            set {
                this.shoppingCartItemCollectionField = value;
            }
        }
        
        /// <remarks/>
        public ProductCostHistory[] ProductCostHistoryCollection {
            get {
                return this.productCostHistoryCollectionField;
            }
            set {
                this.productCostHistoryCollectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class ProductProductPhoto : ProductProductPhotoBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductProductPhoto))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class ProductProductPhotoBase : EntityBase {
        
        private int productIdField;
        
        private int originalProductIdField;
        
        private int productPhotoIdField;
        
        private int originalProductPhotoIdField;
        
        private bool primaryField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public int ProductId {
            get {
                return this.productIdField;
            }
            set {
                this.productIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalProductId {
            get {
                return this.originalProductIdField;
            }
            set {
                this.originalProductIdField = value;
            }
        }
        
        /// <remarks/>
        public int ProductPhotoId {
            get {
                return this.productPhotoIdField;
            }
            set {
                this.productPhotoIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalProductPhotoId {
            get {
                return this.originalProductPhotoIdField;
            }
            set {
                this.originalProductPhotoIdField = value;
            }
        }
        
        /// <remarks/>
        public bool Primary {
            get {
                return this.primaryField;
            }
            set {
                this.primaryField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class TransactionHistory : TransactionHistoryBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransactionHistory))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class TransactionHistoryBase : EntityBase {
        
        private int transactionIdField;
        
        private int productIdField;
        
        private int referenceOrderIdField;
        
        private int referenceOrderLineIdField;
        
        private System.DateTime transactionDateField;
        
        private string transactionTypeField;
        
        private int quantityField;
        
        private decimal actualCostField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public int TransactionId {
            get {
                return this.transactionIdField;
            }
            set {
                this.transactionIdField = value;
            }
        }
        
        /// <remarks/>
        public int ProductId {
            get {
                return this.productIdField;
            }
            set {
                this.productIdField = value;
            }
        }
        
        /// <remarks/>
        public int ReferenceOrderId {
            get {
                return this.referenceOrderIdField;
            }
            set {
                this.referenceOrderIdField = value;
            }
        }
        
        /// <remarks/>
        public int ReferenceOrderLineId {
            get {
                return this.referenceOrderLineIdField;
            }
            set {
                this.referenceOrderLineIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TransactionDate {
            get {
                return this.transactionDateField;
            }
            set {
                this.transactionDateField = value;
            }
        }
        
        /// <remarks/>
        public string TransactionType {
            get {
                return this.transactionTypeField;
            }
            set {
                this.transactionTypeField = value;
            }
        }
        
        /// <remarks/>
        public int Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public decimal ActualCost {
            get {
                return this.actualCostField;
            }
            set {
                this.actualCostField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class ProductVendor : ProductVendorBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductVendor))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class ProductVendorBase : EntityBase {
        
        private int productIdField;
        
        private int originalProductIdField;
        
        private int vendorIdField;
        
        private int originalVendorIdField;
        
        private int averageLeadTimeField;
        
        private decimal standardPriceField;
        
        private System.Nullable<decimal> lastReceiptCostField;
        
        private System.Nullable<System.DateTime> lastReceiptDateField;
        
        private int minOrderQtyField;
        
        private int maxOrderQtyField;
        
        private System.Nullable<int> onOrderQtyField;
        
        private string unitMeasureCodeField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public int ProductId {
            get {
                return this.productIdField;
            }
            set {
                this.productIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalProductId {
            get {
                return this.originalProductIdField;
            }
            set {
                this.originalProductIdField = value;
            }
        }
        
        /// <remarks/>
        public int VendorId {
            get {
                return this.vendorIdField;
            }
            set {
                this.vendorIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalVendorId {
            get {
                return this.originalVendorIdField;
            }
            set {
                this.originalVendorIdField = value;
            }
        }
        
        /// <remarks/>
        public int AverageLeadTime {
            get {
                return this.averageLeadTimeField;
            }
            set {
                this.averageLeadTimeField = value;
            }
        }
        
        /// <remarks/>
        public decimal StandardPrice {
            get {
                return this.standardPriceField;
            }
            set {
                this.standardPriceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> LastReceiptCost {
            get {
                return this.lastReceiptCostField;
            }
            set {
                this.lastReceiptCostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LastReceiptDate {
            get {
                return this.lastReceiptDateField;
            }
            set {
                this.lastReceiptDateField = value;
            }
        }
        
        /// <remarks/>
        public int MinOrderQty {
            get {
                return this.minOrderQtyField;
            }
            set {
                this.minOrderQtyField = value;
            }
        }
        
        /// <remarks/>
        public int MaxOrderQty {
            get {
                return this.maxOrderQtyField;
            }
            set {
                this.maxOrderQtyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> OnOrderQty {
            get {
                return this.onOrderQtyField;
            }
            set {
                this.onOrderQtyField = value;
            }
        }
        
        /// <remarks/>
        public string UnitMeasureCode {
            get {
                return this.unitMeasureCodeField;
            }
            set {
                this.unitMeasureCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class BillOfMaterials : BillOfMaterialsBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BillOfMaterials))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class BillOfMaterialsBase : EntityBase {
        
        private int billOfMaterialsIdField;
        
        private System.Nullable<int> productAssemblyIdField;
        
        private int componentIdField;
        
        private System.DateTime startDateField;
        
        private System.Nullable<System.DateTime> endDateField;
        
        private string unitMeasureCodeField;
        
        private short bomLevelField;
        
        private decimal perAssemblyQtyField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public int BillOfMaterialsId {
            get {
                return this.billOfMaterialsIdField;
            }
            set {
                this.billOfMaterialsIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ProductAssemblyId {
            get {
                return this.productAssemblyIdField;
            }
            set {
                this.productAssemblyIdField = value;
            }
        }
        
        /// <remarks/>
        public int ComponentId {
            get {
                return this.componentIdField;
            }
            set {
                this.componentIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public string UnitMeasureCode {
            get {
                return this.unitMeasureCodeField;
            }
            set {
                this.unitMeasureCodeField = value;
            }
        }
        
        /// <remarks/>
        public short BomLevel {
            get {
                return this.bomLevelField;
            }
            set {
                this.bomLevelField = value;
            }
        }
        
        /// <remarks/>
        public decimal PerAssemblyQty {
            get {
                return this.perAssemblyQtyField;
            }
            set {
                this.perAssemblyQtyField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class Document : DocumentBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Document))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class DocumentBase : EntityBase {
        
        private int documentIdField;
        
        private string titleField;
        
        private string fileNameField;
        
        private string fileExtensionField;
        
        private string revisionField;
        
        private int changeNumberField;
        
        private byte statusField;
        
        private string documentSummaryField;
        
        private byte[] documentField;
        
        private System.DateTime modifiedDateField;
        
        private ProductDocument[] productDocumentCollectionField;
        
        private Product[] productIdProductCollection_From_ProductDocumentField;
        
        /// <remarks/>
        public int DocumentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public string FileExtension {
            get {
                return this.fileExtensionField;
            }
            set {
                this.fileExtensionField = value;
            }
        }
        
        /// <remarks/>
        public string Revision {
            get {
                return this.revisionField;
            }
            set {
                this.revisionField = value;
            }
        }
        
        /// <remarks/>
        public int ChangeNumber {
            get {
                return this.changeNumberField;
            }
            set {
                this.changeNumberField = value;
            }
        }
        
        /// <remarks/>
        public byte Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string DocumentSummary {
            get {
                return this.documentSummaryField;
            }
            set {
                this.documentSummaryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Document {
            get {
                return this.documentField;
            }
            set {
                this.documentField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public ProductDocument[] ProductDocumentCollection {
            get {
                return this.productDocumentCollectionField;
            }
            set {
                this.productDocumentCollectionField = value;
            }
        }
        
        /// <remarks/>
        public Product[] ProductIdProductCollection_From_ProductDocument {
            get {
                return this.productIdProductCollection_From_ProductDocumentField;
            }
            set {
                this.productIdProductCollection_From_ProductDocumentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class ProductDocument : ProductDocumentBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductDocument))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class ProductDocumentBase : EntityBase {
        
        private int productIdField;
        
        private int originalProductIdField;
        
        private int documentIdField;
        
        private int originalDocumentIdField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public int ProductId {
            get {
                return this.productIdField;
            }
            set {
                this.productIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalProductId {
            get {
                return this.originalProductIdField;
            }
            set {
                this.originalProductIdField = value;
            }
        }
        
        /// <remarks/>
        public int DocumentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalDocumentId {
            get {
                return this.originalDocumentIdField;
            }
            set {
                this.originalDocumentIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class SpecialOfferProduct : SpecialOfferProductBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SpecialOfferProduct))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class SpecialOfferProductBase : EntityBase {
        
        private int specialOfferIdField;
        
        private int originalSpecialOfferIdField;
        
        private int productIdField;
        
        private int originalProductIdField;
        
        private System.Guid rowguidField;
        
        private System.DateTime modifiedDateField;
        
        private SalesOrderDetail[] salesOrderDetailCollectionField;
        
        /// <remarks/>
        public int SpecialOfferId {
            get {
                return this.specialOfferIdField;
            }
            set {
                this.specialOfferIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalSpecialOfferId {
            get {
                return this.originalSpecialOfferIdField;
            }
            set {
                this.originalSpecialOfferIdField = value;
            }
        }
        
        /// <remarks/>
        public int ProductId {
            get {
                return this.productIdField;
            }
            set {
                this.productIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalProductId {
            get {
                return this.originalProductIdField;
            }
            set {
                this.originalProductIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Rowguid {
            get {
                return this.rowguidField;
            }
            set {
                this.rowguidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public SalesOrderDetail[] SalesOrderDetailCollection {
            get {
                return this.salesOrderDetailCollectionField;
            }
            set {
                this.salesOrderDetailCollectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class ProductPhoto : ProductPhotoBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductPhoto))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class ProductPhotoBase : EntityBase {
        
        private int productPhotoIdField;
        
        private byte[] thumbNailPhotoField;
        
        private string thumbnailPhotoFileNameField;
        
        private byte[] largePhotoField;
        
        private string largePhotoFileNameField;
        
        private System.DateTime modifiedDateField;
        
        private Product[] productIdProductCollection_From_ProductProductPhotoField;
        
        private ProductProductPhoto[] productProductPhotoCollectionField;
        
        /// <remarks/>
        public int ProductPhotoId {
            get {
                return this.productPhotoIdField;
            }
            set {
                this.productPhotoIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ThumbNailPhoto {
            get {
                return this.thumbNailPhotoField;
            }
            set {
                this.thumbNailPhotoField = value;
            }
        }
        
        /// <remarks/>
        public string ThumbnailPhotoFileName {
            get {
                return this.thumbnailPhotoFileNameField;
            }
            set {
                this.thumbnailPhotoFileNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] LargePhoto {
            get {
                return this.largePhotoField;
            }
            set {
                this.largePhotoField = value;
            }
        }
        
        /// <remarks/>
        public string LargePhotoFileName {
            get {
                return this.largePhotoFileNameField;
            }
            set {
                this.largePhotoFileNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public Product[] ProductIdProductCollection_From_ProductProductPhoto {
            get {
                return this.productIdProductCollection_From_ProductProductPhotoField;
            }
            set {
                this.productIdProductCollection_From_ProductProductPhotoField = value;
            }
        }
        
        /// <remarks/>
        public ProductProductPhoto[] ProductProductPhotoCollection {
            get {
                return this.productProductPhotoCollectionField;
            }
            set {
                this.productProductPhotoCollectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class ProductInventory : ProductInventoryBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductInventory))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class ProductInventoryBase : EntityBase {
        
        private int productIdField;
        
        private int originalProductIdField;
        
        private short locationIdField;
        
        private short originalLocationIdField;
        
        private string shelfField;
        
        private byte binField;
        
        private short quantityField;
        
        private System.Guid rowguidField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public int ProductId {
            get {
                return this.productIdField;
            }
            set {
                this.productIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalProductId {
            get {
                return this.originalProductIdField;
            }
            set {
                this.originalProductIdField = value;
            }
        }
        
        /// <remarks/>
        public short LocationId {
            get {
                return this.locationIdField;
            }
            set {
                this.locationIdField = value;
            }
        }
        
        /// <remarks/>
        public short OriginalLocationId {
            get {
                return this.originalLocationIdField;
            }
            set {
                this.originalLocationIdField = value;
            }
        }
        
        /// <remarks/>
        public string Shelf {
            get {
                return this.shelfField;
            }
            set {
                this.shelfField = value;
            }
        }
        
        /// <remarks/>
        public byte Bin {
            get {
                return this.binField;
            }
            set {
                this.binField = value;
            }
        }
        
        /// <remarks/>
        public short Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Rowguid {
            get {
                return this.rowguidField;
            }
            set {
                this.rowguidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class ProductReview : ProductReviewBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductReview))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class ProductReviewBase : EntityBase {
        
        private int productReviewIdField;
        
        private int productIdField;
        
        private string reviewerNameField;
        
        private System.DateTime reviewDateField;
        
        private string emailAddressField;
        
        private int ratingField;
        
        private string commentsField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public int ProductReviewId {
            get {
                return this.productReviewIdField;
            }
            set {
                this.productReviewIdField = value;
            }
        }
        
        /// <remarks/>
        public int ProductId {
            get {
                return this.productIdField;
            }
            set {
                this.productIdField = value;
            }
        }
        
        /// <remarks/>
        public string ReviewerName {
            get {
                return this.reviewerNameField;
            }
            set {
                this.reviewerNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ReviewDate {
            get {
                return this.reviewDateField;
            }
            set {
                this.reviewDateField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public int Rating {
            get {
                return this.ratingField;
            }
            set {
                this.ratingField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class WorkOrder : WorkOrderBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WorkOrder))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class WorkOrderBase : EntityBase {
        
        private int workOrderIdField;
        
        private int productIdField;
        
        private int orderQtyField;
        
        private int stockedQtyField;
        
        private short scrappedQtyField;
        
        private System.DateTime startDateField;
        
        private System.Nullable<System.DateTime> endDateField;
        
        private System.DateTime dueDateField;
        
        private System.Nullable<short> scrapReasonIdField;
        
        private System.DateTime modifiedDateField;
        
        private WorkOrderRouting[] workOrderRoutingCollectionField;
        
        /// <remarks/>
        public int WorkOrderId {
            get {
                return this.workOrderIdField;
            }
            set {
                this.workOrderIdField = value;
            }
        }
        
        /// <remarks/>
        public int ProductId {
            get {
                return this.productIdField;
            }
            set {
                this.productIdField = value;
            }
        }
        
        /// <remarks/>
        public int OrderQty {
            get {
                return this.orderQtyField;
            }
            set {
                this.orderQtyField = value;
            }
        }
        
        /// <remarks/>
        public int StockedQty {
            get {
                return this.stockedQtyField;
            }
            set {
                this.stockedQtyField = value;
            }
        }
        
        /// <remarks/>
        public short ScrappedQty {
            get {
                return this.scrappedQtyField;
            }
            set {
                this.scrappedQtyField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DueDate {
            get {
                return this.dueDateField;
            }
            set {
                this.dueDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<short> ScrapReasonId {
            get {
                return this.scrapReasonIdField;
            }
            set {
                this.scrapReasonIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public WorkOrderRouting[] WorkOrderRoutingCollection {
            get {
                return this.workOrderRoutingCollectionField;
            }
            set {
                this.workOrderRoutingCollectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class WorkOrderRouting : WorkOrderRoutingBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WorkOrderRouting))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class WorkOrderRoutingBase : EntityBase {
        
        private int workOrderIdField;
        
        private int originalWorkOrderIdField;
        
        private int productIdField;
        
        private int originalProductIdField;
        
        private short operationSequenceField;
        
        private short originalOperationSequenceField;
        
        private short locationIdField;
        
        private System.DateTime scheduledStartDateField;
        
        private System.DateTime scheduledEndDateField;
        
        private System.Nullable<System.DateTime> actualStartDateField;
        
        private System.Nullable<System.DateTime> actualEndDateField;
        
        private System.Nullable<decimal> actualResourceHrsField;
        
        private decimal plannedCostField;
        
        private System.Nullable<decimal> actualCostField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public int WorkOrderId {
            get {
                return this.workOrderIdField;
            }
            set {
                this.workOrderIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalWorkOrderId {
            get {
                return this.originalWorkOrderIdField;
            }
            set {
                this.originalWorkOrderIdField = value;
            }
        }
        
        /// <remarks/>
        public int ProductId {
            get {
                return this.productIdField;
            }
            set {
                this.productIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalProductId {
            get {
                return this.originalProductIdField;
            }
            set {
                this.originalProductIdField = value;
            }
        }
        
        /// <remarks/>
        public short OperationSequence {
            get {
                return this.operationSequenceField;
            }
            set {
                this.operationSequenceField = value;
            }
        }
        
        /// <remarks/>
        public short OriginalOperationSequence {
            get {
                return this.originalOperationSequenceField;
            }
            set {
                this.originalOperationSequenceField = value;
            }
        }
        
        /// <remarks/>
        public short LocationId {
            get {
                return this.locationIdField;
            }
            set {
                this.locationIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ScheduledStartDate {
            get {
                return this.scheduledStartDateField;
            }
            set {
                this.scheduledStartDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ScheduledEndDate {
            get {
                return this.scheduledEndDateField;
            }
            set {
                this.scheduledEndDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ActualStartDate {
            get {
                return this.actualStartDateField;
            }
            set {
                this.actualStartDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ActualEndDate {
            get {
                return this.actualEndDateField;
            }
            set {
                this.actualEndDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> ActualResourceHrs {
            get {
                return this.actualResourceHrsField;
            }
            set {
                this.actualResourceHrsField = value;
            }
        }
        
        /// <remarks/>
        public decimal PlannedCost {
            get {
                return this.plannedCostField;
            }
            set {
                this.plannedCostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> ActualCost {
            get {
                return this.actualCostField;
            }
            set {
                this.actualCostField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class Location : LocationBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Location))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class LocationBase : EntityBase {
        
        private short locationIdField;
        
        private string nameField;
        
        private decimal costRateField;
        
        private decimal availabilityField;
        
        private System.DateTime modifiedDateField;
        
        private WorkOrderRouting[] workOrderRoutingCollectionField;
        
        private Product[] productIdProductCollection_From_ProductInventoryField;
        
        private ProductInventory[] productInventoryCollectionField;
        
        /// <remarks/>
        public short LocationId {
            get {
                return this.locationIdField;
            }
            set {
                this.locationIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public decimal CostRate {
            get {
                return this.costRateField;
            }
            set {
                this.costRateField = value;
            }
        }
        
        /// <remarks/>
        public decimal Availability {
            get {
                return this.availabilityField;
            }
            set {
                this.availabilityField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public WorkOrderRouting[] WorkOrderRoutingCollection {
            get {
                return this.workOrderRoutingCollectionField;
            }
            set {
                this.workOrderRoutingCollectionField = value;
            }
        }
        
        /// <remarks/>
        public Product[] ProductIdProductCollection_From_ProductInventory {
            get {
                return this.productIdProductCollection_From_ProductInventoryField;
            }
            set {
                this.productIdProductCollection_From_ProductInventoryField = value;
            }
        }
        
        /// <remarks/>
        public ProductInventory[] ProductInventoryCollection {
            get {
                return this.productInventoryCollectionField;
            }
            set {
                this.productInventoryCollectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class ProductListPriceHistory : ProductListPriceHistoryBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductListPriceHistory))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class ProductListPriceHistoryBase : EntityBase {
        
        private int productIdField;
        
        private int originalProductIdField;
        
        private System.DateTime startDateField;
        
        private System.DateTime originalStartDateField;
        
        private System.Nullable<System.DateTime> endDateField;
        
        private decimal listPriceField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public int ProductId {
            get {
                return this.productIdField;
            }
            set {
                this.productIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalProductId {
            get {
                return this.originalProductIdField;
            }
            set {
                this.originalProductIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime OriginalStartDate {
            get {
                return this.originalStartDateField;
            }
            set {
                this.originalStartDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public decimal ListPrice {
            get {
                return this.listPriceField;
            }
            set {
                this.listPriceField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class SpecialOffer : SpecialOfferBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SpecialOffer))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class SpecialOfferBase : EntityBase {
        
        private int specialOfferIdField;
        
        private string descriptionField;
        
        private decimal discountPctField;
        
        private string typeField;
        
        private string categoryField;
        
        private System.DateTime startDateField;
        
        private System.DateTime endDateField;
        
        private int minQtyField;
        
        private System.Nullable<int> maxQtyField;
        
        private System.Guid rowguidField;
        
        private System.DateTime modifiedDateField;
        
        private SpecialOfferProduct[] specialOfferProductCollectionField;
        
        private Product[] productIdProductCollection_From_SpecialOfferProductField;
        
        /// <remarks/>
        public int SpecialOfferId {
            get {
                return this.specialOfferIdField;
            }
            set {
                this.specialOfferIdField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public decimal DiscountPct {
            get {
                return this.discountPctField;
            }
            set {
                this.discountPctField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public int MinQty {
            get {
                return this.minQtyField;
            }
            set {
                this.minQtyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> MaxQty {
            get {
                return this.maxQtyField;
            }
            set {
                this.maxQtyField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Rowguid {
            get {
                return this.rowguidField;
            }
            set {
                this.rowguidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public SpecialOfferProduct[] SpecialOfferProductCollection {
            get {
                return this.specialOfferProductCollectionField;
            }
            set {
                this.specialOfferProductCollectionField = value;
            }
        }
        
        /// <remarks/>
        public Product[] ProductIdProductCollection_From_SpecialOfferProduct {
            get {
                return this.productIdProductCollection_From_SpecialOfferProductField;
            }
            set {
                this.productIdProductCollection_From_SpecialOfferProductField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class ShoppingCartItem : ShoppingCartItemBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ShoppingCartItem))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class ShoppingCartItemBase : EntityBase {
        
        private int shoppingCartItemIdField;
        
        private string shoppingCartIdField;
        
        private int quantityField;
        
        private int productIdField;
        
        private System.DateTime dateCreatedField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public int ShoppingCartItemId {
            get {
                return this.shoppingCartItemIdField;
            }
            set {
                this.shoppingCartItemIdField = value;
            }
        }
        
        /// <remarks/>
        public string ShoppingCartId {
            get {
                return this.shoppingCartIdField;
            }
            set {
                this.shoppingCartIdField = value;
            }
        }
        
        /// <remarks/>
        public int Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public int ProductId {
            get {
                return this.productIdField;
            }
            set {
                this.productIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class ProductCostHistory : ProductCostHistoryBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductCostHistory))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class ProductCostHistoryBase : EntityBase {
        
        private int productIdField;
        
        private int originalProductIdField;
        
        private System.DateTime startDateField;
        
        private System.DateTime originalStartDateField;
        
        private System.Nullable<System.DateTime> endDateField;
        
        private decimal standardCostField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public int ProductId {
            get {
                return this.productIdField;
            }
            set {
                this.productIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalProductId {
            get {
                return this.originalProductIdField;
            }
            set {
                this.originalProductIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime OriginalStartDate {
            get {
                return this.originalStartDateField;
            }
            set {
                this.originalStartDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public decimal StandardCost {
            get {
                return this.standardCostField;
            }
            set {
                this.standardCostField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class SalesTaxRate : SalesTaxRateBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SalesTaxRate))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class SalesTaxRateBase : EntityBase {
        
        private int salesTaxRateIdField;
        
        private int stateProvinceIdField;
        
        private byte taxTypeField;
        
        private decimal taxRateField;
        
        private string nameField;
        
        private System.Guid rowguidField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public int SalesTaxRateId {
            get {
                return this.salesTaxRateIdField;
            }
            set {
                this.salesTaxRateIdField = value;
            }
        }
        
        /// <remarks/>
        public int StateProvinceId {
            get {
                return this.stateProvinceIdField;
            }
            set {
                this.stateProvinceIdField = value;
            }
        }
        
        /// <remarks/>
        public byte TaxType {
            get {
                return this.taxTypeField;
            }
            set {
                this.taxTypeField = value;
            }
        }
        
        /// <remarks/>
        public decimal TaxRate {
            get {
                return this.taxRateField;
            }
            set {
                this.taxRateField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Rowguid {
            get {
                return this.rowguidField;
            }
            set {
                this.rowguidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class SalesTerritory : SalesTerritoryBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TimestampPk))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class TimestampPkBase : EntityBase {
        
        private byte[] timestampPkField;
        
        private string someTextField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] TimestampPk {
            get {
                return this.timestampPkField;
            }
            set {
                this.timestampPkField = value;
            }
        }
        
        /// <remarks/>
        public string SomeText {
            get {
                return this.someTextField;
            }
            set {
                this.someTextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class TimestampPk : TimestampPkBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CurrencyRate))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class CurrencyRateBase : EntityBase {
        
        private int currencyRateIdField;
        
        private System.DateTime currencyRateDateField;
        
        private string fromCurrencyCodeField;
        
        private string toCurrencyCodeField;
        
        private decimal averageRateField;
        
        private decimal endOfDayRateField;
        
        private System.DateTime modifiedDateField;
        
        private SalesOrderHeader[] salesOrderHeaderCollectionField;
        
        /// <remarks/>
        public int CurrencyRateId {
            get {
                return this.currencyRateIdField;
            }
            set {
                this.currencyRateIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CurrencyRateDate {
            get {
                return this.currencyRateDateField;
            }
            set {
                this.currencyRateDateField = value;
            }
        }
        
        /// <remarks/>
        public string FromCurrencyCode {
            get {
                return this.fromCurrencyCodeField;
            }
            set {
                this.fromCurrencyCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ToCurrencyCode {
            get {
                return this.toCurrencyCodeField;
            }
            set {
                this.toCurrencyCodeField = value;
            }
        }
        
        /// <remarks/>
        public decimal AverageRate {
            get {
                return this.averageRateField;
            }
            set {
                this.averageRateField = value;
            }
        }
        
        /// <remarks/>
        public decimal EndOfDayRate {
            get {
                return this.endOfDayRateField;
            }
            set {
                this.endOfDayRateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public SalesOrderHeader[] SalesOrderHeaderCollection {
            get {
                return this.salesOrderHeaderCollectionField;
            }
            set {
                this.salesOrderHeaderCollectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class CurrencyRate : CurrencyRateBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CountryRegion))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class CountryRegionBase : EntityBase {
        
        private string countryRegionCodeField;
        
        private string originalCountryRegionCodeField;
        
        private string nameField;
        
        private System.DateTime modifiedDateField;
        
        private StateProvince[] stateProvinceCollectionField;
        
        private CountryRegionCurrency[] countryRegionCurrencyCollectionField;
        
        private Currency[] currencyCodeCurrencyCollection_From_CountryRegionCurrencyField;
        
        /// <remarks/>
        public string CountryRegionCode {
            get {
                return this.countryRegionCodeField;
            }
            set {
                this.countryRegionCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OriginalCountryRegionCode {
            get {
                return this.originalCountryRegionCodeField;
            }
            set {
                this.originalCountryRegionCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public StateProvince[] StateProvinceCollection {
            get {
                return this.stateProvinceCollectionField;
            }
            set {
                this.stateProvinceCollectionField = value;
            }
        }
        
        /// <remarks/>
        public CountryRegionCurrency[] CountryRegionCurrencyCollection {
            get {
                return this.countryRegionCurrencyCollectionField;
            }
            set {
                this.countryRegionCurrencyCollectionField = value;
            }
        }
        
        /// <remarks/>
        public Currency[] CurrencyCodeCurrencyCollection_From_CountryRegionCurrency {
            get {
                return this.currencyCodeCurrencyCollection_From_CountryRegionCurrencyField;
            }
            set {
                this.currencyCodeCurrencyCollection_From_CountryRegionCurrencyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class CountryRegionCurrency : CountryRegionCurrencyBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CountryRegionCurrency))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class CountryRegionCurrencyBase : EntityBase {
        
        private string countryRegionCodeField;
        
        private string originalCountryRegionCodeField;
        
        private string currencyCodeField;
        
        private string originalCurrencyCodeField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public string CountryRegionCode {
            get {
                return this.countryRegionCodeField;
            }
            set {
                this.countryRegionCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OriginalCountryRegionCode {
            get {
                return this.originalCountryRegionCodeField;
            }
            set {
                this.originalCountryRegionCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CurrencyCode {
            get {
                return this.currencyCodeField;
            }
            set {
                this.currencyCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OriginalCurrencyCode {
            get {
                return this.originalCurrencyCodeField;
            }
            set {
                this.originalCurrencyCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class Currency : CurrencyBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Currency))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class CurrencyBase : EntityBase {
        
        private string currencyCodeField;
        
        private string originalCurrencyCodeField;
        
        private string nameField;
        
        private System.DateTime modifiedDateField;
        
        private CountryRegion[] countryRegionCodeCountryRegionCollection_From_CountryRegionCurrencyField;
        
        private CountryRegionCurrency[] countryRegionCurrencyCollectionField;
        
        private CurrencyRate[] currencyRateCollectionGetByFromCurrencyCodeField;
        
        private CurrencyRate[] currencyRateCollectionGetByToCurrencyCodeField;
        
        /// <remarks/>
        public string CurrencyCode {
            get {
                return this.currencyCodeField;
            }
            set {
                this.currencyCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OriginalCurrencyCode {
            get {
                return this.originalCurrencyCodeField;
            }
            set {
                this.originalCurrencyCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public CountryRegion[] CountryRegionCodeCountryRegionCollection_From_CountryRegionCurrency {
            get {
                return this.countryRegionCodeCountryRegionCollection_From_CountryRegionCurrencyField;
            }
            set {
                this.countryRegionCodeCountryRegionCollection_From_CountryRegionCurrencyField = value;
            }
        }
        
        /// <remarks/>
        public CountryRegionCurrency[] CountryRegionCurrencyCollection {
            get {
                return this.countryRegionCurrencyCollectionField;
            }
            set {
                this.countryRegionCurrencyCollectionField = value;
            }
        }
        
        /// <remarks/>
        public CurrencyRate[] CurrencyRateCollectionGetByFromCurrencyCode {
            get {
                return this.currencyRateCollectionGetByFromCurrencyCodeField;
            }
            set {
                this.currencyRateCollectionGetByFromCurrencyCodeField = value;
            }
        }
        
        /// <remarks/>
        public CurrencyRate[] CurrencyRateCollectionGetByToCurrencyCode {
            get {
                return this.currencyRateCollectionGetByToCurrencyCodeField;
            }
            set {
                this.currencyRateCollectionGetByToCurrencyCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class CountryRegion : CountryRegionBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddressType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class AddressTypeBase : EntityBase {
        
        private int addressTypeIdField;
        
        private string nameField;
        
        private System.Guid rowguidField;
        
        private System.DateTime modifiedDateField;
        
        private VendorAddress[] vendorAddressCollectionField;
        
        private CustomerAddress[] customerAddressCollectionField;
        
        /// <remarks/>
        public int AddressTypeId {
            get {
                return this.addressTypeIdField;
            }
            set {
                this.addressTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Rowguid {
            get {
                return this.rowguidField;
            }
            set {
                this.rowguidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public VendorAddress[] VendorAddressCollection {
            get {
                return this.vendorAddressCollectionField;
            }
            set {
                this.vendorAddressCollectionField = value;
            }
        }
        
        /// <remarks/>
        public CustomerAddress[] CustomerAddressCollection {
            get {
                return this.customerAddressCollectionField;
            }
            set {
                this.customerAddressCollectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class AddressType : AddressTypeBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransactionHistoryArchive))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class TransactionHistoryArchiveBase : EntityBase {
        
        private int transactionIdField;
        
        private int originalTransactionIdField;
        
        private int productIdField;
        
        private int referenceOrderIdField;
        
        private int referenceOrderLineIdField;
        
        private System.DateTime transactionDateField;
        
        private string transactionTypeField;
        
        private int quantityField;
        
        private decimal actualCostField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public int TransactionId {
            get {
                return this.transactionIdField;
            }
            set {
                this.transactionIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalTransactionId {
            get {
                return this.originalTransactionIdField;
            }
            set {
                this.originalTransactionIdField = value;
            }
        }
        
        /// <remarks/>
        public int ProductId {
            get {
                return this.productIdField;
            }
            set {
                this.productIdField = value;
            }
        }
        
        /// <remarks/>
        public int ReferenceOrderId {
            get {
                return this.referenceOrderIdField;
            }
            set {
                this.referenceOrderIdField = value;
            }
        }
        
        /// <remarks/>
        public int ReferenceOrderLineId {
            get {
                return this.referenceOrderLineIdField;
            }
            set {
                this.referenceOrderLineIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TransactionDate {
            get {
                return this.transactionDateField;
            }
            set {
                this.transactionDateField = value;
            }
        }
        
        /// <remarks/>
        public string TransactionType {
            get {
                return this.transactionTypeField;
            }
            set {
                this.transactionTypeField = value;
            }
        }
        
        /// <remarks/>
        public int Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public decimal ActualCost {
            get {
                return this.actualCostField;
            }
            set {
                this.actualCostField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class TransactionHistoryArchive : TransactionHistoryArchiveBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ScrapReason))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class ScrapReasonBase : EntityBase {
        
        private short scrapReasonIdField;
        
        private string nameField;
        
        private System.DateTime modifiedDateField;
        
        private WorkOrder[] workOrderCollectionField;
        
        /// <remarks/>
        public short ScrapReasonId {
            get {
                return this.scrapReasonIdField;
            }
            set {
                this.scrapReasonIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public WorkOrder[] WorkOrderCollection {
            get {
                return this.workOrderCollectionField;
            }
            set {
                this.workOrderCollectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class ScrapReason : ScrapReasonBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductCategory))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class ProductCategoryBase : EntityBase {
        
        private int productCategoryIdField;
        
        private string nameField;
        
        private System.Guid rowguidField;
        
        private System.DateTime modifiedDateField;
        
        private ProductSubcategory[] productSubcategoryCollectionField;
        
        /// <remarks/>
        public int ProductCategoryId {
            get {
                return this.productCategoryIdField;
            }
            set {
                this.productCategoryIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Rowguid {
            get {
                return this.rowguidField;
            }
            set {
                this.rowguidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public ProductSubcategory[] ProductSubcategoryCollection {
            get {
                return this.productSubcategoryCollectionField;
            }
            set {
                this.productSubcategoryCollectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class ProductSubcategory : ProductSubcategoryBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductSubcategory))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class ProductSubcategoryBase : EntityBase {
        
        private int productSubcategoryIdField;
        
        private int productCategoryIdField;
        
        private string nameField;
        
        private System.Guid rowguidField;
        
        private System.DateTime modifiedDateField;
        
        private Product[] productCollectionField;
        
        /// <remarks/>
        public int ProductSubcategoryId {
            get {
                return this.productSubcategoryIdField;
            }
            set {
                this.productSubcategoryIdField = value;
            }
        }
        
        /// <remarks/>
        public int ProductCategoryId {
            get {
                return this.productCategoryIdField;
            }
            set {
                this.productCategoryIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Rowguid {
            get {
                return this.rowguidField;
            }
            set {
                this.rowguidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public Product[] ProductCollection {
            get {
                return this.productCollectionField;
            }
            set {
                this.productCollectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class ProductCategory : ProductCategoryBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NullFkeyParent))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class NullFkeyParentBase : EntityBase {
        
        private int nullFkeyParentIdField;
        
        private int originalNullFkeyParentIdField;
        
        private string someTextField;
        
        private NullFkeyChild[] nullFkeyChildCollectionField;
        
        /// <remarks/>
        public int NullFkeyParentId {
            get {
                return this.nullFkeyParentIdField;
            }
            set {
                this.nullFkeyParentIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalNullFkeyParentId {
            get {
                return this.originalNullFkeyParentIdField;
            }
            set {
                this.originalNullFkeyParentIdField = value;
            }
        }
        
        /// <remarks/>
        public string SomeText {
            get {
                return this.someTextField;
            }
            set {
                this.someTextField = value;
            }
        }
        
        /// <remarks/>
        public NullFkeyChild[] NullFkeyChildCollection {
            get {
                return this.nullFkeyChildCollectionField;
            }
            set {
                this.nullFkeyChildCollectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class NullFkeyParent : NullFkeyParentBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TestVariant))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class TestVariantBase : EntityBase {
        
        private int testVariantIdField;
        
        private object variantFieldField;
        
        /// <remarks/>
        public int TestVariantId {
            get {
                return this.testVariantIdField;
            }
            set {
                this.testVariantIdField = value;
            }
        }
        
        /// <remarks/>
        public object VariantField {
            get {
                return this.variantFieldField;
            }
            set {
                this.variantFieldField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class TestVariant : TestVariantBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UnitMeasure))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class UnitMeasureBase : EntityBase {
        
        private string unitMeasureCodeField;
        
        private string originalUnitMeasureCodeField;
        
        private string nameField;
        
        private System.DateTime modifiedDateField;
        
        private BillOfMaterials[] billOfMaterialsCollectionField;
        
        private Product[] productCollectionGetByWeightUnitMeasureCodeField;
        
        private ProductVendor[] productVendorCollectionField;
        
        private Product[] productCollectionGetBySizeUnitMeasureCodeField;
        
        /// <remarks/>
        public string UnitMeasureCode {
            get {
                return this.unitMeasureCodeField;
            }
            set {
                this.unitMeasureCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OriginalUnitMeasureCode {
            get {
                return this.originalUnitMeasureCodeField;
            }
            set {
                this.originalUnitMeasureCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public BillOfMaterials[] BillOfMaterialsCollection {
            get {
                return this.billOfMaterialsCollectionField;
            }
            set {
                this.billOfMaterialsCollectionField = value;
            }
        }
        
        /// <remarks/>
        public Product[] ProductCollectionGetByWeightUnitMeasureCode {
            get {
                return this.productCollectionGetByWeightUnitMeasureCodeField;
            }
            set {
                this.productCollectionGetByWeightUnitMeasureCodeField = value;
            }
        }
        
        /// <remarks/>
        public ProductVendor[] ProductVendorCollection {
            get {
                return this.productVendorCollectionField;
            }
            set {
                this.productVendorCollectionField = value;
            }
        }
        
        /// <remarks/>
        public Product[] ProductCollectionGetBySizeUnitMeasureCode {
            get {
                return this.productCollectionGetBySizeUnitMeasureCodeField;
            }
            set {
                this.productCollectionGetBySizeUnitMeasureCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class UnitMeasure : UnitMeasureBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductModelIllustration))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class ProductModelIllustrationBase : EntityBase {
        
        private int productModelIdField;
        
        private int originalProductModelIdField;
        
        private int illustrationIdField;
        
        private int originalIllustrationIdField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public int ProductModelId {
            get {
                return this.productModelIdField;
            }
            set {
                this.productModelIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalProductModelId {
            get {
                return this.originalProductModelIdField;
            }
            set {
                this.originalProductModelIdField = value;
            }
        }
        
        /// <remarks/>
        public int IllustrationId {
            get {
                return this.illustrationIdField;
            }
            set {
                this.illustrationIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalIllustrationId {
            get {
                return this.originalIllustrationIdField;
            }
            set {
                this.originalIllustrationIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class ProductModelIllustration : ProductModelIllustrationBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Illustration))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class IllustrationBase : EntityBase {
        
        private int illustrationIdField;
        
        private string diagramField;
        
        private System.DateTime modifiedDateField;
        
        private ProductModel[] productModelIdProductModelCollection_From_ProductModelIllustrationField;
        
        private ProductModelIllustration[] productModelIllustrationCollectionField;
        
        /// <remarks/>
        public int IllustrationId {
            get {
                return this.illustrationIdField;
            }
            set {
                this.illustrationIdField = value;
            }
        }
        
        /// <remarks/>
        public string Diagram {
            get {
                return this.diagramField;
            }
            set {
                this.diagramField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public ProductModel[] ProductModelIdProductModelCollection_From_ProductModelIllustration {
            get {
                return this.productModelIdProductModelCollection_From_ProductModelIllustrationField;
            }
            set {
                this.productModelIdProductModelCollection_From_ProductModelIllustrationField = value;
            }
        }
        
        /// <remarks/>
        public ProductModelIllustration[] ProductModelIllustrationCollection {
            get {
                return this.productModelIllustrationCollectionField;
            }
            set {
                this.productModelIllustrationCollectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class ProductModel : ProductModelBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductModel))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class ProductModelBase : EntityBase {
        
        private int productModelIdField;
        
        private string nameField;
        
        private string catalogDescriptionField;
        
        private string instructionsField;
        
        private System.Guid rowguidField;
        
        private System.DateTime modifiedDateField;
        
        private ProductModelProductDescriptionCulture[] productModelProductDescriptionCultureCollectionField;
        
        private Culture[] cultureIdCultureCollection_From_ProductModelProductDescriptionCultureField;
        
        private ProductDescription[] productDescriptionIdProductDescriptionCollection_From_ProductModelProductDescriptionCultureField;
        
        private Illustration[] illustrationIdIllustrationCollection_From_ProductModelIllustrationField;
        
        private ProductModelIllustration[] productModelIllustrationCollectionField;
        
        private Product[] productCollectionField;
        
        /// <remarks/>
        public int ProductModelId {
            get {
                return this.productModelIdField;
            }
            set {
                this.productModelIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string CatalogDescription {
            get {
                return this.catalogDescriptionField;
            }
            set {
                this.catalogDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Instructions {
            get {
                return this.instructionsField;
            }
            set {
                this.instructionsField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Rowguid {
            get {
                return this.rowguidField;
            }
            set {
                this.rowguidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public ProductModelProductDescriptionCulture[] ProductModelProductDescriptionCultureCollection {
            get {
                return this.productModelProductDescriptionCultureCollectionField;
            }
            set {
                this.productModelProductDescriptionCultureCollectionField = value;
            }
        }
        
        /// <remarks/>
        public Culture[] CultureIdCultureCollection_From_ProductModelProductDescriptionCulture {
            get {
                return this.cultureIdCultureCollection_From_ProductModelProductDescriptionCultureField;
            }
            set {
                this.cultureIdCultureCollection_From_ProductModelProductDescriptionCultureField = value;
            }
        }
        
        /// <remarks/>
        public ProductDescription[] ProductDescriptionIdProductDescriptionCollection_From_ProductModelProductDescriptionCulture {
            get {
                return this.productDescriptionIdProductDescriptionCollection_From_ProductModelProductDescriptionCultureField;
            }
            set {
                this.productDescriptionIdProductDescriptionCollection_From_ProductModelProductDescriptionCultureField = value;
            }
        }
        
        /// <remarks/>
        public Illustration[] IllustrationIdIllustrationCollection_From_ProductModelIllustration {
            get {
                return this.illustrationIdIllustrationCollection_From_ProductModelIllustrationField;
            }
            set {
                this.illustrationIdIllustrationCollection_From_ProductModelIllustrationField = value;
            }
        }
        
        /// <remarks/>
        public ProductModelIllustration[] ProductModelIllustrationCollection {
            get {
                return this.productModelIllustrationCollectionField;
            }
            set {
                this.productModelIllustrationCollectionField = value;
            }
        }
        
        /// <remarks/>
        public Product[] ProductCollection {
            get {
                return this.productCollectionField;
            }
            set {
                this.productCollectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class ProductModelProductDescriptionCulture : ProductModelProductDescriptionCultureBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductModelProductDescriptionCulture))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class ProductModelProductDescriptionCultureBase : EntityBase {
        
        private int productModelIdField;
        
        private int originalProductModelIdField;
        
        private int productDescriptionIdField;
        
        private int originalProductDescriptionIdField;
        
        private string cultureIdField;
        
        private string originalCultureIdField;
        
        private System.DateTime modifiedDateField;
        
        /// <remarks/>
        public int ProductModelId {
            get {
                return this.productModelIdField;
            }
            set {
                this.productModelIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalProductModelId {
            get {
                return this.originalProductModelIdField;
            }
            set {
                this.originalProductModelIdField = value;
            }
        }
        
        /// <remarks/>
        public int ProductDescriptionId {
            get {
                return this.productDescriptionIdField;
            }
            set {
                this.productDescriptionIdField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalProductDescriptionId {
            get {
                return this.originalProductDescriptionIdField;
            }
            set {
                this.originalProductDescriptionIdField = value;
            }
        }
        
        /// <remarks/>
        public string CultureId {
            get {
                return this.cultureIdField;
            }
            set {
                this.cultureIdField = value;
            }
        }
        
        /// <remarks/>
        public string OriginalCultureId {
            get {
                return this.originalCultureIdField;
            }
            set {
                this.originalCultureIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class Culture : CultureBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Culture))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class CultureBase : EntityBase {
        
        private string cultureIdField;
        
        private string originalCultureIdField;
        
        private string nameField;
        
        private System.DateTime modifiedDateField;
        
        private ProductModelProductDescriptionCulture[] productModelProductDescriptionCultureCollectionField;
        
        private ProductModel[] productModelIdProductModelCollection_From_ProductModelProductDescriptionCultureField;
        
        private ProductDescription[] productDescriptionIdProductDescriptionCollection_From_ProductModelProductDescriptionCultureField;
        
        /// <remarks/>
        public string CultureId {
            get {
                return this.cultureIdField;
            }
            set {
                this.cultureIdField = value;
            }
        }
        
        /// <remarks/>
        public string OriginalCultureId {
            get {
                return this.originalCultureIdField;
            }
            set {
                this.originalCultureIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public ProductModelProductDescriptionCulture[] ProductModelProductDescriptionCultureCollection {
            get {
                return this.productModelProductDescriptionCultureCollectionField;
            }
            set {
                this.productModelProductDescriptionCultureCollectionField = value;
            }
        }
        
        /// <remarks/>
        public ProductModel[] ProductModelIdProductModelCollection_From_ProductModelProductDescriptionCulture {
            get {
                return this.productModelIdProductModelCollection_From_ProductModelProductDescriptionCultureField;
            }
            set {
                this.productModelIdProductModelCollection_From_ProductModelProductDescriptionCultureField = value;
            }
        }
        
        /// <remarks/>
        public ProductDescription[] ProductDescriptionIdProductDescriptionCollection_From_ProductModelProductDescriptionCulture {
            get {
                return this.productDescriptionIdProductDescriptionCollection_From_ProductModelProductDescriptionCultureField;
            }
            set {
                this.productDescriptionIdProductDescriptionCollection_From_ProductModelProductDescriptionCultureField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class ProductDescription : ProductDescriptionBase {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductDescription))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public abstract partial class ProductDescriptionBase : EntityBase {
        
        private int productDescriptionIdField;
        
        private string descriptionField;
        
        private System.Guid rowguidField;
        
        private System.DateTime modifiedDateField;
        
        private ProductModelProductDescriptionCulture[] productModelProductDescriptionCultureCollectionField;
        
        private ProductModel[] productModelIdProductModelCollection_From_ProductModelProductDescriptionCultureField;
        
        private Culture[] cultureIdCultureCollection_From_ProductModelProductDescriptionCultureField;
        
        /// <remarks/>
        public int ProductDescriptionId {
            get {
                return this.productDescriptionIdField;
            }
            set {
                this.productDescriptionIdField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Rowguid {
            get {
                return this.rowguidField;
            }
            set {
                this.rowguidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public ProductModelProductDescriptionCulture[] ProductModelProductDescriptionCultureCollection {
            get {
                return this.productModelProductDescriptionCultureCollectionField;
            }
            set {
                this.productModelProductDescriptionCultureCollectionField = value;
            }
        }
        
        /// <remarks/>
        public ProductModel[] ProductModelIdProductModelCollection_From_ProductModelProductDescriptionCulture {
            get {
                return this.productModelIdProductModelCollection_From_ProductModelProductDescriptionCultureField;
            }
            set {
                this.productModelIdProductModelCollection_From_ProductModelProductDescriptionCultureField = value;
            }
        }
        
        /// <remarks/>
        public Culture[] CultureIdCultureCollection_From_ProductModelProductDescriptionCulture {
            get {
                return this.cultureIdCultureCollection_From_ProductModelProductDescriptionCultureField;
            }
            set {
                this.cultureIdCultureCollection_From_ProductModelProductDescriptionCultureField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public partial class Illustration : IllustrationBase {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://localhost/AdventureWorksServices")]
    public enum CommandType {
        
        /// <remarks/>
        Text,
        
        /// <remarks/>
        StoredProcedure,
        
        /// <remarks/>
        TableDirect,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void NullFkeyChildProvider_GetPagedCompletedEventHandler(object sender, NullFkeyChildProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NullFkeyChildProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NullFkeyChildProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NullFkeyChild[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NullFkeyChild[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void NullFkeyChildProvider_GetByNullFkeyParentIdCompletedEventHandler(object sender, NullFkeyChildProvider_GetByNullFkeyParentIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NullFkeyChildProvider_GetByNullFkeyParentIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NullFkeyChildProvider_GetByNullFkeyParentIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NullFkeyChild[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NullFkeyChild[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void NullFkeyChildProvider_GetByNullFkeyChildIdCompletedEventHandler(object sender, NullFkeyChildProvider_GetByNullFkeyChildIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NullFkeyChildProvider_GetByNullFkeyChildIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NullFkeyChildProvider_GetByNullFkeyChildIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NullFkeyChild Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NullFkeyChild)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void NullFkeyChildProvider_InsertCompletedEventHandler(object sender, NullFkeyChildProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NullFkeyChildProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NullFkeyChildProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NullFkeyChild Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NullFkeyChild)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void NullFkeyChildProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void NullFkeyChildProvider_UpdateCompletedEventHandler(object sender, NullFkeyChildProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NullFkeyChildProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NullFkeyChildProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NullFkeyChild Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NullFkeyChild)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductDescriptionProvider_GetByCultureIdFromProductModelProductDescriptionCultureCompletedEventHandler(object sender, ProductDescriptionProvider_GetByCultureIdFromProductModelProductDescriptionCultureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductDescriptionProvider_GetByCultureIdFromProductModelProductDescriptionCultureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductDescriptionProvider_GetByCultureIdFromProductModelProductDescriptionCultureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductDescription[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductDescription[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductDescriptionProvider_GetByProductModelIdFromProductModelProductDescriptionCultureCompletedEventHandler(object sender, ProductDescriptionProvider_GetByProductModelIdFromProductModelProductDescriptionCultureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductDescriptionProvider_GetByProductModelIdFromProductModelProductDescriptionCultureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductDescriptionProvider_GetByProductModelIdFromProductModelProductDescriptionCultureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductDescription[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductDescription[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductDescriptionProvider_DeleteCompletedEventHandler(object sender, ProductDescriptionProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductDescriptionProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductDescriptionProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductDescriptionProvider_FindCompletedEventHandler(object sender, ProductDescriptionProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductDescriptionProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductDescriptionProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductDescription[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductDescription[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductDescriptionProvider_GetAllCompletedEventHandler(object sender, ProductDescriptionProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductDescriptionProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductDescriptionProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductDescription[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductDescription[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductDescriptionProvider_GetPagedCompletedEventHandler(object sender, ProductDescriptionProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductDescriptionProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductDescriptionProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductDescription[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductDescription[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductDescriptionProvider_GetByRowguidCompletedEventHandler(object sender, ProductDescriptionProvider_GetByRowguidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductDescriptionProvider_GetByRowguidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductDescriptionProvider_GetByRowguidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductDescription Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductDescription)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductDescriptionProvider_GetByProductDescriptionIdCompletedEventHandler(object sender, ProductDescriptionProvider_GetByProductDescriptionIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductDescriptionProvider_GetByProductDescriptionIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductDescriptionProvider_GetByProductDescriptionIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductDescription Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductDescription)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductDescriptionProvider_InsertCompletedEventHandler(object sender, ProductDescriptionProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductDescriptionProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductDescriptionProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductDescription Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductDescription)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductDescriptionProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductDescriptionProvider_UpdateCompletedEventHandler(object sender, ProductDescriptionProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductDescriptionProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductDescriptionProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductDescription Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductDescription)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VAdditionalContactInfoProvider_GetAllCompletedEventHandler(object sender, VAdditionalContactInfoProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VAdditionalContactInfoProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VAdditionalContactInfoProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VAdditionalContactInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VAdditionalContactInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VAdditionalContactInfoProvider_GetCompletedEventHandler(object sender, VAdditionalContactInfoProvider_GetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VAdditionalContactInfoProvider_GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VAdditionalContactInfoProvider_GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VAdditionalContactInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VAdditionalContactInfo[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VEmployeeProvider_GetAllCompletedEventHandler(object sender, VEmployeeProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VEmployeeProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VEmployeeProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VEmployee[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VEmployee[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VEmployeeProvider_GetCompletedEventHandler(object sender, VEmployeeProvider_GetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VEmployeeProvider_GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VEmployeeProvider_GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VEmployee[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VEmployee[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VEmployeeDepartmentProvider_GetAllCompletedEventHandler(object sender, VEmployeeDepartmentProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VEmployeeDepartmentProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VEmployeeDepartmentProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VEmployeeDepartment[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VEmployeeDepartment[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VEmployeeDepartmentProvider_GetCompletedEventHandler(object sender, VEmployeeDepartmentProvider_GetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VEmployeeDepartmentProvider_GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VEmployeeDepartmentProvider_GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VEmployeeDepartment[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VEmployeeDepartment[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VEmployeeDepartmentHistoryProvider_GetAllCompletedEventHandler(object sender, VEmployeeDepartmentHistoryProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VEmployeeDepartmentHistoryProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VEmployeeDepartmentHistoryProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VEmployeeDepartmentHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VEmployeeDepartmentHistory[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VEmployeeDepartmentHistoryProvider_GetCompletedEventHandler(object sender, VEmployeeDepartmentHistoryProvider_GetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VEmployeeDepartmentHistoryProvider_GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VEmployeeDepartmentHistoryProvider_GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VEmployeeDepartmentHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VEmployeeDepartmentHistory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VIndividualCustomerProvider_GetAllCompletedEventHandler(object sender, VIndividualCustomerProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VIndividualCustomerProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VIndividualCustomerProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VIndividualCustomer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VIndividualCustomer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VIndividualCustomerProvider_GetCompletedEventHandler(object sender, VIndividualCustomerProvider_GetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VIndividualCustomerProvider_GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VIndividualCustomerProvider_GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VIndividualCustomer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VIndividualCustomer[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VIndividualDemographicsProvider_GetAllCompletedEventHandler(object sender, VIndividualDemographicsProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VIndividualDemographicsProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VIndividualDemographicsProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VIndividualDemographics[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VIndividualDemographics[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VIndividualDemographicsProvider_GetCompletedEventHandler(object sender, VIndividualDemographicsProvider_GetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VIndividualDemographicsProvider_GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VIndividualDemographicsProvider_GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VIndividualDemographics[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VIndividualDemographics[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VJobCandidateProvider_GetAllCompletedEventHandler(object sender, VJobCandidateProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VJobCandidateProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VJobCandidateProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VJobCandidate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VJobCandidate[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VJobCandidateProvider_GetCompletedEventHandler(object sender, VJobCandidateProvider_GetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VJobCandidateProvider_GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VJobCandidateProvider_GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VJobCandidate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VJobCandidate[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VJobCandidateEducationProvider_GetAllCompletedEventHandler(object sender, VJobCandidateEducationProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VJobCandidateEducationProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VJobCandidateEducationProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VJobCandidateEducation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VJobCandidateEducation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VJobCandidateEducationProvider_GetCompletedEventHandler(object sender, VJobCandidateEducationProvider_GetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VJobCandidateEducationProvider_GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VJobCandidateEducationProvider_GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VJobCandidateEducation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VJobCandidateEducation[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VJobCandidateEmploymentProvider_GetAllCompletedEventHandler(object sender, VJobCandidateEmploymentProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VJobCandidateEmploymentProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VJobCandidateEmploymentProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VJobCandidateEmployment[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VJobCandidateEmployment[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VJobCandidateEmploymentProvider_GetCompletedEventHandler(object sender, VJobCandidateEmploymentProvider_GetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VJobCandidateEmploymentProvider_GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VJobCandidateEmploymentProvider_GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VJobCandidateEmployment[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VJobCandidateEmployment[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VProductAndDescriptionProvider_GetAllCompletedEventHandler(object sender, VProductAndDescriptionProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VProductAndDescriptionProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VProductAndDescriptionProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VProductAndDescription[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VProductAndDescription[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VProductAndDescriptionProvider_GetCompletedEventHandler(object sender, VProductAndDescriptionProvider_GetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VProductAndDescriptionProvider_GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VProductAndDescriptionProvider_GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VProductAndDescription[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VProductAndDescription[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VProductModelCatalogDescriptionProvider_GetAllCompletedEventHandler(object sender, VProductModelCatalogDescriptionProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VProductModelCatalogDescriptionProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VProductModelCatalogDescriptionProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VProductModelCatalogDescription[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VProductModelCatalogDescription[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VProductModelCatalogDescriptionProvider_GetCompletedEventHandler(object sender, VProductModelCatalogDescriptionProvider_GetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VProductModelCatalogDescriptionProvider_GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VProductModelCatalogDescriptionProvider_GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VProductModelCatalogDescription[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VProductModelCatalogDescription[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VProductModelInstructionsProvider_GetAllCompletedEventHandler(object sender, VProductModelInstructionsProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VProductModelInstructionsProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VProductModelInstructionsProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VProductModelInstructions[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VProductModelInstructions[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VProductModelInstructionsProvider_GetCompletedEventHandler(object sender, VProductModelInstructionsProvider_GetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VProductModelInstructionsProvider_GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VProductModelInstructionsProvider_GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VProductModelInstructions[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VProductModelInstructions[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VSalesPersonProvider_GetAllCompletedEventHandler(object sender, VSalesPersonProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VSalesPersonProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VSalesPersonProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VSalesPerson[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VSalesPerson[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VSalesPersonProvider_GetCompletedEventHandler(object sender, VSalesPersonProvider_GetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VSalesPersonProvider_GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VSalesPersonProvider_GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VSalesPerson[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VSalesPerson[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VSalesPersonSalesByFiscalYearsProvider_GetAllCompletedEventHandler(object sender, VSalesPersonSalesByFiscalYearsProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VSalesPersonSalesByFiscalYearsProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VSalesPersonSalesByFiscalYearsProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VSalesPersonSalesByFiscalYears[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VSalesPersonSalesByFiscalYears[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VSalesPersonSalesByFiscalYearsProvider_GetCompletedEventHandler(object sender, VSalesPersonSalesByFiscalYearsProvider_GetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VSalesPersonSalesByFiscalYearsProvider_GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VSalesPersonSalesByFiscalYearsProvider_GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VSalesPersonSalesByFiscalYears[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VSalesPersonSalesByFiscalYears[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VStateProvinceCountryRegionProvider_GetAllCompletedEventHandler(object sender, VStateProvinceCountryRegionProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VStateProvinceCountryRegionProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VStateProvinceCountryRegionProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VStateProvinceCountryRegion[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VStateProvinceCountryRegion[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VStateProvinceCountryRegionProvider_GetCompletedEventHandler(object sender, VStateProvinceCountryRegionProvider_GetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VStateProvinceCountryRegionProvider_GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VStateProvinceCountryRegionProvider_GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VStateProvinceCountryRegion[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VStateProvinceCountryRegion[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VStoreWithDemographicsProvider_GetAllCompletedEventHandler(object sender, VStoreWithDemographicsProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VStoreWithDemographicsProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VStoreWithDemographicsProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VStoreWithDemographics[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VStoreWithDemographics[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VStoreWithDemographicsProvider_GetCompletedEventHandler(object sender, VStoreWithDemographicsProvider_GetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VStoreWithDemographicsProvider_GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VStoreWithDemographicsProvider_GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VStoreWithDemographics[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VStoreWithDemographics[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VVendorProvider_GetAllCompletedEventHandler(object sender, VVendorProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VVendorProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VVendorProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VVendor[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VVendor[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VVendorProvider_GetCompletedEventHandler(object sender, VVendorProvider_GetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VVendorProvider_GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VVendorProvider_GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VVendor[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VVendor[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ExecuteNonQueryCompletedEventHandler(object sender, ExecuteNonQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteNonQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteNonQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ExecuteNonQuery1CompletedEventHandler(object sender, ExecuteNonQuery1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteNonQuery1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteNonQuery1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ExecuteDataSetCompletedEventHandler(object sender, ExecuteDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ExecuteDataSet1CompletedEventHandler(object sender, ExecuteDataSet1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteDataSet1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteDataSet1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ExecuteScalarCompletedEventHandler(object sender, ExecuteScalarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteScalarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteScalarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ExecuteScalar1CompletedEventHandler(object sender, ExecuteScalar1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteScalar1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteScalar1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StoreProvider_InsertCompletedEventHandler(object sender, StoreProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StoreProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StoreProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Store Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Store)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StoreProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StoreProvider_UpdateCompletedEventHandler(object sender, StoreProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StoreProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StoreProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Store Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Store)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UnitMeasureProvider_DeleteCompletedEventHandler(object sender, UnitMeasureProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnitMeasureProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnitMeasureProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UnitMeasureProvider_FindCompletedEventHandler(object sender, UnitMeasureProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnitMeasureProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnitMeasureProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UnitMeasure[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UnitMeasure[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UnitMeasureProvider_GetAllCompletedEventHandler(object sender, UnitMeasureProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnitMeasureProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnitMeasureProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UnitMeasure[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UnitMeasure[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UnitMeasureProvider_GetPagedCompletedEventHandler(object sender, UnitMeasureProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnitMeasureProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnitMeasureProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UnitMeasure[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UnitMeasure[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UnitMeasureProvider_GetByNameCompletedEventHandler(object sender, UnitMeasureProvider_GetByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnitMeasureProvider_GetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnitMeasureProvider_GetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UnitMeasure Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UnitMeasure)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UnitMeasureProvider_GetByUnitMeasureCodeCompletedEventHandler(object sender, UnitMeasureProvider_GetByUnitMeasureCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnitMeasureProvider_GetByUnitMeasureCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnitMeasureProvider_GetByUnitMeasureCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UnitMeasure Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UnitMeasure)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UnitMeasureProvider_InsertCompletedEventHandler(object sender, UnitMeasureProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnitMeasureProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnitMeasureProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UnitMeasure Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UnitMeasure)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UnitMeasureProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UnitMeasureProvider_UpdateCompletedEventHandler(object sender, UnitMeasureProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnitMeasureProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnitMeasureProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UnitMeasure Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UnitMeasure)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesTaxRateProvider_DeleteCompletedEventHandler(object sender, SalesTaxRateProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesTaxRateProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesTaxRateProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesTaxRateProvider_FindCompletedEventHandler(object sender, SalesTaxRateProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesTaxRateProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesTaxRateProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesTaxRate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesTaxRate[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesTaxRateProvider_GetAllCompletedEventHandler(object sender, SalesTaxRateProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesTaxRateProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesTaxRateProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesTaxRate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesTaxRate[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesTaxRateProvider_GetPagedCompletedEventHandler(object sender, SalesTaxRateProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesTaxRateProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesTaxRateProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesTaxRate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesTaxRate[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesTaxRateProvider_GetByStateProvinceIdCompletedEventHandler(object sender, SalesTaxRateProvider_GetByStateProvinceIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesTaxRateProvider_GetByStateProvinceIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesTaxRateProvider_GetByStateProvinceIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesTaxRate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesTaxRate[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesTaxRateProvider_GetByRowguidCompletedEventHandler(object sender, SalesTaxRateProvider_GetByRowguidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesTaxRateProvider_GetByRowguidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesTaxRateProvider_GetByRowguidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesTaxRate Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesTaxRate)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesTaxRateProvider_GetByStateProvinceIdTaxTypeCompletedEventHandler(object sender, SalesTaxRateProvider_GetByStateProvinceIdTaxTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesTaxRateProvider_GetByStateProvinceIdTaxTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesTaxRateProvider_GetByStateProvinceIdTaxTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesTaxRate Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesTaxRate)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesTaxRateProvider_GetBySalesTaxRateIdCompletedEventHandler(object sender, SalesTaxRateProvider_GetBySalesTaxRateIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesTaxRateProvider_GetBySalesTaxRateIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesTaxRateProvider_GetBySalesTaxRateIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesTaxRate Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesTaxRate)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesTaxRateProvider_InsertCompletedEventHandler(object sender, SalesTaxRateProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesTaxRateProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesTaxRateProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesTaxRate Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesTaxRate)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesTaxRateProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesTaxRateProvider_UpdateCompletedEventHandler(object sender, SalesTaxRateProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesTaxRateProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesTaxRateProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesTaxRate Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesTaxRate)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SpecialOfferProductProvider_DeleteCompletedEventHandler(object sender, SpecialOfferProductProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpecialOfferProductProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SpecialOfferProductProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SpecialOfferProductProvider_FindCompletedEventHandler(object sender, SpecialOfferProductProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpecialOfferProductProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SpecialOfferProductProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SpecialOfferProduct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SpecialOfferProduct[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SpecialOfferProductProvider_GetAllCompletedEventHandler(object sender, SpecialOfferProductProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpecialOfferProductProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SpecialOfferProductProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SpecialOfferProduct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SpecialOfferProduct[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SpecialOfferProductProvider_GetPagedCompletedEventHandler(object sender, SpecialOfferProductProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpecialOfferProductProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SpecialOfferProductProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SpecialOfferProduct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SpecialOfferProduct[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SpecialOfferProductProvider_GetBySpecialOfferIdCompletedEventHandler(object sender, SpecialOfferProductProvider_GetBySpecialOfferIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpecialOfferProductProvider_GetBySpecialOfferIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SpecialOfferProductProvider_GetBySpecialOfferIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SpecialOfferProduct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SpecialOfferProduct[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SpecialOfferProductProvider_GetByRowguidCompletedEventHandler(object sender, SpecialOfferProductProvider_GetByRowguidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpecialOfferProductProvider_GetByRowguidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SpecialOfferProductProvider_GetByRowguidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SpecialOfferProduct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SpecialOfferProduct)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SpecialOfferProductProvider_GetByProductIdCompletedEventHandler(object sender, SpecialOfferProductProvider_GetByProductIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpecialOfferProductProvider_GetByProductIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SpecialOfferProductProvider_GetByProductIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SpecialOfferProduct[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SpecialOfferProduct[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SpecialOfferProductProvider_GetBySpecialOfferIdProductIdCompletedEventHandler(object sender, SpecialOfferProductProvider_GetBySpecialOfferIdProductIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpecialOfferProductProvider_GetBySpecialOfferIdProductIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SpecialOfferProductProvider_GetBySpecialOfferIdProductIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SpecialOfferProduct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SpecialOfferProduct)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SpecialOfferProductProvider_InsertCompletedEventHandler(object sender, SpecialOfferProductProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpecialOfferProductProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SpecialOfferProductProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SpecialOfferProduct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SpecialOfferProduct)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SpecialOfferProductProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SpecialOfferProductProvider_UpdateCompletedEventHandler(object sender, SpecialOfferProductProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpecialOfferProductProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SpecialOfferProductProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SpecialOfferProduct Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SpecialOfferProduct)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesPersonQuotaHistoryProvider_DeleteCompletedEventHandler(object sender, SalesPersonQuotaHistoryProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesPersonQuotaHistoryProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesPersonQuotaHistoryProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesPersonQuotaHistoryProvider_FindCompletedEventHandler(object sender, SalesPersonQuotaHistoryProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesPersonQuotaHistoryProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesPersonQuotaHistoryProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesPersonQuotaHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesPersonQuotaHistory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesPersonQuotaHistoryProvider_GetAllCompletedEventHandler(object sender, SalesPersonQuotaHistoryProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesPersonQuotaHistoryProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesPersonQuotaHistoryProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesPersonQuotaHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesPersonQuotaHistory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesPersonQuotaHistoryProvider_GetPagedCompletedEventHandler(object sender, SalesPersonQuotaHistoryProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesPersonQuotaHistoryProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesPersonQuotaHistoryProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesPersonQuotaHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesPersonQuotaHistory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesPersonQuotaHistoryProvider_GetBySalesPersonIdCompletedEventHandler(object sender, SalesPersonQuotaHistoryProvider_GetBySalesPersonIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesPersonQuotaHistoryProvider_GetBySalesPersonIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesPersonQuotaHistoryProvider_GetBySalesPersonIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesPersonQuotaHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesPersonQuotaHistory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesPersonQuotaHistoryProvider_GetByRowguidCompletedEventHandler(object sender, SalesPersonQuotaHistoryProvider_GetByRowguidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesPersonQuotaHistoryProvider_GetByRowguidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesPersonQuotaHistoryProvider_GetByRowguidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesPersonQuotaHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesPersonQuotaHistory)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesPersonQuotaHistoryProvider_GetBySalesPersonIdQuotaDateCompletedEventHandler(object sender, SalesPersonQuotaHistoryProvider_GetBySalesPersonIdQuotaDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesPersonQuotaHistoryProvider_GetBySalesPersonIdQuotaDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesPersonQuotaHistoryProvider_GetBySalesPersonIdQuotaDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesPersonQuotaHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesPersonQuotaHistory)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesPersonQuotaHistoryProvider_InsertCompletedEventHandler(object sender, SalesPersonQuotaHistoryProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesPersonQuotaHistoryProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesPersonQuotaHistoryProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesPersonQuotaHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesPersonQuotaHistory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesPersonQuotaHistoryProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesPersonQuotaHistoryProvider_UpdateCompletedEventHandler(object sender, SalesPersonQuotaHistoryProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesPersonQuotaHistoryProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesPersonQuotaHistoryProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesPersonQuotaHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesPersonQuotaHistory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void IndividualProvider_DeleteCompletedEventHandler(object sender, IndividualProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IndividualProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IndividualProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void IndividualProvider_FindCompletedEventHandler(object sender, IndividualProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IndividualProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IndividualProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Individual[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Individual[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void IndividualProvider_GetAllCompletedEventHandler(object sender, IndividualProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IndividualProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IndividualProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Individual[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Individual[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void IndividualProvider_GetPagedCompletedEventHandler(object sender, IndividualProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IndividualProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IndividualProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Individual[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Individual[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void IndividualProvider_GetByContactIdCompletedEventHandler(object sender, IndividualProvider_GetByContactIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IndividualProvider_GetByContactIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IndividualProvider_GetByContactIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Individual[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Individual[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void IndividualProvider_GetByCustomerIdCompletedEventHandler(object sender, IndividualProvider_GetByCustomerIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IndividualProvider_GetByCustomerIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IndividualProvider_GetByCustomerIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Individual Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Individual)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void IndividualProvider_GetByDemographicsCompletedEventHandler(object sender, IndividualProvider_GetByDemographicsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IndividualProvider_GetByDemographicsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IndividualProvider_GetByDemographicsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Individual[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Individual[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void IndividualProvider_InsertCompletedEventHandler(object sender, IndividualProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IndividualProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IndividualProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Individual Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Individual)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void IndividualProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void IndividualProvider_UpdateCompletedEventHandler(object sender, IndividualProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IndividualProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IndividualProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Individual Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Individual)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void WorkOrderProvider_DeleteCompletedEventHandler(object sender, WorkOrderProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkOrderProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkOrderProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void WorkOrderProvider_FindCompletedEventHandler(object sender, WorkOrderProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkOrderProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkOrderProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WorkOrder[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WorkOrder[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void WorkOrderProvider_GetAllCompletedEventHandler(object sender, WorkOrderProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkOrderProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkOrderProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WorkOrder[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WorkOrder[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void WorkOrderProvider_GetPagedCompletedEventHandler(object sender, WorkOrderProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkOrderProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkOrderProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WorkOrder[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WorkOrder[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void WorkOrderProvider_GetByProductIdCompletedEventHandler(object sender, WorkOrderProvider_GetByProductIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkOrderProvider_GetByProductIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkOrderProvider_GetByProductIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WorkOrder[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WorkOrder[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void WorkOrderProvider_GetByScrapReasonIdCompletedEventHandler(object sender, WorkOrderProvider_GetByScrapReasonIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkOrderProvider_GetByScrapReasonIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkOrderProvider_GetByScrapReasonIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WorkOrder[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WorkOrder[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void WorkOrderProvider_GetByWorkOrderIdCompletedEventHandler(object sender, WorkOrderProvider_GetByWorkOrderIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkOrderProvider_GetByWorkOrderIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkOrderProvider_GetByWorkOrderIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WorkOrder Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WorkOrder)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void WorkOrderProvider_InsertCompletedEventHandler(object sender, WorkOrderProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkOrderProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkOrderProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WorkOrder Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WorkOrder)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void WorkOrderProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void WorkOrderProvider_UpdateCompletedEventHandler(object sender, WorkOrderProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkOrderProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkOrderProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WorkOrder Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WorkOrder)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesTerritoryHistoryProvider_DeleteCompletedEventHandler(object sender, SalesTerritoryHistoryProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesTerritoryHistoryProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesTerritoryHistoryProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesTerritoryHistoryProvider_FindCompletedEventHandler(object sender, SalesTerritoryHistoryProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesTerritoryHistoryProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesTerritoryHistoryProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesTerritoryHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesTerritoryHistory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesTerritoryHistoryProvider_GetAllCompletedEventHandler(object sender, SalesTerritoryHistoryProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesTerritoryHistoryProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesTerritoryHistoryProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesTerritoryHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesTerritoryHistory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesTerritoryHistoryProvider_GetPagedCompletedEventHandler(object sender, SalesTerritoryHistoryProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesTerritoryHistoryProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesTerritoryHistoryProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesTerritoryHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesTerritoryHistory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesTerritoryHistoryProvider_GetBySalesPersonIdCompletedEventHandler(object sender, SalesTerritoryHistoryProvider_GetBySalesPersonIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesTerritoryHistoryProvider_GetBySalesPersonIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesTerritoryHistoryProvider_GetBySalesPersonIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesTerritoryHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesTerritoryHistory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesTerritoryHistoryProvider_GetByTerritoryIdCompletedEventHandler(object sender, SalesTerritoryHistoryProvider_GetByTerritoryIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesTerritoryHistoryProvider_GetByTerritoryIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesTerritoryHistoryProvider_GetByTerritoryIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesTerritoryHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesTerritoryHistory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesTerritoryHistoryProvider_GetByRowguidCompletedEventHandler(object sender, SalesTerritoryHistoryProvider_GetByRowguidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesTerritoryHistoryProvider_GetByRowguidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesTerritoryHistoryProvider_GetByRowguidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesTerritoryHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesTerritoryHistory)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesTerritoryHistoryProvider_GetBySalesPersonIdStartDateTerritoryIdCompletedEventHandler(object sender, SalesTerritoryHistoryProvider_GetBySalesPersonIdStartDateTerritoryIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesTerritoryHistoryProvider_GetBySalesPersonIdStartDateTerritoryIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesTerritoryHistoryProvider_GetBySalesPersonIdStartDateTerritoryIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesTerritoryHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesTerritoryHistory)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesTerritoryHistoryProvider_InsertCompletedEventHandler(object sender, SalesTerritoryHistoryProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesTerritoryHistoryProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesTerritoryHistoryProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesTerritoryHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesTerritoryHistory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesTerritoryHistoryProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesTerritoryHistoryProvider_UpdateCompletedEventHandler(object sender, SalesTerritoryHistoryProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesTerritoryHistoryProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesTerritoryHistoryProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesTerritoryHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesTerritoryHistory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderDetailProvider_DeleteCompletedEventHandler(object sender, SalesOrderDetailProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderDetailProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderDetailProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderDetailProvider_FindCompletedEventHandler(object sender, SalesOrderDetailProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderDetailProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderDetailProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderDetail[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderDetailProvider_GetAllCompletedEventHandler(object sender, SalesOrderDetailProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderDetailProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderDetailProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderDetail[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderDetailProvider_GetPagedCompletedEventHandler(object sender, SalesOrderDetailProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderDetailProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderDetailProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderDetail[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderDetailProvider_GetBySalesOrderIdCompletedEventHandler(object sender, SalesOrderDetailProvider_GetBySalesOrderIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderDetailProvider_GetBySalesOrderIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderDetailProvider_GetBySalesOrderIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderDetail[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderDetailProvider_GetBySpecialOfferIdProductIdCompletedEventHandler(object sender, SalesOrderDetailProvider_GetBySpecialOfferIdProductIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderDetailProvider_GetBySpecialOfferIdProductIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderDetailProvider_GetBySpecialOfferIdProductIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderDetail[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderDetailProvider_GetByRowguidCompletedEventHandler(object sender, SalesOrderDetailProvider_GetByRowguidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderDetailProvider_GetByRowguidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderDetailProvider_GetByRowguidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderDetail)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderDetailProvider_GetByProductIdCompletedEventHandler(object sender, SalesOrderDetailProvider_GetByProductIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderDetailProvider_GetByProductIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderDetailProvider_GetByProductIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderDetail[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderDetailProvider_GetBySalesOrderIdSalesOrderDetailIdCompletedEventHandler(object sender, SalesOrderDetailProvider_GetBySalesOrderIdSalesOrderDetailIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderDetailProvider_GetBySalesOrderIdSalesOrderDetailIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderDetailProvider_GetBySalesOrderIdSalesOrderDetailIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderDetail)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderDetailProvider_InsertCompletedEventHandler(object sender, SalesOrderDetailProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderDetailProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderDetailProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderDetailProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderDetailProvider_UpdateCompletedEventHandler(object sender, SalesOrderDetailProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderDetailProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderDetailProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TestVariantProvider_DeleteCompletedEventHandler(object sender, TestVariantProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestVariantProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestVariantProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TestVariantProvider_FindCompletedEventHandler(object sender, TestVariantProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestVariantProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestVariantProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TestVariant[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TestVariant[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TestVariantProvider_GetAllCompletedEventHandler(object sender, TestVariantProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestVariantProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestVariantProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TestVariant[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TestVariant[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TestVariantProvider_GetPagedCompletedEventHandler(object sender, TestVariantProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestVariantProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestVariantProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TestVariant[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TestVariant[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TestVariantProvider_GetByTestVariantIdCompletedEventHandler(object sender, TestVariantProvider_GetByTestVariantIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestVariantProvider_GetByTestVariantIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestVariantProvider_GetByTestVariantIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TestVariant Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TestVariant)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TestVariantProvider_InsertCompletedEventHandler(object sender, TestVariantProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestVariantProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestVariantProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TestVariant Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TestVariant)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TestVariantProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TestVariantProvider_UpdateCompletedEventHandler(object sender, TestVariantProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestVariantProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestVariantProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TestVariant Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TestVariant)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StoreContactProvider_DeleteCompletedEventHandler(object sender, StoreContactProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StoreContactProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StoreContactProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StoreContactProvider_FindCompletedEventHandler(object sender, StoreContactProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StoreContactProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StoreContactProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StoreContact[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StoreContact[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StoreContactProvider_GetAllCompletedEventHandler(object sender, StoreContactProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StoreContactProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StoreContactProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StoreContact[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StoreContact[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StoreContactProvider_GetPagedCompletedEventHandler(object sender, StoreContactProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StoreContactProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StoreContactProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StoreContact[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StoreContact[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StoreContactProvider_GetByCustomerIdCompletedEventHandler(object sender, StoreContactProvider_GetByCustomerIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StoreContactProvider_GetByCustomerIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StoreContactProvider_GetByCustomerIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StoreContact[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StoreContact[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StoreContactProvider_GetByRowguidCompletedEventHandler(object sender, StoreContactProvider_GetByRowguidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StoreContactProvider_GetByRowguidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StoreContactProvider_GetByRowguidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StoreContact Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StoreContact)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StoreContactProvider_GetByContactIdCompletedEventHandler(object sender, StoreContactProvider_GetByContactIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StoreContactProvider_GetByContactIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StoreContactProvider_GetByContactIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StoreContact[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StoreContact[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StoreContactProvider_GetByContactTypeIdCompletedEventHandler(object sender, StoreContactProvider_GetByContactTypeIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StoreContactProvider_GetByContactTypeIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StoreContactProvider_GetByContactTypeIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StoreContact[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StoreContact[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StoreContactProvider_GetByCustomerIdContactIdCompletedEventHandler(object sender, StoreContactProvider_GetByCustomerIdContactIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StoreContactProvider_GetByCustomerIdContactIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StoreContactProvider_GetByCustomerIdContactIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StoreContact Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StoreContact)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StoreContactProvider_InsertCompletedEventHandler(object sender, StoreContactProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StoreContactProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StoreContactProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StoreContact Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StoreContact)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StoreContactProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StoreContactProvider_UpdateCompletedEventHandler(object sender, StoreContactProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StoreContactProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StoreContactProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StoreContact Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StoreContact)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void NullFkeyParentProvider_DeleteCompletedEventHandler(object sender, NullFkeyParentProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NullFkeyParentProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NullFkeyParentProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void NullFkeyParentProvider_FindCompletedEventHandler(object sender, NullFkeyParentProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NullFkeyParentProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NullFkeyParentProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NullFkeyParent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NullFkeyParent[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void NullFkeyParentProvider_GetAllCompletedEventHandler(object sender, NullFkeyParentProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NullFkeyParentProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NullFkeyParentProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NullFkeyParent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NullFkeyParent[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void NullFkeyParentProvider_GetPagedCompletedEventHandler(object sender, NullFkeyParentProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NullFkeyParentProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NullFkeyParentProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NullFkeyParent[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NullFkeyParent[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void NullFkeyParentProvider_GetByNullFkeyParentIdCompletedEventHandler(object sender, NullFkeyParentProvider_GetByNullFkeyParentIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NullFkeyParentProvider_GetByNullFkeyParentIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NullFkeyParentProvider_GetByNullFkeyParentIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NullFkeyParent Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NullFkeyParent)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void NullFkeyParentProvider_InsertCompletedEventHandler(object sender, NullFkeyParentProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NullFkeyParentProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NullFkeyParentProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NullFkeyParent Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NullFkeyParent)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void NullFkeyParentProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void NullFkeyParentProvider_UpdateCompletedEventHandler(object sender, NullFkeyParentProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NullFkeyParentProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NullFkeyParentProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NullFkeyParent Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NullFkeyParent)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ShoppingCartItemProvider_DeleteCompletedEventHandler(object sender, ShoppingCartItemProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShoppingCartItemProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShoppingCartItemProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ShoppingCartItemProvider_FindCompletedEventHandler(object sender, ShoppingCartItemProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShoppingCartItemProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShoppingCartItemProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ShoppingCartItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ShoppingCartItem[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ShoppingCartItemProvider_GetAllCompletedEventHandler(object sender, ShoppingCartItemProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShoppingCartItemProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShoppingCartItemProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ShoppingCartItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ShoppingCartItem[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ShoppingCartItemProvider_GetPagedCompletedEventHandler(object sender, ShoppingCartItemProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShoppingCartItemProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShoppingCartItemProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ShoppingCartItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ShoppingCartItem[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ShoppingCartItemProvider_GetByProductIdCompletedEventHandler(object sender, ShoppingCartItemProvider_GetByProductIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShoppingCartItemProvider_GetByProductIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShoppingCartItemProvider_GetByProductIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ShoppingCartItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ShoppingCartItem[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ShoppingCartItemProvider_GetByShoppingCartIdProductIdCompletedEventHandler(object sender, ShoppingCartItemProvider_GetByShoppingCartIdProductIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShoppingCartItemProvider_GetByShoppingCartIdProductIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShoppingCartItemProvider_GetByShoppingCartIdProductIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ShoppingCartItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ShoppingCartItem[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ShoppingCartItemProvider_GetByShoppingCartItemIdCompletedEventHandler(object sender, ShoppingCartItemProvider_GetByShoppingCartItemIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShoppingCartItemProvider_GetByShoppingCartItemIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShoppingCartItemProvider_GetByShoppingCartItemIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ShoppingCartItem Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ShoppingCartItem)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ShoppingCartItemProvider_InsertCompletedEventHandler(object sender, ShoppingCartItemProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShoppingCartItemProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShoppingCartItemProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ShoppingCartItem Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ShoppingCartItem)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ShoppingCartItemProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ShoppingCartItemProvider_UpdateCompletedEventHandler(object sender, ShoppingCartItemProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShoppingCartItemProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShoppingCartItemProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ShoppingCartItem Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ShoppingCartItem)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void NullFkeyChildProvider_DeleteCompletedEventHandler(object sender, NullFkeyChildProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NullFkeyChildProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NullFkeyChildProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void NullFkeyChildProvider_FindCompletedEventHandler(object sender, NullFkeyChildProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NullFkeyChildProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NullFkeyChildProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NullFkeyChild[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NullFkeyChild[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void NullFkeyChildProvider_GetAllCompletedEventHandler(object sender, NullFkeyChildProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NullFkeyChildProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NullFkeyChildProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NullFkeyChild[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NullFkeyChild[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CustomerAddressProvider_DeleteCompletedEventHandler(object sender, CustomerAddressProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerAddressProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerAddressProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CustomerAddressProvider_FindCompletedEventHandler(object sender, CustomerAddressProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerAddressProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerAddressProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerAddress[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerAddress[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CustomerAddressProvider_GetAllCompletedEventHandler(object sender, CustomerAddressProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerAddressProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerAddressProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerAddress[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerAddress[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CustomerAddressProvider_GetPagedCompletedEventHandler(object sender, CustomerAddressProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerAddressProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerAddressProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerAddress[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerAddress[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CustomerAddressProvider_GetByAddressIdCompletedEventHandler(object sender, CustomerAddressProvider_GetByAddressIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerAddressProvider_GetByAddressIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerAddressProvider_GetByAddressIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerAddress[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerAddress[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CustomerAddressProvider_GetByAddressTypeIdCompletedEventHandler(object sender, CustomerAddressProvider_GetByAddressTypeIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerAddressProvider_GetByAddressTypeIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerAddressProvider_GetByAddressTypeIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerAddress[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerAddress[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CustomerAddressProvider_GetByCustomerIdCompletedEventHandler(object sender, CustomerAddressProvider_GetByCustomerIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerAddressProvider_GetByCustomerIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerAddressProvider_GetByCustomerIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerAddress[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerAddress[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CustomerAddressProvider_GetByRowguidCompletedEventHandler(object sender, CustomerAddressProvider_GetByRowguidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerAddressProvider_GetByRowguidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerAddressProvider_GetByRowguidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerAddress Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerAddress)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CustomerAddressProvider_GetByCustomerIdAddressIdCompletedEventHandler(object sender, CustomerAddressProvider_GetByCustomerIdAddressIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerAddressProvider_GetByCustomerIdAddressIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerAddressProvider_GetByCustomerIdAddressIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerAddress Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerAddress)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CustomerAddressProvider_InsertCompletedEventHandler(object sender, CustomerAddressProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerAddressProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerAddressProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerAddress Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerAddress)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CustomerAddressProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CustomerAddressProvider_UpdateCompletedEventHandler(object sender, CustomerAddressProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerAddressProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerAddressProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerAddress Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerAddress)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductSubcategoryProvider_DeleteCompletedEventHandler(object sender, ProductSubcategoryProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductSubcategoryProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductSubcategoryProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductSubcategoryProvider_FindCompletedEventHandler(object sender, ProductSubcategoryProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductSubcategoryProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductSubcategoryProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductSubcategory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductSubcategory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductSubcategoryProvider_GetAllCompletedEventHandler(object sender, ProductSubcategoryProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductSubcategoryProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductSubcategoryProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductSubcategory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductSubcategory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductSubcategoryProvider_GetPagedCompletedEventHandler(object sender, ProductSubcategoryProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductSubcategoryProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductSubcategoryProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductSubcategory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductSubcategory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductSubcategoryProvider_GetByProductCategoryIdCompletedEventHandler(object sender, ProductSubcategoryProvider_GetByProductCategoryIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductSubcategoryProvider_GetByProductCategoryIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductSubcategoryProvider_GetByProductCategoryIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductSubcategory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductSubcategory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductSubcategoryProvider_GetByNameCompletedEventHandler(object sender, ProductSubcategoryProvider_GetByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductSubcategoryProvider_GetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductSubcategoryProvider_GetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductSubcategory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductSubcategory)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductSubcategoryProvider_GetByRowguidCompletedEventHandler(object sender, ProductSubcategoryProvider_GetByRowguidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductSubcategoryProvider_GetByRowguidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductSubcategoryProvider_GetByRowguidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductSubcategory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductSubcategory)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductSubcategoryProvider_GetByProductSubcategoryIdCompletedEventHandler(object sender, ProductSubcategoryProvider_GetByProductSubcategoryIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductSubcategoryProvider_GetByProductSubcategoryIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductSubcategoryProvider_GetByProductSubcategoryIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductSubcategory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductSubcategory)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductSubcategoryProvider_InsertCompletedEventHandler(object sender, ProductSubcategoryProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductSubcategoryProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductSubcategoryProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductSubcategory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductSubcategory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductSubcategoryProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductSubcategoryProvider_UpdateCompletedEventHandler(object sender, ProductSubcategoryProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductSubcategoryProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductSubcategoryProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductSubcategory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductSubcategory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VendorContactProvider_DeleteCompletedEventHandler(object sender, VendorContactProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorContactProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VendorContactProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VendorContactProvider_FindCompletedEventHandler(object sender, VendorContactProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorContactProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VendorContactProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VendorContact[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VendorContact[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VendorContactProvider_GetAllCompletedEventHandler(object sender, VendorContactProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorContactProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VendorContactProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VendorContact[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VendorContact[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VendorContactProvider_GetPagedCompletedEventHandler(object sender, VendorContactProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorContactProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VendorContactProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VendorContact[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VendorContact[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VendorContactProvider_GetByVendorIdCompletedEventHandler(object sender, VendorContactProvider_GetByVendorIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorContactProvider_GetByVendorIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VendorContactProvider_GetByVendorIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VendorContact[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VendorContact[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VendorContactProvider_GetByContactIdCompletedEventHandler(object sender, VendorContactProvider_GetByContactIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorContactProvider_GetByContactIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VendorContactProvider_GetByContactIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VendorContact[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VendorContact[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VendorContactProvider_GetByContactTypeIdCompletedEventHandler(object sender, VendorContactProvider_GetByContactTypeIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorContactProvider_GetByContactTypeIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VendorContactProvider_GetByContactTypeIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VendorContact[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VendorContact[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VendorContactProvider_GetByVendorIdContactIdCompletedEventHandler(object sender, VendorContactProvider_GetByVendorIdContactIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorContactProvider_GetByVendorIdContactIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VendorContactProvider_GetByVendorIdContactIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VendorContact Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VendorContact)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VendorContactProvider_InsertCompletedEventHandler(object sender, VendorContactProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorContactProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VendorContactProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VendorContact Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VendorContact)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VendorContactProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VendorContactProvider_UpdateCompletedEventHandler(object sender, VendorContactProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorContactProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VendorContactProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VendorContact Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VendorContact)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ContactCreditCardProvider_DeleteCompletedEventHandler(object sender, ContactCreditCardProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactCreditCardProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactCreditCardProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ContactCreditCardProvider_FindCompletedEventHandler(object sender, ContactCreditCardProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactCreditCardProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactCreditCardProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContactCreditCard[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContactCreditCard[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ContactCreditCardProvider_GetAllCompletedEventHandler(object sender, ContactCreditCardProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactCreditCardProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactCreditCardProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContactCreditCard[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContactCreditCard[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ContactCreditCardProvider_GetPagedCompletedEventHandler(object sender, ContactCreditCardProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactCreditCardProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactCreditCardProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContactCreditCard[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContactCreditCard[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ContactCreditCardProvider_GetByContactIdCompletedEventHandler(object sender, ContactCreditCardProvider_GetByContactIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactCreditCardProvider_GetByContactIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactCreditCardProvider_GetByContactIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContactCreditCard[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContactCreditCard[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ContactCreditCardProvider_GetByCreditCardIdCompletedEventHandler(object sender, ContactCreditCardProvider_GetByCreditCardIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactCreditCardProvider_GetByCreditCardIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactCreditCardProvider_GetByCreditCardIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContactCreditCard[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContactCreditCard[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ContactCreditCardProvider_GetByContactIdCreditCardIdCompletedEventHandler(object sender, ContactCreditCardProvider_GetByContactIdCreditCardIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactCreditCardProvider_GetByContactIdCreditCardIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactCreditCardProvider_GetByContactIdCreditCardIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContactCreditCard Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContactCreditCard)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ContactCreditCardProvider_InsertCompletedEventHandler(object sender, ContactCreditCardProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactCreditCardProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactCreditCardProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContactCreditCard Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContactCreditCard)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ContactCreditCardProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ContactCreditCardProvider_UpdateCompletedEventHandler(object sender, ContactCreditCardProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactCreditCardProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactCreditCardProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContactCreditCard Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContactCreditCard)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductCategoryProvider_DeleteCompletedEventHandler(object sender, ProductCategoryProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductCategoryProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductCategoryProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductCategoryProvider_FindCompletedEventHandler(object sender, ProductCategoryProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductCategoryProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductCategoryProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductCategory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductCategory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductCategoryProvider_GetAllCompletedEventHandler(object sender, ProductCategoryProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductCategoryProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductCategoryProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductCategory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductCategory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductCategoryProvider_GetPagedCompletedEventHandler(object sender, ProductCategoryProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductCategoryProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductCategoryProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductCategory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductCategory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductCategoryProvider_GetByNameCompletedEventHandler(object sender, ProductCategoryProvider_GetByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductCategoryProvider_GetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductCategoryProvider_GetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductCategory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductCategory)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductCategoryProvider_GetByRowguidCompletedEventHandler(object sender, ProductCategoryProvider_GetByRowguidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductCategoryProvider_GetByRowguidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductCategoryProvider_GetByRowguidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductCategory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductCategory)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductCategoryProvider_GetByProductCategoryIdCompletedEventHandler(object sender, ProductCategoryProvider_GetByProductCategoryIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductCategoryProvider_GetByProductCategoryIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductCategoryProvider_GetByProductCategoryIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductCategory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductCategory)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductCategoryProvider_InsertCompletedEventHandler(object sender, ProductCategoryProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductCategoryProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductCategoryProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductCategory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductCategory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductCategoryProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductCategoryProvider_UpdateCompletedEventHandler(object sender, ProductCategoryProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductCategoryProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductCategoryProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductCategory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductCategory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CountryRegionCurrencyProvider_DeleteCompletedEventHandler(object sender, CountryRegionCurrencyProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountryRegionCurrencyProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountryRegionCurrencyProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CountryRegionCurrencyProvider_FindCompletedEventHandler(object sender, CountryRegionCurrencyProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountryRegionCurrencyProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountryRegionCurrencyProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CountryRegionCurrency[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CountryRegionCurrency[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CountryRegionCurrencyProvider_GetAllCompletedEventHandler(object sender, CountryRegionCurrencyProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountryRegionCurrencyProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountryRegionCurrencyProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CountryRegionCurrency[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CountryRegionCurrency[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CountryRegionCurrencyProvider_GetPagedCompletedEventHandler(object sender, CountryRegionCurrencyProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountryRegionCurrencyProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountryRegionCurrencyProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CountryRegionCurrency[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CountryRegionCurrency[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CountryRegionCurrencyProvider_GetByCountryRegionCodeCompletedEventHandler(object sender, CountryRegionCurrencyProvider_GetByCountryRegionCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountryRegionCurrencyProvider_GetByCountryRegionCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountryRegionCurrencyProvider_GetByCountryRegionCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CountryRegionCurrency[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CountryRegionCurrency[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CountryRegionCurrencyProvider_GetByCurrencyCodeCompletedEventHandler(object sender, CountryRegionCurrencyProvider_GetByCurrencyCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountryRegionCurrencyProvider_GetByCurrencyCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountryRegionCurrencyProvider_GetByCurrencyCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CountryRegionCurrency[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CountryRegionCurrency[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CountryRegionCurrencyProvider_GetByCountryRegionCodeCurrencyCodeCompletedEventHandler(object sender, CountryRegionCurrencyProvider_GetByCountryRegionCodeCurrencyCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountryRegionCurrencyProvider_GetByCountryRegionCodeCurrencyCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountryRegionCurrencyProvider_GetByCountryRegionCodeCurrencyCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CountryRegionCurrency Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CountryRegionCurrency)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CountryRegionCurrencyProvider_InsertCompletedEventHandler(object sender, CountryRegionCurrencyProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountryRegionCurrencyProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountryRegionCurrencyProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CountryRegionCurrency Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CountryRegionCurrency)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CountryRegionCurrencyProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CountryRegionCurrencyProvider_UpdateCompletedEventHandler(object sender, CountryRegionCurrencyProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountryRegionCurrencyProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountryRegionCurrencyProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CountryRegionCurrency Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CountryRegionCurrency)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelProvider_GetByIllustrationIdFromProductModelIllustrationCompletedEventHandler(object sender, ProductModelProvider_GetByIllustrationIdFromProductModelIllustrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductModelProvider_GetByIllustrationIdFromProductModelIllustrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductModelProvider_GetByIllustrationIdFromProductModelIllustrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductModel[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelProvider_GetByCultureIdFromProductModelProductDescriptionCultureCompletedEventHandler(object sender, ProductModelProvider_GetByCultureIdFromProductModelProductDescriptionCultureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductModelProvider_GetByCultureIdFromProductModelProductDescriptionCultureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductModelProvider_GetByCultureIdFromProductModelProductDescriptionCultureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductModel[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureCompletedEventHandler(object sender, ProductModelProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductModelProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductModelProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductModel[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelProvider_DeleteCompletedEventHandler(object sender, ProductModelProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductModelProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductModelProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelProvider_FindCompletedEventHandler(object sender, ProductModelProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductModelProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductModelProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductModel[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelProvider_GetAllCompletedEventHandler(object sender, ProductModelProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductModelProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductModelProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductModel[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelProvider_GetPagedCompletedEventHandler(object sender, ProductModelProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductModelProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductModelProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductModel[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelProvider_GetByNameCompletedEventHandler(object sender, ProductModelProvider_GetByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductModelProvider_GetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductModelProvider_GetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductModel)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelProvider_GetByRowguidCompletedEventHandler(object sender, ProductModelProvider_GetByRowguidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductModelProvider_GetByRowguidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductModelProvider_GetByRowguidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductModel)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelProvider_GetByProductModelIdCompletedEventHandler(object sender, ProductModelProvider_GetByProductModelIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductModelProvider_GetByProductModelIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductModelProvider_GetByProductModelIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductModel)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelProvider_GetByCatalogDescriptionCompletedEventHandler(object sender, ProductModelProvider_GetByCatalogDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductModelProvider_GetByCatalogDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductModelProvider_GetByCatalogDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductModel[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelProvider_GetByInstructionsCompletedEventHandler(object sender, ProductModelProvider_GetByInstructionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductModelProvider_GetByInstructionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductModelProvider_GetByInstructionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductModel[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelProvider_InsertCompletedEventHandler(object sender, ProductModelProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductModelProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductModelProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelProvider_UpdateCompletedEventHandler(object sender, ProductModelProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductModelProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductModelProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductProvider_GetByDocumentIdFromProductDocumentCompletedEventHandler(object sender, ProductProvider_GetByDocumentIdFromProductDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductProvider_GetByDocumentIdFromProductDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductProvider_GetByDocumentIdFromProductDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductProvider_GetByLocationIdFromProductInventoryCompletedEventHandler(object sender, ProductProvider_GetByLocationIdFromProductInventoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductProvider_GetByLocationIdFromProductInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductProvider_GetByLocationIdFromProductInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductProvider_GetByProductPhotoIdFromProductProductPhotoCompletedEventHandler(object sender, ProductProvider_GetByProductPhotoIdFromProductProductPhotoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductProvider_GetByProductPhotoIdFromProductProductPhotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductProvider_GetByProductPhotoIdFromProductProductPhotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductProvider_GetByVendorIdFromProductVendorCompletedEventHandler(object sender, ProductProvider_GetByVendorIdFromProductVendorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductProvider_GetByVendorIdFromProductVendorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductProvider_GetByVendorIdFromProductVendorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductProvider_GetBySpecialOfferIdFromSpecialOfferProductCompletedEventHandler(object sender, ProductProvider_GetBySpecialOfferIdFromSpecialOfferProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductProvider_GetBySpecialOfferIdFromSpecialOfferProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductProvider_GetBySpecialOfferIdFromSpecialOfferProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductProvider_DeleteCompletedEventHandler(object sender, ProductProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductProvider_FindCompletedEventHandler(object sender, ProductProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductProvider_GetAllCompletedEventHandler(object sender, ProductProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductProvider_GetPagedCompletedEventHandler(object sender, ProductProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductProvider_GetByProductModelIdCompletedEventHandler(object sender, ProductProvider_GetByProductModelIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductProvider_GetByProductModelIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductProvider_GetByProductModelIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductProvider_GetByProductSubcategoryIdCompletedEventHandler(object sender, ProductProvider_GetByProductSubcategoryIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductProvider_GetByProductSubcategoryIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductProvider_GetByProductSubcategoryIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductProvider_GetBySizeUnitMeasureCodeCompletedEventHandler(object sender, ProductProvider_GetBySizeUnitMeasureCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductProvider_GetBySizeUnitMeasureCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductProvider_GetBySizeUnitMeasureCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductProvider_GetByWeightUnitMeasureCodeCompletedEventHandler(object sender, ProductProvider_GetByWeightUnitMeasureCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductProvider_GetByWeightUnitMeasureCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductProvider_GetByWeightUnitMeasureCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductProvider_GetByNameCompletedEventHandler(object sender, ProductProvider_GetByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductProvider_GetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductProvider_GetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductProvider_GetByProductNumberCompletedEventHandler(object sender, ProductProvider_GetByProductNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductProvider_GetByProductNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductProvider_GetByProductNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductProvider_GetByRowguidCompletedEventHandler(object sender, ProductProvider_GetByRowguidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductProvider_GetByRowguidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductProvider_GetByRowguidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductProvider_GetByProductIdCompletedEventHandler(object sender, ProductProvider_GetByProductIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductProvider_GetByProductIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductProvider_GetByProductIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductProvider_InsertCompletedEventHandler(object sender, ProductProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductProvider_UpdateCompletedEventHandler(object sender, ProductProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SpecialOfferProvider_GetByProductIdFromSpecialOfferProductCompletedEventHandler(object sender, SpecialOfferProvider_GetByProductIdFromSpecialOfferProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpecialOfferProvider_GetByProductIdFromSpecialOfferProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SpecialOfferProvider_GetByProductIdFromSpecialOfferProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SpecialOffer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SpecialOffer[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SpecialOfferProvider_DeleteCompletedEventHandler(object sender, SpecialOfferProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpecialOfferProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SpecialOfferProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SpecialOfferProvider_FindCompletedEventHandler(object sender, SpecialOfferProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpecialOfferProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SpecialOfferProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SpecialOffer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SpecialOffer[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SpecialOfferProvider_GetAllCompletedEventHandler(object sender, SpecialOfferProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpecialOfferProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SpecialOfferProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SpecialOffer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SpecialOffer[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SpecialOfferProvider_GetPagedCompletedEventHandler(object sender, SpecialOfferProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpecialOfferProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SpecialOfferProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SpecialOffer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SpecialOffer[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SpecialOfferProvider_GetByRowguidCompletedEventHandler(object sender, SpecialOfferProvider_GetByRowguidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpecialOfferProvider_GetByRowguidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SpecialOfferProvider_GetByRowguidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SpecialOffer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SpecialOffer)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SpecialOfferProvider_GetBySpecialOfferIdCompletedEventHandler(object sender, SpecialOfferProvider_GetBySpecialOfferIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpecialOfferProvider_GetBySpecialOfferIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SpecialOfferProvider_GetBySpecialOfferIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SpecialOffer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SpecialOffer)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SpecialOfferProvider_InsertCompletedEventHandler(object sender, SpecialOfferProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpecialOfferProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SpecialOfferProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SpecialOffer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SpecialOffer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SpecialOfferProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SpecialOfferProvider_UpdateCompletedEventHandler(object sender, SpecialOfferProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpecialOfferProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SpecialOfferProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SpecialOffer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SpecialOffer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderHeaderSalesReasonProvider_DeleteCompletedEventHandler(object sender, SalesOrderHeaderSalesReasonProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderHeaderSalesReasonProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderHeaderSalesReasonProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderHeaderSalesReasonProvider_FindCompletedEventHandler(object sender, SalesOrderHeaderSalesReasonProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderHeaderSalesReasonProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderHeaderSalesReasonProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderHeaderSalesReason[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderHeaderSalesReason[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderHeaderSalesReasonProvider_GetAllCompletedEventHandler(object sender, SalesOrderHeaderSalesReasonProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderHeaderSalesReasonProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderHeaderSalesReasonProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderHeaderSalesReason[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderHeaderSalesReason[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderHeaderSalesReasonProvider_GetPagedCompletedEventHandler(object sender, SalesOrderHeaderSalesReasonProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderHeaderSalesReasonProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderHeaderSalesReasonProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderHeaderSalesReason[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderHeaderSalesReason[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdCompletedEventHandler(object sender, SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderHeaderSalesReason[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderHeaderSalesReason[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderHeaderSalesReasonProvider_GetBySalesReasonIdCompletedEventHandler(object sender, SalesOrderHeaderSalesReasonProvider_GetBySalesReasonIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderHeaderSalesReasonProvider_GetBySalesReasonIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderHeaderSalesReasonProvider_GetBySalesReasonIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderHeaderSalesReason[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderHeaderSalesReason[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdSalesReasonIdCompletedEventHandler(object sender, SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdSalesReasonIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdSalesReasonIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderHeaderSalesReasonProvider_GetBySalesOrderIdSalesReasonIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderHeaderSalesReason Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderHeaderSalesReason)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderHeaderSalesReasonProvider_InsertCompletedEventHandler(object sender, SalesOrderHeaderSalesReasonProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderHeaderSalesReasonProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderHeaderSalesReasonProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderHeaderSalesReason Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderHeaderSalesReason)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderHeaderSalesReasonProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderHeaderSalesReasonProvider_UpdateCompletedEventHandler(object sender, SalesOrderHeaderSalesReasonProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderHeaderSalesReasonProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderHeaderSalesReasonProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderHeaderSalesReason Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderHeaderSalesReason)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StoreProvider_GetByContactIdFromStoreContactCompletedEventHandler(object sender, StoreProvider_GetByContactIdFromStoreContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StoreProvider_GetByContactIdFromStoreContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StoreProvider_GetByContactIdFromStoreContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Store[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Store[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StoreProvider_DeleteCompletedEventHandler(object sender, StoreProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StoreProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StoreProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StoreProvider_FindCompletedEventHandler(object sender, StoreProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StoreProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StoreProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Store[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Store[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StoreProvider_GetAllCompletedEventHandler(object sender, StoreProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StoreProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StoreProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Store[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Store[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StoreProvider_GetPagedCompletedEventHandler(object sender, StoreProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StoreProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StoreProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Store[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Store[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StoreProvider_GetByRowguidCompletedEventHandler(object sender, StoreProvider_GetByRowguidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StoreProvider_GetByRowguidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StoreProvider_GetByRowguidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Store Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Store)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StoreProvider_GetBySalesPersonIdCompletedEventHandler(object sender, StoreProvider_GetBySalesPersonIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StoreProvider_GetBySalesPersonIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StoreProvider_GetBySalesPersonIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Store[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Store[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StoreProvider_GetByCustomerIdCompletedEventHandler(object sender, StoreProvider_GetByCustomerIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StoreProvider_GetByCustomerIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StoreProvider_GetByCustomerIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Store Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Store)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StoreProvider_GetByDemographicsCompletedEventHandler(object sender, StoreProvider_GetByDemographicsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StoreProvider_GetByDemographicsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StoreProvider_GetByDemographicsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Store[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Store[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductListPriceHistoryProvider_DeleteCompletedEventHandler(object sender, ProductListPriceHistoryProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductListPriceHistoryProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductListPriceHistoryProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductListPriceHistoryProvider_FindCompletedEventHandler(object sender, ProductListPriceHistoryProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductListPriceHistoryProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductListPriceHistoryProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductListPriceHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductListPriceHistory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductListPriceHistoryProvider_GetAllCompletedEventHandler(object sender, ProductListPriceHistoryProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductListPriceHistoryProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductListPriceHistoryProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductListPriceHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductListPriceHistory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductListPriceHistoryProvider_GetPagedCompletedEventHandler(object sender, ProductListPriceHistoryProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductListPriceHistoryProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductListPriceHistoryProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductListPriceHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductListPriceHistory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductListPriceHistoryProvider_GetByProductIdCompletedEventHandler(object sender, ProductListPriceHistoryProvider_GetByProductIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductListPriceHistoryProvider_GetByProductIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductListPriceHistoryProvider_GetByProductIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductListPriceHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductListPriceHistory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductListPriceHistoryProvider_GetByProductIdStartDateCompletedEventHandler(object sender, ProductListPriceHistoryProvider_GetByProductIdStartDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductListPriceHistoryProvider_GetByProductIdStartDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductListPriceHistoryProvider_GetByProductIdStartDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductListPriceHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductListPriceHistory)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductListPriceHistoryProvider_InsertCompletedEventHandler(object sender, ProductListPriceHistoryProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductListPriceHistoryProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductListPriceHistoryProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductListPriceHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductListPriceHistory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductListPriceHistoryProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductListPriceHistoryProvider_UpdateCompletedEventHandler(object sender, ProductListPriceHistoryProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductListPriceHistoryProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductListPriceHistoryProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductListPriceHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductListPriceHistory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelIllustrationProvider_DeleteCompletedEventHandler(object sender, ProductModelIllustrationProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductModelIllustrationProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductModelIllustrationProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelIllustrationProvider_FindCompletedEventHandler(object sender, ProductModelIllustrationProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductModelIllustrationProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductModelIllustrationProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductModelIllustration[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductModelIllustration[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelIllustrationProvider_GetAllCompletedEventHandler(object sender, ProductModelIllustrationProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductModelIllustrationProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductModelIllustrationProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductModelIllustration[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductModelIllustration[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelIllustrationProvider_GetPagedCompletedEventHandler(object sender, ProductModelIllustrationProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductModelIllustrationProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductModelIllustrationProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductModelIllustration[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductModelIllustration[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelIllustrationProvider_GetByIllustrationIdCompletedEventHandler(object sender, ProductModelIllustrationProvider_GetByIllustrationIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductModelIllustrationProvider_GetByIllustrationIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductModelIllustrationProvider_GetByIllustrationIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductModelIllustration[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductModelIllustration[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelIllustrationProvider_GetByProductModelIdCompletedEventHandler(object sender, ProductModelIllustrationProvider_GetByProductModelIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductModelIllustrationProvider_GetByProductModelIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductModelIllustrationProvider_GetByProductModelIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductModelIllustration[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductModelIllustration[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelIllustrationProvider_GetByProductModelIdIllustrationIdCompletedEventHandler(object sender, ProductModelIllustrationProvider_GetByProductModelIdIllustrationIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductModelIllustrationProvider_GetByProductModelIdIllustrationIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductModelIllustrationProvider_GetByProductModelIdIllustrationIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductModelIllustration Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductModelIllustration)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelIllustrationProvider_InsertCompletedEventHandler(object sender, ProductModelIllustrationProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductModelIllustrationProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductModelIllustrationProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductModelIllustration Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductModelIllustration)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelIllustrationProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelIllustrationProvider_UpdateCompletedEventHandler(object sender, ProductModelIllustrationProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductModelIllustrationProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductModelIllustrationProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductModelIllustration Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductModelIllustration)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ContactProvider_GetByCreditCardIdFromContactCreditCardCompletedEventHandler(object sender, ContactProvider_GetByCreditCardIdFromContactCreditCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactProvider_GetByCreditCardIdFromContactCreditCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactProvider_GetByCreditCardIdFromContactCreditCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Contact[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Contact[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ContactProvider_GetByCustomerIdFromStoreContactCompletedEventHandler(object sender, ContactProvider_GetByCustomerIdFromStoreContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactProvider_GetByCustomerIdFromStoreContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactProvider_GetByCustomerIdFromStoreContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Contact[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Contact[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ContactProvider_GetByVendorIdFromVendorContactCompletedEventHandler(object sender, ContactProvider_GetByVendorIdFromVendorContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactProvider_GetByVendorIdFromVendorContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactProvider_GetByVendorIdFromVendorContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Contact[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Contact[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ContactProvider_DeleteCompletedEventHandler(object sender, ContactProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ContactProvider_FindCompletedEventHandler(object sender, ContactProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Contact[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Contact[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ContactProvider_GetAllCompletedEventHandler(object sender, ContactProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Contact[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Contact[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ContactProvider_GetPagedCompletedEventHandler(object sender, ContactProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Contact[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Contact[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ContactProvider_GetByRowguidCompletedEventHandler(object sender, ContactProvider_GetByRowguidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactProvider_GetByRowguidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactProvider_GetByRowguidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Contact Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Contact)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ContactProvider_GetByEmailAddressCompletedEventHandler(object sender, ContactProvider_GetByEmailAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactProvider_GetByEmailAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactProvider_GetByEmailAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Contact[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Contact[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ContactProvider_GetByContactIdCompletedEventHandler(object sender, ContactProvider_GetByContactIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactProvider_GetByContactIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactProvider_GetByContactIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Contact Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Contact)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ContactProvider_GetByAdditionalContactInfoCompletedEventHandler(object sender, ContactProvider_GetByAdditionalContactInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactProvider_GetByAdditionalContactInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactProvider_GetByAdditionalContactInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Contact[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Contact[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ContactProvider_InsertCompletedEventHandler(object sender, ContactProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Contact Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Contact)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ContactProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ContactProvider_UpdateCompletedEventHandler(object sender, ContactProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Contact Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Contact)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ScrapReasonProvider_DeleteCompletedEventHandler(object sender, ScrapReasonProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScrapReasonProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ScrapReasonProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ScrapReasonProvider_FindCompletedEventHandler(object sender, ScrapReasonProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScrapReasonProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ScrapReasonProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ScrapReason[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ScrapReason[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ScrapReasonProvider_GetAllCompletedEventHandler(object sender, ScrapReasonProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScrapReasonProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ScrapReasonProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ScrapReason[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ScrapReason[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ScrapReasonProvider_GetPagedCompletedEventHandler(object sender, ScrapReasonProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScrapReasonProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ScrapReasonProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ScrapReason[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ScrapReason[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ScrapReasonProvider_GetByNameCompletedEventHandler(object sender, ScrapReasonProvider_GetByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScrapReasonProvider_GetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ScrapReasonProvider_GetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ScrapReason Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ScrapReason)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ScrapReasonProvider_GetByScrapReasonIdCompletedEventHandler(object sender, ScrapReasonProvider_GetByScrapReasonIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScrapReasonProvider_GetByScrapReasonIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ScrapReasonProvider_GetByScrapReasonIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ScrapReason Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ScrapReason)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ScrapReasonProvider_InsertCompletedEventHandler(object sender, ScrapReasonProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScrapReasonProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ScrapReasonProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ScrapReason Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ScrapReason)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ScrapReasonProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ScrapReasonProvider_UpdateCompletedEventHandler(object sender, ScrapReasonProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScrapReasonProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ScrapReasonProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ScrapReason Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ScrapReason)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TransactionHistoryArchiveProvider_DeleteCompletedEventHandler(object sender, TransactionHistoryArchiveProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransactionHistoryArchiveProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransactionHistoryArchiveProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TransactionHistoryArchiveProvider_FindCompletedEventHandler(object sender, TransactionHistoryArchiveProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransactionHistoryArchiveProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransactionHistoryArchiveProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionHistoryArchive[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionHistoryArchive[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TransactionHistoryArchiveProvider_GetAllCompletedEventHandler(object sender, TransactionHistoryArchiveProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransactionHistoryArchiveProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransactionHistoryArchiveProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionHistoryArchive[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionHistoryArchive[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TransactionHistoryArchiveProvider_GetPagedCompletedEventHandler(object sender, TransactionHistoryArchiveProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransactionHistoryArchiveProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransactionHistoryArchiveProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionHistoryArchive[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionHistoryArchive[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TransactionHistoryArchiveProvider_GetByProductIdCompletedEventHandler(object sender, TransactionHistoryArchiveProvider_GetByProductIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransactionHistoryArchiveProvider_GetByProductIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransactionHistoryArchiveProvider_GetByProductIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionHistoryArchive[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionHistoryArchive[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TransactionHistoryArchiveProvider_GetByReferenceOrderIdReferenceOrderLineIdCompletedEventHandler(object sender, TransactionHistoryArchiveProvider_GetByReferenceOrderIdReferenceOrderLineIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransactionHistoryArchiveProvider_GetByReferenceOrderIdReferenceOrderLineIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransactionHistoryArchiveProvider_GetByReferenceOrderIdReferenceOrderLineIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionHistoryArchive[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionHistoryArchive[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TransactionHistoryArchiveProvider_GetByTransactionIdCompletedEventHandler(object sender, TransactionHistoryArchiveProvider_GetByTransactionIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransactionHistoryArchiveProvider_GetByTransactionIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransactionHistoryArchiveProvider_GetByTransactionIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionHistoryArchive Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionHistoryArchive)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TransactionHistoryArchiveProvider_InsertCompletedEventHandler(object sender, TransactionHistoryArchiveProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransactionHistoryArchiveProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransactionHistoryArchiveProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionHistoryArchive Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionHistoryArchive)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TransactionHistoryArchiveProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TransactionHistoryArchiveProvider_UpdateCompletedEventHandler(object sender, TransactionHistoryArchiveProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransactionHistoryArchiveProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransactionHistoryArchiveProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionHistoryArchive Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionHistoryArchive)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductVendorProvider_DeleteCompletedEventHandler(object sender, ProductVendorProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductVendorProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductVendorProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductVendorProvider_FindCompletedEventHandler(object sender, ProductVendorProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductVendorProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductVendorProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductVendor[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductVendor[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductVendorProvider_GetAllCompletedEventHandler(object sender, ProductVendorProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductVendorProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductVendorProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductVendor[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductVendor[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductVendorProvider_GetPagedCompletedEventHandler(object sender, ProductVendorProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductVendorProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductVendorProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductVendor[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductVendor[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductVendorProvider_GetByProductIdCompletedEventHandler(object sender, ProductVendorProvider_GetByProductIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductVendorProvider_GetByProductIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductVendorProvider_GetByProductIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductVendor[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductVendor[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductVendorProvider_GetByUnitMeasureCodeCompletedEventHandler(object sender, ProductVendorProvider_GetByUnitMeasureCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductVendorProvider_GetByUnitMeasureCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductVendorProvider_GetByUnitMeasureCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductVendor[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductVendor[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductVendorProvider_GetByVendorIdCompletedEventHandler(object sender, ProductVendorProvider_GetByVendorIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductVendorProvider_GetByVendorIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductVendorProvider_GetByVendorIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductVendor[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductVendor[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductVendorProvider_GetByProductIdVendorIdCompletedEventHandler(object sender, ProductVendorProvider_GetByProductIdVendorIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductVendorProvider_GetByProductIdVendorIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductVendorProvider_GetByProductIdVendorIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductVendor Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductVendor)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductVendorProvider_InsertCompletedEventHandler(object sender, ProductVendorProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductVendorProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductVendorProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductVendor Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductVendor)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductVendorProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductVendorProvider_UpdateCompletedEventHandler(object sender, ProductVendorProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductVendorProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductVendorProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductVendor Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductVendor)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void PurchaseOrderHeaderProvider_DeleteCompletedEventHandler(object sender, PurchaseOrderHeaderProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PurchaseOrderHeaderProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PurchaseOrderHeaderProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void PurchaseOrderHeaderProvider_FindCompletedEventHandler(object sender, PurchaseOrderHeaderProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PurchaseOrderHeaderProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PurchaseOrderHeaderProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PurchaseOrderHeader[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PurchaseOrderHeader[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void PurchaseOrderHeaderProvider_GetAllCompletedEventHandler(object sender, PurchaseOrderHeaderProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PurchaseOrderHeaderProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PurchaseOrderHeaderProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PurchaseOrderHeader[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PurchaseOrderHeader[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void PurchaseOrderHeaderProvider_GetPagedCompletedEventHandler(object sender, PurchaseOrderHeaderProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PurchaseOrderHeaderProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PurchaseOrderHeaderProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PurchaseOrderHeader[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PurchaseOrderHeader[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void PurchaseOrderHeaderProvider_GetByShipMethodIdCompletedEventHandler(object sender, PurchaseOrderHeaderProvider_GetByShipMethodIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PurchaseOrderHeaderProvider_GetByShipMethodIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PurchaseOrderHeaderProvider_GetByShipMethodIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PurchaseOrderHeader[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PurchaseOrderHeader[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void PurchaseOrderHeaderProvider_GetByEmployeeIdCompletedEventHandler(object sender, PurchaseOrderHeaderProvider_GetByEmployeeIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PurchaseOrderHeaderProvider_GetByEmployeeIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PurchaseOrderHeaderProvider_GetByEmployeeIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PurchaseOrderHeader[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PurchaseOrderHeader[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void PurchaseOrderHeaderProvider_GetByVendorIdCompletedEventHandler(object sender, PurchaseOrderHeaderProvider_GetByVendorIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PurchaseOrderHeaderProvider_GetByVendorIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PurchaseOrderHeaderProvider_GetByVendorIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PurchaseOrderHeader[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PurchaseOrderHeader[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void PurchaseOrderHeaderProvider_GetByPurchaseOrderIdCompletedEventHandler(object sender, PurchaseOrderHeaderProvider_GetByPurchaseOrderIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PurchaseOrderHeaderProvider_GetByPurchaseOrderIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PurchaseOrderHeaderProvider_GetByPurchaseOrderIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PurchaseOrderHeader Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PurchaseOrderHeader)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void PurchaseOrderHeaderProvider_InsertCompletedEventHandler(object sender, PurchaseOrderHeaderProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PurchaseOrderHeaderProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PurchaseOrderHeaderProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PurchaseOrderHeader Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PurchaseOrderHeader)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void PurchaseOrderHeaderProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void PurchaseOrderHeaderProvider_UpdateCompletedEventHandler(object sender, PurchaseOrderHeaderProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PurchaseOrderHeaderProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PurchaseOrderHeaderProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PurchaseOrderHeader Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PurchaseOrderHeader)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddressTypeProvider_DeleteCompletedEventHandler(object sender, AddressTypeProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddressTypeProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddressTypeProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddressTypeProvider_FindCompletedEventHandler(object sender, AddressTypeProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddressTypeProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddressTypeProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AddressType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AddressType[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddressTypeProvider_GetAllCompletedEventHandler(object sender, AddressTypeProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddressTypeProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddressTypeProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AddressType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AddressType[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddressTypeProvider_GetPagedCompletedEventHandler(object sender, AddressTypeProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddressTypeProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddressTypeProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AddressType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AddressType[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddressTypeProvider_GetByNameCompletedEventHandler(object sender, AddressTypeProvider_GetByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddressTypeProvider_GetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddressTypeProvider_GetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AddressType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AddressType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddressTypeProvider_GetByRowguidCompletedEventHandler(object sender, AddressTypeProvider_GetByRowguidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddressTypeProvider_GetByRowguidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddressTypeProvider_GetByRowguidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AddressType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AddressType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddressTypeProvider_GetByAddressTypeIdCompletedEventHandler(object sender, AddressTypeProvider_GetByAddressTypeIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddressTypeProvider_GetByAddressTypeIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddressTypeProvider_GetByAddressTypeIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AddressType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AddressType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddressTypeProvider_InsertCompletedEventHandler(object sender, AddressTypeProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddressTypeProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddressTypeProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AddressType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AddressType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddressTypeProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddressTypeProvider_UpdateCompletedEventHandler(object sender, AddressTypeProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddressTypeProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddressTypeProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AddressType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AddressType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void WorkOrderRoutingProvider_DeleteCompletedEventHandler(object sender, WorkOrderRoutingProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkOrderRoutingProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkOrderRoutingProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void WorkOrderRoutingProvider_FindCompletedEventHandler(object sender, WorkOrderRoutingProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkOrderRoutingProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkOrderRoutingProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WorkOrderRouting[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WorkOrderRouting[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void WorkOrderRoutingProvider_GetAllCompletedEventHandler(object sender, WorkOrderRoutingProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkOrderRoutingProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkOrderRoutingProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WorkOrderRouting[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WorkOrderRouting[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void WorkOrderRoutingProvider_GetPagedCompletedEventHandler(object sender, WorkOrderRoutingProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkOrderRoutingProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkOrderRoutingProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WorkOrderRouting[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WorkOrderRouting[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void WorkOrderRoutingProvider_GetByLocationIdCompletedEventHandler(object sender, WorkOrderRoutingProvider_GetByLocationIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkOrderRoutingProvider_GetByLocationIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkOrderRoutingProvider_GetByLocationIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WorkOrderRouting[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WorkOrderRouting[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void WorkOrderRoutingProvider_GetByWorkOrderIdCompletedEventHandler(object sender, WorkOrderRoutingProvider_GetByWorkOrderIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkOrderRoutingProvider_GetByWorkOrderIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkOrderRoutingProvider_GetByWorkOrderIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WorkOrderRouting[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WorkOrderRouting[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void WorkOrderRoutingProvider_GetByProductIdCompletedEventHandler(object sender, WorkOrderRoutingProvider_GetByProductIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkOrderRoutingProvider_GetByProductIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkOrderRoutingProvider_GetByProductIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WorkOrderRouting[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WorkOrderRouting[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void WorkOrderRoutingProvider_GetByWorkOrderIdProductIdOperationSequenceCompletedEventHandler(object sender, WorkOrderRoutingProvider_GetByWorkOrderIdProductIdOperationSequenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkOrderRoutingProvider_GetByWorkOrderIdProductIdOperationSequenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkOrderRoutingProvider_GetByWorkOrderIdProductIdOperationSequenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WorkOrderRouting Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WorkOrderRouting)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void WorkOrderRoutingProvider_InsertCompletedEventHandler(object sender, WorkOrderRoutingProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkOrderRoutingProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkOrderRoutingProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WorkOrderRouting Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WorkOrderRouting)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void WorkOrderRoutingProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void WorkOrderRoutingProvider_UpdateCompletedEventHandler(object sender, WorkOrderRoutingProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkOrderRoutingProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkOrderRoutingProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WorkOrderRouting Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WorkOrderRouting)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VendorProvider_GetByProductIdFromProductVendorCompletedEventHandler(object sender, VendorProvider_GetByProductIdFromProductVendorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorProvider_GetByProductIdFromProductVendorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VendorProvider_GetByProductIdFromProductVendorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vendor[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vendor[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VendorProvider_GetByAddressIdFromVendorAddressCompletedEventHandler(object sender, VendorProvider_GetByAddressIdFromVendorAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorProvider_GetByAddressIdFromVendorAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VendorProvider_GetByAddressIdFromVendorAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vendor[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vendor[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VendorProvider_GetByContactIdFromVendorContactCompletedEventHandler(object sender, VendorProvider_GetByContactIdFromVendorContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorProvider_GetByContactIdFromVendorContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VendorProvider_GetByContactIdFromVendorContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vendor[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vendor[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VendorProvider_DeleteCompletedEventHandler(object sender, VendorProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VendorProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VendorProvider_FindCompletedEventHandler(object sender, VendorProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VendorProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vendor[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vendor[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VendorProvider_GetAllCompletedEventHandler(object sender, VendorProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VendorProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vendor[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vendor[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VendorProvider_GetPagedCompletedEventHandler(object sender, VendorProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VendorProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vendor[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vendor[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VendorProvider_GetByAccountNumberCompletedEventHandler(object sender, VendorProvider_GetByAccountNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorProvider_GetByAccountNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VendorProvider_GetByAccountNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vendor Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vendor)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VendorProvider_GetByVendorIdCompletedEventHandler(object sender, VendorProvider_GetByVendorIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorProvider_GetByVendorIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VendorProvider_GetByVendorIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vendor Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vendor)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VendorProvider_InsertCompletedEventHandler(object sender, VendorProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VendorProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vendor Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vendor)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VendorProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VendorProvider_UpdateCompletedEventHandler(object sender, VendorProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VendorProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Vendor Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Vendor)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VendorAddressProvider_DeleteCompletedEventHandler(object sender, VendorAddressProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorAddressProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VendorAddressProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VendorAddressProvider_FindCompletedEventHandler(object sender, VendorAddressProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorAddressProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VendorAddressProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VendorAddress[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VendorAddress[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VendorAddressProvider_GetAllCompletedEventHandler(object sender, VendorAddressProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorAddressProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VendorAddressProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VendorAddress[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VendorAddress[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VendorAddressProvider_GetPagedCompletedEventHandler(object sender, VendorAddressProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorAddressProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VendorAddressProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VendorAddress[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VendorAddress[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VendorAddressProvider_GetByAddressTypeIdCompletedEventHandler(object sender, VendorAddressProvider_GetByAddressTypeIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorAddressProvider_GetByAddressTypeIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VendorAddressProvider_GetByAddressTypeIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VendorAddress[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VendorAddress[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VendorAddressProvider_GetByVendorIdCompletedEventHandler(object sender, VendorAddressProvider_GetByVendorIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorAddressProvider_GetByVendorIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VendorAddressProvider_GetByVendorIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VendorAddress[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VendorAddress[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VendorAddressProvider_GetByAddressIdCompletedEventHandler(object sender, VendorAddressProvider_GetByAddressIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorAddressProvider_GetByAddressIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VendorAddressProvider_GetByAddressIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VendorAddress[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VendorAddress[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VendorAddressProvider_GetByVendorIdAddressIdCompletedEventHandler(object sender, VendorAddressProvider_GetByVendorIdAddressIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorAddressProvider_GetByVendorIdAddressIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VendorAddressProvider_GetByVendorIdAddressIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VendorAddress Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VendorAddress)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VendorAddressProvider_InsertCompletedEventHandler(object sender, VendorAddressProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorAddressProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VendorAddressProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VendorAddress Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VendorAddress)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VendorAddressProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void VendorAddressProvider_UpdateCompletedEventHandler(object sender, VendorAddressProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VendorAddressProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VendorAddressProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VendorAddress Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VendorAddress)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void PurchaseOrderDetailProvider_DeleteCompletedEventHandler(object sender, PurchaseOrderDetailProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PurchaseOrderDetailProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PurchaseOrderDetailProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void PurchaseOrderDetailProvider_FindCompletedEventHandler(object sender, PurchaseOrderDetailProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PurchaseOrderDetailProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PurchaseOrderDetailProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PurchaseOrderDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PurchaseOrderDetail[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void PurchaseOrderDetailProvider_GetAllCompletedEventHandler(object sender, PurchaseOrderDetailProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PurchaseOrderDetailProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PurchaseOrderDetailProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PurchaseOrderDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PurchaseOrderDetail[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void PurchaseOrderDetailProvider_GetPagedCompletedEventHandler(object sender, PurchaseOrderDetailProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PurchaseOrderDetailProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PurchaseOrderDetailProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PurchaseOrderDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PurchaseOrderDetail[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void PurchaseOrderDetailProvider_GetByPurchaseOrderIdCompletedEventHandler(object sender, PurchaseOrderDetailProvider_GetByPurchaseOrderIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PurchaseOrderDetailProvider_GetByPurchaseOrderIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PurchaseOrderDetailProvider_GetByPurchaseOrderIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PurchaseOrderDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PurchaseOrderDetail[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void PurchaseOrderDetailProvider_GetByProductIdCompletedEventHandler(object sender, PurchaseOrderDetailProvider_GetByProductIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PurchaseOrderDetailProvider_GetByProductIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PurchaseOrderDetailProvider_GetByProductIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PurchaseOrderDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PurchaseOrderDetail[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void PurchaseOrderDetailProvider_GetByPurchaseOrderIdPurchaseOrderDetailIdCompletedEventHandler(object sender, PurchaseOrderDetailProvider_GetByPurchaseOrderIdPurchaseOrderDetailIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PurchaseOrderDetailProvider_GetByPurchaseOrderIdPurchaseOrderDetailIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PurchaseOrderDetailProvider_GetByPurchaseOrderIdPurchaseOrderDetailIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PurchaseOrderDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PurchaseOrderDetail)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void PurchaseOrderDetailProvider_InsertCompletedEventHandler(object sender, PurchaseOrderDetailProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PurchaseOrderDetailProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PurchaseOrderDetailProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PurchaseOrderDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PurchaseOrderDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void PurchaseOrderDetailProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void PurchaseOrderDetailProvider_UpdateCompletedEventHandler(object sender, PurchaseOrderDetailProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PurchaseOrderDetailProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PurchaseOrderDetailProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PurchaseOrderDetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PurchaseOrderDetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void LocationProvider_DeleteCompletedEventHandler(object sender, LocationProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LocationProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LocationProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void LocationProvider_FindCompletedEventHandler(object sender, LocationProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LocationProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LocationProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Location[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Location[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void LocationProvider_GetAllCompletedEventHandler(object sender, LocationProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LocationProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LocationProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Location[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Location[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void LocationProvider_GetPagedCompletedEventHandler(object sender, LocationProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LocationProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LocationProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Location[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Location[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void LocationProvider_GetByNameCompletedEventHandler(object sender, LocationProvider_GetByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LocationProvider_GetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LocationProvider_GetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Location Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Location)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void LocationProvider_GetByLocationIdCompletedEventHandler(object sender, LocationProvider_GetByLocationIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LocationProvider_GetByLocationIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LocationProvider_GetByLocationIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Location Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Location)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void LocationProvider_InsertCompletedEventHandler(object sender, LocationProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LocationProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LocationProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Location Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Location)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void LocationProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void LocationProvider_UpdateCompletedEventHandler(object sender, LocationProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LocationProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LocationProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Location Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Location)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CurrencyProvider_GetByCountryRegionCodeFromCountryRegionCurrencyCompletedEventHandler(object sender, CurrencyProvider_GetByCountryRegionCodeFromCountryRegionCurrencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrencyProvider_GetByCountryRegionCodeFromCountryRegionCurrencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrencyProvider_GetByCountryRegionCodeFromCountryRegionCurrencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Currency[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Currency[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CurrencyProvider_DeleteCompletedEventHandler(object sender, CurrencyProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrencyProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrencyProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CurrencyProvider_FindCompletedEventHandler(object sender, CurrencyProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrencyProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrencyProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Currency[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Currency[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CurrencyProvider_GetAllCompletedEventHandler(object sender, CurrencyProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrencyProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrencyProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Currency[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Currency[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CurrencyProvider_GetPagedCompletedEventHandler(object sender, CurrencyProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrencyProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrencyProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Currency[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Currency[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CurrencyProvider_GetByNameCompletedEventHandler(object sender, CurrencyProvider_GetByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrencyProvider_GetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrencyProvider_GetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Currency Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Currency)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CurrencyProvider_GetByCurrencyCodeCompletedEventHandler(object sender, CurrencyProvider_GetByCurrencyCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrencyProvider_GetByCurrencyCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrencyProvider_GetByCurrencyCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Currency Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Currency)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CurrencyProvider_InsertCompletedEventHandler(object sender, CurrencyProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrencyProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrencyProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Currency Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Currency)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CurrencyProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CurrencyProvider_UpdateCompletedEventHandler(object sender, CurrencyProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrencyProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrencyProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Currency Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Currency)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CreditCardProvider_GetByContactIdFromContactCreditCardCompletedEventHandler(object sender, CreditCardProvider_GetByContactIdFromContactCreditCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreditCardProvider_GetByContactIdFromContactCreditCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreditCardProvider_GetByContactIdFromContactCreditCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreditCard[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreditCard[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CreditCardProvider_DeleteCompletedEventHandler(object sender, CreditCardProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreditCardProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreditCardProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CreditCardProvider_FindCompletedEventHandler(object sender, CreditCardProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreditCardProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreditCardProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreditCard[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreditCard[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CreditCardProvider_GetAllCompletedEventHandler(object sender, CreditCardProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreditCardProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreditCardProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreditCard[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreditCard[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CreditCardProvider_GetPagedCompletedEventHandler(object sender, CreditCardProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreditCardProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreditCardProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreditCard[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreditCard[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CreditCardProvider_GetByCardNumberCompletedEventHandler(object sender, CreditCardProvider_GetByCardNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreditCardProvider_GetByCardNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreditCardProvider_GetByCardNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreditCard Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreditCard)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CreditCardProvider_GetByCreditCardIdCompletedEventHandler(object sender, CreditCardProvider_GetByCreditCardIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreditCardProvider_GetByCreditCardIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreditCardProvider_GetByCreditCardIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreditCard Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreditCard)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CreditCardProvider_InsertCompletedEventHandler(object sender, CreditCardProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreditCardProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreditCardProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreditCard Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreditCard)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CreditCardProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CreditCardProvider_UpdateCompletedEventHandler(object sender, CreditCardProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreditCardProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreditCardProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreditCard Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreditCard)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductCostHistoryProvider_DeleteCompletedEventHandler(object sender, ProductCostHistoryProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductCostHistoryProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductCostHistoryProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductCostHistoryProvider_FindCompletedEventHandler(object sender, ProductCostHistoryProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductCostHistoryProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductCostHistoryProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductCostHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductCostHistory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductCostHistoryProvider_GetAllCompletedEventHandler(object sender, ProductCostHistoryProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductCostHistoryProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductCostHistoryProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductCostHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductCostHistory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductCostHistoryProvider_GetPagedCompletedEventHandler(object sender, ProductCostHistoryProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductCostHistoryProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductCostHistoryProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductCostHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductCostHistory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductCostHistoryProvider_GetByProductIdCompletedEventHandler(object sender, ProductCostHistoryProvider_GetByProductIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductCostHistoryProvider_GetByProductIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductCostHistoryProvider_GetByProductIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductCostHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductCostHistory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductCostHistoryProvider_GetByProductIdStartDateCompletedEventHandler(object sender, ProductCostHistoryProvider_GetByProductIdStartDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductCostHistoryProvider_GetByProductIdStartDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductCostHistoryProvider_GetByProductIdStartDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductCostHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductCostHistory)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductCostHistoryProvider_InsertCompletedEventHandler(object sender, ProductCostHistoryProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductCostHistoryProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductCostHistoryProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductCostHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductCostHistory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductCostHistoryProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductCostHistoryProvider_UpdateCompletedEventHandler(object sender, ProductCostHistoryProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductCostHistoryProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductCostHistoryProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductCostHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductCostHistory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TimestampPkProvider_DeleteCompletedEventHandler(object sender, TimestampPkProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TimestampPkProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TimestampPkProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TimestampPkProvider_FindCompletedEventHandler(object sender, TimestampPkProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TimestampPkProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TimestampPkProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TimestampPk[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TimestampPk[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TimestampPkProvider_GetAllCompletedEventHandler(object sender, TimestampPkProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TimestampPkProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TimestampPkProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TimestampPk[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TimestampPk[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TimestampPkProvider_GetPagedCompletedEventHandler(object sender, TimestampPkProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TimestampPkProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TimestampPkProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TimestampPk[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TimestampPk[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TimestampPkProvider_GetByTimestampPkCompletedEventHandler(object sender, TimestampPkProvider_GetByTimestampPkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TimestampPkProvider_GetByTimestampPkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TimestampPkProvider_GetByTimestampPkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TimestampPk Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TimestampPk)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TimestampPkProvider_InsertCompletedEventHandler(object sender, TimestampPkProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TimestampPkProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TimestampPkProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TimestampPk Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TimestampPk)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TimestampPkProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TimestampPkProvider_UpdateCompletedEventHandler(object sender, TimestampPkProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TimestampPkProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TimestampPkProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TimestampPk Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TimestampPk)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductInventoryProvider_DeleteCompletedEventHandler(object sender, ProductInventoryProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductInventoryProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductInventoryProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductInventoryProvider_FindCompletedEventHandler(object sender, ProductInventoryProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductInventoryProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductInventoryProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductInventory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductInventory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductInventoryProvider_GetAllCompletedEventHandler(object sender, ProductInventoryProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductInventoryProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductInventoryProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductInventory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductInventory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductInventoryProvider_GetPagedCompletedEventHandler(object sender, ProductInventoryProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductInventoryProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductInventoryProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductInventory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductInventory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductInventoryProvider_GetByLocationIdCompletedEventHandler(object sender, ProductInventoryProvider_GetByLocationIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductInventoryProvider_GetByLocationIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductInventoryProvider_GetByLocationIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductInventory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductInventory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductInventoryProvider_GetByProductIdCompletedEventHandler(object sender, ProductInventoryProvider_GetByProductIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductInventoryProvider_GetByProductIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductInventoryProvider_GetByProductIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductInventory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductInventory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductInventoryProvider_GetByProductIdLocationIdCompletedEventHandler(object sender, ProductInventoryProvider_GetByProductIdLocationIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductInventoryProvider_GetByProductIdLocationIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductInventoryProvider_GetByProductIdLocationIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductInventory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductInventory)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductInventoryProvider_InsertCompletedEventHandler(object sender, ProductInventoryProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductInventoryProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductInventoryProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductInventory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductInventory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductInventoryProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductInventoryProvider_UpdateCompletedEventHandler(object sender, ProductInventoryProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductInventoryProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductInventoryProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductInventory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductInventory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CurrencyRateProvider_DeleteCompletedEventHandler(object sender, CurrencyRateProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrencyRateProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrencyRateProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CurrencyRateProvider_FindCompletedEventHandler(object sender, CurrencyRateProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrencyRateProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrencyRateProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CurrencyRate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CurrencyRate[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CurrencyRateProvider_GetAllCompletedEventHandler(object sender, CurrencyRateProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrencyRateProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrencyRateProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CurrencyRate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CurrencyRate[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CurrencyRateProvider_GetPagedCompletedEventHandler(object sender, CurrencyRateProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrencyRateProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrencyRateProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CurrencyRate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CurrencyRate[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CurrencyRateProvider_GetByFromCurrencyCodeCompletedEventHandler(object sender, CurrencyRateProvider_GetByFromCurrencyCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrencyRateProvider_GetByFromCurrencyCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrencyRateProvider_GetByFromCurrencyCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CurrencyRate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CurrencyRate[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CurrencyRateProvider_GetByToCurrencyCodeCompletedEventHandler(object sender, CurrencyRateProvider_GetByToCurrencyCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrencyRateProvider_GetByToCurrencyCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrencyRateProvider_GetByToCurrencyCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CurrencyRate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CurrencyRate[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CurrencyRateProvider_GetByCurrencyRateDateFromCurrencyCodeToCurrencyCodeCompletedEventHandler(object sender, CurrencyRateProvider_GetByCurrencyRateDateFromCurrencyCodeToCurrencyCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrencyRateProvider_GetByCurrencyRateDateFromCurrencyCodeToCurrencyCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrencyRateProvider_GetByCurrencyRateDateFromCurrencyCodeToCurrencyCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CurrencyRate Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CurrencyRate)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CurrencyRateProvider_GetByCurrencyRateIdCompletedEventHandler(object sender, CurrencyRateProvider_GetByCurrencyRateIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrencyRateProvider_GetByCurrencyRateIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrencyRateProvider_GetByCurrencyRateIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CurrencyRate Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CurrencyRate)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CurrencyRateProvider_InsertCompletedEventHandler(object sender, CurrencyRateProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrencyRateProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrencyRateProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CurrencyRate Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CurrencyRate)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CurrencyRateProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CurrencyRateProvider_UpdateCompletedEventHandler(object sender, CurrencyRateProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrencyRateProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrencyRateProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CurrencyRate Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CurrencyRate)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesTerritoryProvider_DeleteCompletedEventHandler(object sender, SalesTerritoryProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesTerritoryProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesTerritoryProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesTerritoryProvider_FindCompletedEventHandler(object sender, SalesTerritoryProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesTerritoryProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesTerritoryProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesTerritory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesTerritory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesTerritoryProvider_GetAllCompletedEventHandler(object sender, SalesTerritoryProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesTerritoryProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesTerritoryProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesTerritory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesTerritory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesTerritoryProvider_GetPagedCompletedEventHandler(object sender, SalesTerritoryProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesTerritoryProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesTerritoryProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesTerritory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesTerritory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesTerritoryProvider_GetByNameCompletedEventHandler(object sender, SalesTerritoryProvider_GetByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesTerritoryProvider_GetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesTerritoryProvider_GetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesTerritory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesTerritory)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesTerritoryProvider_GetByRowguidCompletedEventHandler(object sender, SalesTerritoryProvider_GetByRowguidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesTerritoryProvider_GetByRowguidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesTerritoryProvider_GetByRowguidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesTerritory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesTerritory)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesTerritoryProvider_GetByTerritoryIdCompletedEventHandler(object sender, SalesTerritoryProvider_GetByTerritoryIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesTerritoryProvider_GetByTerritoryIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesTerritoryProvider_GetByTerritoryIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesTerritory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesTerritory)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesTerritoryProvider_InsertCompletedEventHandler(object sender, SalesTerritoryProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesTerritoryProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesTerritoryProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesTerritory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesTerritory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesTerritoryProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesTerritoryProvider_UpdateCompletedEventHandler(object sender, SalesTerritoryProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesTerritoryProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesTerritoryProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesTerritory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesTerritory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TransactionHistoryProvider_DeleteCompletedEventHandler(object sender, TransactionHistoryProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransactionHistoryProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransactionHistoryProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TransactionHistoryProvider_FindCompletedEventHandler(object sender, TransactionHistoryProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransactionHistoryProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransactionHistoryProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionHistory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TransactionHistoryProvider_GetAllCompletedEventHandler(object sender, TransactionHistoryProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransactionHistoryProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransactionHistoryProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionHistory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TransactionHistoryProvider_GetPagedCompletedEventHandler(object sender, TransactionHistoryProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransactionHistoryProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransactionHistoryProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionHistory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TransactionHistoryProvider_GetByProductIdCompletedEventHandler(object sender, TransactionHistoryProvider_GetByProductIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransactionHistoryProvider_GetByProductIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransactionHistoryProvider_GetByProductIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionHistory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TransactionHistoryProvider_GetByReferenceOrderIdReferenceOrderLineIdCompletedEventHandler(object sender, TransactionHistoryProvider_GetByReferenceOrderIdReferenceOrderLineIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransactionHistoryProvider_GetByReferenceOrderIdReferenceOrderLineIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransactionHistoryProvider_GetByReferenceOrderIdReferenceOrderLineIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionHistory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TransactionHistoryProvider_GetByTransactionIdCompletedEventHandler(object sender, TransactionHistoryProvider_GetByTransactionIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransactionHistoryProvider_GetByTransactionIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransactionHistoryProvider_GetByTransactionIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionHistory)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TransactionHistoryProvider_InsertCompletedEventHandler(object sender, TransactionHistoryProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransactionHistoryProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransactionHistoryProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionHistory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TransactionHistoryProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void TransactionHistoryProvider_UpdateCompletedEventHandler(object sender, TransactionHistoryProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransactionHistoryProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransactionHistoryProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransactionHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransactionHistory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void IllustrationProvider_GetByProductModelIdFromProductModelIllustrationCompletedEventHandler(object sender, IllustrationProvider_GetByProductModelIdFromProductModelIllustrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IllustrationProvider_GetByProductModelIdFromProductModelIllustrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IllustrationProvider_GetByProductModelIdFromProductModelIllustrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Illustration[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Illustration[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void IllustrationProvider_DeleteCompletedEventHandler(object sender, IllustrationProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IllustrationProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IllustrationProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void IllustrationProvider_FindCompletedEventHandler(object sender, IllustrationProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IllustrationProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IllustrationProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Illustration[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Illustration[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void IllustrationProvider_GetAllCompletedEventHandler(object sender, IllustrationProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IllustrationProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IllustrationProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Illustration[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Illustration[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void IllustrationProvider_GetPagedCompletedEventHandler(object sender, IllustrationProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IllustrationProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IllustrationProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Illustration[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Illustration[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void IllustrationProvider_GetByIllustrationIdCompletedEventHandler(object sender, IllustrationProvider_GetByIllustrationIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IllustrationProvider_GetByIllustrationIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IllustrationProvider_GetByIllustrationIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Illustration Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Illustration)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void IllustrationProvider_InsertCompletedEventHandler(object sender, IllustrationProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IllustrationProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IllustrationProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Illustration Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Illustration)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void IllustrationProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void IllustrationProvider_UpdateCompletedEventHandler(object sender, IllustrationProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IllustrationProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IllustrationProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Illustration Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Illustration)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ShipMethodProvider_DeleteCompletedEventHandler(object sender, ShipMethodProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShipMethodProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShipMethodProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ShipMethodProvider_FindCompletedEventHandler(object sender, ShipMethodProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShipMethodProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShipMethodProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ShipMethod[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ShipMethod[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ShipMethodProvider_GetAllCompletedEventHandler(object sender, ShipMethodProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShipMethodProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShipMethodProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ShipMethod[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ShipMethod[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ShipMethodProvider_GetPagedCompletedEventHandler(object sender, ShipMethodProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShipMethodProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShipMethodProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ShipMethod[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ShipMethod[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ShipMethodProvider_GetByNameCompletedEventHandler(object sender, ShipMethodProvider_GetByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShipMethodProvider_GetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShipMethodProvider_GetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ShipMethod Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ShipMethod)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ShipMethodProvider_GetByRowguidCompletedEventHandler(object sender, ShipMethodProvider_GetByRowguidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShipMethodProvider_GetByRowguidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShipMethodProvider_GetByRowguidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ShipMethod Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ShipMethod)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ShipMethodProvider_GetByShipMethodIdCompletedEventHandler(object sender, ShipMethodProvider_GetByShipMethodIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShipMethodProvider_GetByShipMethodIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShipMethodProvider_GetByShipMethodIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ShipMethod Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ShipMethod)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ShipMethodProvider_InsertCompletedEventHandler(object sender, ShipMethodProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShipMethodProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShipMethodProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ShipMethod Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ShipMethod)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ShipMethodProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ShipMethodProvider_UpdateCompletedEventHandler(object sender, ShipMethodProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShipMethodProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShipMethodProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ShipMethod Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ShipMethod)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CustomerProvider_GetByAddressIdFromCustomerAddressCompletedEventHandler(object sender, CustomerProvider_GetByAddressIdFromCustomerAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerProvider_GetByAddressIdFromCustomerAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerProvider_GetByAddressIdFromCustomerAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Customer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Customer[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CustomerProvider_DeleteCompletedEventHandler(object sender, CustomerProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CustomerProvider_FindCompletedEventHandler(object sender, CustomerProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Customer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Customer[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CustomerProvider_GetAllCompletedEventHandler(object sender, CustomerProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Customer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Customer[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CustomerProvider_GetPagedCompletedEventHandler(object sender, CustomerProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Customer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Customer[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CustomerProvider_GetByAccountNumberCompletedEventHandler(object sender, CustomerProvider_GetByAccountNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerProvider_GetByAccountNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerProvider_GetByAccountNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Customer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Customer)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CustomerProvider_GetByRowguidCompletedEventHandler(object sender, CustomerProvider_GetByRowguidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerProvider_GetByRowguidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerProvider_GetByRowguidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Customer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Customer)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CustomerProvider_GetByTerritoryIdCompletedEventHandler(object sender, CustomerProvider_GetByTerritoryIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerProvider_GetByTerritoryIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerProvider_GetByTerritoryIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Customer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Customer[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CustomerProvider_GetByCustomerIdCompletedEventHandler(object sender, CustomerProvider_GetByCustomerIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerProvider_GetByCustomerIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerProvider_GetByCustomerIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Customer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Customer)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CustomerProvider_InsertCompletedEventHandler(object sender, CustomerProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Customer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Customer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CustomerProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CustomerProvider_UpdateCompletedEventHandler(object sender, CustomerProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Customer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Customer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductReviewProvider_DeleteCompletedEventHandler(object sender, ProductReviewProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductReviewProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductReviewProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductReviewProvider_FindCompletedEventHandler(object sender, ProductReviewProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductReviewProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductReviewProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductReview[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductReview[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductReviewProvider_GetAllCompletedEventHandler(object sender, ProductReviewProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductReviewProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductReviewProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductReview[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductReview[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductReviewProvider_GetPagedCompletedEventHandler(object sender, ProductReviewProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductReviewProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductReviewProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductReview[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductReview[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductReviewProvider_GetByProductIdCompletedEventHandler(object sender, ProductReviewProvider_GetByProductIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductReviewProvider_GetByProductIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductReviewProvider_GetByProductIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductReview[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductReview[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductReviewProvider_GetByProductIdReviewerNameCompletedEventHandler(object sender, ProductReviewProvider_GetByProductIdReviewerNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductReviewProvider_GetByProductIdReviewerNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductReviewProvider_GetByProductIdReviewerNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductReview[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductReview[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductReviewProvider_GetByProductReviewIdCompletedEventHandler(object sender, ProductReviewProvider_GetByProductReviewIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductReviewProvider_GetByProductReviewIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductReviewProvider_GetByProductReviewIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductReview Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductReview)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductReviewProvider_InsertCompletedEventHandler(object sender, ProductReviewProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductReviewProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductReviewProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductReview Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductReview)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductReviewProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductReviewProvider_UpdateCompletedEventHandler(object sender, ProductReviewProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductReviewProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductReviewProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductReview Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductReview)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CountryRegionProvider_DeleteCompletedEventHandler(object sender, CountryRegionProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountryRegionProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountryRegionProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CountryRegionProvider_FindCompletedEventHandler(object sender, CountryRegionProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountryRegionProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountryRegionProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CountryRegion[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CountryRegion[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CountryRegionProvider_GetAllCompletedEventHandler(object sender, CountryRegionProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountryRegionProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountryRegionProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CountryRegion[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CountryRegion[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CountryRegionProvider_GetPagedCompletedEventHandler(object sender, CountryRegionProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountryRegionProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountryRegionProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CountryRegion[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CountryRegion[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CountryRegionProvider_GetByNameCompletedEventHandler(object sender, CountryRegionProvider_GetByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountryRegionProvider_GetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountryRegionProvider_GetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CountryRegion Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CountryRegion)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CountryRegionProvider_GetByCountryRegionCodeCompletedEventHandler(object sender, CountryRegionProvider_GetByCountryRegionCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountryRegionProvider_GetByCountryRegionCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountryRegionProvider_GetByCountryRegionCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CountryRegion Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CountryRegion)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CountryRegionProvider_InsertCompletedEventHandler(object sender, CountryRegionProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountryRegionProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountryRegionProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CountryRegion Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CountryRegion)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CountryRegionProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CountryRegionProvider_UpdateCompletedEventHandler(object sender, CountryRegionProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountryRegionProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountryRegionProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CountryRegion Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CountryRegion)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddressProvider_GetByCustomerIdFromCustomerAddressCompletedEventHandler(object sender, AddressProvider_GetByCustomerIdFromCustomerAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddressProvider_GetByCustomerIdFromCustomerAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddressProvider_GetByCustomerIdFromCustomerAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Address[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Address[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddressProvider_GetByEmployeeIdFromEmployeeAddressCompletedEventHandler(object sender, AddressProvider_GetByEmployeeIdFromEmployeeAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddressProvider_GetByEmployeeIdFromEmployeeAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddressProvider_GetByEmployeeIdFromEmployeeAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Address[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Address[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddressProvider_GetByVendorIdFromVendorAddressCompletedEventHandler(object sender, AddressProvider_GetByVendorIdFromVendorAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddressProvider_GetByVendorIdFromVendorAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddressProvider_GetByVendorIdFromVendorAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Address[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Address[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddressProvider_DeleteCompletedEventHandler(object sender, AddressProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddressProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddressProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddressProvider_FindCompletedEventHandler(object sender, AddressProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddressProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddressProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Address[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Address[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddressProvider_GetAllCompletedEventHandler(object sender, AddressProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddressProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddressProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Address[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Address[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddressProvider_GetPagedCompletedEventHandler(object sender, AddressProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddressProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddressProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Address[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Address[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddressProvider_GetByRowguidCompletedEventHandler(object sender, AddressProvider_GetByRowguidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddressProvider_GetByRowguidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddressProvider_GetByRowguidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Address Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Address)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddressProvider_GetByAddressLine1AddressLine2CityStateProvinceIdPostalCodeCompletedEventHandler(object sender, AddressProvider_GetByAddressLine1AddressLine2CityStateProvinceIdPostalCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddressProvider_GetByAddressLine1AddressLine2CityStateProvinceIdPostalCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddressProvider_GetByAddressLine1AddressLine2CityStateProvinceIdPostalCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Address Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Address)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddressProvider_GetByStateProvinceIdCompletedEventHandler(object sender, AddressProvider_GetByStateProvinceIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddressProvider_GetByStateProvinceIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddressProvider_GetByStateProvinceIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Address[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Address[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddressProvider_GetByAddressIdCompletedEventHandler(object sender, AddressProvider_GetByAddressIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddressProvider_GetByAddressIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddressProvider_GetByAddressIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Address Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Address)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddressProvider_InsertCompletedEventHandler(object sender, AddressProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddressProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddressProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Address Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Address)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddressProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AddressProvider_UpdateCompletedEventHandler(object sender, AddressProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddressProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddressProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Address Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Address)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ShiftProvider_DeleteCompletedEventHandler(object sender, ShiftProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShiftProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShiftProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ShiftProvider_FindCompletedEventHandler(object sender, ShiftProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShiftProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShiftProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Shift[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Shift[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ShiftProvider_GetAllCompletedEventHandler(object sender, ShiftProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShiftProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShiftProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Shift[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Shift[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ShiftProvider_GetPagedCompletedEventHandler(object sender, ShiftProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShiftProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShiftProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Shift[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Shift[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ShiftProvider_GetByNameCompletedEventHandler(object sender, ShiftProvider_GetByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShiftProvider_GetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShiftProvider_GetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Shift Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Shift)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ShiftProvider_GetByStartTimeEndTimeCompletedEventHandler(object sender, ShiftProvider_GetByStartTimeEndTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShiftProvider_GetByStartTimeEndTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShiftProvider_GetByStartTimeEndTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Shift Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Shift)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ShiftProvider_GetByShiftIdCompletedEventHandler(object sender, ShiftProvider_GetByShiftIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShiftProvider_GetByShiftIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShiftProvider_GetByShiftIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Shift Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Shift)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ShiftProvider_InsertCompletedEventHandler(object sender, ShiftProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShiftProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShiftProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Shift Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Shift)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ShiftProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ShiftProvider_UpdateCompletedEventHandler(object sender, ShiftProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShiftProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShiftProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Shift Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Shift)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StateProvinceProvider_DeleteCompletedEventHandler(object sender, StateProvinceProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StateProvinceProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StateProvinceProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StateProvinceProvider_FindCompletedEventHandler(object sender, StateProvinceProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StateProvinceProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StateProvinceProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StateProvince[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StateProvince[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StateProvinceProvider_GetAllCompletedEventHandler(object sender, StateProvinceProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StateProvinceProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StateProvinceProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StateProvince[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StateProvince[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StateProvinceProvider_GetPagedCompletedEventHandler(object sender, StateProvinceProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StateProvinceProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StateProvinceProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StateProvince[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StateProvince[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StateProvinceProvider_GetByCountryRegionCodeCompletedEventHandler(object sender, StateProvinceProvider_GetByCountryRegionCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StateProvinceProvider_GetByCountryRegionCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StateProvinceProvider_GetByCountryRegionCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StateProvince[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StateProvince[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StateProvinceProvider_GetByTerritoryIdCompletedEventHandler(object sender, StateProvinceProvider_GetByTerritoryIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StateProvinceProvider_GetByTerritoryIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StateProvinceProvider_GetByTerritoryIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StateProvince[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StateProvince[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StateProvinceProvider_GetByNameCompletedEventHandler(object sender, StateProvinceProvider_GetByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StateProvinceProvider_GetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StateProvinceProvider_GetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StateProvince Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StateProvince)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StateProvinceProvider_GetByRowguidCompletedEventHandler(object sender, StateProvinceProvider_GetByRowguidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StateProvinceProvider_GetByRowguidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StateProvinceProvider_GetByRowguidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StateProvince Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StateProvince)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StateProvinceProvider_GetByStateProvinceCodeCountryRegionCodeCompletedEventHandler(object sender, StateProvinceProvider_GetByStateProvinceCodeCountryRegionCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StateProvinceProvider_GetByStateProvinceCodeCountryRegionCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StateProvinceProvider_GetByStateProvinceCodeCountryRegionCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StateProvince Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StateProvince)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StateProvinceProvider_GetByStateProvinceIdCompletedEventHandler(object sender, StateProvinceProvider_GetByStateProvinceIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StateProvinceProvider_GetByStateProvinceIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StateProvinceProvider_GetByStateProvinceIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StateProvince Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StateProvince)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StateProvinceProvider_InsertCompletedEventHandler(object sender, StateProvinceProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StateProvinceProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StateProvinceProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StateProvince Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StateProvince)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StateProvinceProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void StateProvinceProvider_UpdateCompletedEventHandler(object sender, StateProvinceProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StateProvinceProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StateProvinceProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StateProvince Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StateProvince)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesReasonProvider_GetBySalesOrderIdFromSalesOrderHeaderSalesReasonCompletedEventHandler(object sender, SalesReasonProvider_GetBySalesOrderIdFromSalesOrderHeaderSalesReasonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesReasonProvider_GetBySalesOrderIdFromSalesOrderHeaderSalesReasonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesReasonProvider_GetBySalesOrderIdFromSalesOrderHeaderSalesReasonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesReason[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesReason[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesReasonProvider_DeleteCompletedEventHandler(object sender, SalesReasonProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesReasonProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesReasonProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesReasonProvider_FindCompletedEventHandler(object sender, SalesReasonProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesReasonProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesReasonProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesReason[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesReason[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesReasonProvider_GetAllCompletedEventHandler(object sender, SalesReasonProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesReasonProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesReasonProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesReason[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesReason[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesReasonProvider_GetPagedCompletedEventHandler(object sender, SalesReasonProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesReasonProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesReasonProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesReason[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesReason[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesReasonProvider_GetBySalesReasonIdCompletedEventHandler(object sender, SalesReasonProvider_GetBySalesReasonIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesReasonProvider_GetBySalesReasonIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesReasonProvider_GetBySalesReasonIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesReason Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesReason)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesReasonProvider_InsertCompletedEventHandler(object sender, SalesReasonProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesReasonProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesReasonProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesReason Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesReason)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesReasonProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesReasonProvider_UpdateCompletedEventHandler(object sender, SalesReasonProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesReasonProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesReasonProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesReason Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesReason)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CultureProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureCompletedEventHandler(object sender, CultureProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CultureProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CultureProvider_GetByProductDescriptionIdFromProductModelProductDescriptionCultureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Culture[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Culture[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CultureProvider_GetByProductModelIdFromProductModelProductDescriptionCultureCompletedEventHandler(object sender, CultureProvider_GetByProductModelIdFromProductModelProductDescriptionCultureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CultureProvider_GetByProductModelIdFromProductModelProductDescriptionCultureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CultureProvider_GetByProductModelIdFromProductModelProductDescriptionCultureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Culture[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Culture[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CultureProvider_DeleteCompletedEventHandler(object sender, CultureProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CultureProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CultureProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CultureProvider_FindCompletedEventHandler(object sender, CultureProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CultureProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CultureProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Culture[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Culture[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CultureProvider_GetAllCompletedEventHandler(object sender, CultureProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CultureProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CultureProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Culture[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Culture[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CultureProvider_GetPagedCompletedEventHandler(object sender, CultureProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CultureProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CultureProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Culture[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Culture[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CultureProvider_GetByNameCompletedEventHandler(object sender, CultureProvider_GetByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CultureProvider_GetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CultureProvider_GetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Culture Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Culture)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CultureProvider_GetByCultureIdCompletedEventHandler(object sender, CultureProvider_GetByCultureIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CultureProvider_GetByCultureIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CultureProvider_GetByCultureIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Culture Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Culture)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CultureProvider_InsertCompletedEventHandler(object sender, CultureProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CultureProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CultureProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Culture Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Culture)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CultureProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CultureProvider_UpdateCompletedEventHandler(object sender, CultureProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CultureProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CultureProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Culture Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Culture)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderHeaderProvider_GetBySalesReasonIdFromSalesOrderHeaderSalesReasonCompletedEventHandler(object sender, SalesOrderHeaderProvider_GetBySalesReasonIdFromSalesOrderHeaderSalesReasonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderHeaderProvider_GetBySalesReasonIdFromSalesOrderHeaderSalesReasonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderHeaderProvider_GetBySalesReasonIdFromSalesOrderHeaderSalesReasonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderHeader[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderHeader[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderHeaderProvider_DeleteCompletedEventHandler(object sender, SalesOrderHeaderProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderHeaderProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderHeaderProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderHeaderProvider_FindCompletedEventHandler(object sender, SalesOrderHeaderProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderHeaderProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderHeaderProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderHeader[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderHeader[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderHeaderProvider_GetAllCompletedEventHandler(object sender, SalesOrderHeaderProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderHeaderProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderHeaderProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderHeader[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderHeader[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderHeaderProvider_GetPagedCompletedEventHandler(object sender, SalesOrderHeaderProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderHeaderProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderHeaderProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderHeader[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderHeader[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderHeaderProvider_GetByBillToAddressIdCompletedEventHandler(object sender, SalesOrderHeaderProvider_GetByBillToAddressIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderHeaderProvider_GetByBillToAddressIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderHeaderProvider_GetByBillToAddressIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderHeader[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderHeader[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderHeaderProvider_GetByShipToAddressIdCompletedEventHandler(object sender, SalesOrderHeaderProvider_GetByShipToAddressIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderHeaderProvider_GetByShipToAddressIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderHeaderProvider_GetByShipToAddressIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderHeader[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderHeader[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderHeaderProvider_GetByContactIdCompletedEventHandler(object sender, SalesOrderHeaderProvider_GetByContactIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderHeaderProvider_GetByContactIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderHeaderProvider_GetByContactIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderHeader[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderHeader[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderHeaderProvider_GetByCreditCardIdCompletedEventHandler(object sender, SalesOrderHeaderProvider_GetByCreditCardIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderHeaderProvider_GetByCreditCardIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderHeaderProvider_GetByCreditCardIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderHeader[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderHeader[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderHeaderProvider_GetByCurrencyRateIdCompletedEventHandler(object sender, SalesOrderHeaderProvider_GetByCurrencyRateIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderHeaderProvider_GetByCurrencyRateIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderHeaderProvider_GetByCurrencyRateIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderHeader[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderHeader[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderHeaderProvider_GetByTerritoryIdCompletedEventHandler(object sender, SalesOrderHeaderProvider_GetByTerritoryIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderHeaderProvider_GetByTerritoryIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderHeaderProvider_GetByTerritoryIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderHeader[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderHeader[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderHeaderProvider_GetByShipMethodIdCompletedEventHandler(object sender, SalesOrderHeaderProvider_GetByShipMethodIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderHeaderProvider_GetByShipMethodIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderHeaderProvider_GetByShipMethodIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderHeader[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderHeader[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderHeaderProvider_GetByRowguidCompletedEventHandler(object sender, SalesOrderHeaderProvider_GetByRowguidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderHeaderProvider_GetByRowguidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderHeaderProvider_GetByRowguidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderHeader Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderHeader)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderHeaderProvider_GetBySalesOrderNumberCompletedEventHandler(object sender, SalesOrderHeaderProvider_GetBySalesOrderNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderHeaderProvider_GetBySalesOrderNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderHeaderProvider_GetBySalesOrderNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderHeader Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderHeader)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderHeaderProvider_GetByCustomerIdCompletedEventHandler(object sender, SalesOrderHeaderProvider_GetByCustomerIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderHeaderProvider_GetByCustomerIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderHeaderProvider_GetByCustomerIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderHeader[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderHeader[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderHeaderProvider_GetBySalesPersonIdCompletedEventHandler(object sender, SalesOrderHeaderProvider_GetBySalesPersonIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderHeaderProvider_GetBySalesPersonIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderHeaderProvider_GetBySalesPersonIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderHeader[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderHeader[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderHeaderProvider_GetBySalesOrderIdCompletedEventHandler(object sender, SalesOrderHeaderProvider_GetBySalesOrderIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderHeaderProvider_GetBySalesOrderIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderHeaderProvider_GetBySalesOrderIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderHeader Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderHeader)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderHeaderProvider_InsertCompletedEventHandler(object sender, SalesOrderHeaderProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderHeaderProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderHeaderProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderHeader Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderHeader)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderHeaderProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesOrderHeaderProvider_UpdateCompletedEventHandler(object sender, SalesOrderHeaderProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesOrderHeaderProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesOrderHeaderProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesOrderHeader Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesOrderHeader)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelProductDescriptionCultureProvider_DeleteCompletedEventHandler(object sender, ProductModelProductDescriptionCultureProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductModelProductDescriptionCultureProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductModelProductDescriptionCultureProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelProductDescriptionCultureProvider_FindCompletedEventHandler(object sender, ProductModelProductDescriptionCultureProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductModelProductDescriptionCultureProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductModelProductDescriptionCultureProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductModelProductDescriptionCulture[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductModelProductDescriptionCulture[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelProductDescriptionCultureProvider_GetAllCompletedEventHandler(object sender, ProductModelProductDescriptionCultureProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductModelProductDescriptionCultureProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductModelProductDescriptionCultureProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductModelProductDescriptionCulture[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductModelProductDescriptionCulture[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelProductDescriptionCultureProvider_GetPagedCompletedEventHandler(object sender, ProductModelProductDescriptionCultureProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductModelProductDescriptionCultureProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductModelProductDescriptionCultureProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductModelProductDescriptionCulture[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductModelProductDescriptionCulture[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelProductDescriptionCultureProvider_GetByCultureIdCompletedEventHandler(object sender, ProductModelProductDescriptionCultureProvider_GetByCultureIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductModelProductDescriptionCultureProvider_GetByCultureIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductModelProductDescriptionCultureProvider_GetByCultureIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductModelProductDescriptionCulture[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductModelProductDescriptionCulture[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelProductDescriptionCultureProvider_GetByProductDescriptionIdCompletedEventHandler(object sender, ProductModelProductDescriptionCultureProvider_GetByProductDescriptionIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductModelProductDescriptionCultureProvider_GetByProductDescriptionIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductModelProductDescriptionCultureProvider_GetByProductDescriptionIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductModelProductDescriptionCulture[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductModelProductDescriptionCulture[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelProductDescriptionCultureProvider_GetByProductModelIdCompletedEventHandler(object sender, ProductModelProductDescriptionCultureProvider_GetByProductModelIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductModelProductDescriptionCultureProvider_GetByProductModelIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductModelProductDescriptionCultureProvider_GetByProductModelIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductModelProductDescriptionCulture[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductModelProductDescriptionCulture[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelProductDescriptionCultureProvider_GetByProductModelIdProductDescriptionIdCultureIdCompletedEventHandler(object sender, ProductModelProductDescriptionCultureProvider_GetByProductModelIdProductDescriptionIdCultureIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductModelProductDescriptionCultureProvider_GetByProductModelIdProductDescriptionIdCultureIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductModelProductDescriptionCultureProvider_GetByProductModelIdProductDescriptionIdCultureIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductModelProductDescriptionCulture Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductModelProductDescriptionCulture)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelProductDescriptionCultureProvider_InsertCompletedEventHandler(object sender, ProductModelProductDescriptionCultureProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductModelProductDescriptionCultureProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductModelProductDescriptionCultureProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductModelProductDescriptionCulture Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductModelProductDescriptionCulture)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelProductDescriptionCultureProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductModelProductDescriptionCultureProvider_UpdateCompletedEventHandler(object sender, ProductModelProductDescriptionCultureProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductModelProductDescriptionCultureProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductModelProductDescriptionCultureProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductModelProductDescriptionCulture Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductModelProductDescriptionCulture)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DocumentProvider_GetByProductIdFromProductDocumentCompletedEventHandler(object sender, DocumentProvider_GetByProductIdFromProductDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DocumentProvider_GetByProductIdFromProductDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DocumentProvider_GetByProductIdFromProductDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Document[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Document[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DocumentProvider_DeleteCompletedEventHandler(object sender, DocumentProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DocumentProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DocumentProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DocumentProvider_FindCompletedEventHandler(object sender, DocumentProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DocumentProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DocumentProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Document[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Document[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DocumentProvider_GetAllCompletedEventHandler(object sender, DocumentProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DocumentProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DocumentProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Document[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Document[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DocumentProvider_GetPagedCompletedEventHandler(object sender, DocumentProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DocumentProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DocumentProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Document[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Document[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DocumentProvider_GetByFileNameRevisionCompletedEventHandler(object sender, DocumentProvider_GetByFileNameRevisionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DocumentProvider_GetByFileNameRevisionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DocumentProvider_GetByFileNameRevisionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Document Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Document)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DocumentProvider_GetByDocumentIdCompletedEventHandler(object sender, DocumentProvider_GetByDocumentIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DocumentProvider_GetByDocumentIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DocumentProvider_GetByDocumentIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Document Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Document)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DocumentProvider_InsertCompletedEventHandler(object sender, DocumentProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DocumentProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DocumentProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Document Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Document)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DocumentProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DocumentProvider_UpdateCompletedEventHandler(object sender, DocumentProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DocumentProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DocumentProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Document Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Document)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductProductPhotoProvider_DeleteCompletedEventHandler(object sender, ProductProductPhotoProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductProductPhotoProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductProductPhotoProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductProductPhotoProvider_FindCompletedEventHandler(object sender, ProductProductPhotoProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductProductPhotoProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductProductPhotoProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductProductPhoto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductProductPhoto[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductProductPhotoProvider_GetAllCompletedEventHandler(object sender, ProductProductPhotoProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductProductPhotoProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductProductPhotoProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductProductPhoto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductProductPhoto[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductProductPhotoProvider_GetPagedCompletedEventHandler(object sender, ProductProductPhotoProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductProductPhotoProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductProductPhotoProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductProductPhoto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductProductPhoto[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductProductPhotoProvider_GetByProductIdCompletedEventHandler(object sender, ProductProductPhotoProvider_GetByProductIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductProductPhotoProvider_GetByProductIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductProductPhotoProvider_GetByProductIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductProductPhoto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductProductPhoto[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductProductPhotoProvider_GetByProductPhotoIdCompletedEventHandler(object sender, ProductProductPhotoProvider_GetByProductPhotoIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductProductPhotoProvider_GetByProductPhotoIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductProductPhotoProvider_GetByProductPhotoIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductProductPhoto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductProductPhoto[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductProductPhotoProvider_GetByProductIdProductPhotoIdCompletedEventHandler(object sender, ProductProductPhotoProvider_GetByProductIdProductPhotoIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductProductPhotoProvider_GetByProductIdProductPhotoIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductProductPhotoProvider_GetByProductIdProductPhotoIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductProductPhoto Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductProductPhoto)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductProductPhotoProvider_InsertCompletedEventHandler(object sender, ProductProductPhotoProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductProductPhotoProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductProductPhotoProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductProductPhoto Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductProductPhoto)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductProductPhotoProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductProductPhotoProvider_UpdateCompletedEventHandler(object sender, ProductProductPhotoProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductProductPhotoProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductProductPhotoProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductProductPhoto Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductProductPhoto)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductDocumentProvider_DeleteCompletedEventHandler(object sender, ProductDocumentProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductDocumentProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductDocumentProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductDocumentProvider_FindCompletedEventHandler(object sender, ProductDocumentProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductDocumentProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductDocumentProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductDocument[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductDocument[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductDocumentProvider_GetAllCompletedEventHandler(object sender, ProductDocumentProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductDocumentProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductDocumentProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductDocument[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductDocument[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductDocumentProvider_GetPagedCompletedEventHandler(object sender, ProductDocumentProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductDocumentProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductDocumentProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductDocument[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductDocument[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductDocumentProvider_GetByDocumentIdCompletedEventHandler(object sender, ProductDocumentProvider_GetByDocumentIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductDocumentProvider_GetByDocumentIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductDocumentProvider_GetByDocumentIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductDocument[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductDocument[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductDocumentProvider_GetByProductIdCompletedEventHandler(object sender, ProductDocumentProvider_GetByProductIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductDocumentProvider_GetByProductIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductDocumentProvider_GetByProductIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductDocument[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductDocument[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductDocumentProvider_GetByProductIdDocumentIdCompletedEventHandler(object sender, ProductDocumentProvider_GetByProductIdDocumentIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductDocumentProvider_GetByProductIdDocumentIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductDocumentProvider_GetByProductIdDocumentIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductDocument Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductDocument)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductDocumentProvider_InsertCompletedEventHandler(object sender, ProductDocumentProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductDocumentProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductDocumentProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductDocument Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductDocument)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductDocumentProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductDocumentProvider_UpdateCompletedEventHandler(object sender, ProductDocumentProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductDocumentProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductDocumentProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductDocument Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductDocument)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void LocationProvider_GetByProductIdFromProductInventoryCompletedEventHandler(object sender, LocationProvider_GetByProductIdFromProductInventoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LocationProvider_GetByProductIdFromProductInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LocationProvider_GetByProductIdFromProductInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Location[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Location[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeePayHistoryProvider_DeleteCompletedEventHandler(object sender, EmployeePayHistoryProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeePayHistoryProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeePayHistoryProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeePayHistoryProvider_FindCompletedEventHandler(object sender, EmployeePayHistoryProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeePayHistoryProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeePayHistoryProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmployeePayHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmployeePayHistory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeePayHistoryProvider_GetAllCompletedEventHandler(object sender, EmployeePayHistoryProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeePayHistoryProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeePayHistoryProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmployeePayHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmployeePayHistory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeePayHistoryProvider_GetPagedCompletedEventHandler(object sender, EmployeePayHistoryProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeePayHistoryProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeePayHistoryProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmployeePayHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmployeePayHistory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeePayHistoryProvider_GetByEmployeeIdCompletedEventHandler(object sender, EmployeePayHistoryProvider_GetByEmployeeIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeePayHistoryProvider_GetByEmployeeIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeePayHistoryProvider_GetByEmployeeIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmployeePayHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmployeePayHistory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeePayHistoryProvider_GetByEmployeeIdRateChangeDateCompletedEventHandler(object sender, EmployeePayHistoryProvider_GetByEmployeeIdRateChangeDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeePayHistoryProvider_GetByEmployeeIdRateChangeDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeePayHistoryProvider_GetByEmployeeIdRateChangeDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmployeePayHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmployeePayHistory)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeePayHistoryProvider_InsertCompletedEventHandler(object sender, EmployeePayHistoryProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeePayHistoryProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeePayHistoryProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmployeePayHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmployeePayHistory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeePayHistoryProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeePayHistoryProvider_UpdateCompletedEventHandler(object sender, EmployeePayHistoryProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeePayHistoryProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeePayHistoryProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmployeePayHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmployeePayHistory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AwBuildVersionProvider_DeleteCompletedEventHandler(object sender, AwBuildVersionProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AwBuildVersionProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AwBuildVersionProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AwBuildVersionProvider_FindCompletedEventHandler(object sender, AwBuildVersionProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AwBuildVersionProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AwBuildVersionProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AwBuildVersion[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AwBuildVersion[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AwBuildVersionProvider_GetAllCompletedEventHandler(object sender, AwBuildVersionProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AwBuildVersionProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AwBuildVersionProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AwBuildVersion[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AwBuildVersion[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AwBuildVersionProvider_GetPagedCompletedEventHandler(object sender, AwBuildVersionProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AwBuildVersionProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AwBuildVersionProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AwBuildVersion[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AwBuildVersion[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AwBuildVersionProvider_GetBySystemInformationIdCompletedEventHandler(object sender, AwBuildVersionProvider_GetBySystemInformationIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AwBuildVersionProvider_GetBySystemInformationIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AwBuildVersionProvider_GetBySystemInformationIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AwBuildVersion Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AwBuildVersion)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AwBuildVersionProvider_InsertCompletedEventHandler(object sender, AwBuildVersionProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AwBuildVersionProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AwBuildVersionProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AwBuildVersion Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AwBuildVersion)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AwBuildVersionProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void AwBuildVersionProvider_UpdateCompletedEventHandler(object sender, AwBuildVersionProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AwBuildVersionProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AwBuildVersionProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AwBuildVersion Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AwBuildVersion)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DatabaseLogProvider_DeleteCompletedEventHandler(object sender, DatabaseLogProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DatabaseLogProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DatabaseLogProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DatabaseLogProvider_FindCompletedEventHandler(object sender, DatabaseLogProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DatabaseLogProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DatabaseLogProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DatabaseLog[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DatabaseLog[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DatabaseLogProvider_GetAllCompletedEventHandler(object sender, DatabaseLogProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DatabaseLogProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DatabaseLogProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DatabaseLog[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DatabaseLog[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DatabaseLogProvider_GetPagedCompletedEventHandler(object sender, DatabaseLogProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DatabaseLogProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DatabaseLogProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DatabaseLog[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DatabaseLog[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DatabaseLogProvider_GetByDatabaseLogIdCompletedEventHandler(object sender, DatabaseLogProvider_GetByDatabaseLogIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DatabaseLogProvider_GetByDatabaseLogIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DatabaseLogProvider_GetByDatabaseLogIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DatabaseLog Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DatabaseLog)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DatabaseLogProvider_InsertCompletedEventHandler(object sender, DatabaseLogProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DatabaseLogProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DatabaseLogProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DatabaseLog Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DatabaseLog)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DatabaseLogProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DatabaseLogProvider_UpdateCompletedEventHandler(object sender, DatabaseLogProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DatabaseLogProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DatabaseLogProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DatabaseLog Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DatabaseLog)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeAddressProvider_DeleteCompletedEventHandler(object sender, EmployeeAddressProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeAddressProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeAddressProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeAddressProvider_FindCompletedEventHandler(object sender, EmployeeAddressProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeAddressProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeAddressProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmployeeAddress[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmployeeAddress[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeAddressProvider_GetAllCompletedEventHandler(object sender, EmployeeAddressProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeAddressProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeAddressProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmployeeAddress[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmployeeAddress[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeAddressProvider_GetPagedCompletedEventHandler(object sender, EmployeeAddressProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeAddressProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeAddressProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmployeeAddress[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmployeeAddress[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeAddressProvider_GetByAddressIdCompletedEventHandler(object sender, EmployeeAddressProvider_GetByAddressIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeAddressProvider_GetByAddressIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeAddressProvider_GetByAddressIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmployeeAddress[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmployeeAddress[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeAddressProvider_GetByEmployeeIdCompletedEventHandler(object sender, EmployeeAddressProvider_GetByEmployeeIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeAddressProvider_GetByEmployeeIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeAddressProvider_GetByEmployeeIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmployeeAddress[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmployeeAddress[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeAddressProvider_GetByRowguidCompletedEventHandler(object sender, EmployeeAddressProvider_GetByRowguidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeAddressProvider_GetByRowguidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeAddressProvider_GetByRowguidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmployeeAddress Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmployeeAddress)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeAddressProvider_GetByEmployeeIdAddressIdCompletedEventHandler(object sender, EmployeeAddressProvider_GetByEmployeeIdAddressIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeAddressProvider_GetByEmployeeIdAddressIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeAddressProvider_GetByEmployeeIdAddressIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmployeeAddress Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmployeeAddress)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeAddressProvider_InsertCompletedEventHandler(object sender, EmployeeAddressProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeAddressProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeAddressProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmployeeAddress Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmployeeAddress)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeAddressProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeAddressProvider_UpdateCompletedEventHandler(object sender, EmployeeAddressProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeAddressProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeAddressProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmployeeAddress Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmployeeAddress)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DepartmentProvider_DeleteCompletedEventHandler(object sender, DepartmentProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DepartmentProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DepartmentProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DepartmentProvider_FindCompletedEventHandler(object sender, DepartmentProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DepartmentProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DepartmentProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Department[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Department[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DepartmentProvider_GetAllCompletedEventHandler(object sender, DepartmentProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DepartmentProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DepartmentProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Department[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Department[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DepartmentProvider_GetPagedCompletedEventHandler(object sender, DepartmentProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DepartmentProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DepartmentProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Department[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Department[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DepartmentProvider_GetByNameCompletedEventHandler(object sender, DepartmentProvider_GetByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DepartmentProvider_GetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DepartmentProvider_GetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Department Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Department)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DepartmentProvider_GetByDepartmentIdCompletedEventHandler(object sender, DepartmentProvider_GetByDepartmentIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DepartmentProvider_GetByDepartmentIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DepartmentProvider_GetByDepartmentIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Department Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Department)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DepartmentProvider_InsertCompletedEventHandler(object sender, DepartmentProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DepartmentProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DepartmentProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Department Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Department)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DepartmentProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DepartmentProvider_UpdateCompletedEventHandler(object sender, DepartmentProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DepartmentProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DepartmentProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Department Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Department)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductPhotoProvider_GetByProductIdFromProductProductPhotoCompletedEventHandler(object sender, ProductPhotoProvider_GetByProductIdFromProductProductPhotoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductPhotoProvider_GetByProductIdFromProductProductPhotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductPhotoProvider_GetByProductIdFromProductProductPhotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductPhoto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductPhoto[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductPhotoProvider_DeleteCompletedEventHandler(object sender, ProductPhotoProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductPhotoProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductPhotoProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductPhotoProvider_FindCompletedEventHandler(object sender, ProductPhotoProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductPhotoProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductPhotoProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductPhoto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductPhoto[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductPhotoProvider_GetAllCompletedEventHandler(object sender, ProductPhotoProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductPhotoProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductPhotoProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductPhoto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductPhoto[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductPhotoProvider_GetPagedCompletedEventHandler(object sender, ProductPhotoProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductPhotoProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductPhotoProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductPhoto[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductPhoto[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductPhotoProvider_GetByProductPhotoIdCompletedEventHandler(object sender, ProductPhotoProvider_GetByProductPhotoIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductPhotoProvider_GetByProductPhotoIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductPhotoProvider_GetByProductPhotoIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductPhoto Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductPhoto)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductPhotoProvider_InsertCompletedEventHandler(object sender, ProductPhotoProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductPhotoProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductPhotoProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductPhoto Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductPhoto)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductPhotoProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ProductPhotoProvider_UpdateCompletedEventHandler(object sender, ProductPhotoProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductPhotoProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductPhotoProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProductPhoto Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProductPhoto)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void BillOfMaterialsProvider_DeleteCompletedEventHandler(object sender, BillOfMaterialsProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BillOfMaterialsProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BillOfMaterialsProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void BillOfMaterialsProvider_FindCompletedEventHandler(object sender, BillOfMaterialsProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BillOfMaterialsProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BillOfMaterialsProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BillOfMaterials[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BillOfMaterials[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void BillOfMaterialsProvider_GetAllCompletedEventHandler(object sender, BillOfMaterialsProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BillOfMaterialsProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BillOfMaterialsProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BillOfMaterials[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BillOfMaterials[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void BillOfMaterialsProvider_GetPagedCompletedEventHandler(object sender, BillOfMaterialsProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BillOfMaterialsProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BillOfMaterialsProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BillOfMaterials[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BillOfMaterials[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void BillOfMaterialsProvider_GetByComponentIdCompletedEventHandler(object sender, BillOfMaterialsProvider_GetByComponentIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BillOfMaterialsProvider_GetByComponentIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BillOfMaterialsProvider_GetByComponentIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BillOfMaterials[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BillOfMaterials[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void BillOfMaterialsProvider_GetByProductAssemblyIdCompletedEventHandler(object sender, BillOfMaterialsProvider_GetByProductAssemblyIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BillOfMaterialsProvider_GetByProductAssemblyIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BillOfMaterialsProvider_GetByProductAssemblyIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BillOfMaterials[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BillOfMaterials[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void BillOfMaterialsProvider_GetByProductAssemblyIdComponentIdStartDateCompletedEventHandler(object sender, BillOfMaterialsProvider_GetByProductAssemblyIdComponentIdStartDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BillOfMaterialsProvider_GetByProductAssemblyIdComponentIdStartDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BillOfMaterialsProvider_GetByProductAssemblyIdComponentIdStartDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BillOfMaterials Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BillOfMaterials)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void BillOfMaterialsProvider_GetByUnitMeasureCodeCompletedEventHandler(object sender, BillOfMaterialsProvider_GetByUnitMeasureCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BillOfMaterialsProvider_GetByUnitMeasureCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BillOfMaterialsProvider_GetByUnitMeasureCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BillOfMaterials[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BillOfMaterials[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void BillOfMaterialsProvider_GetByBillOfMaterialsIdCompletedEventHandler(object sender, BillOfMaterialsProvider_GetByBillOfMaterialsIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BillOfMaterialsProvider_GetByBillOfMaterialsIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BillOfMaterialsProvider_GetByBillOfMaterialsIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BillOfMaterials Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BillOfMaterials)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void BillOfMaterialsProvider_InsertCompletedEventHandler(object sender, BillOfMaterialsProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BillOfMaterialsProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BillOfMaterialsProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BillOfMaterials Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BillOfMaterials)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void BillOfMaterialsProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void BillOfMaterialsProvider_UpdateCompletedEventHandler(object sender, BillOfMaterialsProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BillOfMaterialsProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BillOfMaterialsProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BillOfMaterials Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BillOfMaterials)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesPersonProvider_DeleteCompletedEventHandler(object sender, SalesPersonProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesPersonProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesPersonProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesPersonProvider_FindCompletedEventHandler(object sender, SalesPersonProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesPersonProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesPersonProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesPerson[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesPerson[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesPersonProvider_GetAllCompletedEventHandler(object sender, SalesPersonProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesPersonProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesPersonProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesPerson[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesPerson[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesPersonProvider_GetPagedCompletedEventHandler(object sender, SalesPersonProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesPersonProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesPersonProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesPerson[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesPerson[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesPersonProvider_GetByTerritoryIdCompletedEventHandler(object sender, SalesPersonProvider_GetByTerritoryIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesPersonProvider_GetByTerritoryIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesPersonProvider_GetByTerritoryIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesPerson[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesPerson[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesPersonProvider_GetByRowguidCompletedEventHandler(object sender, SalesPersonProvider_GetByRowguidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesPersonProvider_GetByRowguidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesPersonProvider_GetByRowguidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesPerson Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesPerson)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesPersonProvider_GetBySalesPersonIdCompletedEventHandler(object sender, SalesPersonProvider_GetBySalesPersonIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesPersonProvider_GetBySalesPersonIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesPersonProvider_GetBySalesPersonIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesPerson Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesPerson)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesPersonProvider_InsertCompletedEventHandler(object sender, SalesPersonProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesPersonProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesPersonProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesPerson Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesPerson)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesPersonProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void SalesPersonProvider_UpdateCompletedEventHandler(object sender, SalesPersonProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalesPersonProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalesPersonProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SalesPerson Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SalesPerson)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void JobCandidateProvider_DeleteCompletedEventHandler(object sender, JobCandidateProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class JobCandidateProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal JobCandidateProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void JobCandidateProvider_FindCompletedEventHandler(object sender, JobCandidateProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class JobCandidateProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal JobCandidateProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public JobCandidate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((JobCandidate[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void JobCandidateProvider_GetAllCompletedEventHandler(object sender, JobCandidateProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class JobCandidateProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal JobCandidateProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public JobCandidate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((JobCandidate[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void JobCandidateProvider_GetPagedCompletedEventHandler(object sender, JobCandidateProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class JobCandidateProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal JobCandidateProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public JobCandidate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((JobCandidate[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void JobCandidateProvider_GetByEmployeeIdCompletedEventHandler(object sender, JobCandidateProvider_GetByEmployeeIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class JobCandidateProvider_GetByEmployeeIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal JobCandidateProvider_GetByEmployeeIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public JobCandidate[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((JobCandidate[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void JobCandidateProvider_GetByJobCandidateIdCompletedEventHandler(object sender, JobCandidateProvider_GetByJobCandidateIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class JobCandidateProvider_GetByJobCandidateIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal JobCandidateProvider_GetByJobCandidateIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public JobCandidate Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((JobCandidate)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void JobCandidateProvider_InsertCompletedEventHandler(object sender, JobCandidateProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class JobCandidateProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal JobCandidateProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public JobCandidate Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((JobCandidate)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void JobCandidateProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void JobCandidateProvider_UpdateCompletedEventHandler(object sender, JobCandidateProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class JobCandidateProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal JobCandidateProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public JobCandidate Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((JobCandidate)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeDepartmentHistoryProvider_DeleteCompletedEventHandler(object sender, EmployeeDepartmentHistoryProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeDepartmentHistoryProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeDepartmentHistoryProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeDepartmentHistoryProvider_FindCompletedEventHandler(object sender, EmployeeDepartmentHistoryProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeDepartmentHistoryProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeDepartmentHistoryProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmployeeDepartmentHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmployeeDepartmentHistory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeDepartmentHistoryProvider_GetAllCompletedEventHandler(object sender, EmployeeDepartmentHistoryProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeDepartmentHistoryProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeDepartmentHistoryProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmployeeDepartmentHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmployeeDepartmentHistory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeDepartmentHistoryProvider_GetPagedCompletedEventHandler(object sender, EmployeeDepartmentHistoryProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeDepartmentHistoryProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeDepartmentHistoryProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmployeeDepartmentHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmployeeDepartmentHistory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeDepartmentHistoryProvider_GetByEmployeeIdCompletedEventHandler(object sender, EmployeeDepartmentHistoryProvider_GetByEmployeeIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeDepartmentHistoryProvider_GetByEmployeeIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeDepartmentHistoryProvider_GetByEmployeeIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmployeeDepartmentHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmployeeDepartmentHistory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeDepartmentHistoryProvider_GetByDepartmentIdCompletedEventHandler(object sender, EmployeeDepartmentHistoryProvider_GetByDepartmentIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeDepartmentHistoryProvider_GetByDepartmentIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeDepartmentHistoryProvider_GetByDepartmentIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmployeeDepartmentHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmployeeDepartmentHistory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeDepartmentHistoryProvider_GetByShiftIdCompletedEventHandler(object sender, EmployeeDepartmentHistoryProvider_GetByShiftIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeDepartmentHistoryProvider_GetByShiftIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeDepartmentHistoryProvider_GetByShiftIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmployeeDepartmentHistory[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmployeeDepartmentHistory[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeDepartmentHistoryProvider_GetByEmployeeIdStartDateDepartmentIdShiftIdCompletedEventHandler(object sender, EmployeeDepartmentHistoryProvider_GetByEmployeeIdStartDateDepartmentIdShiftIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeDepartmentHistoryProvider_GetByEmployeeIdStartDateDepartmentIdShiftIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeDepartmentHistoryProvider_GetByEmployeeIdStartDateDepartmentIdShiftIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmployeeDepartmentHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmployeeDepartmentHistory)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeDepartmentHistoryProvider_InsertCompletedEventHandler(object sender, EmployeeDepartmentHistoryProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeDepartmentHistoryProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeDepartmentHistoryProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmployeeDepartmentHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmployeeDepartmentHistory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeDepartmentHistoryProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeDepartmentHistoryProvider_UpdateCompletedEventHandler(object sender, EmployeeDepartmentHistoryProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeDepartmentHistoryProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeDepartmentHistoryProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmployeeDepartmentHistory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmployeeDepartmentHistory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ContactTypeProvider_DeleteCompletedEventHandler(object sender, ContactTypeProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactTypeProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactTypeProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ContactTypeProvider_FindCompletedEventHandler(object sender, ContactTypeProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactTypeProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactTypeProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContactType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContactType[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ContactTypeProvider_GetAllCompletedEventHandler(object sender, ContactTypeProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactTypeProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactTypeProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContactType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContactType[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ContactTypeProvider_GetPagedCompletedEventHandler(object sender, ContactTypeProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactTypeProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactTypeProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContactType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContactType[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ContactTypeProvider_GetByNameCompletedEventHandler(object sender, ContactTypeProvider_GetByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactTypeProvider_GetByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactTypeProvider_GetByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContactType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContactType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ContactTypeProvider_GetByContactTypeIdCompletedEventHandler(object sender, ContactTypeProvider_GetByContactTypeIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactTypeProvider_GetByContactTypeIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactTypeProvider_GetByContactTypeIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContactType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContactType)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ContactTypeProvider_InsertCompletedEventHandler(object sender, ContactTypeProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactTypeProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactTypeProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContactType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContactType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ContactTypeProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ContactTypeProvider_UpdateCompletedEventHandler(object sender, ContactTypeProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactTypeProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContactTypeProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContactType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContactType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ErrorLogProvider_DeleteCompletedEventHandler(object sender, ErrorLogProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ErrorLogProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ErrorLogProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ErrorLogProvider_FindCompletedEventHandler(object sender, ErrorLogProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ErrorLogProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ErrorLogProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ErrorLog[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ErrorLog[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ErrorLogProvider_GetAllCompletedEventHandler(object sender, ErrorLogProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ErrorLogProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ErrorLogProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ErrorLog[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ErrorLog[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ErrorLogProvider_GetPagedCompletedEventHandler(object sender, ErrorLogProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ErrorLogProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ErrorLogProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ErrorLog[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ErrorLog[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ErrorLogProvider_GetByErrorLogIdCompletedEventHandler(object sender, ErrorLogProvider_GetByErrorLogIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ErrorLogProvider_GetByErrorLogIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ErrorLogProvider_GetByErrorLogIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ErrorLog Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ErrorLog)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ErrorLogProvider_InsertCompletedEventHandler(object sender, ErrorLogProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ErrorLogProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ErrorLogProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ErrorLog Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ErrorLog)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ErrorLogProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ErrorLogProvider_UpdateCompletedEventHandler(object sender, ErrorLogProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ErrorLogProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ErrorLogProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ErrorLog Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ErrorLog)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeProvider_GetByAddressIdFromEmployeeAddressCompletedEventHandler(object sender, EmployeeProvider_GetByAddressIdFromEmployeeAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeProvider_GetByAddressIdFromEmployeeAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeProvider_GetByAddressIdFromEmployeeAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Employee[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Employee[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeProvider_DeleteCompletedEventHandler(object sender, EmployeeProvider_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeProvider_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeProvider_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeProvider_FindCompletedEventHandler(object sender, EmployeeProvider_FindCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeProvider_FindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeProvider_FindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Employee[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Employee[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeProvider_GetAllCompletedEventHandler(object sender, EmployeeProvider_GetAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeProvider_GetAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeProvider_GetAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Employee[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Employee[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeProvider_GetPagedCompletedEventHandler(object sender, EmployeeProvider_GetPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeProvider_GetPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeProvider_GetPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Employee[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Employee[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeProvider_GetByContactIdCompletedEventHandler(object sender, EmployeeProvider_GetByContactIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeProvider_GetByContactIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeProvider_GetByContactIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Employee[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Employee[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeProvider_GetByLoginIdCompletedEventHandler(object sender, EmployeeProvider_GetByLoginIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeProvider_GetByLoginIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeProvider_GetByLoginIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Employee Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Employee)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeProvider_GetByNationalIdNumberCompletedEventHandler(object sender, EmployeeProvider_GetByNationalIdNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeProvider_GetByNationalIdNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeProvider_GetByNationalIdNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Employee Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Employee)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeProvider_GetByRowguidCompletedEventHandler(object sender, EmployeeProvider_GetByRowguidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeProvider_GetByRowguidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeProvider_GetByRowguidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Employee Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Employee)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeProvider_GetByManagerIdCompletedEventHandler(object sender, EmployeeProvider_GetByManagerIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeProvider_GetByManagerIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeProvider_GetByManagerIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Employee[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Employee[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeProvider_GetByEmployeeIdCompletedEventHandler(object sender, EmployeeProvider_GetByEmployeeIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeProvider_GetByEmployeeIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeProvider_GetByEmployeeIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Employee Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Employee)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeProvider_InsertCompletedEventHandler(object sender, EmployeeProvider_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeProvider_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeProvider_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Employee Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Employee)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeProvider_BulkInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void EmployeeProvider_UpdateCompletedEventHandler(object sender, EmployeeProvider_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmployeeProvider_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmployeeProvider_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Employee Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Employee)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CountryRegionProvider_GetByCurrencyCodeFromCountryRegionCurrencyCompletedEventHandler(object sender, CountryRegionProvider_GetByCurrencyCodeFromCountryRegionCurrencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountryRegionProvider_GetByCurrencyCodeFromCountryRegionCurrencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountryRegionProvider_GetByCurrencyCodeFromCountryRegionCurrencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CountryRegion[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CountryRegion[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591